[
    {
        "taggedQuestion": "Which architect of <e0> was also tenant of <e1> ??",
        "entityMap": {
            "<e1>": "New Sanno hotel",
            "<e0>": "Marine Corps Air Station Kaneohe Bay"
        },
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "architect of Marine Corps Air Station Kaneohe Bay",
                "containsRefer": false,
                "originStr": "architect of Marine Corps Air Station Kaneohe Bay",
                "start": 1,
                "entityID": 0,
                "end": 4,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "tenant of New Sanno hotel",
                "containsRefer": false,
                "originStr": "tenant of New Sanno hotel",
                "start": 4,
                "entityID": 0,
                "end": 9,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which architect of Marine Corps Air Station Kaneohe Bay was also tenant of New Sanno hotel ??",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NP (NN architect) (PP (IN of) (NP (ADD <e0>))))) (SQ (VBD was) (NP (ADVP (RB also)) (NP (NN tenant)) (PP (IN of) (NP (ADD <e1>))))) (. ??)))",
        "id": 0
    },
    {
        "taggedQuestion": "Which sects people are part of <e0> which fall under the International Muslim Brotherhood?",
        "entityMap": {"<e0>": "local political parties"},
        "nodeNum": 7,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "sects people",
                "containsRefer": false,
                "originStr": "sects people",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are part of #entity1",
                "containsRefer": true,
                "originStr": "are part of #entity1",
                "start": 3,
                "entityID": 0,
                "end": 14,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "local political parties",
                "containsRefer": false,
                "originStr": "local political parties",
                "start": 6,
                "entityID": 1,
                "end": 7,
                "nodeType": 4,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            },
            {
                "str": "fall under the International Muslim Brotherhood",
                "containsRefer": false,
                "originStr": "fall under the International Muslim Brotherhood",
                "start": 8,
                "entityID": 1,
                "end": 14,
                "nodeType": 3,
                "nodeID": 6,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which sects people are part of local political parties which fall under the International Muslim Brotherhood?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 6,
                "from": 3,
                "end": 14,
                "to": 4
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 5
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 6
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NP (NP (NNS sects)) (NP (NNS people)))) (SQ (VBP are) (NP (NP (NN part)) (PP (IN of) (NP (NP (NN <e0>)) (SBAR (WHNP (WDT which)) (S (VP (VBP fall) (PP (IN under) (NP (DT the) (NNP International) (NNP Muslim) (NNP Brotherhood)))))))))) (. ?)))",
        "id": 1
    },
    {
        "taggedQuestion": "List common systems are developed by of the Google Videos and written by of the <e0> ?",
        "entityMap": {"<e0>": "Google Web Toolkit"},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "list",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "common systems",
                "containsRefer": false,
                "originStr": "common systems",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "developed by of the Google Videos",
                "containsRefer": false,
                "originStr": "developed by of the Google Videos",
                "start": 4,
                "entityID": 0,
                "end": 10,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "written by of the Google Web Toolkit",
                "containsRefer": false,
                "originStr": "written by of the Google Web Toolkit",
                "start": 11,
                "entityID": 0,
                "end": 16,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "List common systems are developed by of the Google Videos and written by of the Google Web Toolkit ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (S (NP (NN List) (JJ common) (NNS systems)) (VP (VBP are) (VP (VP (VBN developed) (PP (IN by) (PP (IN of) (NP (DT the) (NNP Google) (NNS Videos))))) (CC and) (VP (VBN written) (PP (IN by) (PP (IN of) (NP (DT the) (NN <e0>))))))) (. ?)))",
        "id": 2
    },
    {
        "taggedQuestion": "Which games are Sam Loyd and Eric Schiller both famous?",
        "entityMap": {},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "games",
                "containsRefer": false,
                "originStr": "games",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are Sam Loyd famous",
                "containsRefer": false,
                "originStr": "are Sam Loyd famous",
                "start": 2,
                "entityID": 0,
                "end": 10,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Eric Schiller famous",
                "containsRefer": false,
                "originStr": "Eric Schiller famous",
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which games are Sam Loyd and Eric Schiller both famous?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NNS games)) (SQ (VBP are) (NP (NP (NNP Sam) (NNP Loyd)) (CC and) (NP (NNP Eric) (NNP Schiller))) (ADJP (DT both) (JJ famous))) (. ?)))",
        "id": 3
    },
    {
        "taggedQuestion": "Is <e0> in the pizza industry?",
        "entityMap": {"<e0>": "Peter Piper Pizza"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "is",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "JUDGE"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Peter Piper Pizza in the pizza",
                "containsRefer": false,
                "originStr": "Peter Piper Pizza in the pizza",
                "start": 1,
                "entityID": 0,
                "end": 5,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "industry",
                "containsRefer": false,
                "originStr": "industry",
                "start": 5,
                "entityID": 0,
                "end": 6,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Is Peter Piper Pizza in the pizza industry?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SQ (VBZ Is) (NP (NP (ADD <e0>)) (PP (IN in) (NP (DT the) (NN pizza)))) (NP (NN industry)) (. ?)))",
        "id": 4
    },
    {
        "taggedQuestion": "Name the artist who made Dream Dancing and is often associated with Joe Pass.",
        "entityMap": {},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "name",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the artist",
                "containsRefer": false,
                "originStr": "the artist",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "made Dream Dancing",
                "containsRefer": false,
                "originStr": "made Dream Dancing",
                "start": 4,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is often associated with Joe Pass",
                "containsRefer": false,
                "originStr": "is often associated with Joe Pass",
                "start": 8,
                "entityID": 0,
                "end": 14,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Name the artist who made Dream Dancing and is often associated with Joe Pass.",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Name) (NP (NP (DT the) (NN artist)) (SBAR (WHNP (WP who)) (S (VP (VP (VBD made) (NP (NNP Dream) (NNP Dancing))) (CC and) (VP (VBZ is) (ADVP (RB often)) (VP (VBN associated) (PP (IN with) (NP (NNP Joe) (NNP Pass)))))))))) (. .)))",
        "id": 5
    },
    {
        "taggedQuestion": "Who is the office holder with deputies as Neil Brown and Andrew Peacock?",
        "entityMap": {},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "who",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the office holder",
                "containsRefer": false,
                "originStr": "is the office holder",
                "start": 1,
                "entityID": 0,
                "end": 13,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "deputies as Neil Brown",
                "containsRefer": false,
                "originStr": "deputies as Neil Brown",
                "start": 0,
                "entityID": 0,
                "end": 4,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "deputies as Andrew Peacock",
                "containsRefer": false,
                "originStr": "deputies as Andrew Peacock",
                "start": 5,
                "entityID": 0,
                "end": 6,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Who is the office holder with deputies as Neil Brown and Andrew Peacock?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP Who)) (SQ (VBZ is) (NP (NP (DT the) (NN office) (NN holder)) (PP (IN with) (NP (NP (NNS deputies)) (PP (IN as) (NP (NP (NNP Neil) (NNP Brown)) (CC and) (NP (NNP Andrew) (NN Peacock)))))))) (. ?)))",
        "id": 6
    },
    {
        "taggedQuestion": "Where did these popular aeroplanes - <e1> and Start+Flug H 101 originate?",
        "entityMap": {
            "<e1>": "Focke Wulf 260",
            "<e0>": "+ Flug H 101"
        },
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "Where",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "these popular aeroplanes-Focke Wulf 260 originate",
                "containsRefer": false,
                "originStr": "these popular aeroplanes-Focke Wulf 260 originate",
                "start": 1,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Start + Flug H 101 originate",
                "containsRefer": false,
                "originStr": "Start + Flug H 101 originate",
                "start": 8,
                "entityID": 0,
                "end": 13,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Where did these popular aeroplanes - Focke Wulf 260 and Start+Flug H 101 originate?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHADVP (WRB Where)) (SQ (VBD did) (NP (NP (DT these) (JJ popular) (NNS aeroplanes) (HYPH -) (NN <e1>)) (CC and) (NP (NML (NN Start) (SYM +) (NN Flug)) (NN H) (CD 101))) (VP (VB originate))) (. ?)))",
        "id": 7
    },
    {
        "taggedQuestion": "Which <e0> 's producer is <e1> and written by Erik Jendresen?",
        "entityMap": {
            "<e1>": "Stephen E. Ambrose",
            "<e0>": "television show"
        },
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "television show",
                "containsRefer": false,
                "originStr": "television show",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "producer is Stephen E Ambrose",
                "containsRefer": false,
                "originStr": "producer is Stephen E Ambrose",
                "start": 0,
                "entityID": 0,
                "end": 5,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "written by Erik Jendresen",
                "containsRefer": false,
                "originStr": "written by Erik Jendresen",
                "start": 6,
                "entityID": 0,
                "end": 9,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which television show 's producer is Stephen E. Ambrose and written by Erik Jendresen?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBAR (WHNP (WDT Which)) (S (NP (NP (NN <e0>) (POS 's)) (NN producer)) (VP (VP (VBZ is) (NP (ADD <e1>))) (CC and) (VP (VBN written) (PP (IN by) (NP (NNP Erik) (NNP Jendresen)))))) (. ?)))",
        "id": 8
    },
    {
        "taggedQuestion": "Who created the <e0> and also the <e1> ?",
        "entityMap": {
            "<e1>": "L'Enfant a la tasse",
            "<e0>": "Women in the Garden"
        },
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "who",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "created the Women in the Garden",
                "containsRefer": false,
                "originStr": "created the Women in the Garden",
                "start": 1,
                "entityID": 0,
                "end": 4,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "created the L'Enfant a la tasse",
                "containsRefer": false,
                "originStr": "created the L'Enfant a la tasse",
                "start": 5,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Who created the Women in the Garden and also the L'Enfant a la tasse ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP Who)) (SQ (VP (VBD created) (NP (NP (DT the) (NN <e0>)) (CC and) (ADVP (RB also)) (NP (DT the) (NN <e1>))))) (. ?)))",
        "id": 9
    },
    {
        "taggedQuestion": "Which famous horserace has seen both Fergie sutherland and the illustrious <e0>?",
        "entityMap": {"<e0>": "War of Attrition"},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "famous horserace",
                "containsRefer": false,
                "originStr": "famous horserace",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "has seen Fergie sutherland",
                "containsRefer": false,
                "originStr": "has seen Fergie sutherland",
                "start": 0,
                "entityID": 0,
                "end": 4,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the illustrious War of Attrition",
                "containsRefer": false,
                "originStr": "the illustrious War of Attrition",
                "start": 5,
                "entityID": 0,
                "end": 7,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which famous horserace has seen both Fergie sutherland and the illustrious War of Attrition?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NP (JJ famous) (NN horserace))) (SQ (VP (VBZ has) (VP (VBN seen) (NP (NP (DT both) (NNP Fergie) (NN sutherland)) (CC and) (NP (DT the) (ADJP (JJ illustrious)) (NN <e0>)))))) (. ?)))",
        "id": 10
    },
    {
        "taggedQuestion": "Tell me the name of the <e0>'s TV show whose Artist is Christopher Franke .",
        "entityMap": {"<e0>": "Prime Time Entertainment Network"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "tell me",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the Prime Time Entertainment Network's TV show",
                "containsRefer": false,
                "originStr": "the Prime Time Entertainment Network's TV show",
                "start": 5,
                "entityID": 0,
                "end": 10,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "whose artist is Christopher Franke",
                "containsRefer": false,
                "originStr": "whose artist is Christopher Franke",
                "start": 12,
                "entityID": 0,
                "end": 15,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Tell me the name of the Prime Time Entertainment Network's TV show whose Artist is Christopher Franke .",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3,
                "info": "whose artist"
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Tell) (NP (PRP me)) (NP (NP (DT the) (NN name)) (PP (IN of) (NP (NP (NP (DT the) (NN <e0>) (POS 's)) (NN TV) (NN show)) (SBAR (WHNP (WP$ whose) (NN Artist)) (S (VP (VBZ is) (NP (NNP Christopher) (NNP Franke))))))))) (. .)))",
        "id": 11
    },
    {
        "taggedQuestion": "How many other battles have the military person fought whose one of the battles is <e0> ?",
        "entityMap": {"<e0>": "World War II"},
        "nodeNum": 9,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "How many",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "have #entity1",
                "containsRefer": true,
                "originStr": "have #entity1",
                "start": 4,
                "entityID": 0,
                "end": 16,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "other battles",
                "containsRefer": false,
                "originStr": "other battles",
                "start": 2,
                "entityID": 0,
                "end": 4,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the military person",
                "containsRefer": false,
                "originStr": "the military person",
                "start": 5,
                "entityID": 1,
                "end": 8,
                "nodeType": 4,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            },
            {
                "str": "fought #entity2",
                "containsRefer": true,
                "originStr": "fought #entity2",
                "start": 8,
                "entityID": 1,
                "end": 16,
                "nodeType": 3,
                "nodeID": 6,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 2,
                "end": -1,
                "nodeType": 2,
                "nodeID": 7,
                "questionType": "UNKNOWN"
            },
            {
                "str": "whose one of the battles is World War II",
                "containsRefer": false,
                "originStr": "whose one of the battles is World War II",
                "start": 10,
                "entityID": 2,
                "end": 16,
                "nodeType": 3,
                "nodeID": 8,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "How many other battles have the military person fought whose one of the battles is World War II ?",
        "entityNum": 3,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 5,
                "from": 2,
                "end": 16,
                "to": 4
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 5
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 6
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 9,
                "from": 6,
                "end": 16,
                "to": 7
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 7,
                "end": -1,
                "to": 8,
                "info": "whose"
            }
        ],
        "syntaxTreeText": "(ROOT (SBAR (WHADJP (WRB How) (JJ many)) (S (NP (JJ other) (NNS battles)) (VP (VBP have) (NP (NP (DT the) (JJ military) (NN person)) (SBAR (S (VP (VBD fought) (SBAR (WHNP (WP$ whose)) (S (NP (NP (CD one)) (PP (IN of) (NP (DT the) (NNS battles)))) (VP (VBZ is) (NP (ADD <e0>))))))))))) (. ?)))",
        "id": 12
    },
    {
        "taggedQuestion": "Whose network's parent organisation is Comcast?",
        "entityMap": {},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "whose",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "network is #entity1",
                "containsRefer": true,
                "originStr": "network is #entity1",
                "start": 1,
                "entityID": 0,
                "end": 6,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "parent organisation is Comcast",
                "containsRefer": false,
                "originStr": "parent organisation is Comcast",
                "start": 7,
                "entityID": 1,
                "end": 11,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Whose network's parent organisation is Comcast?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 7,
                "from": 2,
                "end": 6,
                "to": 3
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WHNP (WP$ Whose) (NML (NML (NN network) (POS 's)) (NN parent))) (NN organisation)) (SQ (VBZ is) (NP (NNP Comcast))) (. ?)))",
        "id": 13
    },
    {
        "taggedQuestion": "Is <e0> buried in Colorado?",
        "entityMap": {"<e0>": "William H Blanchard"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "is",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "JUDGE"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "William H Blanchard",
                "containsRefer": false,
                "originStr": "William H Blanchard",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "buried in Colorado",
                "containsRefer": false,
                "originStr": "buried in Colorado",
                "start": 2,
                "entityID": 0,
                "end": 5,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Is William H Blanchard buried in Colorado?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SQ (VBZ Is) (NP (NN <e0>)) (VP (VBN buried) (PP (IN in) (NP (NNP Colorado)))) (. ?)))",
        "id": 14
    },
    {
        "taggedQuestion": "Which cport of <e0> is also the genere of Battle chess ?",
        "entityMap": {"<e0>": "Vishwajyot High School"},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "cport of Vishwajyot High School",
                "containsRefer": false,
                "originStr": "cport of Vishwajyot High School",
                "start": 1,
                "entityID": 0,
                "end": 4,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the genere of Battle chess",
                "containsRefer": false,
                "originStr": "the genere of Battle chess",
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "",
                "containsRefer": false,
                "originStr": "",
                "start": 4,
                "entityID": 0,
                "end": 5,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which cport of Vishwajyot High School is also the genere of Battle chess ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NP (NN cport) (PP (IN of) (NP (NN <e0>))))) (SQ (VBZ is) (ADVP (RB also)) (NP (NP (DT the) (NN genere)) (PP (IN of) (NP (NNP Battle) (NN chess))))) (. ?)))",
        "id": 15
    },
    {
        "taggedQuestion": "Which state is the Channel district?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "state",
                "containsRefer": false,
                "originStr": "state",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the Channel district",
                "containsRefer": false,
                "originStr": "is the Channel district",
                "start": 2,
                "entityID": 0,
                "end": 6,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which state is the Channel district?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NN state)) (SQ (VBZ is) (NP (DT the) (NNP Channel) (NN district))) (. ?)))",
        "id": 16
    },
    {
        "taggedQuestion": "Who was in the missions of Apollo 11 and Gemini 8?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "who",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "was in the missions of Apollo 11",
                "containsRefer": false,
                "originStr": "was in the missions of Apollo 11",
                "start": 1,
                "entityID": 0,
                "end": 8,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "was in the missions of Gemini 8",
                "containsRefer": false,
                "originStr": "was in the missions of Gemini 8",
                "start": 9,
                "entityID": 0,
                "end": 10,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Who was in the missions of Apollo 11 and Gemini 8?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP Who)) (SQ (VP (VBD was) (PP (IN in) (NP (NP (DT the) (NNS missions)) (PP (IN of) (NP (NP (NNP Apollo) (CD 11)) (CC and) (NP (NNP Gemini) (CD 8)))))))) (. ?)))",
        "id": 17
    },
    {
        "taggedQuestion": "What is the total number of other tenant of the stadia whose one of the tenant is Raptors 905?",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what is the number of",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "other tenant of #entity1",
                "containsRefer": true,
                "originStr": "other tenant of #entity1",
                "start": 0,
                "entityID": 0,
                "end": 13,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the stadia",
                "containsRefer": false,
                "originStr": "the stadia",
                "start": 3,
                "entityID": 1,
                "end": 5,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "whose one of the tenant is Raptors 905",
                "containsRefer": false,
                "originStr": "whose one of the tenant is Raptors 905",
                "start": 10,
                "entityID": 1,
                "end": 13,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is the total number of other tenant of the stadia whose one of the tenant is Raptors 905?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 3,
                "from": 2,
                "end": 13,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5,
                "info": "whose one of the tenant"
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (NP (DT the) (JJ total) (NN number)) (PP (IN of) (NP (NP (JJ other) (NN tenant)) (PP (IN of) (NP (NP (DT the) (NN stadia)) (SBAR (WHNP (WHNP (WP$ whose) (NN one)) (PP (IN of) (NP (DT the) (NN tenant)))) (S (VP (VBZ is) (NP (NNPS Raptors))))))) (NP-TMP (CD 905)))))) (. ?)))",
        "id": 18
    },
    {
        "taggedQuestion": "Where can one find the Dzogchen Ponolop Rinpoche?",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "Where",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "can one find the Dzogchen Ponolop Rinpoche",
                "containsRefer": false,
                "originStr": "can one find the Dzogchen Ponolop Rinpoche",
                "start": 1,
                "entityID": 0,
                "end": 8,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Where can one find the Dzogchen Ponolop Rinpoche?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHADVP (WRB Where)) (SQ (MD can) (NP (PRP one)) (VP (VB find) (NP (DT the) (NNP Dzogchen) (NNP Ponolop) (NNP Rinpoche)))) (. ?)))",
        "id": 19
    },
    {
        "taggedQuestion": "Who is the stockholder of the road tunnels operated by the Massachusetts Department of Transportation?",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "who",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the stockholder of #entity1",
                "containsRefer": true,
                "originStr": "is the stockholder of #entity1",
                "start": 1,
                "entityID": 0,
                "end": 15,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the road tunnels",
                "containsRefer": false,
                "originStr": "the road tunnels",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "operated by the Massachusetts Department of Transportation",
                "containsRefer": false,
                "originStr": "operated by the Massachusetts Department of Transportation",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Who is the stockholder of the road tunnels operated by the Massachusetts Department of Transportation?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": -1,
                "from": 2,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP Who)) (SQ (VBZ is) (NP (NP (DT the) (NN stockholder)) (PP (IN of) (NP (DT the) (NN road) (NNS tunnels)))) (VP (VBN operated) (PP (IN by) (NP (NP (DT the) (NNP Massachusetts) (NNP Department)) (PP (IN of) (NP (NNP Transportation))))))) (. ?)))",
        "id": 20
    },
    {
        "taggedQuestion": "What are the awards won by the film director of Saraband ?",
        "entityMap": {},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are the awards won by #entity1",
                "containsRefer": true,
                "originStr": "are the awards won by #entity1",
                "start": 1,
                "entityID": 0,
                "end": 11,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the film director of Saraband",
                "containsRefer": false,
                "originStr": "the film director of Saraband",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What are the awards won by the film director of Saraband ?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": -1,
                "from": 2,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBP are) (NP (DT the) (NNS awards)) (VP (VBN won) (PP (IN by) (NP (NP (DT the) (NN film) (NN director)) (PP (IN of) (NP (NNP Saraband))))))) (. ?)))",
        "id": 21
    },
    {
        "taggedQuestion": "What is the almamater of the president whose vice president was <e0>?",
        "entityMap": {"<e0>": "Enrique Jos Varona"},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the almamater of #entity1",
                "containsRefer": true,
                "originStr": "is the almamater of #entity1",
                "start": 1,
                "entityID": 0,
                "end": 12,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the president",
                "containsRefer": false,
                "originStr": "the president",
                "start": 5,
                "entityID": 1,
                "end": 7,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "whose vice president was Enrique Jos Varona",
                "containsRefer": false,
                "originStr": "whose vice president was Enrique Jos Varona",
                "start": 10,
                "entityID": 1,
                "end": 12,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is the almamater of the president whose vice president was Enrique Jos Varona?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 5,
                "from": 2,
                "end": 12,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5,
                "info": "whose vice president"
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (NP (DT the) (NN almamater)) (PP (IN of) (NP (NP (DT the) (NN president)) (SBAR (WHNP (WP$ whose) (NML (NN vice)) (NN president)) (S (VP (VBD was) (NP (ADD <e0>))))))))) (. ?)))",
        "id": 22
    },
    {
        "taggedQuestion": "What is the route end of <e0> ?",
        "entityMap": {"<e0>": "Birmingham and Oxford Junction Railway"},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the route end of Birmingham and Oxford Junction Railway",
                "containsRefer": false,
                "originStr": "is the route end of Birmingham and Oxford Junction Railway",
                "start": 1,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is the route end of Birmingham and Oxford Junction Railway ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (NP (DT the) (NN route) (NN end)) (PP (IN of) (NP (NN <e0>))))) (. ?)))",
        "id": 23
    },
    {
        "taggedQuestion": "Where did the <e0> originate?",
        "entityMap": {"<e0>": "Vitis Vinifera grapes"},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "Where",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "did the Vitis Vinifera grapes originate",
                "containsRefer": false,
                "originStr": "did the Vitis Vinifera grapes originate",
                "start": 1,
                "entityID": 0,
                "end": 5,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Where did the Vitis Vinifera grapes originate?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHADVP (WRB Where)) (SQ (VBD did) (NP (DT the) (NN <e0>)) (VP (VB originate))) (. ?)))",
        "id": 24
    },
    {
        "taggedQuestion": "How many people are there whose children died in Indiana?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "how many",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "people",
                "containsRefer": false,
                "originStr": "people",
                "start": 2,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "whose children died in Indiana",
                "containsRefer": false,
                "originStr": "whose children died in Indiana",
                "start": 7,
                "entityID": 0,
                "end": 10,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "How many people are there whose children died in Indiana?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3,
                "info": "whose children"
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WHADJP (WRB How) (JJ many)) (NNS people)) (SQ (VBP are) (NP (EX there)) (SBAR (WHNP (WP$ whose) (NNS children)) (S (VP (VBD died) (PP (IN in) (NP (NNP Indiana))))))) (. ?)))",
        "id": 25
    },
    {
        "taggedQuestion": "What is the military branch of the <e0> which is also the branch of <e1> ?",
        "entityMap": {
            "<e1>": "Pierre R. Graham",
            "<e0>": "William French Smith"
        },
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the military branch of the William French Smith which",
                "containsRefer": false,
                "originStr": "is the military branch of the William French Smith which",
                "start": 1,
                "entityID": 0,
                "end": 9,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the branch of Pierre R. Graham",
                "containsRefer": false,
                "originStr": "the branch of Pierre R. Graham",
                "start": 11,
                "entityID": 0,
                "end": 15,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is the military branch of the William French Smith which is also the branch of Pierre R. Graham ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (NP (DT the) (JJ military) (NN branch)) (PP (IN of) (NP (NP (DT the) (NN <e0>)) (SBAR (WHNP (WDT which)) (S (VP (VBZ is) (ADVP (RB also)) (NP (NP (DT the) (NN branch)) (PP (IN of) (NP (NN <e1>))))))))))) (. ?)))",
        "id": 26
    },
    {
        "taggedQuestion": "What is the river whose source is Lake Ontario?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the river",
                "containsRefer": false,
                "originStr": "the river",
                "start": 2,
                "entityID": 0,
                "end": 4,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "whose source is Lake Ontario",
                "containsRefer": false,
                "originStr": "whose source is Lake Ontario",
                "start": 6,
                "entityID": 0,
                "end": 9,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is the river whose source is Lake Ontario?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3,
                "info": "whose source"
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (NP (DT the) (NN river)) (SBAR (WHNP (WP$ whose) (NML (NN source))) (S (VP (VBZ is) (NP (NNP Lake) (NNP Ontario))))))) (. ?)))",
        "id": 27
    },
    {
        "taggedQuestion": "Which location city of the Denver Broncos is the place of birth of Steven Clark Cunningham ?",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the place of birth of Steven Clark Cunningham",
                "containsRefer": false,
                "originStr": "is the place of birth of Steven Clark Cunningham",
                "start": 7,
                "entityID": 0,
                "end": 16,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which location city of the Denver Broncos is the place of birth of Steven Clark Cunningham ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WHNP (WDT Which) (NN location) (NN city)) (PP (IN of) (NP (DT the) (NNP Denver) (NNPS Broncos)))) (SQ (VBZ is) (NP (NP (DT the) (NN place)) (PP (IN of) (NP (NP (NN birth)) (PP (IN of) (NP (NNP Steven) (NNP Clark) (NNP Cunningham))))))) (. ?)))",
        "id": 28
    },
    {
        "taggedQuestion": "What is the religion of the person who founded the Emel magazine?",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the religion of #entity1",
                "containsRefer": true,
                "originStr": "is the religion of #entity1",
                "start": 1,
                "entityID": 0,
                "end": 12,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the person",
                "containsRefer": false,
                "originStr": "the person",
                "start": 5,
                "entityID": 1,
                "end": 7,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "founded the Emel magazine",
                "containsRefer": false,
                "originStr": "founded the Emel magazine",
                "start": 8,
                "entityID": 1,
                "end": 12,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is the religion of the person who founded the Emel magazine?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 5,
                "from": 2,
                "end": 12,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (NP (DT the) (NN religion)) (PP (IN of) (NP (NP (DT the) (NN person)) (SBAR (WHNP (WP who)) (S (VP (VBD founded) (NP (DT the) (NNP Emel) (NN magazine))))))))) (. ?)))",
        "id": 29
    },
    {
        "taggedQuestion": "Give the name of the  managers of <e0> and <e1>",
        "entityMap": {
            "<e1>": "England national under-21 football team.",
            "<e0>": "England national under-20 football team"
        },
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "give",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the name of #entity1 and England national under-21 football team",
                "containsRefer": true,
                "originStr": "the name of #entity1 and England national under-21 football team",
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the managers of England national under-20 football team",
                "containsRefer": false,
                "originStr": "the managers of England national under-20 football team",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Give the name of the  managers of England national under-20 football team and England national under-21 football team.",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": -1,
                "from": 2,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (FRAG (S (VP (VB Give) (NP (NP (DT the) (NN name)) (PP (IN of) (NP (NP (DT the) (NNS managers)) (PP (IN of))))))) (NP (ADD <e0>) (CC and) (ADD <e1>))))",
        "id": 30
    },
    {
        "taggedQuestion": "How many cities are around the sea in which the the <e0> meets?",
        "entityMap": {"<e0>": "fig tree bay"},
        "nodeNum": 9,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "how many",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "cities",
                "containsRefer": false,
                "originStr": "cities",
                "start": 2,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are around #entity1",
                "containsRefer": true,
                "originStr": "are around #entity1",
                "start": 3,
                "entityID": 0,
                "end": 13,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the sea in #entity2",
                "containsRefer": true,
                "originStr": "the sea in #entity2",
                "start": 5,
                "entityID": 1,
                "end": 13,
                "nodeType": 4,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 2,
                "end": -1,
                "nodeType": 2,
                "nodeID": 6,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the",
                "containsRefer": false,
                "originStr": "the",
                "start": 9,
                "entityID": 2,
                "end": 10,
                "nodeType": 4,
                "nodeID": 7,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the fig tree bay meets",
                "containsRefer": false,
                "originStr": "the fig tree bay meets",
                "start": 10,
                "entityID": 2,
                "end": 13,
                "nodeType": 3,
                "nodeID": 8,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "How many cities are around the sea in which the the fig tree bay meets?",
        "entityNum": 3,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 5,
                "from": 3,
                "end": 13,
                "to": 4
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 5
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 8,
                "from": 5,
                "end": 13,
                "to": 6
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 6,
                "end": -1,
                "to": 7
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 6,
                "end": -1,
                "to": 8
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WHADJP (WRB How) (JJ many)) (NNS cities)) (SQ (VP (VBP are) (PP (IN around) (NP (NP (DT the) (NN sea)) (PP (IN in) (SBAR (WHNP (WDT which) (DT the)) (S (NP (DT the) (NN <e0>)) (VP (VBZ meets))))))))) (. ?)))",
        "id": 31
    },
    {
        "taggedQuestion": "Is <e0> a part of the bahamas achipelago?",
        "entityMap": {"<e0>": "blue lagoon island"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "is",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "JUDGE"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "blue lagoon island a part of the bahamas",
                "containsRefer": false,
                "originStr": "blue lagoon island a part of the bahamas",
                "start": 1,
                "entityID": 0,
                "end": 7,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "achipelago",
                "containsRefer": false,
                "originStr": "achipelago",
                "start": 7,
                "entityID": 0,
                "end": 8,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Is blue lagoon island a part of the bahamas achipelago?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SQ (VBZ Is) (NP (NP (ADD <e0>)) (NP (NP (DT a) (NN part)) (PP (IN of) (NP (DT the) (NNS bahamas))))) (NP (NN achipelago)) (. ?)))",
        "id": 32
    },
    {
        "taggedQuestion": "Name the movies distributed by RKO Pictures and has music composer as Bernard Herrmann.",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "name",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "distributed by RKO Pictures",
                "containsRefer": false,
                "originStr": "distributed by RKO Pictures",
                "start": 3,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "has music composer as Bernard Herrmann",
                "containsRefer": false,
                "originStr": "has music composer as Bernard Herrmann",
                "start": 8,
                "entityID": 0,
                "end": 14,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Name the movies distributed by RKO Pictures and has music composer as Bernard Herrmann.",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Name) (S (NP (DT the) (NNS movies)) (VP (VP (VBN distributed) (PP (IN by) (NP (NN RKO) (NNS Pictures)))) (CC and) (VP (VBZ has) (NP (NP (NN music) (NN composer)) (PP (IN as) (NP (NNP Bernard) (NNP Herrmann)))))))) (. .)))",
        "id": 33
    },
    {
        "taggedQuestion": "Did the New Way party merge in the One Israel party?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "did",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "JUDGE"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the New Way party",
                "containsRefer": false,
                "originStr": "the New Way party",
                "start": 1,
                "entityID": 0,
                "end": 5,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "merge in the One Israel party",
                "containsRefer": false,
                "originStr": "merge in the One Israel party",
                "start": 5,
                "entityID": 0,
                "end": 11,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Did the New Way party merge in the One Israel party?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SQ (VBD Did) (NP (DT the) (NNP New) (NNP Way) (NN party)) (VP (VB merge) (PP (IN in) (NP (DT the) (CD One) (NNP Israel) (NN party)))) (. ?)))",
        "id": 34
    },
    {
        "taggedQuestion": "How many pole drivers have been there in grand prixes where first driver was Damon Hill?",
        "entityMap": {},
        "nodeNum": 7,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "How many",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "have been there in #entity1",
                "containsRefer": true,
                "originStr": "have been there in #entity1",
                "start": 4,
                "entityID": 0,
                "end": 16,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "pole drivers",
                "containsRefer": false,
                "originStr": "pole drivers",
                "start": 2,
                "entityID": 0,
                "end": 4,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "grand prixes",
                "containsRefer": false,
                "originStr": "grand prixes",
                "start": 8,
                "entityID": 1,
                "end": 10,
                "nodeType": 4,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            },
            {
                "str": "first driver was Damon Hill",
                "containsRefer": false,
                "originStr": "first driver was Damon Hill",
                "start": 11,
                "entityID": 1,
                "end": 16,
                "nodeType": 3,
                "nodeID": 6,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "How many pole drivers have been there in grand prixes where first driver was Damon Hill?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 8,
                "from": 2,
                "end": 16,
                "to": 4
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 5
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 6
            }
        ],
        "syntaxTreeText": "(ROOT (SBAR (WHADJP (WRB How) (JJ many)) (S (NP (NN pole) (NNS drivers)) (VP (VBP have) (VP (VBN been) (ADVP (RB there)) (PP (IN in) (NP (NP (JJ grand) (NNS prixes)) (SBAR (WHADVP (WRB where)) (S (NP (JJ first) (NN driver)) (VP (VBD was) (NP (NNP Damon) (NNP Hill)))))))))) (. ?)))",
        "id": 35
    },
    {
        "taggedQuestion": "Where are jockeys in <e0> from?",
        "entityMap": {"<e0>": "Dubai World Cup"},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "Where",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are jockeys in Dubai World Cup from",
                "containsRefer": false,
                "originStr": "are jockeys in Dubai World Cup from",
                "start": 1,
                "entityID": 0,
                "end": 6,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Where are jockeys in Dubai World Cup from?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHADVP (WRB Where)) (SQ (VBP are) (NP (NNS jockeys)) (PP (IN in) (PP (NP (NN <e0>)) (IN from)))) (. ?)))",
        "id": 36
    },
    {
        "taggedQuestion": "Who owns the newspaper which was founded by Nehru?",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "who",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "owns #entity1",
                "containsRefer": true,
                "originStr": "owns #entity1",
                "start": 1,
                "entityID": 0,
                "end": 9,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the newspaper",
                "containsRefer": false,
                "originStr": "the newspaper",
                "start": 2,
                "entityID": 1,
                "end": 4,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "was founded by Nehru",
                "containsRefer": false,
                "originStr": "was founded by Nehru",
                "start": 5,
                "entityID": 1,
                "end": 9,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Who owns the newspaper which was founded by Nehru?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 2,
                "from": 2,
                "end": 9,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP Who)) (SQ (VP (VBZ owns) (NP (NP (DT the) (NN newspaper)) (SBAR (WHNP (WDT which)) (S (VP (VBD was) (VP (VBN founded) (PP (IN by) (NP (NNP Nehru)))))))))) (. ?)))",
        "id": 37
    },
    {
        "taggedQuestion": "Which places do the flights go by airlines headquartered in the UK?",
        "entityMap": {},
        "nodeNum": 9,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "places",
                "containsRefer": false,
                "originStr": "places",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "do#entity2 go by #entity1",
                "containsRefer": true,
                "originStr": "do#entity2 go by #entity1",
                "start": 2,
                "entityID": 0,
                "end": 12,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "airlines",
                "containsRefer": false,
                "originStr": "airlines",
                "start": 7,
                "entityID": 1,
                "end": 8,
                "nodeType": 4,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            },
            {
                "str": "headquartered in the UK",
                "containsRefer": false,
                "originStr": "headquartered in the UK",
                "start": 8,
                "entityID": 1,
                "end": 12,
                "nodeType": 3,
                "nodeID": 6,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 2,
                "end": -1,
                "nodeType": 2,
                "nodeID": 7,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the flights",
                "containsRefer": false,
                "originStr": "the flights",
                "start": 3,
                "entityID": 2,
                "end": 5,
                "nodeType": 4,
                "nodeID": 8,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which places do the flights go by airlines headquartered in the UK?",
        "entityNum": 3,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 7,
                "from": 3,
                "end": 12,
                "to": 4
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 3,
                "from": 3,
                "end": 5,
                "to": 7
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 5
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 6
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 7,
                "end": -1,
                "to": 8
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NP (NNS places))) (SQ (VBP do) (NP (DT the) (NNS flights)) (VP (VBP go) (PP (IN by) (NP (NP (NNS airlines)) (VP (VBN headquartered) (PP (IN in) (NP (DT the) (NNP UK)))))))) (. ?)))",
        "id": 38
    },
    {
        "taggedQuestion": "What is the magazine which have been  founded by <e0>?",
        "entityMap": {"<e0>": "Ralph J. Gleason"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the magazine",
                "containsRefer": false,
                "originStr": "the magazine",
                "start": 2,
                "entityID": 0,
                "end": 4,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "have been founded by Ralph J. Gleason",
                "containsRefer": false,
                "originStr": "have been founded by Ralph J. Gleason",
                "start": 5,
                "entityID": 0,
                "end": 10,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is the magazine which have been  founded by Ralph J. Gleason?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (NP (DT the) (NN magazine)) (SBAR (WHNP (WDT which)) (S (VP (VBP have) (VP (VBN been) (VP (VBN founded) (PP (IN by) (NP (NN <e0>)))))))))) (. ?)))",
        "id": 39
    },
    {
        "taggedQuestion": "Is Seattle the Ship builder of USS Marmora (IX-189)?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "is",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "JUDGE"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Seattle",
                "containsRefer": false,
                "originStr": "Seattle",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the Ship builder of USS Marmora(IX-189)",
                "containsRefer": false,
                "originStr": "the Ship builder of USS Marmora(IX-189)",
                "start": 2,
                "entityID": 0,
                "end": 13,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Is Seattle the Ship builder of USS Marmora (IX-189)?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SQ (VBZ Is) (NP (NNP Seattle)) (NP (NP (DT the) (NN Ship) (NN builder)) (PP (IN of) (NP (NNP USS) (NNP Marmora) (PRN (-LRB- -LRB-) (NP (CD IX) (SYM -) (CD 189)) (-RRB- -RRB-))))) (. ?)))",
        "id": 40
    },
    {
        "taggedQuestion": "Is Tirana the largest city of Albania?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "is",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "JUDGE"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Tirana",
                "containsRefer": false,
                "originStr": "Tirana",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the largest city of Albania",
                "containsRefer": false,
                "originStr": "the largest city of Albania",
                "start": 2,
                "entityID": 0,
                "end": 7,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Is Tirana the largest city of Albania?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SQ (VBZ Is) (NP (NNP Tirana)) (NP (NP (DT the) (JJS largest) (NN city)) (PP (IN of) (NP (NNP Albania)))) (. ?)))",
        "id": 41
    },
    {
        "taggedQuestion": "Which cities can the beverage related to Barq's be found?",
        "entityMap": {},
        "nodeNum": 7,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "cities",
                "containsRefer": false,
                "originStr": "cities",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "can #entity1 be found",
                "containsRefer": true,
                "originStr": "can #entity1 be found",
                "start": 2,
                "entityID": 0,
                "end": 11,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the beverage",
                "containsRefer": false,
                "originStr": "the beverage",
                "start": 3,
                "entityID": 1,
                "end": 5,
                "nodeType": 4,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            },
            {
                "str": "related to Barq's",
                "containsRefer": false,
                "originStr": "related to Barq's",
                "start": 5,
                "entityID": 1,
                "end": 9,
                "nodeType": 3,
                "nodeID": 6,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which cities can the beverage related to Barq's be found?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 3,
                "from": 3,
                "end": 9,
                "to": 4
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 5
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 6
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NNS cities)) (SQ (MD can) (NP (NP (DT the) (NN beverage)) (VP (VBN related) (PP (IN to) (NP (NNP Barq) (POS 's))))) (VP (VB be) (VP (VBN found)))) (. ?)))",
        "id": 42
    },
    {
        "taggedQuestion": "What is the birth place of the astronaut whose mission was the Vostok programmer?",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the birth place of #entity1",
                "containsRefer": true,
                "originStr": "is the birth place of #entity1",
                "start": 1,
                "entityID": 0,
                "end": 14,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the astronaut",
                "containsRefer": false,
                "originStr": "the astronaut",
                "start": 6,
                "entityID": 1,
                "end": 8,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "whose mission was the Vostok programmer",
                "containsRefer": false,
                "originStr": "whose mission was the Vostok programmer",
                "start": 10,
                "entityID": 1,
                "end": 14,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is the birth place of the astronaut whose mission was the Vostok programmer?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 6,
                "from": 2,
                "end": 14,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5,
                "info": "whose mission"
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (NP (DT the) (NN birth) (NN place)) (PP (IN of) (NP (NP (DT the) (NN astronaut)) (SBAR (WHNP (WP$ whose) (NN mission)) (S (VP (VBD was) (NP (DT the) (NNP Vostok) (NN programmer))))))))) (. ?)))",
        "id": 43
    },
    {
        "taggedQuestion": "Count everyone who studied at an institute which are in Suburbs.",
        "entityMap": {},
        "nodeNum": 7,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "count",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "everyone",
                "containsRefer": false,
                "originStr": "everyone",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "studied #entity1 Suburbs",
                "containsRefer": true,
                "originStr": "studied #entity1 Suburbs",
                "start": 3,
                "entityID": 0,
                "end": 11,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "an institute",
                "containsRefer": false,
                "originStr": "an institute",
                "start": 5,
                "entityID": 1,
                "end": 7,
                "nodeType": 4,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are in Suburbs",
                "containsRefer": false,
                "originStr": "are in Suburbs",
                "start": 8,
                "entityID": 1,
                "end": 11,
                "nodeType": 3,
                "nodeID": 6,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Count everyone who studied at an institute which are in Suburbs.",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 5,
                "from": 3,
                "end": 11,
                "to": 4
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 5
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 6
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Count) (NP (NP (NN everyone)) (SBAR (WHNP (WP who)) (S (VP (VBD studied) (PP (IN at) (NP (NP (DT an) (NN institute)) (SBAR (WHNP (WDT which)) (S (VP (VBP are) (PP (IN in) (NP (NNS Suburbs))))))))))))) (. .)))",
        "id": 44
    },
    {
        "taggedQuestion": "Where did <e0>?",
        "entityMap": {"<e0>": "Whitney Wistert debut"},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "Where",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "did Whitney Wistert debut",
                "containsRefer": false,
                "originStr": "did Whitney Wistert debut",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Where did Whitney Wistert debut?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHADVP (WRB Where)) (SQ (VBD did) (NP (NN <e0>))) (. ?)))",
        "id": 45
    },
    {
        "taggedQuestion": "What is the major shrine of the monarchs whose successor is <e0>?",
        "entityMap": {"<e0>": "Dragimir of Travunia and Zachlumia"},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the major shrine of #entity1",
                "containsRefer": true,
                "originStr": "is the major shrine of #entity1",
                "start": 1,
                "entityID": 0,
                "end": 12,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the monarchs",
                "containsRefer": false,
                "originStr": "the monarchs",
                "start": 6,
                "entityID": 1,
                "end": 8,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "whose successor is Dragimir of Travunia and Zachlumia",
                "containsRefer": false,
                "originStr": "whose successor is Dragimir of Travunia and Zachlumia",
                "start": 10,
                "entityID": 1,
                "end": 12,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is the major shrine of the monarchs whose successor is Dragimir of Travunia and Zachlumia?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 6,
                "from": 2,
                "end": 12,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5,
                "info": "whose successor"
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (NP (DT the) (JJ major) (NN shrine)) (PP (IN of) (NP (NP (DT the) (NNS monarchs)) (SBAR (WHNP (WP$ whose) (NML (NN successor))) (S (VP (VBZ is) (NP (ADD <e0>))))))))) (. ?)))",
        "id": 46
    },
    {
        "taggedQuestion": "How many <e0> have  <e1> as their channel?",
        "entityMap": {
            "<e1>": "Fox Broadcasting Company",
            "<e0>": "television shows"
        },
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "How many",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "have Fox Broadcasting Company as their channel",
                "containsRefer": false,
                "originStr": "have Fox Broadcasting Company as their channel",
                "start": 3,
                "entityID": 0,
                "end": 8,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "television shows",
                "containsRefer": false,
                "originStr": "television shows",
                "start": 2,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "How many television shows have  Fox Broadcasting Company as their channel?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBAR (WHADJP (WRB How) (JJ many)) (S (NP (NNS <e0>)) (VP (VBP have) (NP (NP (ADD <e1>)) (PP (IN as) (NP (PRP$ their) (NN channel)))))) (. ?)))",
        "id": 47
    },
    {
        "taggedQuestion": "What is the river whose mouth locations are Arctic Ocean and Laptev Sea?",
        "entityMap": {},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the river",
                "containsRefer": false,
                "originStr": "the river",
                "start": 2,
                "entityID": 0,
                "end": 4,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "whose mouth locations are Arctic Ocean",
                "containsRefer": false,
                "originStr": "whose mouth locations are Arctic Ocean",
                "start": 7,
                "entityID": 0,
                "end": 10,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "whose mouth locations are Laptev Sea",
                "containsRefer": false,
                "originStr": "whose mouth locations are Laptev Sea",
                "start": 11,
                "entityID": 0,
                "end": 12,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is the river whose mouth locations are Arctic Ocean and Laptev Sea?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3,
                "info": "whose mouth locations"
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (NP (DT the) (NN river)) (SBAR (WHNP (WP$ whose) (NML (NN mouth) (NNS locations))) (S (VP (VBP are) (NP (NP (NNP Arctic) (NNP Ocean)) (CC and) (NP (NNP Laptev) (NNP Sea)))))))) (. ?)))",
        "id": 48
    },
    {
        "taggedQuestion": "What are some wars fought when <e0> as the country's prime minister?",
        "entityMap": {"<e0>": "Chung Il Kwon"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "some wars",
                "containsRefer": false,
                "originStr": "some wars",
                "start": 2,
                "entityID": 0,
                "end": 4,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "fought when Chung Il Kwon as the country's prime minister",
                "containsRefer": false,
                "originStr": "fought when Chung Il Kwon as the country's prime minister",
                "start": 4,
                "entityID": 0,
                "end": 12,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What are some wars fought when Chung Il Kwon as the country's prime minister?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBP are) (NP (NP (DT some) (NNS wars)) (SBAR (S (VP (VBD fought) (SBAR (WHADVP (WRB when)) (FRAG (NP (ADD <e0>))))))) (PP (IN as) (NP (NP (DT the) (NN country) (POS 's)) (JJ prime) (NN minister))))) (. ?)))",
        "id": 49
    },
    {
        "taggedQuestion": "Where was the person born who died in <e0>?",
        "entityMap": {"<e0>": "Bryn Mawr Hospital"},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "Where",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "was the person born #entity1",
                "containsRefer": true,
                "originStr": "was the person born #entity1",
                "start": 1,
                "entityID": 0,
                "end": 9,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "died in Bryn Mawr Hospital",
                "containsRefer": false,
                "originStr": "died in Bryn Mawr Hospital",
                "start": 6,
                "entityID": 1,
                "end": 9,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Where was the person born who died in Bryn Mawr Hospital?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 5,
                "from": 2,
                "end": 9,
                "to": 3
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHADVP (WRB Where)) (SQ (VBD was) (NP (DT the) (NN person)) (VP (VBN born) (SBAR (WHNP (WP who)) (S (VP (VBD died) (PP (IN in) (NP (NN <e0>)))))))) (. ?)))",
        "id": 50
    },
    {
        "taggedQuestion": "What is the faith of the Ajith Perera and religious affiliation of the <e0>?",
        "entityMap": {"<e0>": "Neungin High School"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the faith of the Ajith Perera",
                "containsRefer": false,
                "originStr": "the faith of the Ajith Perera",
                "start": 1,
                "entityID": 0,
                "end": 8,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "religious affiliation of the Neungin High School",
                "containsRefer": false,
                "originStr": "religious affiliation of the Neungin High School",
                "start": 9,
                "entityID": 0,
                "end": 13,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is the faith of the Ajith Perera and religious affiliation of the Neungin High School?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (NP (NP (DT the) (NN faith)) (PP (IN of) (NP (DT the) (NNP Ajith) (NNP Perera)))) (CC and) (NP (NP (JJ religious) (NN affiliation)) (PP (IN of) (NP (DT the) (NN <e0>)))))) (. ?)))",
        "id": 51
    },
    {
        "taggedQuestion": "Who was in military unit which played the role of Air interdiction?",
        "entityMap": {},
        "nodeNum": 8,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "who",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "was in #entity1",
                "containsRefer": true,
                "originStr": "was in #entity1",
                "start": 1,
                "entityID": 0,
                "end": 12,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "military unit",
                "containsRefer": false,
                "originStr": "military unit",
                "start": 3,
                "entityID": 1,
                "end": 5,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "played #entity2",
                "containsRefer": true,
                "originStr": "played #entity2",
                "start": 6,
                "entityID": 1,
                "end": 12,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 2,
                "end": -1,
                "nodeType": 2,
                "nodeID": 6,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the role of Air interdiction",
                "containsRefer": false,
                "originStr": "the role of Air interdiction",
                "start": -1,
                "entityID": 2,
                "end": -1,
                "nodeType": 4,
                "nodeID": 7,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Who was in military unit which played the role of Air interdiction?",
        "entityNum": 3,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 3,
                "from": 2,
                "end": 12,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": -1,
                "from": 5,
                "end": -1,
                "to": 6
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 6,
                "end": -1,
                "to": 7
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP Who)) (SQ (VP (VBD was) (PP (IN in) (NP (NP (JJ military) (NN unit)) (SBAR (WHNP (WDT which)) (S (VP (VBD played) (NP (NP (DT the) (NN role)) (PP (IN of) (NP (NML (NN Air) (NN interdiction)))))))))))) (. ?)))",
        "id": 52
    },
    {
        "taggedQuestion": "Who are the current members of <e0>?",
        "entityMap": {"<e0>": "Insects vs Robots"},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "who",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are the current members of Insects vs Robots",
                "containsRefer": false,
                "originStr": "are the current members of Insects vs Robots",
                "start": 1,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Who are the current members of Insects vs Robots?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP Who)) (SQ (VBP are) (NP (NP (DT the) (JJ current) (NNS members)) (PP (IN of) (NP (NN <e0>))))) (. ?)))",
        "id": 53
    },
    {
        "taggedQuestion": "Is Ombla originate in Croatia?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "is",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "JUDGE"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Ombla",
                "containsRefer": false,
                "originStr": "Ombla",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "originate in Croatia",
                "containsRefer": false,
                "originStr": "originate in Croatia",
                "start": 2,
                "entityID": 0,
                "end": 5,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Is Ombla originate in Croatia?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SQ (SQ (VBZ Is) (S (NP (NNP Ombla)) (VP (VB originate) (PP (IN in) (NP (NNP Croatia)))))) (. ?)))",
        "id": 54
    },
    {
        "taggedQuestion": "Greater Napanee is the home town of what people?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "people",
                "containsRefer": false,
                "originStr": "people",
                "start": 8,
                "entityID": 0,
                "end": 10,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Greater Napanee is the home town of",
                "containsRefer": false,
                "originStr": "Greater Napanee is the home town of",
                "start": 0,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Greater Napanee is the home town of what people?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (S (NP (NNP Greater) (NNP Napanee)) (VP (VBZ is) (NP (NP (DT the) (NN home) (NN town)) (PP (IN of) (NP (NP (WP what)) (NP (NNS people)))))) (. ?)))",
        "id": 55
    },
    {
        "taggedQuestion": "What place did Edwin Adams die at, which gave birth to William A Purtell?",
        "entityMap": {},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "place",
                "containsRefer": false,
                "originStr": "place",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "did Edwin Adams die at",
                "containsRefer": false,
                "originStr": "did Edwin Adams die at",
                "start": 2,
                "entityID": 0,
                "end": 15,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "gave birth to William A Purtell",
                "containsRefer": false,
                "originStr": "gave birth to William A Purtell",
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What place did Edwin Adams die at, which gave birth to William A Purtell?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT What) (NN place)) (SQ (VBD did) (NP (NNP Edwin) (NNP Adams)) (VP (VBP die) (ADVP (IN at)) (, ,) (SBAR (WHNP (WDT which)) (S (VP (VBD gave) (NP (NN birth)) (PP (IN to) (NP (NNP William) (NNP A) (NNP Purtell)))))))) (. ?)))",
        "id": 56
    },
    {
        "taggedQuestion": "Name the nationalteam of <e0> .",
        "entityMap": {"<e0>": "Trn Vit Hng"},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "name",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the nationalteam of Trn Vit Hng",
                "containsRefer": false,
                "originStr": "the nationalteam of Trn Vit Hng",
                "start": 1,
                "entityID": 0,
                "end": 5,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Name the nationalteam of Trn Vit Hng .",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Name) (NP (NP (DT the) (NN nationalteam)) (PP (IN of) (NP (ADD <e0>))))) (. .)))",
        "id": 57
    },
    {
        "taggedQuestion": "Which designer of RENFE also owns Renaissance Center ?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "designer of RENFE",
                "containsRefer": false,
                "originStr": "designer of RENFE",
                "start": 1,
                "entityID": 0,
                "end": 4,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "also owns Renaissance Center",
                "containsRefer": false,
                "originStr": "also owns Renaissance Center",
                "start": 4,
                "entityID": 0,
                "end": 8,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which designer of RENFE also owns Renaissance Center ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WHNP (WDT Which) (NN designer)) (PP (IN of) (NP (NNP RENFE)))) (SQ (VP (ADVP (RB also)) (VBZ owns) (NP (NNP Renaissance) (NNP Center)))) (. ?)))",
        "id": 58
    },
    {
        "taggedQuestion": "Which uni did <e0> attend ?",
        "entityMap": {"<e0>": "Joshua A. Siegel"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "uni",
                "containsRefer": false,
                "originStr": "uni",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "did Joshua A. Siegel attend",
                "containsRefer": false,
                "originStr": "did Joshua A. Siegel attend",
                "start": 2,
                "entityID": 0,
                "end": 5,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which uni did Joshua A. Siegel attend ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NN uni)) (SQ (VP (VBD did) (NP (ADD <e0>)) (S (VP (VB attend))))) (. ?)))",
        "id": 59
    },
    {
        "taggedQuestion": "How many books are written by the author who is famous for Novelas Ejemplares?",
        "entityMap": {},
        "nodeNum": 7,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "How many",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are written by #entity1",
                "containsRefer": true,
                "originStr": "are written by #entity1",
                "start": 3,
                "entityID": 0,
                "end": 14,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "books",
                "containsRefer": false,
                "originStr": "books",
                "start": 2,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the author",
                "containsRefer": false,
                "originStr": "the author",
                "start": 6,
                "entityID": 1,
                "end": 8,
                "nodeType": 4,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is famous for Novelas Ejemplares",
                "containsRefer": false,
                "originStr": "is famous for Novelas Ejemplares",
                "start": 9,
                "entityID": 1,
                "end": 14,
                "nodeType": 3,
                "nodeID": 6,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "How many books are written by the author who is famous for Novelas Ejemplares?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 6,
                "from": 2,
                "end": 14,
                "to": 4
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 5
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 6
            }
        ],
        "syntaxTreeText": "(ROOT (SBAR (WHADJP (WRB How) (JJ many)) (S (NP (NNS books)) (VP (VBP are) (VP (VBN written) (PP (IN by) (NP (NP (DT the) (NN author)) (SBAR (WHNP (WP who)) (S (VP (VBZ is) (ADJP (JJ famous) (PP (IN for) (NP (NNP Novelas) (NNP Ejemplares)))))))))))) (. ?)))",
        "id": 60
    },
    {
        "taggedQuestion": "Name the rivers who originate from Essex.",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "name",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the rivers",
                "containsRefer": false,
                "originStr": "the rivers",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "originate from Essex",
                "containsRefer": false,
                "originStr": "originate from Essex",
                "start": 4,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Name the rivers who originate from Essex.",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Name) (NP (NP (DT the) (NNS rivers)) (SBAR (WHNP (WP who)) (S (VP (VB originate) (PP (IN from) (NP (NNP Essex)))))))) (. .)))",
        "id": 61
    },
    {
        "taggedQuestion": "Companies founded in Taiwan have typically which divisions?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "divisions",
                "containsRefer": false,
                "originStr": "divisions",
                "start": 7,
                "entityID": 0,
                "end": 9,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Companies founded in Taiwan have typically",
                "containsRefer": false,
                "originStr": "Companies founded in Taiwan have typically",
                "start": 0,
                "entityID": 0,
                "end": 6,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Companies founded in Taiwan have typically which divisions?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (S (NP (NP (NNS Companies)) (VP (VBN founded) (PP (IN in) (NP (NNP Taiwan))))) (VP (VBP have) (NP (UCP (ADVP (RB typically)) (NP (WDT which))) (NNS divisions))) (. ?)))",
        "id": 62
    },
    {
        "taggedQuestion": "Did <e0> in Sunrise (HIMYM)?",
        "entityMap": {"<e0>": "Timm Gunn guest"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "did",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "JUDGE"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Timm Gunn guest in Sunrise",
                "containsRefer": false,
                "originStr": "Timm Gunn guest in Sunrise",
                "start": 1,
                "entityID": 0,
                "end": 4,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "(HIMYM)",
                "containsRefer": false,
                "originStr": "(HIMYM)",
                "start": 4,
                "entityID": 0,
                "end": 7,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Did Timm Gunn guest in Sunrise (HIMYM)?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VBD Did) (NP (NP (ADD <e0>)) (PP (IN in) (NP (NNP Sunrise)))) (PRN (-LRB- -LRB-) (NP (NNP HIMYM)) (-RRB- -RRB-))) (. ?)))",
        "id": 63
    },
    {
        "taggedQuestion": "Which university did both, the Stanford Cardinal and Gerald Reaven go?",
        "entityMap": {},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "university",
                "containsRefer": false,
                "originStr": "university",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "did , the Stanford Cardinal",
                "containsRefer": false,
                "originStr": "did , the Stanford Cardinal",
                "start": 0,
                "entityID": 0,
                "end": 5,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Gerald Reaven go",
                "containsRefer": false,
                "originStr": "Gerald Reaven go",
                "start": 6,
                "entityID": 0,
                "end": 8,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which university did both, the Stanford Cardinal and Gerald Reaven go?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NN university)) (SQ (VBD did) (NP (NP (DT both)) (, ,) (NP (DT the) (NNP Stanford) (NNP Cardinal)) (CC and) (NP (NNP Gerald) (NNP Reaven))) (VP (VB go))) (. ?)))",
        "id": 64
    },
    {
        "taggedQuestion": "Name the nearest city to <e0> .",
        "entityMap": {"<e0>": "David W. Brown House"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "name",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the nearest city",
                "containsRefer": false,
                "originStr": "the nearest city",
                "start": 1,
                "entityID": 0,
                "end": 4,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "David W. Brown House",
                "containsRefer": false,
                "originStr": "David W. Brown House",
                "start": 5,
                "entityID": 0,
                "end": 6,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Name the nearest city to David W. Brown House .",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Name) (NP (DT the) (JJS nearest) (NN city)) (PP (TO to) (NP (ADD <e0>)))) (. .)))",
        "id": 65
    },
    {
        "taggedQuestion": "Where did Deion Sanders debut?",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "Where",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "did Deion Sanders debut",
                "containsRefer": false,
                "originStr": "did Deion Sanders debut",
                "start": 1,
                "entityID": 0,
                "end": 5,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Where did Deion Sanders debut?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHADVP (WRB Where)) (SQ (VBD did) (NP (NNP Deion) (NNP Sanders) (NN debut))) (. ?)))",
        "id": 66
    },
    {
        "taggedQuestion": "What cities are nearer to <e0>?",
        "entityMap": {"<e0>": "Fuountain Lake Farm"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "cities",
                "containsRefer": false,
                "originStr": "cities",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are nearer to Fuountain Lake Farm",
                "containsRefer": false,
                "originStr": "are nearer to Fuountain Lake Farm",
                "start": 2,
                "entityID": 0,
                "end": 6,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What cities are nearer to Fuountain Lake Farm?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT What) (NNS cities)) (SQ (VBP are) (PP (ADVP (RBR nearer)) (IN to) (NP (ADD <e0>)))) (. ?)))",
        "id": 67
    },
    {
        "taggedQuestion": "Who are the characters of Batman Live?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "who",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the characters of Batman",
                "containsRefer": false,
                "originStr": "the characters of Batman",
                "start": 2,
                "entityID": 0,
                "end": 6,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Live",
                "containsRefer": false,
                "originStr": "Live",
                "start": 6,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Who are the characters of Batman Live?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP Who)) (SQ (VBP are) (S (NP (NP (DT the) (NNS characters)) (PP (IN of) (NP (NNP Batman)))) (VP (VB Live)))) (. ?)))",
        "id": 68
    },
    {
        "taggedQuestion": "Which artists trained in <e0>?",
        "entityMap": {"<e0>": "San Francisco Art Institute"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "artists",
                "containsRefer": false,
                "originStr": "artists",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "trained in San Francisco Art Institute",
                "containsRefer": false,
                "originStr": "trained in San Francisco Art Institute",
                "start": 2,
                "entityID": 0,
                "end": 5,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which artists trained in San Francisco Art Institute?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NP (NNS artists))) (SQ (VP (VBN trained) (PP (IN in) (NP (NN <e0>))))) (. ?)))",
        "id": 69
    },
    {
        "taggedQuestion": "What is the owning organisation of the <e0> and also the builder of the Ford Y-block engine?",
        "entityMap": {
            "<e1>": "Ford Y - block engine",
            "<e0>": "Ford Kansas City Assembly Plant"
        },
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the owning organisation of the Ford Kansas City Assembly Plant",
                "containsRefer": false,
                "originStr": "is the owning organisation of the Ford Kansas City Assembly Plant",
                "start": 1,
                "entityID": 0,
                "end": 8,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the builder of the Ford Y-block engine",
                "containsRefer": false,
                "originStr": "the builder of the Ford Y-block engine",
                "start": 9,
                "entityID": 0,
                "end": 18,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is the owning organisation of the Ford Kansas City Assembly Plant and also the builder of the Ford Y-block engine?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (NP (DT the) (ADJP (VBG owning)) (NN organisation)) (PP (IN of) (NP (NP (DT the) (NN <e0>)) (CC and) (NP (ADVP (RB also)) (NP (DT the) (NN builder)) (PP (IN of) (NP (DT the) (NNP Ford) (NML (NN Y) (HYPH -) (NN block)) (NN engine)))))))) (. ?)))",
        "id": 70
    },
    {
        "taggedQuestion": "Name the country with currency as Aureus .",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "name",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the country",
                "containsRefer": false,
                "originStr": "the country",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "currency as Aureus",
                "containsRefer": false,
                "originStr": "currency as Aureus",
                "start": 4,
                "entityID": 0,
                "end": 7,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Name the country with currency as Aureus .",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Name) (NP (DT the) (NN country)) (PP (IN with) (NP (NP (NN currency)) (PP (IN as) (NP (NNP Aureus)))))) (. .)))",
        "id": 71
    },
    {
        "taggedQuestion": "What awards have been given to A. Peter Dewey?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "have been given to A. Peter Dewey",
                "containsRefer": false,
                "originStr": "have been given to A. Peter Dewey",
                "start": 2,
                "entityID": 0,
                "end": 9,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "awards",
                "containsRefer": false,
                "originStr": "awards",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What awards have been given to A. Peter Dewey?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBAR (WHNP (WDT What)) (S (NP (NNS awards)) (VP (VBP have) (VP (VBN been) (VP (VBN given) (PP (IN to) (NP (NNP A.) (NNP Peter) (NNP Dewey))))))) (. ?)))",
        "id": 72
    },
    {
        "taggedQuestion": "How many shows belong to the network one of whose sister station is Cartoonite?",
        "entityMap": {},
        "nodeNum": 8,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "How many",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "belong to #entity2",
                "containsRefer": true,
                "originStr": "belong to #entity2",
                "start": 3,
                "entityID": 0,
                "end": 14,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "shows",
                "containsRefer": false,
                "originStr": "shows",
                "start": 2,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "whose sister station is Cartoonite",
                "containsRefer": false,
                "originStr": "whose sister station is Cartoonite",
                "start": 12,
                "entityID": 1,
                "end": 14,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 2,
                "end": -1,
                "nodeType": 2,
                "nodeID": 6,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the network one of #entity1",
                "containsRefer": false,
                "originStr": "the network one of #entity1",
                "start": -1,
                "entityID": 2,
                "end": -1,
                "nodeType": 4,
                "nodeID": 7,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "How many shows belong to the network one of whose sister station is Cartoonite?",
        "entityNum": 3,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 9,
                "from": 2,
                "end": 14,
                "to": 4
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": -1,
                "from": 2,
                "end": -1,
                "to": 6
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 5,
                "info": "whose sister station"
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 6,
                "end": -1,
                "to": 7
            }
        ],
        "syntaxTreeText": "(ROOT (SBAR (WHADJP (WRB How) (JJ many)) (S (NP (NNS shows)) (VP (VBP belong) (PP (IN to) (NP (DT the) (NN network))) (NP (NP (CD one)) (PP (IN of) (SBAR (WHNP (WP$ whose) (NML (NN sister)) (NN station)) (S (VP (VBZ is) (NP (NNP Cartoonite))))))))) (. ?)))",
        "id": 73
    },
    {
        "taggedQuestion": "What has been developed by John Fanning?",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "has been developed by John Fanning",
                "containsRefer": false,
                "originStr": "has been developed by John Fanning",
                "start": 1,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What has been developed by John Fanning?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VP (VBZ has) (VP (VBN been) (VP (VBN developed) (PP (IN by) (NP (NNP John) (NNP Fanning))))))) (. ?)))",
        "id": 74
    },
    {
        "taggedQuestion": "Muhammad Yunus has won how many awards?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "how many",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "awards",
                "containsRefer": false,
                "originStr": "awards",
                "start": 5,
                "entityID": 0,
                "end": 8,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Muhammad Yunus has won",
                "containsRefer": false,
                "originStr": "Muhammad Yunus has won",
                "start": 0,
                "entityID": 0,
                "end": 4,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Muhammad Yunus has won how many awards?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (S (NP (NNP Muhammad) (NNP Yunus)) (VP (VBZ has) (VP (VBN won) (SBAR (WHADJP (WRB how) (JJ many)) (FRAG (NP (NNS awards)))))) (. ?)))",
        "id": 75
    },
    {
        "taggedQuestion": "List the associates of bands which have a label by Motown ?",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "list",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the associates of #entity1",
                "containsRefer": true,
                "originStr": "the associates of #entity1",
                "start": 1,
                "entityID": 0,
                "end": 11,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "bands",
                "containsRefer": false,
                "originStr": "bands",
                "start": 4,
                "entityID": 1,
                "end": 5,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "have a label by Motown",
                "containsRefer": false,
                "originStr": "have a label by Motown",
                "start": 6,
                "entityID": 1,
                "end": 11,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "List the associates of bands which have a label by Motown ?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 4,
                "from": 2,
                "end": 11,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (SQ (VP (VB List) (NP (NP (DT the) (NNS associates)) (PP (IN of) (NP (NP (NNS bands)) (SBAR (WHNP (WDT which)) (S (VP (VBP have) (NP (DT a) (NN label)) (PP (IN by) (NP (NNP Motown)))))))))) (. ?)))",
        "id": 76
    },
    {
        "taggedQuestion": "Who wrote the musical whose composer is <e0>?",
        "entityMap": {"<e0>": "Emil Dean Zoghby"},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "who",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "wrote #entity1",
                "containsRefer": true,
                "originStr": "wrote #entity1",
                "start": 1,
                "entityID": 0,
                "end": 8,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the musical",
                "containsRefer": false,
                "originStr": "the musical",
                "start": 2,
                "entityID": 1,
                "end": 4,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "whose composer is Emil Dean Zoghby",
                "containsRefer": false,
                "originStr": "whose composer is Emil Dean Zoghby",
                "start": 6,
                "entityID": 1,
                "end": 8,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Who wrote the musical whose composer is Emil Dean Zoghby?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 2,
                "from": 2,
                "end": 8,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5,
                "info": "whose composer"
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP Who)) (SQ (VP (VBD wrote) (NP (NP (DT the) (JJ musical)) (SBAR (WHNP (WP$ whose) (NN composer)) (S (VP (VBZ is) (NP (ADD <e0>)))))))) (. ?)))",
        "id": 77
    },
    {
        "taggedQuestion": "Count the units garrisoned at Arlington County, Virginia.",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "count",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the units garrisoned at Arlington County , Virginia",
                "containsRefer": false,
                "originStr": "the units garrisoned at Arlington County , Virginia",
                "start": 1,
                "entityID": 0,
                "end": 9,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Count the units garrisoned at Arlington County, Virginia.",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Count) (S (NP (DT the) (NNS units)) (VP (VBN garrisoned) (PP (IN at) (NP (NP (NNP Arlington) (NNP County)) (, ,) (NP (NNP Virginia))))))) (. .)))",
        "id": 78
    },
    {
        "taggedQuestion": "What is the faith of <e0> ?",
        "entityMap": {"<e0>": "Kwai Chang Caine"},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the faith of Kwai Chang Caine",
                "containsRefer": false,
                "originStr": "is the faith of Kwai Chang Caine",
                "start": 1,
                "entityID": 0,
                "end": 6,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is the faith of Kwai Chang Caine ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (NP (DT the) (NN faith)) (PP (IN of) (NP (NN <e0>))))) (. ?)))",
        "id": 79
    },
    {
        "taggedQuestion": "Who is  related to Kelly Osbourne & Ozzy Osbourne?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "who",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is related to Kelly Osbourne",
                "containsRefer": false,
                "originStr": "is related to Kelly Osbourne",
                "start": 1,
                "entityID": 0,
                "end": 6,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is related to Ozzy Osbourne",
                "containsRefer": false,
                "originStr": "is related to Ozzy Osbourne",
                "start": 7,
                "entityID": 0,
                "end": 8,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Who is  related to Kelly Osbourne & Ozzy Osbourne?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP Who)) (SQ (VBZ is) (VP (VBN related) (PP (IN to) (NP (NNP Kelly) (NNP Osbourne) (CC &) (NNP Ozzy) (NNP Osbourne))))) (. ?)))",
        "id": 80
    },
    {
        "taggedQuestion": "What are the houses of the legislature where the leader is called Pullaiahgaripalli ?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the houses of the legislature",
                "containsRefer": false,
                "originStr": "the houses of the legislature",
                "start": 2,
                "entityID": 0,
                "end": 7,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the leader is called Pullaiahgaripalli",
                "containsRefer": false,
                "originStr": "the leader is called Pullaiahgaripalli",
                "start": 8,
                "entityID": 0,
                "end": 13,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What are the houses of the legislature where the leader is called Pullaiahgaripalli ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBP are) (NP (NP (DT the) (NNS houses)) (PP (IN of) (NP (DT the) (NN legislature)))) (SBAR (WHADVP (WRB where)) (S (NP (DT the) (NN leader)) (VP (VBZ is) (VP (VBN called) (NP (NNP Pullaiahgaripalli))))))) (. ?)))",
        "id": 81
    },
    {
        "taggedQuestion": "Which serving railway line of the <e0> was also the place where 99 (2009 film) was recorded ?",
        "entityMap": {"<e0>": "Daund Junction railway station"},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "place",
                "containsRefer": false,
                "originStr": "place",
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "99(2009 film) was recorded",
                "containsRefer": false,
                "originStr": "99(2009 film) was recorded",
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "serving railway line of the Daund Junction railway station",
                "containsRefer": false,
                "originStr": "serving railway line of the Daund Junction railway station",
                "start": 1,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which serving railway line of the Daund Junction railway station was also the place where 99 (2009 film) was recorded ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBAR (WHNP (WDT Which)) (S (S (VP (VBG serving) (NP (NP (NN railway) (NN line)) (PP (IN of) (NP (DT the) (NN <e0>)))))) (VP (VBD was) (ADVP (RB also)) (NP (NP (DT the) (NN place)) (SBAR (WHADVP (WRB where)) (S (NP (NP (CD 99)) (-LRB- -LRB-) (NP (CD 2009) (NN film)) (-RRB- -RRB-)) (VP (VBD was) (VP (VBN recorded)))))))) (. ?)))",
        "id": 82
    },
    {
        "taggedQuestion": "List the ethnicity of Riley Reid?",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "list",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the ethnicity of Riley Reid",
                "containsRefer": false,
                "originStr": "the ethnicity of Riley Reid",
                "start": 1,
                "entityID": 0,
                "end": 6,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "List the ethnicity of Riley Reid?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SQ (VP (VB List) (NP (NP (DT the) (NN ethnicity)) (PP (IN of) (NP (NNP Riley) (NNP Reid))))) (. ?)))",
        "id": 83
    },
    {
        "taggedQuestion": "Which shows are from a company whose subsidiary is Viacom Productions?",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "shows are from #entity1",
                "containsRefer": true,
                "originStr": "shows are from #entity1",
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "company",
                "containsRefer": false,
                "originStr": "company",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "subsidiary is Viacom Productions",
                "containsRefer": false,
                "originStr": "subsidiary is Viacom Productions",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which shows are from a company whose subsidiary is Viacom Productions?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": -1,
                "from": 2,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (SBAR (WHNP (WDT Which)) (S (NP (NNS shows)) (VP (VBP are) (PP (IN from) (NP (DT a) (NN company)))))) (WHNP (WHNP (WP$ whose)) (NP (NN subsidiary))) (SQ (VBZ is) (NP (NNP Viacom) (NNPS Productions))) (. ?)))",
        "id": 84
    },
    {
        "taggedQuestion": "Giuseppe Bertello and Pietro Parolin are leaders of which place ?",
        "entityMap": {},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "place",
                "containsRefer": false,
                "originStr": "place",
                "start": 9,
                "entityID": 0,
                "end": 11,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Giuseppe Bertello are leaders of",
                "containsRefer": false,
                "originStr": "Giuseppe Bertello are leaders of",
                "start": 0,
                "entityID": 0,
                "end": 2,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Pietro Parolin are leaders of",
                "containsRefer": false,
                "originStr": "Pietro Parolin are leaders of",
                "start": 3,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Giuseppe Bertello and Pietro Parolin are leaders of which place ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (S (NP (NP (NNP Giuseppe) (NNP Bertello)) (CC and) (NP (NNP Pietro) (NNP Parolin))) (VP (VBP are) (NP (NP (NNS leaders)) (PP (IN of) (NP (WDT which) (NN place))))) (. ?)))",
        "id": 85
    },
    {
        "taggedQuestion": "What is the university whose campus is Mount Moosilauke?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the university",
                "containsRefer": false,
                "originStr": "the university",
                "start": 2,
                "entityID": 0,
                "end": 4,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "whose campus is Mount Moosilauke",
                "containsRefer": false,
                "originStr": "whose campus is Mount Moosilauke",
                "start": 6,
                "entityID": 0,
                "end": 9,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is the university whose campus is Mount Moosilauke?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3,
                "info": "whose campus"
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (NP (DT the) (NN university)) (SBAR (WHNP (WP$ whose) (NN campus)) (S (VP (VBZ is) (NP (NNP Mount) (NNP Moosilauke))))))) (. ?)))",
        "id": 86
    },
    {
        "taggedQuestion": "How many religions are followed by the group whose architectural style is  seen on Sanggar Agung?",
        "entityMap": {},
        "nodeNum": 7,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "how many",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "religions",
                "containsRefer": false,
                "originStr": "religions",
                "start": 2,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are followed by #entity1",
                "containsRefer": true,
                "originStr": "are followed by #entity1",
                "start": 3,
                "entityID": 0,
                "end": 16,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the group",
                "containsRefer": false,
                "originStr": "the group",
                "start": 6,
                "entityID": 1,
                "end": 8,
                "nodeType": 4,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            },
            {
                "str": "whose architectural style is seen on Sanggar Agung",
                "containsRefer": false,
                "originStr": "whose architectural style is seen on Sanggar Agung",
                "start": 11,
                "entityID": 1,
                "end": 16,
                "nodeType": 3,
                "nodeID": 6,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "How many religions are followed by the group whose architectural style is  seen on Sanggar Agung?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 6,
                "from": 3,
                "end": 16,
                "to": 4
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 5
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 6,
                "info": "whose architectural style"
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WHADJP (WRB How) (JJ many)) (NNS religions)) (SQ (VBP are) (VP (VBN followed) (PP (IN by) (NP (NP (DT the) (NN group)) (SBAR (WHNP (WP$ whose) (NML (JJ architectural) (NN style))) (S (VP (VBZ is) (VP (VBN seen) (PP (IN on) (NP (NNP Sanggar) (NNP Agung))))))))))) (. ?)))",
        "id": 87
    },
    {
        "taggedQuestion": "How many things are written in C++?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "how many",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "things",
                "containsRefer": false,
                "originStr": "things",
                "start": 2,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are written in C++",
                "containsRefer": false,
                "originStr": "are written in C++",
                "start": 3,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "How many things are written in C++?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WHADJP (WRB How) (JJ many)) (NNS things)) (SQ (VBP are) (VP (VBN written) (PP (IN in) (NP (NNP C++))))) (. ?)))",
        "id": 88
    },
    {
        "taggedQuestion": "Name the garrison of the <e1> and line of the <e0> .",
        "entityMap": {
            "<e1>": "Western Naval Command",
            "<e0>": "Vadodara Junction railway station"
        },
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "name",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the garrison of the Western Naval Command",
                "containsRefer": false,
                "originStr": "the garrison of the Western Naval Command",
                "start": 1,
                "entityID": 0,
                "end": 6,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "line of the Vadodara Junction railway station",
                "containsRefer": false,
                "originStr": "line of the Vadodara Junction railway station",
                "start": 7,
                "entityID": 0,
                "end": 10,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Name the garrison of the Western Naval Command and line of the Vadodara Junction railway station .",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Name) (NP (NP (DT the) (NN garrison)) (PP (IN of) (NP (NP (DT the) (NN <e1>) (CC and) (NN line)) (PP (IN of) (NP (DT the) (NN <e0>))))))) (. .)))",
        "id": 89
    },
    {
        "taggedQuestion": "Who are the shareholder of the soccer club for whom Steve Holland plays?",
        "entityMap": {},
        "nodeNum": 7,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "who",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are the shareholder of #entity1",
                "containsRefer": true,
                "originStr": "are the shareholder of #entity1",
                "start": 1,
                "entityID": 0,
                "end": 13,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the soccer club for #entity2",
                "containsRefer": true,
                "originStr": "the soccer club for #entity2",
                "start": 5,
                "entityID": 1,
                "end": 13,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 2,
                "end": -1,
                "nodeType": 2,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            },
            {
                "str": "whom Steve Holland plays",
                "containsRefer": false,
                "originStr": "whom Steve Holland plays",
                "start": 10,
                "entityID": 2,
                "end": 13,
                "nodeType": 3,
                "nodeID": 6,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Who are the shareholder of the soccer club for whom Steve Holland plays?",
        "entityNum": 3,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 5,
                "from": 2,
                "end": 13,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 9,
                "from": 4,
                "end": 13,
                "to": 5
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 5,
                "end": -1,
                "to": 6
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP Who)) (SQ (VBP are) (NP (NP (DT the) (NN shareholder)) (PP (IN of) (NP (NP (DT the) (NN soccer) (NN club)) (PP (IN for) (SBAR (WHNP (WP whom)) (S (NP (NNP Steve) (NNP Holland)) (VP (VBZ plays))))))))) (. ?)))",
        "id": 90
    },
    {
        "taggedQuestion": "Which city located on Mediterranean Sea is also the stadium of Panionios G.S.S. season ?",
        "entityMap": {"<e0>": "Panionios G.S. S. season"},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "city",
                "containsRefer": false,
                "originStr": "city",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the stadium of Panionios G.S.S. season",
                "containsRefer": false,
                "originStr": "the stadium of Panionios G.S.S. season",
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "located on Mediterranean Sea",
                "containsRefer": false,
                "originStr": "located on Mediterranean Sea",
                "start": 2,
                "entityID": 0,
                "end": 6,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which city located on Mediterranean Sea is also the stadium of Panionios G.S.S. season ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NN city)) (SQ (VP (VBN located) (PP (IN on) (NP (NP (NNP Mediterranean) (NNP Sea)) (SBAR (S (VP (VBZ is) (ADVP (RB also)) (NP (NP (DT the) (NN stadium)) (PP (IN of) (NP (NNP Panionios) (NNP G.S.S.)))) (NP-TMP (NN season))))))))) (. ?)))",
        "id": 91
    },
    {
        "taggedQuestion": "Was Don't Bring Me Down recorded in West Germany?",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "was",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "JUDGE"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Do n't Bring Me Down recorded in West Germany",
                "containsRefer": false,
                "originStr": "Do n't Bring Me Down recorded in West Germany",
                "start": 1,
                "entityID": 0,
                "end": 10,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Was Don't Bring Me Down recorded in West Germany?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SQ (VBD Was) (S (S (VP (VB Do) (RB n't) (VP (VB Bring)))) (S (NP (PRP Me)) (PP (IN Down) (S (VP (VBN recorded) (PP (IN in) (NP (NNP West) (NNP Germany)))))))) (. ?)))",
        "id": 92
    },
    {
        "taggedQuestion": "Which cities do the rivers starting at the <e0> flow?",
        "entityMap": {"<e0>": "Montauk State Park"},
        "nodeNum": 7,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "cities",
                "containsRefer": false,
                "originStr": "cities",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "do #entity1 flow",
                "containsRefer": true,
                "originStr": "do #entity1 flow",
                "start": 2,
                "entityID": 0,
                "end": 10,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the rivers",
                "containsRefer": false,
                "originStr": "the rivers",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 4,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            },
            {
                "str": "starting at the Montauk State Park",
                "containsRefer": false,
                "originStr": "starting at the Montauk State Park",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 3,
                "nodeID": 6,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which cities do the rivers starting at the Montauk State Park flow?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 5
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 6
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NNS cities)) (SQ (VP (VBP do) (NP (DT the) (NNS rivers)) (PP (VBG starting) (PP (IN at) (NP (DT the) (NN <e0>) (NN flow)))))) (. ?)))",
        "id": 93
    },
    {
        "taggedQuestion": "How many ideologies do the political party of Boonchu Rojanastien hold?",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "how many",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "ideologies",
                "containsRefer": false,
                "originStr": "ideologies",
                "start": 2,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "do#entity1 hold",
                "containsRefer": true,
                "originStr": "do#entity1 hold",
                "start": 3,
                "entityID": 0,
                "end": 11,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the political party of Boonchu Rojanastien",
                "containsRefer": false,
                "originStr": "the political party of Boonchu Rojanastien",
                "start": 4,
                "entityID": 1,
                "end": 10,
                "nodeType": 4,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "How many ideologies do the political party of Boonchu Rojanastien hold?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 4,
                "from": 3,
                "end": 10,
                "to": 4
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WHADJP (WRB How) (JJ many)) (NNS ideologies)) (SQ (VBP do) (NP (NP (DT the) (JJ political) (NN party)) (PP (IN of) (NP (NNP Boonchu) (NNP Rojanastien)))) (VP (VB hold))) (. ?)))",
        "id": 94
    },
    {
        "taggedQuestion": "What are the hubs of <e0>, a <e1> of PLUS Expressways?",
        "entityMap": {
            "<e1>": "highway helicopter unit",
            "<e0>": "PLUS Helicopter Services"
        },
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are #entity1 , a highway helicopter unit of PLUS Expressways",
                "containsRefer": true,
                "originStr": "are #entity1 , a highway helicopter unit of PLUS Expressways",
                "start": 1,
                "entityID": 0,
                "end": 12,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the hubs of PLUS Helicopter Services",
                "containsRefer": false,
                "originStr": "the hubs of PLUS Helicopter Services",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What are the hubs of PLUS Helicopter Services, a highway helicopter unit of PLUS Expressways?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": -1,
                "from": 2,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBP are) (NP (NP (DT the) (NNS hubs)) (PP (IN of) (NP (NP (ADD <e0>)) (, ,) (NP (NP (DT a) (NN <e1>)) (PP (IN of) (NP (NNP PLUS) (NNPS Expressways)))))))) (. ?)))",
        "id": 95
    },
    {
        "taggedQuestion": "Name the movies for which music was given by  Geoffrey Burgon and distributed by  <e0>.",
        "entityMap": {"<e0>": "Cinema International Corporation"},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "name",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the movies",
                "containsRefer": false,
                "originStr": "the movies",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "given by Geoffrey Burgon",
                "containsRefer": false,
                "originStr": "given by Geoffrey Burgon",
                "start": 0,
                "entityID": 0,
                "end": 6,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "distributed by Cinema International Corporation",
                "containsRefer": false,
                "originStr": "distributed by Cinema International Corporation",
                "start": 7,
                "entityID": 0,
                "end": 9,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Name the movies for which music was given by  Geoffrey Burgon and distributed by  Cinema International Corporation.",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Name) (NP (NP (DT the) (NNS movies)) (SBAR (WHPP (IN for) (WHNP (WDT which))) (S (NP (NN music)) (VP (VBD was) (VP (VP (VBN given) (PP (IN by) (NP (NNP Geoffrey) (NNP Burgon)))) (CC and) (VP (VBN distributed) (PP (IN by) (NP (ADD <e0>)))))))))) (. .)))",
        "id": 96
    },
    {
        "taggedQuestion": "Is <e0> interested in Politics?",
        "entityMap": {"<e0>": "Henry David Thoreau"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "is",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "JUDGE"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Henry David Thoreau",
                "containsRefer": false,
                "originStr": "Henry David Thoreau",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "interested in Politics",
                "containsRefer": false,
                "originStr": "interested in Politics",
                "start": 2,
                "entityID": 0,
                "end": 4,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Is Henry David Thoreau interested in Politics?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SQ (VBZ Is) (NP (NN <e0>)) (ADJP (JJ interested) (PP (IN in) (NP (NNS Politics)))) (. ?)))",
        "id": 97
    },
    {
        "taggedQuestion": "Among the companies who has product named Chinook who has a key person as Dennis Muilenburg ?",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Among #entity1",
                "containsRefer": true,
                "originStr": "Among #entity1",
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "companies who has product named Chinook",
                "containsRefer": false,
                "originStr": "companies who has product named Chinook",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "has a key person as Dennis Muilenburg",
                "containsRefer": false,
                "originStr": "has a key person as Dennis Muilenburg",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Among the companies who has product named Chinook who has a key person as Dennis Muilenburg ?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": -1,
                "from": 2,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (PP (IN Among) (NP (DT the) (NNS companies))) (WHNP (WP who)) (SQ (VBZ has) (NP (NN product)) (VP (VBN named) (NP (NP (NNP Chinook)) (SBAR (WHNP (WP who)) (S (VP (VBZ has) (NP (NP (DT a) (JJ key) (NN person)) (PP (IN as) (NP (NNP Dennis) (NNP Muilenburg)))))))))) (. ?)))",
        "id": 98
    },
    {
        "taggedQuestion": "Which country's leader  is Giuseppe Bertello?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "country",
                "containsRefer": false,
                "originStr": "country",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "leader is Giuseppe Bertello",
                "containsRefer": false,
                "originStr": "leader is Giuseppe Bertello",
                "start": 3,
                "entityID": 0,
                "end": 8,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which country's leader  is Giuseppe Bertello?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WHNP (WDT Which) (NN country) (POS 's)) (NN leader)) (SQ (VBZ is) (NP (NNP Giuseppe) (NNP Bertello))) (. ?)))",
        "id": 99
    },
    {
        "taggedQuestion": "Who wrote the subsequent work of <e0> ?",
        "entityMap": {"<e0>": "One Day at a Time (Em's Version)"},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "who",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "wrote #entity1",
                "containsRefer": true,
                "originStr": "wrote #entity1",
                "start": 1,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the subsequent work of One Day at a Time(Em's Version)",
                "containsRefer": false,
                "originStr": "the subsequent work of One Day at a Time(Em's Version)",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Who wrote the subsequent work of One Day at a Time (Em's Version) ?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": -1,
                "from": 2,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP Who)) (SQ (VP (VBD wrote) (NP (NP (DT the) (JJ subsequent) (NN work)) (PP (IN of) (NP (NN <e0>)))))) (. ?)))",
        "id": 100
    },
    {
        "taggedQuestion": "Name the TV shows with network as NBC and company as Paramount Television .",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "name",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "network as NBC",
                "containsRefer": false,
                "originStr": "network as NBC",
                "start": 1,
                "entityID": 0,
                "end": 8,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "company as Paramount Television",
                "containsRefer": false,
                "originStr": "company as Paramount Television",
                "start": 9,
                "entityID": 0,
                "end": 12,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Name the TV shows with network as NBC and company as Paramount Television .",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Name) (S (NP (DT the) (NN TV)) (VP (VBZ shows) (PP (IN with) (NP (NP (NP (NN network)) (PP (IN as) (NP (NNP NBC)))) (CC and) (NP (NP (NN company)) (PP (IN as) (NP (NNP Paramount) (NNP Television))))))))) (. .)))",
        "id": 101
    },
    {
        "taggedQuestion": "Name the fictional character whose voice's animator is Hardie Gramatky.",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "name",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the fictional character",
                "containsRefer": false,
                "originStr": "the fictional character",
                "start": 1,
                "entityID": 0,
                "end": 4,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "voice is #entity1",
                "containsRefer": true,
                "originStr": "voice is #entity1",
                "start": 4,
                "entityID": 0,
                "end": 11,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "animator is Hardie Gramatky",
                "containsRefer": false,
                "originStr": "animator is Hardie Gramatky",
                "start": 7,
                "entityID": 1,
                "end": 11,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Name the fictional character whose voice's animator is Hardie Gramatky.",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 7,
                "from": 3,
                "end": 11,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Name) (NP (DT the) (JJ fictional) (NN character)) (SBARQ (WHNP (WHNP (WP$ whose) (NN voice) (POS 's)) (NN animator)) (SQ (VBZ is) (NP (NNP Hardie) (NNP Gramatky))))) (. .)))",
        "id": 102
    },
    {
        "taggedQuestion": "Which license provider of MSX basic is also the designer of <e0> ?",
        "entityMap": {"<e0>": "Language Integrated Query"},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "license provider of MSX basic",
                "containsRefer": false,
                "originStr": "license provider of MSX basic",
                "start": 1,
                "entityID": 0,
                "end": 6,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the designer of Language Integrated Query",
                "containsRefer": false,
                "originStr": "the designer of Language Integrated Query",
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "",
                "containsRefer": false,
                "originStr": "",
                "start": 6,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which license provider of MSX basic is also the designer of Language Integrated Query ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NP (NP (NN license) (NN provider)) (PP (IN of) (NP (NNP MSX) (JJ basic))))) (SQ (VBZ is) (ADVP (RB also)) (NP (NP (DT the) (NN designer)) (PP (IN of) (NP (NN <e0>))))) (. ?)))",
        "id": 103
    },
    {
        "taggedQuestion": "Who are the architect of the stadium whose one of the architect is <e0> ?",
        "entityMap": {"<e0>": "louis D. Astorino"},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "who",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are the architect of #entity1",
                "containsRefer": true,
                "originStr": "are the architect of #entity1",
                "start": 1,
                "entityID": 0,
                "end": 14,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the stadium",
                "containsRefer": false,
                "originStr": "the stadium",
                "start": 5,
                "entityID": 1,
                "end": 7,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "whose one of the architect is louis D. Astorino",
                "containsRefer": false,
                "originStr": "whose one of the architect is louis D. Astorino",
                "start": 12,
                "entityID": 1,
                "end": 14,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Who are the architect of the stadium whose one of the architect is louis D. Astorino ?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 5,
                "from": 2,
                "end": 14,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5,
                "info": "whose one of the architect"
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP Who)) (SQ (VBP are) (NP (NP (DT the) (NN architect)) (PP (IN of) (NP (NP (DT the) (NN stadium)) (SBAR (WHNP (WHNP (WP$ whose) (NN one)) (PP (IN of) (NP (DT the) (NN architect)))) (S (VP (VBZ is) (NP (ADD <e0>))))))))) (. ?)))",
        "id": 104
    },
    {
        "taggedQuestion": "Who are the astronauts associated with NASA?",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "who",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are the astronauts associated with NASA",
                "containsRefer": false,
                "originStr": "are the astronauts associated with NASA",
                "start": 1,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Who are the astronauts associated with NASA?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP Who)) (SQ (VBP are) (NP (DT the) (NNS astronauts)) (VP (VBN associated) (PP (IN with) (NP (NNP NASA))))) (. ?)))",
        "id": 105
    },
    {
        "taggedQuestion": "What is a common ingredient used in boyt Blodpalt and Kaszanka ?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is a common ingredient used in boyt Blodpalt",
                "containsRefer": false,
                "originStr": "is a common ingredient used in boyt Blodpalt",
                "start": 1,
                "entityID": 0,
                "end": 9,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is a common ingredient used in Kaszanka",
                "containsRefer": false,
                "originStr": "is a common ingredient used in Kaszanka",
                "start": 10,
                "entityID": 0,
                "end": 10,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is a common ingredient used in boyt Blodpalt and Kaszanka ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (DT a) (JJ common) (NN ingredient)) (VP (VBN used) (PP (IN in) (NP (NP (NN boyt) (NN Blodpalt)) (CC and) (NP (NNP Kaszanka)))))) (. ?)))",
        "id": 106
    },
    {
        "taggedQuestion": "Who is the partner of Rob Patterson?",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "who",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the partner of Rob Patterson",
                "containsRefer": false,
                "originStr": "is the partner of Rob Patterson",
                "start": 1,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Who is the partner of Rob Patterson?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP Who)) (SQ (VBZ is) (NP (NP (DT the) (NN partner)) (PP (IN of) (NP (NNP Rob) (NNP Patterson))))) (. ?)))",
        "id": 107
    },
    {
        "taggedQuestion": "How many politicians are there from the city of Ganges?",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "How many",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are there from #entity1",
                "containsRefer": true,
                "originStr": "are there from #entity1",
                "start": 3,
                "entityID": 0,
                "end": 10,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "politicians",
                "containsRefer": false,
                "originStr": "politicians",
                "start": 2,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the city of Ganges",
                "containsRefer": false,
                "originStr": "the city of Ganges",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 4,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "How many politicians are there from the city of Ganges?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": -1,
                "from": 2,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (SBAR (WHADJP (WRB How) (JJ many)) (S (NP (NNS politicians)) (VP (VBP are) (ADVP (RB there)) (PP (IN from) (NP (NP (DT the) (NN city)) (PP (IN of) (NP (NNS Ganges))))))) (. ?)))",
        "id": 108
    },
    {
        "taggedQuestion": "Which american football teams does the Heinz Field serve as home stadium?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "american football teams",
                "containsRefer": false,
                "originStr": "american football teams",
                "start": 1,
                "entityID": 0,
                "end": 4,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "does the Heinz Field serve as home stadium",
                "containsRefer": false,
                "originStr": "does the Heinz Field serve as home stadium",
                "start": 4,
                "entityID": 0,
                "end": 12,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which american football teams does the Heinz Field serve as home stadium?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (JJ american) (NN football) (NNS teams)) (SQ (VBZ does) (NP (DT the) (NNP Heinz) (NNP Field)) (VP (VB serve) (PP (IN as) (NP (NN home) (NN stadium))))) (. ?)))",
        "id": 109
    },
    {
        "taggedQuestion": "Which architect of the <e0> is the branch of the <e1>?",
        "entityMap": {
            "<e1>": "Burnet R. Maybank",
            "<e0>": "Marine Corps Air Station Kaneohe Bay"
        },
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "architect of the Marine Corps Air Station Kaneohe Bay",
                "containsRefer": false,
                "originStr": "architect of the Marine Corps Air Station Kaneohe Bay",
                "start": 1,
                "entityID": 0,
                "end": 5,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the branch of the Burnet R. Maybank",
                "containsRefer": false,
                "originStr": "is the branch of the Burnet R. Maybank",
                "start": 5,
                "entityID": 0,
                "end": 11,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which architect of the Marine Corps Air Station Kaneohe Bay is the branch of the Burnet R. Maybank?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NP (NN architect) (PP (IN of) (NP (DT the) (NN <e0>))))) (SQ (VBZ is) (NP (NP (DT the) (NN branch)) (PP (IN of) (NP (DT the) (NN <e1>))))) (. ?)))",
        "id": 110
    },
    {
        "taggedQuestion": "Which movies's screenplay is written by Akiva Goldsman?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "movies",
                "containsRefer": false,
                "originStr": "movies",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "screenplay is written by Akiva Goldsman",
                "containsRefer": false,
                "originStr": "screenplay is written by Akiva Goldsman",
                "start": 3,
                "entityID": 0,
                "end": 9,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which movies's screenplay is written by Akiva Goldsman?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NP (NNS movies) (POS 's)) (NN screenplay)) (SQ (VBZ is) (VP (VBN written) (PP (IN by) (NP (NNP Akiva) (NNP Goldsman))))) (. ?)))",
        "id": 111
    },
    {
        "taggedQuestion": "How many TV shows are similar to the ones belonging to fantasy genre?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "How many",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are similar to the ones belonging to fantasy genre",
                "containsRefer": false,
                "originStr": "are similar to the ones belonging to fantasy genre",
                "start": 4,
                "entityID": 0,
                "end": 13,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "TV shows",
                "containsRefer": false,
                "originStr": "TV shows",
                "start": 2,
                "entityID": 0,
                "end": 4,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "How many TV shows are similar to the ones belonging to fantasy genre?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBAR (WHADJP (WRB How) (JJ many)) (S (NP (NN TV) (NNS shows)) (VP (VBP are) (ADJP (JJ similar) (PP (IN to) (NP (NP (DT the) (NNS ones)) (VP (VBG belonging) (PP (IN to) (NP (NN fantasy) (NN genre))))))))) (. ?)))",
        "id": 112
    },
    {
        "taggedQuestion": "Give me all commanders which had an important role in both, the <e1> and <e0>.",
        "entityMap": {
            "<e1>": "Battle of Fort Stephenson",
            "<e0>": "Battle of the Thames"
        },
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "give me",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "all commanders",
                "containsRefer": false,
                "originStr": "all commanders",
                "start": 2,
                "entityID": 0,
                "end": 4,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "had an important role in , the Battle of Fort Stephenson",
                "containsRefer": false,
                "originStr": "had an important role in , the Battle of Fort Stephenson",
                "start": 0,
                "entityID": 0,
                "end": 8,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "had an important role in , Battle of the Thames",
                "containsRefer": false,
                "originStr": "had an important role in , Battle of the Thames",
                "start": 9,
                "entityID": 0,
                "end": 9,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Give me all commanders which had an important role in both, the Battle of Fort Stephenson and Battle of the Thames.",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Give) (NP (PRP me)) (NP (NP (DT all) (NNS commanders)) (SBAR (WHNP (WDT which)) (S (VP (VBD had) (NP (NP (DT an) (JJ important) (NN role)) (PP (IN in) (NP (NP (CC both)) (, ,) (NP (DT the) (NN <e1>)) (CC and) (NP (ADD <e0>)))))))))) (. .)))",
        "id": 113
    },
    {
        "taggedQuestion": "How many developers were involved in creating games whose score is composed by Gerard Marino?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "How many",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "were involved in creating games whose score is composed by Gerard Marino",
                "containsRefer": false,
                "originStr": "were involved in creating games whose score is composed by Gerard Marino",
                "start": 3,
                "entityID": 0,
                "end": 15,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "developers",
                "containsRefer": false,
                "originStr": "developers",
                "start": 2,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "How many developers were involved in creating games whose score is composed by Gerard Marino?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBAR (WHADJP (WRB How) (JJ many)) (S (NP (NNS developers)) (VP (VBD were) (VP (VBN involved) (PP (IN in) (S (VP (VBG creating) (NP (NP (NNS games)) (SBAR (WHNP (WP$ whose) (NML (NN score))) (S (VP (VBZ is) (VP (VBN composed) (PP (IN by) (NP (NNP Gerard) (NNP Marino)))))))))))))) (. ?)))",
        "id": 114
    },
    {
        "taggedQuestion": "Which sea is surrounded by Rostock and Kaliningrad?",
        "entityMap": {},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "sea",
                "containsRefer": false,
                "originStr": "sea",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is surrounded by Rostock",
                "containsRefer": false,
                "originStr": "is surrounded by Rostock",
                "start": 2,
                "entityID": 0,
                "end": 6,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is surrounded by Kaliningrad",
                "containsRefer": false,
                "originStr": "is surrounded by Kaliningrad",
                "start": 7,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which sea is surrounded by Rostock and Kaliningrad?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NN sea)) (SQ (VBZ is) (VP (VBN surrounded) (PP (IN by) (NP (NNP Rostock) (CC and) (NNP Kaliningrad))))) (. ?)))",
        "id": 115
    },
    {
        "taggedQuestion": "Which <e0>'s developer is Brian Graden and voices to the character is by Isaac Hayes?",
        "entityMap": {
            "<e1>": "Brian Graden voices",
            "<e0>": "television show"
        },
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "television show",
                "containsRefer": false,
                "originStr": "television show",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "developer is Brian Graden and voices to #entity1",
                "containsRefer": true,
                "originStr": "developer is Brian Graden and voices to #entity1",
                "start": 4,
                "entityID": 0,
                "end": 17,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the character is by Isaac Hayes",
                "containsRefer": false,
                "originStr": "the character is by Isaac Hayes",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 4,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which television show's developer is Brian Graden and voices to the character is by Isaac Hayes?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (S (SBAR (WHNP (WDT Which)) (S (NP (NP (NN <e0>) (POS 's)) (NN developer)) (VP (VBZ is) (NP (NP (NNP Brian) (NNP Graden)) (CC and) (NP (NP (NNS voices)) (PP (IN to) (NP (DT the) (NN character)))))))) (VP (VBZ is) (PP (IN by) (NP (NNP Isaac) (NNP Hayes)))) (. ?)))",
        "id": 116
    },
    {
        "taggedQuestion": "How did the child of <e0> die?",
        "entityMap": {"<e0>": "Stevens T. Mason"},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "How",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "EXTENT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "did #entity1 die",
                "containsRefer": true,
                "originStr": "did #entity1 die",
                "start": 1,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the child of Stevens T. Mason",
                "containsRefer": false,
                "originStr": "the child of Stevens T. Mason",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "How did the child of Stevens T. Mason die?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": -1,
                "from": 2,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHADVP (WRB How)) (SQ (VBD did) (NP (NP (DT the) (NN child)) (PP (IN of) (NP (ADD <e0>)))) (VP (VB die))) (. ?)))",
        "id": 117
    },
    {
        "taggedQuestion": "Does the <e0> serve the Inland Empire?",
        "entityMap": {"<e0>": "Ontario International Airport"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "does",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "JUDGE"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the Ontario International Airport",
                "containsRefer": false,
                "originStr": "the Ontario International Airport",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "serve the Inland Empire",
                "containsRefer": false,
                "originStr": "serve the Inland Empire",
                "start": 3,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Does the Ontario International Airport serve the Inland Empire?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SQ (VBZ Does) (NP (DT the) (NN <e0>)) (VP (VB serve) (NP (DT the) (NNP Inland) (NNP Empire))) (. ?)))",
        "id": 118
    },
    {
        "taggedQuestion": "Is semnani one of the languages spoken in Iran?",
        "entityMap": {},
        "nodeNum": 7,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "is",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "JUDGE"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "semnani",
                "containsRefer": false,
                "originStr": "semnani",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "one of #entity1",
                "containsRefer": true,
                "originStr": "one of #entity1",
                "start": 2,
                "entityID": 0,
                "end": 9,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the languages",
                "containsRefer": false,
                "originStr": "the languages",
                "start": 4,
                "entityID": 1,
                "end": 6,
                "nodeType": 4,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            },
            {
                "str": "spoken in Iran",
                "containsRefer": false,
                "originStr": "spoken in Iran",
                "start": 6,
                "entityID": 1,
                "end": 9,
                "nodeType": 3,
                "nodeID": 6,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Is semnani one of the languages spoken in Iran?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 4,
                "from": 3,
                "end": 9,
                "to": 4
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 5
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 6
            }
        ],
        "syntaxTreeText": "(ROOT (SQ (VBZ Is) (NP (NN semnani)) (NP (NP (CD one)) (PP (IN of) (NP (NP (DT the) (NNS languages)) (VP (VBN spoken) (PP (IN in) (NP (NNP Iran))))))) (. ?)))",
        "id": 119
    },
    {
        "taggedQuestion": "What is the nickname of the home stadium of Angels Toru?",
        "entityMap": {},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the nickname of #entity1",
                "containsRefer": true,
                "originStr": "is the nickname of #entity1",
                "start": 1,
                "entityID": 0,
                "end": 11,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the home stadium of Angels Toru",
                "containsRefer": false,
                "originStr": "the home stadium of Angels Toru",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is the nickname of the home stadium of Angels Toru?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": -1,
                "from": 2,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (NP (DT the) (NN nickname)) (PP (IN of) (NP (NP (DT the) (NN home) (NN stadium)) (PP (IN of) (NP (NNPS Angels) (NNP Toru))))))) (. ?)))",
        "id": 120
    },
    {
        "taggedQuestion": "What is the <e0> whose executive producer is Douglas Netter?",
        "entityMap": {"<e0>": "television show"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the television show",
                "containsRefer": false,
                "originStr": "the television show",
                "start": 2,
                "entityID": 0,
                "end": 4,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "whose executive producer is Douglas Netter",
                "containsRefer": false,
                "originStr": "whose executive producer is Douglas Netter",
                "start": 7,
                "entityID": 0,
                "end": 10,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is the television show whose executive producer is Douglas Netter?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3,
                "info": "whose executive producer"
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (NP (DT the) (NN <e0>)) (SBAR (WHNP (WP$ whose) (NML (JJ executive) (NN producer))) (S (VP (VBZ is) (NP (NNP Douglas) (NNP Netter))))))) (. ?)))",
        "id": 121
    },
    {
        "taggedQuestion": "List out the people who are related to the relatives of Jared Kushner ?",
        "entityMap": {},
        "nodeNum": 7,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "list",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "out",
                "containsRefer": false,
                "originStr": "out",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the people",
                "containsRefer": false,
                "originStr": "the people",
                "start": 2,
                "entityID": 0,
                "end": 4,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are related to #entity1",
                "containsRefer": true,
                "originStr": "are related to #entity1",
                "start": 5,
                "entityID": 0,
                "end": 13,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the relatives of Jared Kushner",
                "containsRefer": false,
                "originStr": "the relatives of Jared Kushner",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 4,
                "nodeID": 6,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "List out the people who are related to the relatives of Jared Kushner ?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 5
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 5,
                "end": -1,
                "to": 6
            }
        ],
        "syntaxTreeText": "(ROOT (SQ (VP (VB List) (PRT (RP out)) (NP (NP (DT the) (NNS people)) (SBAR (WHNP (WP who)) (S (VP (VBP are) (VP (VBN related) (PP (IN to) (NP (NP (DT the) (NNS relatives)) (PP (IN of) (NP (NNP Jared) (NNP Kushner))))))))))) (. ?)))",
        "id": 122
    },
    {
        "taggedQuestion": "List all the doctoral student of the scientist who has advised john Bowlby ?",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "list",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "all the doctoral student of #entity1",
                "containsRefer": true,
                "originStr": "all the doctoral student of #entity1",
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "scientist",
                "containsRefer": false,
                "originStr": "scientist",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "has advised john Bowlby",
                "containsRefer": false,
                "originStr": "has advised john Bowlby",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "List all the doctoral student of the scientist who has advised john Bowlby ?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": -1,
                "from": 2,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (FRAG (NP (NN List)) (NP (NP (NP (PDT all) (DT the) (JJ doctoral) (NN student)) (PP (IN of) (NP (DT the) (NN scientist)))) (SBAR (WHNP (WP who)) (S (VP (VBZ has) (VP (VBN advised) (NP (NNP john) (NNP Bowlby))))))) (. ?)))",
        "id": 123
    },
    {
        "taggedQuestion": "Which series does the book belong which came after the <e0>?",
        "entityMap": {"<e0>": "Blade Runner 2"},
        "nodeNum": 7,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "series",
                "containsRefer": false,
                "originStr": "series",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "does #entity1 belong",
                "containsRefer": true,
                "originStr": "does #entity1 belong",
                "start": 2,
                "entityID": 0,
                "end": 11,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "book",
                "containsRefer": false,
                "originStr": "book",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 4,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            },
            {
                "str": "came after the Blade Runner 2",
                "containsRefer": false,
                "originStr": "came after the Blade Runner 2",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 3,
                "nodeID": 6,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which series does the book belong which came after the Blade Runner 2?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 5
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 6
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NN series)) (SQ (VBZ does) (S (NP (DT the) (NN book)) (VP (VBP belong) (SBAR (WHNP (WDT which)) (S (VP (VBD came) (PP (IN after) (NP (DT the) (NN <e0>))))))))) (. ?)))",
        "id": 124
    },
    {
        "taggedQuestion": "Which city did The Ultimate Fighter: <e0> take place ?",
        "entityMap": {"<e0>": "Team Rousey vs. Team Tate"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "city",
                "containsRefer": false,
                "originStr": "city",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "did The Ultimate Fighter : Team Rousey vs. Team Tate take place",
                "containsRefer": false,
                "originStr": "did The Ultimate Fighter : Team Rousey vs. Team Tate take place",
                "start": 2,
                "entityID": 0,
                "end": 10,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which city did The Ultimate Fighter: Team Rousey vs. Team Tate take place ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NN city)) (SQ (VP (VBD did) (NP (DT The) (NNP Ultimate) (NNP Fighter)) (: :) (S (NP (ADD <e0>)) (VP (VB take) (NP (NN place)))))) (. ?)))",
        "id": 125
    },
    {
        "taggedQuestion": "Where was Sino-French War fought ?",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "Where",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "was Sino-French War fought",
                "containsRefer": false,
                "originStr": "was Sino-French War fought",
                "start": 1,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Where was Sino-French War fought ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHADVP (WRB Where)) (SQ (VBD was) (NP (NP (ADJP (JJ Sino) (HYPH -) (JJ French)) (NNP War)) (VP (VBN fought)))) (. ?)))",
        "id": 126
    },
    {
        "taggedQuestion": "Who did Daniel Gibson marry?",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "who",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "did Daniel Gibson marry",
                "containsRefer": false,
                "originStr": "did Daniel Gibson marry",
                "start": 1,
                "entityID": 0,
                "end": 5,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Who did Daniel Gibson marry?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP Who)) (SQ (VBD did) (NP (NNP Daniel) (NNP Gibson)) (VP (VB marry))) (. ?)))",
        "id": 127
    },
    {
        "taggedQuestion": "What is the political party of the daughter of Jawaharlal Nehru ?",
        "entityMap": {},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the political party of #entity1",
                "containsRefer": true,
                "originStr": "is the political party of #entity1",
                "start": 1,
                "entityID": 0,
                "end": 11,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the daughter of Jawaharlal Nehru",
                "containsRefer": false,
                "originStr": "the daughter of Jawaharlal Nehru",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is the political party of the daughter of Jawaharlal Nehru ?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": -1,
                "from": 2,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (NP (DT the) (JJ political) (NN party)) (PP (IN of) (NP (NP (DT the) (NN daughter)) (PP (IN of) (NP (NNP Jawaharlal) (NNP Nehru))))))) (. ?)))",
        "id": 128
    },
    {
        "taggedQuestion": "Name the river with source as Shannon Pot and its mouth is located in Limerick.",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "name",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the river",
                "containsRefer": false,
                "originStr": "the river",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "source",
                "containsRefer": false,
                "originStr": "source",
                "start": 4,
                "entityID": 0,
                "end": 5,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "as Shannon Pot",
                "containsRefer": false,
                "originStr": "as Shannon Pot",
                "start": 5,
                "entityID": 0,
                "end": 8,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "its mouth is located in Limerick",
                "containsRefer": false,
                "originStr": "its mouth is located in Limerick",
                "start": 9,
                "entityID": 0,
                "end": 14,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Name the river with source as Shannon Pot and its mouth is located in Limerick.",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Name) (NP (DT the) (NN river)) (PP (IN with) (NP (NN source))) (SBAR (IN as) (S (NP (NP (NNP Shannon) (NNP Pot)) (CC and) (NP (PRP$ its) (NN mouth))) (VP (VBZ is) (VP (VBN located) (PP (IN in) (NP (NNP Limerick)))))))) (. .)))",
        "id": 129
    },
    {
        "taggedQuestion": "What is the organisation whose purposes are Environmentalism and Peace?",
        "entityMap": {},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the organisation",
                "containsRefer": false,
                "originStr": "the organisation",
                "start": 2,
                "entityID": 0,
                "end": 4,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "whose purposes are Environmentalism",
                "containsRefer": false,
                "originStr": "whose purposes are Environmentalism",
                "start": 6,
                "entityID": 0,
                "end": 8,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "whose purposes are Peace",
                "containsRefer": false,
                "originStr": "whose purposes are Peace",
                "start": 9,
                "entityID": 0,
                "end": 9,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is the organisation whose purposes are Environmentalism and Peace?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3,
                "info": "whose purposes"
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (NP (DT the) (NN organisation)) (SBAR (WHNP (WP$ whose) (NML (NNS purposes))) (S (VP (VBP are) (NP (NNP Environmentalism) (CC and) (NNP Peace))))))) (. ?)))",
        "id": 130
    },
    {
        "taggedQuestion": "Count the sports team members  which have player named Matt Williams .",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "count",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "sports team members",
                "containsRefer": false,
                "originStr": "sports team members",
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "have player named Matt Williams",
                "containsRefer": false,
                "originStr": "have player named Matt Williams",
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Count the sports team members  which have player named Matt Williams .",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Count) (S (NP (DT the) (NNS sports)) (NP (NP (NN team) (NNS members)) (SBAR (WHNP (WDT which)) (S (VP (VBP have) (NP (NP (NN player)) (VP (VBN named) (NP (NNP Matt) (NNP Williams)))))))))) (. .)))",
        "id": 131
    },
    {
        "taggedQuestion": "How many different people own the Timeform award winners?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "how many",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "different people",
                "containsRefer": false,
                "originStr": "different people",
                "start": 2,
                "entityID": 0,
                "end": 4,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "own the Timeform award winners",
                "containsRefer": false,
                "originStr": "own the Timeform award winners",
                "start": 4,
                "entityID": 0,
                "end": 9,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "How many different people own the Timeform award winners?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WHADJP (WRB How) (JJ many)) (JJ different) (NNS people)) (SQ (VP (VBP own) (NP (DT the) (NNP Timeform) (NN award) (NNS winners)))) (. ?)))",
        "id": 132
    },
    {
        "taggedQuestion": "What religions do diplomats typically follow?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "religions",
                "containsRefer": false,
                "originStr": "religions",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "do diplomats typically follow",
                "containsRefer": false,
                "originStr": "do diplomats typically follow",
                "start": 2,
                "entityID": 0,
                "end": 6,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What religions do diplomats typically follow?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT What) (NNS religions)) (SQ (VBP do) (NP (NNS diplomats)) (ADVP (RB typically)) (VP (VB follow))) (. ?)))",
        "id": 133
    },
    {
        "taggedQuestion": "Guggenheim family is the cofounder of a company that invested stocks in which baseball teams?",
        "entityMap": {},
        "nodeNum": 7,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "JUDGE"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Guggenheim family is the #entity1 teams",
                "containsRefer": true,
                "originStr": "Guggenheim family is the #entity1 teams",
                "start": 2,
                "entityID": 0,
                "end": 16,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "a company",
                "containsRefer": false,
                "originStr": "a company",
                "start": 6,
                "entityID": 1,
                "end": 8,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "invested stocks in which baseball teams",
                "containsRefer": false,
                "originStr": "invested stocks in which baseball teams",
                "start": 9,
                "entityID": 1,
                "end": 16,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Guggenheim family",
                "containsRefer": false,
                "originStr": "Guggenheim family",
                "start": 0,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 6,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Guggenheim family is the cofounder of a company that invested stocks in which baseball teams?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 6
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 6,
                "from": 2,
                "end": 16,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (S (NP (NNP Guggenheim) (NN family)) (VP (VBZ is) (NP (NP (DT the) (NN cofounder)) (PP (IN of) (NP (NP (DT a) (NN company)) (SBAR (WHNP (WDT that)) (S (VP (VBD invested) (NP (NNS stocks)) (PP (IN in) (FRAG (SBARQ (WHNP (WDT which) (NN baseball) (NNS teams)) (. ?)))))))))))))",
        "id": 134
    },
    {
        "taggedQuestion": "Was John muir one of the first to ascend a mountain on mountain hoffmann?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "was",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "JUDGE"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "John muir",
                "containsRefer": false,
                "originStr": "John muir",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "one of the first to ascend a mountain on mountain hoffmann",
                "containsRefer": false,
                "originStr": "one of the first to ascend a mountain on mountain hoffmann",
                "start": 3,
                "entityID": 0,
                "end": 14,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Was John muir one of the first to ascend a mountain on mountain hoffmann?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SQ (VBD Was) (NP (NNP John) (NNP muir)) (NP (NP (CD one)) (PP (IN of) (NP (DT the) (JJ first) (S (VP (TO to) (VP (VB ascend) (NP (DT a) (NN mountain)) (PP (IN on) (NP (NN mountain)))))) (NN hoffmann)))) (. ?)))",
        "id": 135
    },
    {
        "taggedQuestion": "Which city is known for the people working in the <e0>?",
        "entityMap": {"<e0>": "western penn hospital"},
        "nodeNum": 7,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "city",
                "containsRefer": false,
                "originStr": "city",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is known for #entity1",
                "containsRefer": true,
                "originStr": "is known for #entity1",
                "start": 2,
                "entityID": 0,
                "end": 11,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the people",
                "containsRefer": false,
                "originStr": "the people",
                "start": 5,
                "entityID": 1,
                "end": 7,
                "nodeType": 4,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            },
            {
                "str": "working in the western penn hospital",
                "containsRefer": false,
                "originStr": "working in the western penn hospital",
                "start": 7,
                "entityID": 1,
                "end": 11,
                "nodeType": 3,
                "nodeID": 6,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which city is known for the people working in the western penn hospital?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 5,
                "from": 3,
                "end": 11,
                "to": 4
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 5
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 6
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NN city)) (SQ (VBZ is) (VP (VBN known) (PP (IN for) (NP (NP (DT the) (NNS people)) (VP (VBG working) (PP (IN in) (NP (DT the) (NN <e0>)))))))) (. ?)))",
        "id": 136
    },
    {
        "taggedQuestion": "Which country does the publishing house exist which was cofounded by Panos Loannides?",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "country",
                "containsRefer": false,
                "originStr": "country",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "does the publishing house exist #entity1",
                "containsRefer": true,
                "originStr": "does the publishing house exist #entity1",
                "start": 2,
                "entityID": 0,
                "end": 13,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "was cofounded by Panos Loannides",
                "containsRefer": false,
                "originStr": "was cofounded by Panos Loannides",
                "start": 8,
                "entityID": 1,
                "end": 13,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which country does the publishing house exist which was cofounded by Panos Loannides?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 7,
                "from": 3,
                "end": 13,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NN country)) (SQ (VBZ does) (NP (DT the) (NN publishing) (NN house)) (VP (VBP exist) (SBAR (WHNP (WDT which)) (S (VP (VBD was) (VP (VBN cofounded) (PP (IN by) (NP (NNP Panos) (NNP Loannides))))))))) (. ?)))",
        "id": 137
    },
    {
        "taggedQuestion": "Name the team which is owned by <e1> and stood first in <e0> .",
        "entityMap": {
            "<e1>": "Dafenham wind turbines",
            "<e0>": "1967 mexican Grand Prix"
        },
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "name",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the team",
                "containsRefer": false,
                "originStr": "the team",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is owned by Dafenham wind turbines",
                "containsRefer": false,
                "originStr": "is owned by Dafenham wind turbines",
                "start": 4,
                "entityID": 0,
                "end": 8,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "stood first in 1967 mexican Grand Prix",
                "containsRefer": false,
                "originStr": "stood first in 1967 mexican Grand Prix",
                "start": 9,
                "entityID": 0,
                "end": 13,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Name the team which is owned by Dafenham wind turbines and stood first in 1967 mexican Grand Prix .",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Name) (NP (NP (DT the) (NN team)) (SBAR (WHNP (WDT which)) (S (VP (VP (VBZ is) (VP (VBN owned) (PP (IN by) (NP (ADD <e1>))))) (CC and) (VP (VBD stood) (ADVP (RB first)) (PP (IN in) (NP (ADD <e0>))))))))) (. .)))",
        "id": 138
    },
    {
        "taggedQuestion": "Which <e0> attended which was also the alma mater of Lisa Brummel ?",
        "entityMap": {"<e0>": "education center Sidney Catlin Partrodge"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the alma mater of Lisa Brummel",
                "containsRefer": false,
                "originStr": "the alma mater of Lisa Brummel",
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "education center Sidney Catlin Partrodge attended which",
                "containsRefer": false,
                "originStr": "education center Sidney Catlin Partrodge attended which",
                "start": 1,
                "entityID": 0,
                "end": 4,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which education center Sidney Catlin Partrodge attended which was also the alma mater of Lisa Brummel ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBAR (WHNP (WDT Which)) (S (NP (NN <e0>)) (VP (VBD attended) (SBAR (WHNP (WDT which)) (S (VP (VBD was) (ADVP (RB also)) (NP (NP (DT the) (NN alma) (NN mater)) (PP (IN of) (NP (NNP Lisa) (NNP Brummel))))))))) (. ?)))",
        "id": 139
    },
    {
        "taggedQuestion": "What sports is  played in Kharghar's schools?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "sports",
                "containsRefer": false,
                "originStr": "sports",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is played in Kharghar's schools",
                "containsRefer": false,
                "originStr": "is played in Kharghar's schools",
                "start": 2,
                "entityID": 0,
                "end": 8,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What sports is  played in Kharghar's schools?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT What) (NNS sports)) (SQ (VBZ is) (VP (VBN played) (PP (IN in) (NP (NP (NNP Kharghar) (POS 's)) (NNS schools))))) (. ?)))",
        "id": 140
    },
    {
        "taggedQuestion": "Which ethinicity of  Riley Reid is the <e0> of Holmes Colbert?",
        "entityMap": {"<e0>": "state of origin"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "ethinicity of Riley Reid",
                "containsRefer": false,
                "originStr": "ethinicity of Riley Reid",
                "start": 1,
                "entityID": 0,
                "end": 5,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the state of origin of Holmes Colbert",
                "containsRefer": false,
                "originStr": "is the state of origin of Holmes Colbert",
                "start": 5,
                "entityID": 0,
                "end": 11,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which ethinicity of  Riley Reid is the state of origin of Holmes Colbert?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NP (NN ethinicity) (PP (IN of) (NP (NNP Riley) (NNP Reid))))) (SQ (VBZ is) (NP (NP (DT the) (NN <e0>)) (PP (IN of) (NP (NNP Holmes) (NNP Colbert))))) (. ?)))",
        "id": 141
    },
    {
        "taggedQuestion": "Was John Boehner the winner of the US House of Representatives elections in Ohio in 2010?",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "was",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "JUDGE"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "John Boehner",
                "containsRefer": false,
                "originStr": "John Boehner",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the winner of the US House of #entity1",
                "containsRefer": true,
                "originStr": "the winner of the US House of #entity1",
                "start": 3,
                "entityID": 0,
                "end": 16,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Representatives elections in Ohio in 2010",
                "containsRefer": false,
                "originStr": "Representatives elections in Ohio in 2010",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 4,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Was John Boehner the winner of the US House of Representatives elections in Ohio in 2010?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (SQ (VBD Was) (NP (NNP John) (NNP Boehner)) (NP (NP (DT the) (NN winner)) (PP (IN of) (NP (NP (DT the) (NNP US) (NNP House)) (PP (IN of) (NP (NP (NNPS Representatives) (NNS elections)) (PP (IN in) (NP (NP (NNP Ohio)) (PP (IN in) (NP (CD 2010)))))))))) (. ?)))",
        "id": 142
    },
    {
        "taggedQuestion": "Which american football team  has stadium as O.co Coliseum?",
        "entityMap": {"<e0>": "O.c o Coliseum"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "american football team",
                "containsRefer": false,
                "originStr": "american football team",
                "start": 1,
                "entityID": 0,
                "end": 4,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "has stadium as O.co Coliseum",
                "containsRefer": false,
                "originStr": "has stadium as O.co Coliseum",
                "start": 4,
                "entityID": 0,
                "end": 9,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which american football team  has stadium as O.co Coliseum?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (JJ american) (NN football) (NN team)) (SQ (VP (VBZ has) (NP (NP (NN stadium)) (PP (IN as) (NP (NNP O.co) (NNP Coliseum)))))) (. ?)))",
        "id": 143
    },
    {
        "taggedQuestion": "How many subjects are covered in the publications of Doubleday?",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "How many",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are covered in #entity1",
                "containsRefer": true,
                "originStr": "are covered in #entity1",
                "start": 3,
                "entityID": 0,
                "end": 10,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "subjects",
                "containsRefer": false,
                "originStr": "subjects",
                "start": 2,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the publications of Doubleday",
                "containsRefer": false,
                "originStr": "the publications of Doubleday",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 4,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "How many subjects are covered in the publications of Doubleday?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": -1,
                "from": 2,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (SBAR (WHADJP (WRB How) (JJ many)) (S (NP (NNS subjects)) (VP (VBP are) (VP (VBN covered) (PP (IN in) (NP (NP (DT the) (NNS publications)) (PP (IN of) (NP (NNP Doubleday)))))))) (. ?)))",
        "id": 144
    },
    {
        "taggedQuestion": "Which city of Pittsburg Steelers was the Congress of Inductrial Organization founded ?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "city of Pittsburg Steelers",
                "containsRefer": false,
                "originStr": "city of Pittsburg Steelers",
                "start": 1,
                "entityID": 0,
                "end": 5,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "was the Congress of Inductrial Organization founded",
                "containsRefer": false,
                "originStr": "was the Congress of Inductrial Organization founded",
                "start": 5,
                "entityID": 0,
                "end": 12,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which city of Pittsburg Steelers was the Congress of Inductrial Organization founded ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WHNP (WDT Which) (NN city)) (PP (IN of) (NP (NNP Pittsburg) (NNPS Steelers)))) (SQ (VBD was) (NP (NP (DT the) (NNP Congress)) (PP (IN of) (NP (NNP Inductrial) (NNP Organization)))) (VP (VBN founded))) (. ?)))",
        "id": 145
    },
    {
        "taggedQuestion": "What is the hometown of the residents of Martha's vineyards?",
        "entityMap": {},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the hometown of #entity1",
                "containsRefer": true,
                "originStr": "is the hometown of #entity1",
                "start": 1,
                "entityID": 0,
                "end": 11,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the residents of Martha's vineyards",
                "containsRefer": false,
                "originStr": "the residents of Martha's vineyards",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is the hometown of the residents of Martha's vineyards?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": -1,
                "from": 2,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (NP (DT the) (NN hometown)) (PP (IN of) (NP (NP (DT the) (NNS residents)) (PP (IN of) (NP (NP (NNP Martha) (POS 's)) (NNS vineyards))))))) (. ?)))",
        "id": 146
    },
    {
        "taggedQuestion": "Name the sea into which Danish Straits flows and has Kaliningrad as one of the city on the shore .",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "name",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": true,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the sea",
                "containsRefer": false,
                "originStr": "the sea",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "flows",
                "containsRefer": false,
                "originStr": "flows",
                "start": 7,
                "entityID": 1,
                "end": 8,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "has Kaliningrad as one of the city on the shore",
                "containsRefer": false,
                "originStr": "has Kaliningrad as one of the city on the shore",
                "start": 9,
                "entityID": 1,
                "end": 19,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Name the sea into which Danish Straits flows and has Kaliningrad as one of the city on the shore .",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 4,
                "from": 1,
                "end": 19,
                "to": 3
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Name) (NP (DT the) (NN sea)) (PP (IN into) (SBAR (WHNP (WDT which)) (S (NP (JJ Danish) (NNPS Straits)) (VP (VP (VBZ flows)) (CC and) (VP (VBZ has) (NP (NP (NNP Kaliningrad)) (PP (IN as) (NP (NP (CD one)) (PP (IN of) (NP (NP (DT the) (NN city)) (PP (IN on) (NP (DT the) (NN shore)))))))))))))) (. .)))",
        "id": 147
    },
    {
        "taggedQuestion": "Name the team manger of Middlebrough F.C season 2006-07 .",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "name",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the team manger of Middlebrough F.C",
                "containsRefer": false,
                "originStr": "the team manger of Middlebrough F.C",
                "start": 1,
                "entityID": 0,
                "end": 7,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "season 2006-07",
                "containsRefer": false,
                "originStr": "season 2006-07",
                "start": 7,
                "entityID": 0,
                "end": 11,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Name the team manger of Middlebrough F.C season 2006-07 .",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Name) (NP (NP (DT the) (NN team) (NN manger)) (PP (IN of) (NP (NNP Middlebrough) (NNP F.C)))) (PRN (NP (NN season) (CD 2006) (HYPH -) (CD 07)))) (. .)))",
        "id": 148
    },
    {
        "taggedQuestion": "What city has the football team in which Lee Robinson debuted?",
        "entityMap": {},
        "nodeNum": 7,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "city",
                "containsRefer": false,
                "originStr": "city",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "has #entity1",
                "containsRefer": true,
                "originStr": "has #entity1",
                "start": 2,
                "entityID": 0,
                "end": 11,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the football team",
                "containsRefer": false,
                "originStr": "the football team",
                "start": 3,
                "entityID": 1,
                "end": 6,
                "nodeType": 4,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Lee Robinson debuted",
                "containsRefer": false,
                "originStr": "Lee Robinson debuted",
                "start": 8,
                "entityID": 1,
                "end": 10,
                "nodeType": 3,
                "nodeID": 6,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What city has the football team in which Lee Robinson debuted?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 3,
                "from": 3,
                "end": 11,
                "to": 4
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 5
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 6
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT What) (NN city)) (SQ (VP (VBZ has) (NP (NP (DT the) (NN football) (NN team)) (SBAR (WHPP (IN in) (WHNP (WDT which))) (S (NP (NNP Lee) (NNP Robinson)) (VP (VBD debuted))))))) (. ?)))",
        "id": 149
    },
    {
        "taggedQuestion": "Who is the owner of the bank which owns Bloomberg Radio?",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "who",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the owner of #entity1",
                "containsRefer": true,
                "originStr": "is the owner of #entity1",
                "start": 1,
                "entityID": 0,
                "end": 11,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the bank",
                "containsRefer": false,
                "originStr": "the bank",
                "start": 5,
                "entityID": 1,
                "end": 7,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "owns Bloomberg Radio",
                "containsRefer": false,
                "originStr": "owns Bloomberg Radio",
                "start": 8,
                "entityID": 1,
                "end": 11,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Who is the owner of the bank which owns Bloomberg Radio?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 5,
                "from": 2,
                "end": 11,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP Who)) (SQ (VBZ is) (NP (NP (DT the) (NN owner)) (PP (IN of) (NP (NP (DT the) (NN bank)) (SBAR (WHNP (WDT which)) (S (VP (VBZ owns) (NP (NNP Bloomberg) (NNP Radio))))))))) (. ?)))",
        "id": 150
    },
    {
        "taggedQuestion": "Which companies were behind the renovation of McKechnie Field ?",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "were behind #entity1",
                "containsRefer": true,
                "originStr": "were behind #entity1",
                "start": 2,
                "entityID": 0,
                "end": 9,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "companies",
                "containsRefer": false,
                "originStr": "companies",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the renovation of McKechnie Field",
                "containsRefer": false,
                "originStr": "the renovation of McKechnie Field",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 4,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which companies were behind the renovation of McKechnie Field ?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": -1,
                "from": 2,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (SBAR (WHNP (WDT Which)) (S (NP (NNS companies)) (VP (VBD were) (PP (IN behind) (NP (NP (DT the) (NN renovation)) (PP (IN of) (NP (NNP McKechnie) (NNP Field))))))) (. ?)))",
        "id": 151
    },
    {
        "taggedQuestion": "Who was the coach of <e0>'s basketball team-2012,13 season ?",
        "entityMap": {"<e0>": "marquette Golden Eagles men"},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "who",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "was the coach of marquette Golden Eagles men's basketball team-2012,13 season",
                "containsRefer": false,
                "originStr": "was the coach of marquette Golden Eagles men's basketball team-2012,13 season",
                "start": 1,
                "entityID": 0,
                "end": 12,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Who was the coach of marquette Golden Eagles men's basketball team-2012,13 season ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP Who)) (SQ (VBD was) (NP (NP (DT the) (NN coach)) (PP (IN of) (NP (NP (NN <e0>) (POS 's)) (NN basketball) (NML (NN team) (HYPH -) (CD 2012,13)) (NN season))))) (. ?)))",
        "id": 152
    },
    {
        "taggedQuestion": "Miluk and Cayuse are still spoken in which part of the world?",
        "entityMap": {},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "part of the world",
                "containsRefer": false,
                "originStr": "part of the world",
                "start": 8,
                "entityID": 0,
                "end": 13,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Miluk are still spoken in",
                "containsRefer": false,
                "originStr": "Miluk are still spoken in",
                "start": 0,
                "entityID": 0,
                "end": 1,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Cayuse are still spoken in",
                "containsRefer": false,
                "originStr": "Cayuse are still spoken in",
                "start": 2,
                "entityID": 0,
                "end": 6,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Miluk and Cayuse are still spoken in which part of the world?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (S (NP (NN Miluk) (CC and) (NN Cayuse)) (VP (VBP are) (ADVP (RB still)) (VP (VBN spoken) (WHPP (IN in) (WHNP (WDT which) (NN part))) (PP (IN of) (NP (DT the) (NN world))))) (. ?)))",
        "id": 153
    },
    {
        "taggedQuestion": "Which governer of Winston bryant is also the president of Carl Stokes ?",
        "entityMap": {},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "governer of Winston bryant",
                "containsRefer": false,
                "originStr": "governer of Winston bryant",
                "start": 1,
                "entityID": 0,
                "end": 5,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the president of Carl Stokes",
                "containsRefer": false,
                "originStr": "the president of Carl Stokes",
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "",
                "containsRefer": false,
                "originStr": "",
                "start": 5,
                "entityID": 0,
                "end": 6,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which governer of Winston bryant is also the president of Carl Stokes ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NP (NN governer) (PP (IN of) (NP (NNP Winston) (NN bryant))))) (SQ (VBZ is) (ADVP (RB also)) (NP (NP (DT the) (NN president)) (PP (IN of) (NP (NNP Carl) (NNP Stokes))))) (. ?)))",
        "id": 154
    },
    {
        "taggedQuestion": "List the sports of <e0> which are of interest of Jon Speelman ?",
        "entityMap": {"<e0>": "PATTS College of Aeronautics"},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "list",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the sports of #entity1",
                "containsRefer": true,
                "originStr": "the sports of #entity1",
                "start": 1,
                "entityID": 0,
                "end": 12,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "PATTS College of Aeronautics",
                "containsRefer": false,
                "originStr": "PATTS College of Aeronautics",
                "start": 4,
                "entityID": 1,
                "end": 5,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are of interest of Jon Speelman",
                "containsRefer": false,
                "originStr": "are of interest of Jon Speelman",
                "start": 6,
                "entityID": 1,
                "end": 12,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "List the sports of PATTS College of Aeronautics which are of interest of Jon Speelman ?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 4,
                "from": 2,
                "end": 12,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (SQ (VP (VB List) (NP (NP (DT the) (NNS sports)) (PP (IN of) (NP (NP (NN <e0>)) (SBAR (WHNP (WDT which)) (S (VP (VBP are) (PP (IN of) (NP (NP (NN interest)) (PP (IN of) (NP (NNP Jon) (NNP Speelman)))))))))))) (. ?)))",
        "id": 155
    },
    {
        "taggedQuestion": "What is the home stadium of the club coached by Justine Omojong?",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the home stadium of #entity1",
                "containsRefer": true,
                "originStr": "is the home stadium of #entity1",
                "start": 1,
                "entityID": 0,
                "end": 12,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the club",
                "containsRefer": false,
                "originStr": "the club",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "coached by Justine Omojong",
                "containsRefer": false,
                "originStr": "coached by Justine Omojong",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is the home stadium of the club coached by Justine Omojong?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": -1,
                "from": 2,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (NP (DT the) (NN home) (NN stadium)) (PP (IN of) (NP (DT the) (NN club)))) (VP (VBN coached) (PP (IN by) (NP (NNP Justine) (NNP Omojong))))) (. ?)))",
        "id": 156
    },
    {
        "taggedQuestion": "Which are the predecessors of the cars which are similar to the Oldsmobile 88?",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are the predecessors of #entity1",
                "containsRefer": true,
                "originStr": "are the predecessors of #entity1",
                "start": 1,
                "entityID": 0,
                "end": 14,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the cars",
                "containsRefer": false,
                "originStr": "the cars",
                "start": 5,
                "entityID": 1,
                "end": 7,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are similar to the Oldsmobile 88",
                "containsRefer": false,
                "originStr": "are similar to the Oldsmobile 88",
                "start": 8,
                "entityID": 1,
                "end": 14,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which are the predecessors of the cars which are similar to the Oldsmobile 88?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 5,
                "from": 2,
                "end": 14,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which)) (SQ (VBP are) (NP (NP (DT the) (NNS predecessors)) (PP (IN of) (NP (NP (DT the) (NNS cars)) (SBAR (WHNP (WDT which)) (S (VP (VBP are) (ADJP (JJ similar) (PP (IN to) (NP (DT the) (NNP Oldsmobile) (CD 88))))))))))) (. ?)))",
        "id": 157
    },
    {
        "taggedQuestion": "Name a queen whose parent is <e0> and consort is <e1>.",
        "entityMap": {
            "<e1>": "Ptolemy XIII Theos Philopator",
            "<e0>": "Ptolemy XII Auletes"
        },
        "nodeNum": 9,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "name",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Name #entity1",
                "containsRefer": true,
                "originStr": "Name #entity1",
                "start": 0,
                "entityID": 0,
                "end": 9,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "a queen",
                "containsRefer": false,
                "originStr": "a queen",
                "start": 1,
                "entityID": 1,
                "end": 3,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "whose parent is Ptolemy XII Auletes",
                "containsRefer": false,
                "originStr": "whose parent is Ptolemy XII Auletes",
                "start": 5,
                "entityID": 1,
                "end": 7,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is Ptolemy XIII Theos Philopator",
                "containsRefer": false,
                "originStr": "is Ptolemy XIII Theos Philopator",
                "start": 9,
                "entityID": 0,
                "end": 11,
                "nodeType": 3,
                "nodeID": 6,
                "questionType": "UNKNOWN"
            },
            {
                "str": "",
                "containsRefer": false,
                "originStr": "",
                "start": 11,
                "entityID": 0,
                "end": 12,
                "nodeType": 4,
                "nodeID": 7,
                "questionType": "UNKNOWN"
            },
            {
                "str": "whose parent is consort",
                "containsRefer": false,
                "originStr": "whose parent is consort",
                "start": 8,
                "entityID": 1,
                "end": 8,
                "nodeType": 4,
                "nodeID": 8,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Name a queen whose parent is Ptolemy XII Auletes and consort is Ptolemy XIII Theos Philopator.",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 6
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 7
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 1,
                "from": 2,
                "end": 9,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5,
                "info": "whose parent"
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 8
            }
        ],
        "syntaxTreeText": "(ROOT (S (S (VP (VB Name) (NP (NP (DT a) (NN queen)) (SBAR (WHNP (WP$ whose) (NML (NN parent))) (S (VP (VBZ is) (NP (NP (ADD <e0>)) (CC and) (NP (NN consort))))))))) (VP (VBZ is) (NP (ADD <e1>))) (. .)))",
        "id": 158
    },
    {
        "taggedQuestion": "Which show's theme music was composed by Primus and voiced by Isaac Hayes?",
        "entityMap": {},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "show",
                "containsRefer": false,
                "originStr": "show",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "composed by Primus",
                "containsRefer": false,
                "originStr": "composed by Primus",
                "start": 0,
                "entityID": 0,
                "end": 6,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "voiced by Isaac Hayes",
                "containsRefer": false,
                "originStr": "voiced by Isaac Hayes",
                "start": 7,
                "entityID": 0,
                "end": 10,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which show's theme music was composed by Primus and voiced by Isaac Hayes?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WHNP (WDT Which) (NN show) (POS 's)) (NN theme) (NN music)) (SQ (VBD was) (VP (VP (VBN composed) (PP (IN by) (NP (NNP Primus)))) (CC and) (VP (VBN voiced) (PP (IN by) (NP (NNP Isaac) (NNP Hayes)))))) (. ?)))",
        "id": 159
    },
    {
        "taggedQuestion": "Who is the chancellor of the university whose campus is in Woodlane, New Jersey ?",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "who",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the chancellor of #entity1",
                "containsRefer": true,
                "originStr": "is the chancellor of #entity1",
                "start": 1,
                "entityID": 0,
                "end": 15,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the university",
                "containsRefer": false,
                "originStr": "the university",
                "start": 5,
                "entityID": 1,
                "end": 7,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "whose campus is in Woodlane , New Jersey",
                "containsRefer": false,
                "originStr": "whose campus is in Woodlane , New Jersey",
                "start": 9,
                "entityID": 1,
                "end": 15,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Who is the chancellor of the university whose campus is in Woodlane, New Jersey ?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 5,
                "from": 2,
                "end": 15,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5,
                "info": "whose campus"
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP Who)) (SQ (VBZ is) (NP (NP (DT the) (NN chancellor)) (PP (IN of) (NP (NP (DT the) (NN university)) (SBAR (WHNP (WP$ whose) (NN campus)) (S (VP (VBZ is) (PP (IN in) (NP (NP (NN Woodlane)) (, ,) (NP (NNP New) (NNP Jersey))))))))))) (. ?)))",
        "id": 160
    },
    {
        "taggedQuestion": "Name the mountain whose parent peak is located in Mexico.",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "name",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the mountain",
                "containsRefer": false,
                "originStr": "the mountain",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "whose parent peak is located in Mexico",
                "containsRefer": false,
                "originStr": "whose parent peak is located in Mexico",
                "start": 6,
                "entityID": 0,
                "end": 10,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Name the mountain whose parent peak is located in Mexico.",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3,
                "info": "whose parent peak"
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Name) (NP (NP (DT the) (NN mountain)) (SBAR (WHNP (WP$ whose) (NML (NN parent) (NN peak))) (S (VP (VBZ is) (VP (VBN located) (PP (IN in) (NP (NNP Mexico))))))))) (. .)))",
        "id": 161
    },
    {
        "taggedQuestion": "List the ingredient of Blodpalt ?",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "list",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the ingredient of Blodpalt",
                "containsRefer": false,
                "originStr": "the ingredient of Blodpalt",
                "start": 1,
                "entityID": 0,
                "end": 5,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "List the ingredient of Blodpalt ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SQ (VP (VB List) (NP (NP (DT the) (NN ingredient)) (PP (IN of) (NP (NNP Blodpalt))))) (. ?)))",
        "id": 162
    },
    {
        "taggedQuestion": "List the developers who has contributed to both GNOWSYS and GNU TeXmacs ?",
        "entityMap": {},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "list",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the developers",
                "containsRefer": false,
                "originStr": "the developers",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "has contributed to GNOWSYS",
                "containsRefer": false,
                "originStr": "has contributed to GNOWSYS",
                "start": 0,
                "entityID": 0,
                "end": 5,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "has contributed to GNU TeXmacs",
                "containsRefer": false,
                "originStr": "has contributed to GNU TeXmacs",
                "start": 6,
                "entityID": 0,
                "end": 7,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "List the developers who has contributed to both GNOWSYS and GNU TeXmacs ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SQ (VP (VB List) (NP (NP (DT the) (NNS developers)) (SBAR (WHNP (WP who)) (S (VP (VBZ has) (VP (VBN contributed) (PP (IN to) (NP (NP (DT both) (NNP GNOWSYS)) (CC and) (NP (NNP GNU) (NNP TeXmacs)))))))))) (. ?)))",
        "id": 163
    },
    {
        "taggedQuestion": "List the served region of the organisations of Trade association.",
        "entityMap": {},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "list",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the served region of #entity1",
                "containsRefer": true,
                "originStr": "the served region of #entity1",
                "start": 1,
                "entityID": 0,
                "end": 10,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the organisations of Trade association",
                "containsRefer": false,
                "originStr": "the organisations of Trade association",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "List the served region of the organisations of Trade association.",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": -1,
                "from": 2,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB List) (NP (NP (DT the) (NML (S (VP (VBN served)))) (NN region)) (PP (IN of) (NP (NP (DT the) (NNS organisations)) (PP (IN of) (NP (NNP Trade) (NN association))))))) (. .)))",
        "id": 164
    },
    {
        "taggedQuestion": "Is Hyundai Lavita assembled in Malaysia?",
        "entityMap": {},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "is",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "JUDGE"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Hyundai",
                "containsRefer": false,
                "originStr": "Hyundai",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Lavita",
                "containsRefer": false,
                "originStr": "Lavita",
                "start": 2,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "assembled in Malaysia",
                "containsRefer": false,
                "originStr": "assembled in Malaysia",
                "start": 3,
                "entityID": 0,
                "end": 6,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Is Hyundai Lavita assembled in Malaysia?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SQ (VBZ Is) (NP (NNP Hyundai)) (NP (NP (NNP Lavita)) (SBAR (S (VP (VBD assembled) (PP (IN in) (NP (NNP Malaysia))))))) (. ?)))",
        "id": 165
    },
    {
        "taggedQuestion": "Who composed the music for Tonight's the Night ?",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "who",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "composed the music for Tonight's the Night",
                "containsRefer": false,
                "originStr": "composed the music for Tonight's the Night",
                "start": 1,
                "entityID": 0,
                "end": 9,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Who composed the music for Tonight's the Night ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP Who)) (SQ (VP (VBN composed) (NP (NP (DT the) (NN music)) (PP (IN for) (NP (NP (NN Tonight)) (POS 's)))) (NP-TMP (DT the) (NN Night)))) (. ?)))",
        "id": 166
    },
    {
        "taggedQuestion": "How many things are made by companies who produce <e0>?",
        "entityMap": {"<e0>": "mass media articles"},
        "nodeNum": 7,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "how many",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "things",
                "containsRefer": false,
                "originStr": "things",
                "start": 2,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are made by #entity1",
                "containsRefer": true,
                "originStr": "are made by #entity1",
                "start": 3,
                "entityID": 0,
                "end": 10,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "companies",
                "containsRefer": false,
                "originStr": "companies",
                "start": 6,
                "entityID": 1,
                "end": 7,
                "nodeType": 4,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            },
            {
                "str": "produce mass media articles",
                "containsRefer": false,
                "originStr": "produce mass media articles",
                "start": 8,
                "entityID": 1,
                "end": 10,
                "nodeType": 3,
                "nodeID": 6,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "How many things are made by companies who produce mass media articles?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 6,
                "from": 3,
                "end": 10,
                "to": 4
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 5
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 6
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WHADJP (WRB How) (JJ many)) (NNS things)) (SQ (VBP are) (VP (VBN made) (PP (IN by) (NP (NP (NNS companies)) (SBAR (WHNP (WP who)) (S (VP (VBP produce) (NP (NN <e0>))))))))) (. ?)))",
        "id": 167
    },
    {
        "taggedQuestion": "What awards have been given to race horses bred by Bert Michell?",
        "entityMap": {},
        "nodeNum": 7,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "have been given to #entity1",
                "containsRefer": true,
                "originStr": "have been given to #entity1",
                "start": 2,
                "entityID": 0,
                "end": 12,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "awards",
                "containsRefer": false,
                "originStr": "awards",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "race horses",
                "containsRefer": false,
                "originStr": "race horses",
                "start": 6,
                "entityID": 1,
                "end": 8,
                "nodeType": 4,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            },
            {
                "str": "bred by Bert Michell",
                "containsRefer": false,
                "originStr": "bred by Bert Michell",
                "start": 8,
                "entityID": 1,
                "end": 12,
                "nodeType": 3,
                "nodeID": 6,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What awards have been given to race horses bred by Bert Michell?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 6,
                "from": 2,
                "end": 12,
                "to": 4
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 5
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 6
            }
        ],
        "syntaxTreeText": "(ROOT (SBAR (WHNP (WDT What)) (S (NP (NNS awards)) (VP (VBP have) (VP (VBN been) (VP (VBN given) (PP (IN to) (NP (NP (NN race) (NNS horses)) (VP (VBN bred) (PP (IN by) (NP (NNP Bert) (NNP Michell)))))))))) (. ?)))",
        "id": 168
    },
    {
        "taggedQuestion": "Whose mayors are affiliated with Christen-Democratisch en Vlaams?",
        "entityMap": {"<e0>": "Christen - Democratisch"},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "whose",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are affiliated with Christen-Democratisch en Vlaams",
                "containsRefer": false,
                "originStr": "are affiliated with Christen-Democratisch en Vlaams",
                "start": 2,
                "entityID": 0,
                "end": 10,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Whose mayors are affiliated with Christen-Democratisch en Vlaams?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBAR (WHNP (WP$ Whose) (NML (NNS mayors))) (S (VP (VBP are) (VP (VBN affiliated) (PP (IN with) (NP (NP (NNP Christen) (HYPH -) (NNP Democratisch)) (PP (FW en) (NP (NNP Vlaams)))))))) (. ?)))",
        "id": 169
    },
    {
        "taggedQuestion": "What is the common nationality of Viveka Babajee anad Ronny Vencatachellum ?",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the common nationality of Viveka Babajee anad Ronny Vencatachellum",
                "containsRefer": false,
                "originStr": "is the common nationality of Viveka Babajee anad Ronny Vencatachellum",
                "start": 1,
                "entityID": 0,
                "end": 11,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is the common nationality of Viveka Babajee anad Ronny Vencatachellum ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (NP (DT the) (JJ common) (NN nationality)) (PP (IN of) (NP (NNP Viveka) (NNP Babajee) (NN anad) (NNP Ronny) (NNP Vencatachellum))))) (. ?)))",
        "id": 170
    },
    {
        "taggedQuestion": "Is the Hyundai Lavita assembled in Ulsan?",
        "entityMap": {},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "is",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "JUDGE"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the Hyundai",
                "containsRefer": false,
                "originStr": "the Hyundai",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Lavita",
                "containsRefer": false,
                "originStr": "Lavita",
                "start": 3,
                "entityID": 0,
                "end": 4,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "assembled in Ulsan",
                "containsRefer": false,
                "originStr": "assembled in Ulsan",
                "start": 4,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Is the Hyundai Lavita assembled in Ulsan?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SQ (VBZ Is) (NP (DT the) (NNP Hyundai)) (NP (NP (NNP Lavita)) (SBAR (S (VP (VBD assembled) (PP (IN in) (NP (NNP Ulsan))))))) (. ?)))",
        "id": 171
    },
    {
        "taggedQuestion": "Which party won the elections when Y.S. Rajasekhara Reddy was in power?",
        "entityMap": {},
        "nodeNum": 7,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "party",
                "containsRefer": false,
                "originStr": "party",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "won #entity1",
                "containsRefer": true,
                "originStr": "won #entity1",
                "start": 2,
                "entityID": 0,
                "end": 12,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the elections",
                "containsRefer": false,
                "originStr": "the elections",
                "start": 3,
                "entityID": 1,
                "end": 5,
                "nodeType": 4,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            },
            {
                "str": "when Y.S. Rajasekhara Reddy was in power",
                "containsRefer": false,
                "originStr": "when Y.S. Rajasekhara Reddy was in power",
                "start": 6,
                "entityID": 1,
                "end": 12,
                "nodeType": 3,
                "nodeID": 6,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which party won the elections when Y.S. Rajasekhara Reddy was in power?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 3,
                "from": 3,
                "end": 12,
                "to": 4
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 5
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 6
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NN party)) (SQ (VP (VBD won) (NP (DT the) (NNS elections)) (SBAR (WHADVP (WRB when)) (S (NP (NNP Y.S.) (NNP Rajasekhara) (NNP Reddy)) (VP (VBD was) (PP (IN in) (NP (NN power)))))))) (. ?)))",
        "id": 172
    },
    {
        "taggedQuestion": "Where does the river begin whose left tributary is Krapanski Potok?",
        "entityMap": {},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "Where",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "does the river begin #entity1",
                "containsRefer": true,
                "originStr": "does the river begin #entity1",
                "start": 1,
                "entityID": 0,
                "end": 11,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "whose left tributary is Krapanski Potok",
                "containsRefer": false,
                "originStr": "whose left tributary is Krapanski Potok",
                "start": 8,
                "entityID": 1,
                "end": 11,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Where does the river begin whose left tributary is Krapanski Potok?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 5,
                "from": 2,
                "end": 11,
                "to": 3
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4,
                "info": "whose left tributary"
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHADVP (WRB Where)) (SQ (VBZ does) (NP (DT the) (NN river)) (VP (VB begin) (SBAR (WHNP (WP$ whose) (NML (JJ left) (NN tributary))) (S (VP (VBZ is) (NP (NNP Krapanski) (NNP Potok))))))) (. ?)))",
        "id": 173
    },
    {
        "taggedQuestion": "What are the notable commanders of the army  whose one of the notable commanders is Paul Hausser?",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are the notable commanders of #entity1",
                "containsRefer": true,
                "originStr": "are the notable commanders of #entity1",
                "start": 1,
                "entityID": 0,
                "end": 17,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the army",
                "containsRefer": false,
                "originStr": "the army",
                "start": 6,
                "entityID": 1,
                "end": 8,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "whose one of the notable commanders is Paul Hausser",
                "containsRefer": false,
                "originStr": "whose one of the notable commanders is Paul Hausser",
                "start": 14,
                "entityID": 1,
                "end": 17,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What are the notable commanders of the army  whose one of the notable commanders is Paul Hausser?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 6,
                "from": 2,
                "end": 17,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5,
                "info": "whose one of the notable commanders"
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBP are) (NP (NP (DT the) (JJ notable) (NNS commanders)) (PP (IN of) (NP (NP (DT the) (NN army)) (SBAR (WHNP (WHNP (WP$ whose) (NN one)) (PP (IN of) (NP (DT the) (JJ notable) (NNS commanders)))) (S (VP (VBZ is) (NP (NNP Paul) (NNP Hausser))))))))) (. ?)))",
        "id": 174
    },
    {
        "taggedQuestion": "Name the source of Raa .",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "name",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the source of Raa",
                "containsRefer": false,
                "originStr": "the source of Raa",
                "start": 1,
                "entityID": 0,
                "end": 5,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Name the source of Raa .",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Name) (NP (NP (DT the) (NN source)) (PP (IN of) (NP (NN Raa))))) (. .)))",
        "id": 175
    },
    {
        "taggedQuestion": "Does Fa'a<e0> serve tahiti too?",
        "entityMap": {"<e0>": "' International Airport"},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "does fa'a",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "JUDGE"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "' International Airport serve tahiti too",
                "containsRefer": false,
                "originStr": "' International Airport serve tahiti too",
                "start": 2,
                "entityID": 0,
                "end": 6,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Does Fa'a' International Airport serve tahiti too?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SQ (SQ (VBZ Does) (NP (NNP Fa'a))) (S (NP (ADD <e0>)) (VP (VBP serve) (NP (NN tahiti)) (ADVP (RB too)))) (. ?)))",
        "id": 176
    },
    {
        "taggedQuestion": "Who is the producer of  Frampton's Camel ?",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "who",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the producer of Frampton's Camel",
                "containsRefer": false,
                "originStr": "is the producer of Frampton's Camel",
                "start": 1,
                "entityID": 0,
                "end": 8,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Who is the producer of  Frampton's Camel ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP Who)) (SQ (VBZ is) (NP (NP (DT the) (NN producer)) (PP (IN of) (NP (NP (NNP Frampton) (POS 's)) (NNP Camel))))) (. ?)))",
        "id": 177
    },
    {
        "taggedQuestion": "Name the directors of Lennon Legend: The Very Best of John Lennon (DVD) .",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "name",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the directors of Lennon Legend : The Very Best of John Lennon(DVD)",
                "containsRefer": false,
                "originStr": "the directors of Lennon Legend : The Very Best of John Lennon(DVD)",
                "start": 1,
                "entityID": 0,
                "end": 16,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Name the directors of Lennon Legend: The Very Best of John Lennon (DVD) .",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Name) (NP (NP (NP (DT the) (NNS directors)) (PP (IN of) (NP (NNP Lennon) (NNP Legend)))) (: :) (NP (NP (DT The) (ADJP (RB Very) (JJS Best))) (PP (IN of) (NP (NNP John) (NNP Lennon) (-LRB- -LRB-) (NNP DVD) (-RRB- -RRB-)))))) (. .)))",
        "id": 178
    },
    {
        "taggedQuestion": "What is the political party of <e0> and Indira Gandhi?",
        "entityMap": {"<e0>": "Arun Chandra Guha"},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is #entity1 and Indira Gandhi",
                "containsRefer": true,
                "originStr": "is #entity1 and Indira Gandhi",
                "start": 1,
                "entityID": 0,
                "end": 10,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the political party of Arun Chandra Guha",
                "containsRefer": false,
                "originStr": "the political party of Arun Chandra Guha",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is the political party of Arun Chandra Guha and Indira Gandhi?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": -1,
                "from": 2,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (NP (DT the) (JJ political) (NN party)) (PP (IN of) (NP (NP (ADD <e0>)) (CC and) (NP (NNP Indira) (NNP Gandhi)))))) (. ?)))",
        "id": 179
    },
    {
        "taggedQuestion": "Which country is Svetlana Navasardyan from?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "country",
                "containsRefer": false,
                "originStr": "country",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is Svetlana Navasardyan from",
                "containsRefer": false,
                "originStr": "is Svetlana Navasardyan from",
                "start": 2,
                "entityID": 0,
                "end": 6,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which country is Svetlana Navasardyan from?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NN country)) (SQ (VBZ is) (NP (NNP Svetlana) (NNP Navasardyan)) (PP (IN from))) (. ?)))",
        "id": 180
    },
    {
        "taggedQuestion": "What is the alma mater of the scientist who is known for Rational analysis ?",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the alma mater of #entity1",
                "containsRefer": true,
                "originStr": "is the alma mater of #entity1",
                "start": 1,
                "entityID": 0,
                "end": 14,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the scientist",
                "containsRefer": false,
                "originStr": "the scientist",
                "start": 6,
                "entityID": 1,
                "end": 8,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is known for Rational analysis",
                "containsRefer": false,
                "originStr": "is known for Rational analysis",
                "start": 9,
                "entityID": 1,
                "end": 14,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is the alma mater of the scientist who is known for Rational analysis ?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 6,
                "from": 2,
                "end": 14,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (NP (DT the) (NN alma) (NN mater)) (PP (IN of) (NP (NP (DT the) (NN scientist)) (SBAR (WHNP (WP who)) (S (VP (VBZ is) (VP (VBN known) (PP (IN for) (NP (JJ Rational) (NN analysis))))))))))) (. ?)))",
        "id": 181
    },
    {
        "taggedQuestion": "Who is the owner of  Chelsea F.C. ?",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "who",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the owner of Chelsea F.C",
                "containsRefer": false,
                "originStr": "is the owner of Chelsea F.C",
                "start": 1,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Who is the owner of  Chelsea F.C. ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP Who)) (SQ (VBZ is) (NP (NP (DT the) (NN owner)) (PP (IN of) (NP (NNP Chelsea) (NNP F.C.))))) (. ?)))",
        "id": 182
    },
    {
        "taggedQuestion": "How many places has <e0> worked?",
        "entityMap": {"<e0>": "Don R. Berlin"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "How many",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "has Don R. Berlin worked",
                "containsRefer": false,
                "originStr": "has Don R. Berlin worked",
                "start": 3,
                "entityID": 0,
                "end": 6,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "places",
                "containsRefer": false,
                "originStr": "places",
                "start": 2,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "How many places has Don R. Berlin worked?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBAR (WHADJP (WRB How) (JJ many)) (S (NP (NNS places)) (VP (VBZ has) (NP (NP (ADD <e0>)) (VP (VBN worked))))) (. ?)))",
        "id": 183
    },
    {
        "taggedQuestion": "How many movies are there whose musicians home town is in Volos ?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "how many",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "movies",
                "containsRefer": false,
                "originStr": "movies",
                "start": 2,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "whose musicians home town is in Volos",
                "containsRefer": false,
                "originStr": "whose musicians home town is in Volos",
                "start": 7,
                "entityID": 0,
                "end": 12,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "How many movies are there whose musicians home town is in Volos ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3,
                "info": "whose musicians"
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WHADJP (WRB How) (JJ many)) (NML (NNS movies))) (SQ (VBP are) (NP (EX there)) (SBAR (WHNP (WP$ whose) (NNS musicians)) (S (ADVP (RB home)) (NP (NN town)) (VP (VBZ is) (PP (IN in) (NP (NNP Volos))))))) (. ?)))",
        "id": 184
    },
    {
        "taggedQuestion": "In all the places with a stagecoach, where is a <e0> located too?",
        "entityMap": {"<e0>": "Peetz Table Wind Energy Center"},
        "nodeNum": 7,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "In all the places with #entity1",
                "containsRefer": true,
                "originStr": "In all the places with #entity1",
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is a Peetz Table Wind Energy Center located too",
                "containsRefer": false,
                "originStr": "is a Peetz Table Wind Energy Center located too",
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "stagecoach",
                "containsRefer": false,
                "originStr": "stagecoach",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 4,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is a Peetz Table Wind Energy Center located too",
                "containsRefer": false,
                "originStr": "is a Peetz Table Wind Energy Center located too",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 3,
                "nodeID": 6,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "In all the places with a stagecoach, where is a Peetz Table Wind Energy Center located too?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": -1,
                "from": 2,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 5
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 6
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (PP (IN In) (NP (NP (PDT all) (DT the) (NNS places)) (PP (IN with) (NP (DT a) (NN stagecoach))))) (, ,) (WHADVP (WRB where)) (SQ (VBZ is) (NP (DT a) (NN <e0>)) (VP (VBN located) (ADVP (RB too)))) (. ?)))",
        "id": 185
    },
    {
        "taggedQuestion": "Name the fictional character whose relatives are Huey, Dewey, and Louie and is of species <e0>.",
        "entityMap": {"<e0>": "American Pekin duck"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "name",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are Huey , Dewey , and Louie",
                "containsRefer": false,
                "originStr": "are Huey , Dewey , and Louie",
                "start": 1,
                "entityID": 0,
                "end": 13,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is of species American Pekin duck",
                "containsRefer": false,
                "originStr": "is of species American Pekin duck",
                "start": 14,
                "entityID": 0,
                "end": 17,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Name the fictional character whose relatives are Huey, Dewey, and Louie and is of species American Pekin duck.",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Name) (NP (NP (NP (DT the) (JJ fictional) (NN character)) (SBAR (WHNP (WP$ whose) (NML (NNS relatives))) (S (VP (VP (VBP are) (NP (NNP Huey) (, ,) (NNP Dewey) (, ,) (CC and) (NNP Louie))) (CC and) (VP (VBZ is) (PP (IN of) (NP (NNS species)))))))) (ADD <e0>))) (. .)))",
        "id": 186
    },
    {
        "taggedQuestion": "Who is the owner of the website which has the label Seed Eight ?",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "who",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the owner of #entity1",
                "containsRefer": true,
                "originStr": "is the owner of #entity1",
                "start": 1,
                "entityID": 0,
                "end": 13,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the website",
                "containsRefer": false,
                "originStr": "the website",
                "start": 5,
                "entityID": 1,
                "end": 7,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "has the label Seed Eight",
                "containsRefer": false,
                "originStr": "has the label Seed Eight",
                "start": 8,
                "entityID": 1,
                "end": 13,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Who is the owner of the website which has the label Seed Eight ?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 5,
                "from": 2,
                "end": 13,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP Who)) (SQ (VBZ is) (NP (NP (DT the) (NN owner)) (PP (IN of) (NP (NP (DT the) (NN website)) (SBAR (WHNP (WDT which)) (S (VP (VBZ has) (NP (DT the) (NN label) (NN Seed) (CD Eight))))))))) (. ?)))",
        "id": 187
    },
    {
        "taggedQuestion": "Which country is <e0>?",
        "entityMap": {"<e0>": "Sierra del Merendin"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "country",
                "containsRefer": false,
                "originStr": "country",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is Sierra del Merendin",
                "containsRefer": false,
                "originStr": "is Sierra del Merendin",
                "start": 2,
                "entityID": 0,
                "end": 4,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which country is Sierra del Merendin?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NN country)) (SQ (VP (VBZ is) (NP (ADD <e0>)))) (. ?)))",
        "id": 188
    },
    {
        "taggedQuestion": "What is on the border of the places which fall under crook county municipality, oregon?",
        "entityMap": {},
        "nodeNum": 8,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is on #entity1",
                "containsRefer": true,
                "originStr": "is on #entity1",
                "start": 1,
                "entityID": 0,
                "end": 16,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the border of #entity2",
                "containsRefer": true,
                "originStr": "the border of #entity2",
                "start": 3,
                "entityID": 1,
                "end": 16,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 2,
                "end": -1,
                "nodeType": 2,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the places",
                "containsRefer": false,
                "originStr": "the places",
                "start": 6,
                "entityID": 2,
                "end": 8,
                "nodeType": 4,
                "nodeID": 6,
                "questionType": "UNKNOWN"
            },
            {
                "str": "fall under crook county municipality , oregon",
                "containsRefer": false,
                "originStr": "fall under crook county municipality , oregon",
                "start": 9,
                "entityID": 2,
                "end": 16,
                "nodeType": 3,
                "nodeID": 7,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is on the border of the places which fall under crook county municipality, oregon?",
        "entityNum": 3,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 3,
                "from": 2,
                "end": 16,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 6,
                "from": 4,
                "end": 16,
                "to": 5
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 5,
                "end": -1,
                "to": 6
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 5,
                "end": -1,
                "to": 7
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (PP (IN on) (NP (NP (DT the) (NN border)) (PP (IN of) (NP (NP (DT the) (NNS places)) (SBAR (WHNP (WDT which)) (S (VP (VBP fall) (PP (IN under) (NP (NP (NN crook) (NN county) (NN municipality)) (, ,) (NP (NNP oregon)))))))))))) (. ?)))",
        "id": 189
    },
    {
        "taggedQuestion": "Which is the university of Vanderbilt Commodores ?",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the university of Vanderbilt Commodores",
                "containsRefer": false,
                "originStr": "is the university of Vanderbilt Commodores",
                "start": 1,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which is the university of Vanderbilt Commodores ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which)) (SQ (VBZ is) (NP (NP (DT the) (NN university)) (PP (IN of) (NP (NNP Vanderbilt) (NNPS Commodores))))) (. ?)))",
        "id": 190
    },
    {
        "taggedQuestion": "Whose relatives are Clan McDuck and Huey, Dewey, and Louie?",
        "entityMap": {},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "whose",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "relatives",
                "containsRefer": false,
                "originStr": "relatives",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are Clan McDuck",
                "containsRefer": false,
                "originStr": "are Clan McDuck",
                "start": 2,
                "entityID": 0,
                "end": 5,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are Huey , Dewey , and Louie",
                "containsRefer": false,
                "originStr": "are Huey , Dewey , and Louie",
                "start": 6,
                "entityID": 0,
                "end": 11,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Whose relatives are Clan McDuck and Huey, Dewey, and Louie?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WHNP (WP$ Whose)) (NP (NNS relatives))) (SQ (VBP are) (NP (NP (NNP Clan) (NNP McDuck)) (CC and) (NP (NNP Huey) (, ,) (NNP Dewey) (, ,) (CC and) (NNP Louie)))) (. ?)))",
        "id": 191
    },
    {
        "taggedQuestion": "What musicians are signed up with colpix records?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are signed up with colpix records",
                "containsRefer": false,
                "originStr": "are signed up with colpix records",
                "start": 2,
                "entityID": 0,
                "end": 8,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "musicians",
                "containsRefer": false,
                "originStr": "musicians",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What musicians are signed up with colpix records?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBAR (WHNP (WDT What)) (S (NP (NNS musicians)) (VP (VBP are) (VP (VBN signed) (PRT (RP up)) (PP (IN with) (NP (NN colpix) (NNS records)))))) (. ?)))",
        "id": 192
    },
    {
        "taggedQuestion": "Who is the person that first ascented the Cathedral Peak and Mount Hoffmann?",
        "entityMap": {},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "who",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the person",
                "containsRefer": false,
                "originStr": "the person",
                "start": 2,
                "entityID": 0,
                "end": 4,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "first ascented the Cathedral Peak",
                "containsRefer": false,
                "originStr": "first ascented the Cathedral Peak",
                "start": 5,
                "entityID": 0,
                "end": 10,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "first ascented Mount Hoffmann",
                "containsRefer": false,
                "originStr": "first ascented Mount Hoffmann",
                "start": 11,
                "entityID": 0,
                "end": 12,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Who is the person that first ascented the Cathedral Peak and Mount Hoffmann?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP Who)) (SQ (VBZ is) (NP (NP (DT the) (NN person)) (SBAR (WHNP (WDT that)) (S (ADVP (RB first)) (VP (VBD ascented) (NP (NP (DT the) (NNP Cathedral) (NN Peak)) (CC and) (NP (NNP Mount) (NNP Hoffmann)))))))) (. ?)))",
        "id": 193
    },
    {
        "taggedQuestion": "What currencies are used in the country whose capital is Podgorica?",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "currencies are used in #entity1",
                "containsRefer": true,
                "originStr": "currencies are used in #entity1",
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "country",
                "containsRefer": false,
                "originStr": "country",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "capital is Podgorica",
                "containsRefer": false,
                "originStr": "capital is Podgorica",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What currencies are used in the country whose capital is Podgorica?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": -1,
                "from": 2,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (SBAR (WHNP (WDT What)) (S (NP (NNS currencies)) (VP (VBP are) (VP (VBN used) (PP (IN in) (NP (DT the) (NN country))))))) (WHNP (WP$ whose) (NN capital)) (SQ (VBZ is) (NP (NNP Podgorica))) (. ?)))",
        "id": 194
    },
    {
        "taggedQuestion": "How many other home stadium are there of the soccer club whose home stadium is Luzhniki Stadium ?",
        "entityMap": {},
        "nodeNum": 7,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "how many",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "other home stadium",
                "containsRefer": false,
                "originStr": "other home stadium",
                "start": 2,
                "entityID": 0,
                "end": 5,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are there of #entity1",
                "containsRefer": true,
                "originStr": "are there of #entity1",
                "start": 5,
                "entityID": 0,
                "end": 17,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the soccer club",
                "containsRefer": false,
                "originStr": "the soccer club",
                "start": 8,
                "entityID": 1,
                "end": 11,
                "nodeType": 4,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            },
            {
                "str": "whose home stadium is Luzhniki Stadium",
                "containsRefer": false,
                "originStr": "whose home stadium is Luzhniki Stadium",
                "start": 14,
                "entityID": 1,
                "end": 17,
                "nodeType": 3,
                "nodeID": 6,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "How many other home stadium are there of the soccer club whose home stadium is Luzhniki Stadium ?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 8,
                "from": 3,
                "end": 17,
                "to": 4
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 5
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 6,
                "info": "whose home stadium"
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WHADJP (WRB How) (JJ many)) (JJ other) (NN home) (NN stadium)) (SQ (VBP are) (NP (NP (RB there)) (PP (IN of) (NP (NP (DT the) (NN soccer) (NN club)) (SBAR (WHNP (WP$ whose) (NN home) (NN stadium)) (S (VP (VBZ is) (NP (NNP Luzhniki) (NNP Stadium))))))))) (. ?)))",
        "id": 195
    },
    {
        "taggedQuestion": "Where was  William Anthony  trained ?",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "Where",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "was William Anthony trained",
                "containsRefer": false,
                "originStr": "was William Anthony trained",
                "start": 1,
                "entityID": 0,
                "end": 5,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Where was  William Anthony  trained ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHADVP (WRB Where)) (SQ (VBD was) (NP (NNP William) (NNP Anthony)) (VP (VBN trained))) (. ?)))",
        "id": 196
    },
    {
        "taggedQuestion": "Which composer of Motorpsycho Nitemare has also composed The time are A-Changing ?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "composer of Motorpsycho Nitemare",
                "containsRefer": false,
                "originStr": "composer of Motorpsycho Nitemare",
                "start": 1,
                "entityID": 0,
                "end": 5,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "composed The time are A-Changing",
                "containsRefer": false,
                "originStr": "composed The time are A-Changing",
                "start": 5,
                "entityID": 0,
                "end": 12,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which composer of Motorpsycho Nitemare has also composed The time are A-Changing ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WHNP (WDT Which) (NN composer)) (PP (IN of) (NP (NNP Motorpsycho) (NNP Nitemare)))) (SQ (VP (VBZ has) (ADVP (RB also)) (VP (VBN composed) (SBAR (S (NP (DT The) (NN time)) (VP (VBP are) (NP (NN A-Changing)))))))) (. ?)))",
        "id": 197
    },
    {
        "taggedQuestion": "What river is it whose source is Dowra?",
        "entityMap": {},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "river",
                "containsRefer": false,
                "originStr": "river",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "it",
                "containsRefer": false,
                "originStr": "it",
                "start": 3,
                "entityID": 0,
                "end": 4,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "whose source is Dowra",
                "containsRefer": false,
                "originStr": "whose source is Dowra",
                "start": 6,
                "entityID": 0,
                "end": 8,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What river is it whose source is Dowra?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4,
                "info": "whose source"
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT What) (NN river)) (SQ (VBZ is) (NP (PRP it)) (SBAR (WHNP (WP$ whose) (NML (NN source))) (S (VP (VBZ is) (NP (NNP Dowra)))))) (. ?)))",
        "id": 198
    },
    {
        "taggedQuestion": "What is the religion of the president who won the <e0>, 2004 ?",
        "entityMap": {"<e0>": "Mongolian legislative election"},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the religion of #entity1",
                "containsRefer": true,
                "originStr": "is the religion of #entity1",
                "start": 1,
                "entityID": 0,
                "end": 13,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the president",
                "containsRefer": false,
                "originStr": "the president",
                "start": 5,
                "entityID": 1,
                "end": 7,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "won the Mongolian legislative election , 2004",
                "containsRefer": false,
                "originStr": "won the Mongolian legislative election , 2004",
                "start": 8,
                "entityID": 1,
                "end": 13,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is the religion of the president who won the Mongolian legislative election, 2004 ?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 5,
                "from": 2,
                "end": 13,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (NP (DT the) (NN religion)) (PP (IN of) (NP (NP (DT the) (NN president)) (SBAR (WHNP (WP who)) (S (VP (VBD won) (NP (NP (DT the) (NN <e0>)) (, ,) (NP (CD 2004)))))))))) (. ?)))",
        "id": 199
    },
    {
        "taggedQuestion": "Give me everything owned by networks which is lead by Steve Burke.",
        "entityMap": {},
        "nodeNum": 7,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "give me",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "everything",
                "containsRefer": false,
                "originStr": "everything",
                "start": 2,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "owned by #entity1",
                "containsRefer": true,
                "originStr": "owned by #entity1",
                "start": 3,
                "entityID": 0,
                "end": 12,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "networks",
                "containsRefer": false,
                "originStr": "networks",
                "start": 5,
                "entityID": 1,
                "end": 6,
                "nodeType": 4,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is lead by Steve Burke",
                "containsRefer": false,
                "originStr": "is lead by Steve Burke",
                "start": 7,
                "entityID": 1,
                "end": 12,
                "nodeType": 3,
                "nodeID": 6,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Give me everything owned by networks which is lead by Steve Burke.",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 5,
                "from": 3,
                "end": 12,
                "to": 4
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 5
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 6
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Give) (NP (PRP me)) (NP (NP (NN everything)) (VP (VBN owned) (PP (IN by) (NP (NP (NNS networks)) (SBAR (WHNP (WDT which)) (S (VP (VBZ is) (NP (NP (JJ lead)) (PP (IN by) (NP (NNP Steve) (NNP Burke)))))))))))) (. .)))",
        "id": 200
    },
    {
        "taggedQuestion": "What is the municipality of <e0> ?",
        "entityMap": {"<e0>": "Homestead Grays Bridge"},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the municipality of Homestead Grays Bridge",
                "containsRefer": false,
                "originStr": "is the municipality of Homestead Grays Bridge",
                "start": 1,
                "entityID": 0,
                "end": 6,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is the municipality of Homestead Grays Bridge ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (NP (DT the) (NN municipality)) (PP (IN of) (NP (NN <e0>))))) (. ?)))",
        "id": 201
    },
    {
        "taggedQuestion": "What religion do the politicians follow, who graduated from the <e0>?",
        "entityMap": {"<e0>": "Yokkohama Nationaal University"},
        "nodeNum": 7,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "religion do #entity1",
                "containsRefer": true,
                "originStr": "religion do #entity1",
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "graduated from the Yokkohama Nationaal University",
                "containsRefer": false,
                "originStr": "graduated from the Yokkohama Nationaal University",
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "politicians follow",
                "containsRefer": false,
                "originStr": "politicians follow",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 4,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            },
            {
                "str": "graduated from the Yokkohama Nationaal University",
                "containsRefer": false,
                "originStr": "graduated from the Yokkohama Nationaal University",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 3,
                "nodeID": 6,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What religion do the politicians follow, who graduated from the Yokkohama Nationaal University?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": -1,
                "from": 2,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 5
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 6
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (SBARQ (WHNP (WDT What) (NN religion)) (SQ (VBP do) (NP (DT the) (NNS politicians)) (VP (VBP follow)))) (, ,) (SBARQ (WHNP (WP who)) (SQ (VP (VBD graduated) (PP (IN from) (NP (DT the) (NN <e0>)))))) (. ?)))",
        "id": 202
    },
    {
        "taggedQuestion": "Who is the narrator of <e0> , <e1> ?",
        "entityMap": {
            "<e1>": "1982 TV series",
            "<e0>": "The Incredible Hulk"
        },
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "who",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is #entity1 , 1982 TV series",
                "containsRefer": true,
                "originStr": "is #entity1 , 1982 TV series",
                "start": 1,
                "entityID": 0,
                "end": 8,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the narrator of The Incredible Hulk",
                "containsRefer": false,
                "originStr": "the narrator of The Incredible Hulk",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Who is the narrator of The Incredible Hulk , 1982 TV series ?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": -1,
                "from": 2,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP Who)) (SQ (VBZ is) (NP (NP (DT the) (NN narrator)) (PP (IN of) (NP (NP (NN <e0>)) (, ,) (NP (NN <e1>)))))) (. ?)))",
        "id": 203
    },
    {
        "taggedQuestion": "What sports are played in schools where Swahili is the official language?",
        "entityMap": {},
        "nodeNum": 7,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "sports",
                "containsRefer": false,
                "originStr": "sports",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are played in #entity1",
                "containsRefer": true,
                "originStr": "are played in #entity1",
                "start": 2,
                "entityID": 0,
                "end": 12,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "schools",
                "containsRefer": false,
                "originStr": "schools",
                "start": 5,
                "entityID": 1,
                "end": 6,
                "nodeType": 4,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Swahili is the official language",
                "containsRefer": false,
                "originStr": "Swahili is the official language",
                "start": 7,
                "entityID": 1,
                "end": 12,
                "nodeType": 3,
                "nodeID": 6,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What sports are played in schools where Swahili is the official language?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 5,
                "from": 3,
                "end": 12,
                "to": 4
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 5
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 6
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT What) (NNS sports)) (SQ (VBP are) (VP (VBN played) (PP (IN in) (NP (NP (NNS schools)) (SBAR (WHADVP (WRB where)) (S (NP (NNP Swahili)) (VP (VBZ is) (NP (DT the) (JJ official) (NN language))))))))) (. ?)))",
        "id": 204
    },
    {
        "taggedQuestion": "Which interest of Philip Novak is the relegion of Vesak ?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "interest of Philip Novak",
                "containsRefer": false,
                "originStr": "interest of Philip Novak",
                "start": 1,
                "entityID": 0,
                "end": 5,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the relegion of Vesak",
                "containsRefer": false,
                "originStr": "is the relegion of Vesak",
                "start": 5,
                "entityID": 0,
                "end": 10,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which interest of Philip Novak is the relegion of Vesak ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WHNP (WDT Which) (NN interest)) (PP (IN of) (NP (NNP Philip) (NNP Novak)))) (SQ (VBZ is) (NP (NP (DT the) (NN relegion)) (PP (IN of) (NP (NNP Vesak))))) (. ?)))",
        "id": 205
    },
    {
        "taggedQuestion": "Count all the ethinic group who speaks language which belongs to Anglo-Frisian language family .",
        "entityMap": {"<e0>": "Anglo - Frisian language family"},
        "nodeNum": 7,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "count",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "all the ethinic group",
                "containsRefer": false,
                "originStr": "all the ethinic group",
                "start": 1,
                "entityID": 0,
                "end": 5,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "#entity1 family",
                "containsRefer": true,
                "originStr": "#entity1 family",
                "start": 6,
                "entityID": 0,
                "end": 16,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "language",
                "containsRefer": false,
                "originStr": "language",
                "start": 7,
                "entityID": 1,
                "end": 8,
                "nodeType": 4,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            },
            {
                "str": "belongs to Anglo-Frisian language family",
                "containsRefer": false,
                "originStr": "belongs to Anglo-Frisian language family",
                "start": 9,
                "entityID": 1,
                "end": 16,
                "nodeType": 3,
                "nodeID": 6,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Count all the ethinic group who speaks language which belongs to Anglo-Frisian language family .",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 7,
                "from": 3,
                "end": 16,
                "to": 4
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 5
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 6
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Count) (NP (NP (PDT all) (DT the) (JJ ethinic) (NN group)) (SBAR (WHNP (WP who)) (S (VP (VBZ speaks) (NP (NP (NN language)) (SBAR (WHNP (WDT which)) (S (VP (VBZ belongs) (PP (IN to) (NP (ADJP (JJ Anglo) (HYPH -) (JJ Frisian)) (NN language) (NN family)))))))))))) (. .)))",
        "id": 206
    },
    {
        "taggedQuestion": "What is the area of the <e0> which is  official residence of the Michael Nichols (photographer) ?",
        "entityMap": {"<e0>": "Tar Heel Sports Network"},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the area of #entity1",
                "containsRefer": true,
                "originStr": "is the area of #entity1",
                "start": 1,
                "entityID": 0,
                "end": 18,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the Tar Heel Sports Network",
                "containsRefer": false,
                "originStr": "the Tar Heel Sports Network",
                "start": 5,
                "entityID": 1,
                "end": 7,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is official residence of the Michael Nichols(photographer)",
                "containsRefer": false,
                "originStr": "is official residence of the Michael Nichols(photographer)",
                "start": 8,
                "entityID": 1,
                "end": 18,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is the area of the Tar Heel Sports Network which is  official residence of the Michael Nichols (photographer) ?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 5,
                "from": 2,
                "end": 18,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (NP (DT the) (NN area)) (PP (IN of) (NP (NP (DT the) (NN <e0>)) (SBAR (WHNP (WDT which)) (S (VP (VBZ is) (NP (NP (JJ official) (NN residence)) (PP (IN of) (NP (DT the) (NNP Michael) (NNP Nichols)))) (PRN (-LRB- -LRB-) (NP (NN photographer)) (-RRB- -RRB-))))))))) (. ?)))",
        "id": 207
    },
    {
        "taggedQuestion": "Cologny and Lancy are the neighboring municipalities of which place ?",
        "entityMap": {},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "place",
                "containsRefer": false,
                "originStr": "place",
                "start": 9,
                "entityID": 0,
                "end": 11,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Cologny are the neighboring municipalities of",
                "containsRefer": false,
                "originStr": "Cologny are the neighboring municipalities of",
                "start": 0,
                "entityID": 0,
                "end": 1,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Lancy are the neighboring municipalities of",
                "containsRefer": false,
                "originStr": "Lancy are the neighboring municipalities of",
                "start": 2,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Cologny and Lancy are the neighboring municipalities of which place ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (S (NP (NNP Cologny) (CC and) (NNP Lancy)) (VP (VBP are) (NP (NP (DT the) (NN neighboring) (NNS municipalities)) (PP (IN of) (NP (WDT which) (NN place))))) (. ?)))",
        "id": 208
    },
    {
        "taggedQuestion": "How many artists have their works in the <e0> of Art?",
        "entityMap": {"<e0>": "Sao Paolo Museum"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "How many",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "have their works in the Sao Paolo Museum of Art",
                "containsRefer": false,
                "originStr": "have their works in the Sao Paolo Museum of Art",
                "start": 3,
                "entityID": 0,
                "end": 11,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "artists",
                "containsRefer": false,
                "originStr": "artists",
                "start": 2,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "How many artists have their works in the Sao Paolo Museum of Art?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBAR (WHADJP (WRB How) (JJ many)) (S (NP (NNS artists)) (VP (VBP have) (NP (PRP$ their) (NNS works)) (PP (IN in) (NP (NP (DT the) (NN <e0>)) (PP (IN of) (NP (NN Art))))))) (. ?)))",
        "id": 209
    },
    {
        "taggedQuestion": "VP-8 and VP-10 shares which command structure ?",
        "entityMap": {},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "command structure",
                "containsRefer": false,
                "originStr": "command structure",
                "start": 0,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "VP-8 and VP-10 shares VP-8",
                "containsRefer": false,
                "originStr": "VP-8 and VP-10 shares VP-8",
                "start": 0,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "VP-8 and VP-10 shares VP-10 shares",
                "containsRefer": false,
                "originStr": "VP-8 and VP-10 shares VP-10 shares",
                "start": 4,
                "entityID": 0,
                "end": 7,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "VP-8 and VP-10 shares which command structure ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (NP (NP (NML (NML (NN VP) (HYPH -) (CD 8)) (CC and) (NML (NN VP) (HYPH -) (CD 10))) (NNS shares)) (SBAR (WHNP (WDT which)) (S (VP (VBP command) (NP (NN structure))))) (. ?)))",
        "id": 210
    },
    {
        "taggedQuestion": "What is used as money for <e0> is also the  product of the Karafarin Bank ?",
        "entityMap": {"<e0>": "French Southern and Antarctic Lands"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the product of the Karafarin Bank",
                "containsRefer": false,
                "originStr": "the product of the Karafarin Bank",
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is used as money for French Southern and Antarctic Lands",
                "containsRefer": false,
                "originStr": "is used as money for French Southern and Antarctic Lands",
                "start": 1,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is used as money for French Southern and Antarctic Lands is also the  product of the Karafarin Bank ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (VP (VBN used) (SBAR (IN as) (S (NP (NP (NN money)) (PP (IN for) (NP (NN <e0>)))) (VP (VBZ is) (ADVP (RB also)) (NP (NP (DT the) (NN product)) (PP (IN of) (NP (DT the) (NNP Karafarin) (NNP Bank))))))))) (. ?)))",
        "id": 211
    },
    {
        "taggedQuestion": "Give me the total number of membership of the organisations which have memebers as  Azerbaijan.",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "give me the total number of",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "membership of #entity1",
                "containsRefer": true,
                "originStr": "membership of #entity1",
                "start": 6,
                "entityID": 0,
                "end": 15,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the organisations",
                "containsRefer": false,
                "originStr": "the organisations",
                "start": 8,
                "entityID": 1,
                "end": 10,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "have memebers as Azerbaijan",
                "containsRefer": false,
                "originStr": "have memebers as Azerbaijan",
                "start": 11,
                "entityID": 1,
                "end": 15,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Give me the total number of membership of the organisations which have memebers as  Azerbaijan.",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 8,
                "from": 2,
                "end": 15,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Give) (NP (PRP me)) (NP (NP (DT the) (JJ total) (NN number)) (PP (IN of) (NP (NP (NN membership)) (PP (IN of) (NP (NP (DT the) (NNS organisations)) (SBAR (WHNP (WDT which)) (S (VP (VBP have) (NP (NP (NNS memebers)) (PP (IN as) (NP (NNP Azerbaijan))))))))))))) (. .)))",
        "id": 212
    },
    {
        "taggedQuestion": "What is the content licence of MSX BASIC ?",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the content licence of MSX BASIC",
                "containsRefer": false,
                "originStr": "is the content licence of MSX BASIC",
                "start": 1,
                "entityID": 0,
                "end": 8,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is the content licence of MSX BASIC ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (NP (DT the) (NN content) (NN licence)) (PP (IN of) (NP (NNP MSX) (NN BASIC))))) (. ?)))",
        "id": 213
    },
    {
        "taggedQuestion": "What are the central characters in <e0>?",
        "entityMap": {"<e0>": "spy kids series"},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are the central characters in spy kids series",
                "containsRefer": false,
                "originStr": "are the central characters in spy kids series",
                "start": 1,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What are the central characters in spy kids series?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBP are) (NP (NP (DT the) (JJ central) (NNS characters)) (PP (IN in) (NP (NN <e0>))))) (. ?)))",
        "id": 214
    },
    {
        "taggedQuestion": "Which comic characters were created by Paul Dini?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "comic characters",
                "containsRefer": false,
                "originStr": "comic characters",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "were created by Paul Dini",
                "containsRefer": false,
                "originStr": "were created by Paul Dini",
                "start": 3,
                "entityID": 0,
                "end": 8,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which comic characters were created by Paul Dini?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (JJ comic) (NNS characters)) (SQ (VP (VBD were) (VP (VBN created) (PP (IN by) (NP (NNP Paul) (NNP Dini)))))) (. ?)))",
        "id": 215
    },
    {
        "taggedQuestion": "Who owns the ship Victoria?",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "who",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "owns #entity1",
                "containsRefer": true,
                "originStr": "owns #entity1",
                "start": 1,
                "entityID": 0,
                "end": 5,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the ship",
                "containsRefer": false,
                "originStr": "the ship",
                "start": 2,
                "entityID": 1,
                "end": 4,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Victoria",
                "containsRefer": false,
                "originStr": "Victoria",
                "start": 4,
                "entityID": 1,
                "end": 5,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Who owns the ship Victoria?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 2,
                "from": 2,
                "end": 5,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP Who)) (SQ (VP (VBZ owns) (NP (DT the) (NN ship)) (S (NP (NNP Victoria))))) (. ?)))",
        "id": 216
    },
    {
        "taggedQuestion": "Where was the predecessor of Sevan Ross born?",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "Where",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "was the predecessor of Sevan Ross born",
                "containsRefer": false,
                "originStr": "was the predecessor of Sevan Ross born",
                "start": 1,
                "entityID": 0,
                "end": 8,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Where was the predecessor of Sevan Ross born?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHADVP (WRB Where)) (SQ (VBD was) (NP (NP (DT the) (NN predecessor)) (PP (IN of) (NP (NNP Sevan) (NNP Ross)))) (VP (VBN born))) (. ?)))",
        "id": 217
    },
    {
        "taggedQuestion": "Which city council owns the <e0> and <e1>?",
        "entityMap": {
            "<e1>": "Leonard Memorial ridge",
            "<e0>": "Ted Williams tunnel"
        },
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "city",
                "containsRefer": false,
                "originStr": "city",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "owns the Ted Williams tunnel",
                "containsRefer": false,
                "originStr": "owns the Ted Williams tunnel",
                "start": 3,
                "entityID": 0,
                "end": 6,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "council",
                "containsRefer": false,
                "originStr": "council",
                "start": 2,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "owns Leonard Memorial ridge",
                "containsRefer": false,
                "originStr": "owns Leonard Memorial ridge",
                "start": 7,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which city council owns the Ted Williams tunnel and Leonard Memorial ridge?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NN city)) (SQ (NP (NN council)) (VP (VBZ owns) (NP (DT the) (NN <e0>) (CC and) (NN <e1>)))) (. ?)))",
        "id": 218
    },
    {
        "taggedQuestion": "Where is the school which is the rival of Somerset Berkley Regional High?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "Where",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the school",
                "containsRefer": false,
                "originStr": "the school",
                "start": 2,
                "entityID": 0,
                "end": 4,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the rival of Somerset Berkley Regional High",
                "containsRefer": false,
                "originStr": "is the rival of Somerset Berkley Regional High",
                "start": 5,
                "entityID": 0,
                "end": 13,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Where is the school which is the rival of Somerset Berkley Regional High?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHADVP (WRB Where)) (SQ (VBZ is) (NP (NP (DT the) (NN school)) (SBAR (WHNP (WDT which)) (S (VP (VBZ is) (NP (NP (DT the) (NN rival)) (PP (IN of) (NP (NNP Somerset) (NNP Berkley) (NNP Regional) (NNP High))))))))) (. ?)))",
        "id": 219
    },
    {
        "taggedQuestion": "How many soccer manager have been in the <e0>?",
        "entityMap": {"<e0>": "Spain nation football team"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "How many",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "have been in the Spain nation football team",
                "containsRefer": false,
                "originStr": "have been in the Spain nation football team",
                "start": 4,
                "entityID": 0,
                "end": 9,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "soccer manager",
                "containsRefer": false,
                "originStr": "soccer manager",
                "start": 2,
                "entityID": 0,
                "end": 4,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "How many soccer manager have been in the Spain nation football team?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBAR (WHADJP (WRB How) (JJ many)) (S (NP (NN soccer) (NN manager)) (VP (VBP have) (VP (VBN been) (PP (IN in) (NP (DT the) (NN <e0>)))))) (. ?)))",
        "id": 220
    },
    {
        "taggedQuestion": "Name the common alma mater of the <e0> and Jack McGregor",
        "entityMap": {"<e0>": "Henry Morton Dexter"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "name",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the common alma mater of the Henry Morton Dexter",
                "containsRefer": false,
                "originStr": "the common alma mater of the Henry Morton Dexter",
                "start": 1,
                "entityID": 0,
                "end": 8,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the common alma mater of Jack McGregor",
                "containsRefer": false,
                "originStr": "the common alma mater of Jack McGregor",
                "start": 9,
                "entityID": 0,
                "end": 10,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Name the common alma mater of the Henry Morton Dexter and Jack McGregor",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Name) (NP (NP (DT the) (JJ common) (NN alma) (NN mater)) (PP (IN of) (NP (NP (DT the) (NN <e0>)) (CC and) (NP (NNP Jack) (NNP McGregor))))))))",
        "id": 221
    },
    {
        "taggedQuestion": "What are some companies which are founded in Dallas Jurisdiction?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "some companies",
                "containsRefer": false,
                "originStr": "some companies",
                "start": 2,
                "entityID": 0,
                "end": 4,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are founded in Dallas Jurisdiction",
                "containsRefer": false,
                "originStr": "are founded in Dallas Jurisdiction",
                "start": 5,
                "entityID": 0,
                "end": 10,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What are some companies which are founded in Dallas Jurisdiction?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBP are) (NP (NP (DT some) (NNS companies)) (SBAR (WHNP (WDT which)) (S (VP (VBP are) (VP (VBN founded) (PP (IN in) (NP (NNP Dallas) (NN Jurisdiction))))))))) (. ?)))",
        "id": 222
    },
    {
        "taggedQuestion": "How many bands collaborated with artists who signed up with EMI?",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "how many",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "bands collaborated with artists who signed up with EMI",
                "containsRefer": false,
                "originStr": "bands collaborated with artists who signed up with EMI",
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "How many bands collaborated with artists who signed up with EMI?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (SBAR (WHADJP (WRB How) (JJ many)) (S (NP (NNS bands)) (VP (VBD collaborated) (PP (IN with) (NP (NNS artists)))))) (WHNP (WP who)) (SQ (VP (VBD signed) (PRT (RP up)) (PP (IN with) (NP (NNP EMI))))) (. ?)))",
        "id": 223
    },
    {
        "taggedQuestion": "What is the purpose of <e0> ?",
        "entityMap": {"<e0>": "New Zealand Chess Federation"},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the purpose of New Zealand Chess Federation",
                "containsRefer": false,
                "originStr": "is the purpose of New Zealand Chess Federation",
                "start": 1,
                "entityID": 0,
                "end": 6,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is the purpose of New Zealand Chess Federation ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (NP (DT the) (NN purpose)) (PP (IN of) (NP (NN <e0>))))) (. ?)))",
        "id": 224
    },
    {
        "taggedQuestion": "How many TV shows are of the company which are of company which is a subsidiary of <e0> ?",
        "entityMap": {"<e0>": "Big  Ticket Entertainment"},
        "nodeNum": 10,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "How many",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are of #entity1",
                "containsRefer": true,
                "originStr": "are of #entity1",
                "start": 4,
                "entityID": 0,
                "end": 18,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "TV shows",
                "containsRefer": false,
                "originStr": "TV shows",
                "start": 2,
                "entityID": 0,
                "end": 4,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the company",
                "containsRefer": false,
                "originStr": "the company",
                "start": 6,
                "entityID": 1,
                "end": 8,
                "nodeType": 4,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are of #entity2",
                "containsRefer": true,
                "originStr": "are of #entity2",
                "start": 9,
                "entityID": 1,
                "end": 18,
                "nodeType": 3,
                "nodeID": 6,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 2,
                "end": -1,
                "nodeType": 2,
                "nodeID": 7,
                "questionType": "UNKNOWN"
            },
            {
                "str": "company",
                "containsRefer": false,
                "originStr": "company",
                "start": 11,
                "entityID": 2,
                "end": 12,
                "nodeType": 4,
                "nodeID": 8,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is a subsidiary of Big Ticket Entertainment",
                "containsRefer": false,
                "originStr": "is a subsidiary of Big Ticket Entertainment",
                "start": 13,
                "entityID": 2,
                "end": 18,
                "nodeType": 3,
                "nodeID": 9,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "How many TV shows are of the company which are of company which is a subsidiary of Big  Ticket Entertainment ?",
        "entityNum": 3,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 6,
                "from": 2,
                "end": 18,
                "to": 4
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 5
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 6
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 11,
                "from": 6,
                "end": 18,
                "to": 7
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 7,
                "end": -1,
                "to": 8
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 7,
                "end": -1,
                "to": 9
            }
        ],
        "syntaxTreeText": "(ROOT (SBAR (WHADJP (WRB How) (JJ many)) (S (NP (NN TV) (NNS shows)) (VP (VBP are) (PP (IN of) (NP (NP (DT the) (NN company)) (SBAR (WHNP (WDT which)) (S (VP (VBP are) (PP (IN of) (NP (NP (NN company)) (SBAR (WHNP (WDT which)) (S (VP (VBZ is) (NP (NP (DT a) (NN subsidiary)) (PP (IN of) (NP (NN <e0>)))))))))))))))) (. ?)))",
        "id": 225
    },
    {
        "taggedQuestion": "Who operates <e0> ?",
        "entityMap": {"<e0>": "twin Cities 400"},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "who",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "operates twin Cities 400",
                "containsRefer": false,
                "originStr": "operates twin Cities 400",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Who operates twin Cities 400 ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP Who)) (SQ (VP (VBZ operates) (NP (NN <e0>)))) (. ?)))",
        "id": 226
    },
    {
        "taggedQuestion": "What is the city of the <e0> is also the resting place of <e1> ?",
        "entityMap": {
            "<e1>": "Charles A. Boutelle",
            "<e0>": "Maine School of Science and Mathematics"
        },
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the city of the Maine School of Science and Mathematics",
                "containsRefer": false,
                "originStr": "is the city of the Maine School of Science and Mathematics",
                "start": 1,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the resting place of Charles A. Boutelle",
                "containsRefer": false,
                "originStr": "the resting place of Charles A. Boutelle",
                "start": 9,
                "entityID": 0,
                "end": 14,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is the city of the Maine School of Science and Mathematics is also the resting place of Charles A. Boutelle ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (NP (DT the) (NN city)) (PP (IN of) (NP (NP (DT the) (NN <e0>)) (SBAR (S (VP (VBZ is) (ADVP (RB also)) (NP (NP (DT the) (JJ resting) (NN place)) (PP (IN of) (NP (NN <e1>))))))))))) (. ?)))",
        "id": 227
    },
    {
        "taggedQuestion": "Give me a count of royalties buried in Rome .",
        "entityMap": {},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "give me a count of",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "royalties",
                "containsRefer": false,
                "originStr": "royalties",
                "start": 0,
                "entityID": 0,
                "end": 1,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "buried in Rome",
                "containsRefer": false,
                "originStr": "buried in Rome",
                "start": 1,
                "entityID": 0,
                "end": 4,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "",
                "containsRefer": false,
                "originStr": "",
                "start": 4,
                "entityID": 0,
                "end": 5,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Give me a count of royalties buried in Rome .",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Give) (NP (PRP me)) (NP (NP (DT a) (NN count)) (PP (IN of) (NP (NP (NNS royalties)) (VP (VBN buried) (PP (IN in) (NP (NNP Rome)))))))) (. .)))",
        "id": 228
    },
    {
        "taggedQuestion": "How many places are Marjas found?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "how many",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "places",
                "containsRefer": false,
                "originStr": "places",
                "start": 2,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are Marjas found",
                "containsRefer": false,
                "originStr": "are Marjas found",
                "start": 3,
                "entityID": 0,
                "end": 6,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "How many places are Marjas found?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WHADJP (WRB How) (JJ many)) (NML (NNS places))) (SQ (VBP are) (NP (NNP Marjas)) (VP (VBN found))) (. ?)))",
        "id": 229
    },
    {
        "taggedQuestion": "List the soccer players whose current team has the ground Stoke-on-Trent.",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "list",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the soccer players",
                "containsRefer": false,
                "originStr": "the soccer players",
                "start": 1,
                "entityID": 0,
                "end": 4,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "whose current team has the ground Stoke-on-Trent",
                "containsRefer": false,
                "originStr": "whose current team has the ground Stoke-on-Trent",
                "start": 7,
                "entityID": 0,
                "end": 15,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "List the soccer players whose current team has the ground Stoke-on-Trent.",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3,
                "info": "whose current team"
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB List) (NP (NP (DT the) (NN soccer) (NNS players)) (SBAR (WHNP (WP$ whose) (ADJP (JJ current)) (NN team)) (S (VP (VBZ has) (NP (NP (DT the) (NN ground) (NN Stoke)) (HYPH -) (PP (IN on) (HYPH -) (NP (NNP Trent))))))))) (. .)))",
        "id": 230
    },
    {
        "taggedQuestion": "Which are the countires where Pioneer Corporation has flourished?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the countires",
                "containsRefer": false,
                "originStr": "the countires",
                "start": 2,
                "entityID": 0,
                "end": 4,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Pioneer Corporation has flourished",
                "containsRefer": false,
                "originStr": "Pioneer Corporation has flourished",
                "start": 5,
                "entityID": 0,
                "end": 9,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which are the countires where Pioneer Corporation has flourished?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which)) (SQ (VBP are) (NP (NP (DT the) (NNS countires)) (SBAR (WHADVP (WRB where)) (S (NP (NNP Pioneer) (NNP Corporation)) (VP (VBZ has) (VP (VBN flourished))))))) (. ?)))",
        "id": 231
    },
    {
        "taggedQuestion": "Who is the president of Carl Stokes nad Wyche Fowler ?",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "who",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the president of Carl Stokes nad Wyche Fowler",
                "containsRefer": false,
                "originStr": "is the president of Carl Stokes nad Wyche Fowler",
                "start": 1,
                "entityID": 0,
                "end": 10,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Who is the president of Carl Stokes nad Wyche Fowler ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP Who)) (SQ (VBZ is) (NP (NP (DT the) (NN president)) (PP (IN of) (NP (NNP Carl) (NNP Stokes) (NNP nad) (NNP Wyche) (NNP Fowler))))) (. ?)))",
        "id": 232
    },
    {
        "taggedQuestion": "Is <e0> the national anthem of United Kingdom?",
        "entityMap": {"<e0>": "God Save the Queen"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "is",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "JUDGE"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "God Save the Queen the national anthem of",
                "containsRefer": false,
                "originStr": "God Save the Queen the national anthem of",
                "start": 1,
                "entityID": 0,
                "end": 6,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "United Kingdom",
                "containsRefer": false,
                "originStr": "United Kingdom",
                "start": 6,
                "entityID": 0,
                "end": 8,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Is God Save the Queen the national anthem of United Kingdom?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SQ (VBZ Is) (NP (NP (ADD <e0>)) (PP (NP (DT the) (JJ national) (NN anthem)) (IN of))) (NP (NNP United) (NNP Kingdom)) (. ?)))",
        "id": 233
    },
    {
        "taggedQuestion": "List few <e0> ?",
        "entityMap": {"<e0>": "Swedish language movies"},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "list",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "few Swedish language movies",
                "containsRefer": false,
                "originStr": "few Swedish language movies",
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "List few Swedish language movies ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (FRAG (NP (NN List)) (NP (JJ few) (NN <e0>)) (. ?)))",
        "id": 234
    },
    {
        "taggedQuestion": "Was christina crawford trained by Booker T?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "was",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "JUDGE"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "christina crawford",
                "containsRefer": false,
                "originStr": "christina crawford",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "trained by Booker T",
                "containsRefer": false,
                "originStr": "trained by Booker T",
                "start": 3,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Was christina crawford trained by Booker T?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SQ (VBD Was) (NP (NNP christina) (NNP crawford)) (VP (VBN trained) (PP (IN by) (NP (NNP Booker) (NNP T)))) (. ?)))",
        "id": 235
    },
    {
        "taggedQuestion": "What is the currency of Kerguelen Islands ?",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the currency of Kerguelen Islands",
                "containsRefer": false,
                "originStr": "is the currency of Kerguelen Islands",
                "start": 1,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is the currency of Kerguelen Islands ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (NP (DT the) (NN currency)) (PP (IN of) (NP (NNP Kerguelen) (NNPS Islands))))) (. ?)))",
        "id": 236
    },
    {
        "taggedQuestion": "What are the musicals whose musicians worked under <e0>?",
        "entityMap": {"<e0>": "Sony Music Entertainment"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the musicals",
                "containsRefer": false,
                "originStr": "the musicals",
                "start": 2,
                "entityID": 0,
                "end": 4,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "whose musicians worked under Sony Music Entertainment",
                "containsRefer": false,
                "originStr": "whose musicians worked under Sony Music Entertainment",
                "start": 6,
                "entityID": 0,
                "end": 9,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What are the musicals whose musicians worked under Sony Music Entertainment?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3,
                "info": "whose musicians"
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBP are) (NP (NP (DT the) (NNS musicals)) (SBAR (WHNP (WP$ whose) (NNS musicians)) (S (VP (VBD worked) (PP (IN under) (NP (NN <e0>)))))))) (. ?)))",
        "id": 237
    },
    {
        "taggedQuestion": "Whose shrines are in a place governed by Justin Trudeau?",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "whose",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are in #entity1",
                "containsRefer": true,
                "originStr": "are in #entity1",
                "start": 2,
                "entityID": 0,
                "end": 10,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "a place",
                "containsRefer": false,
                "originStr": "a place",
                "start": 4,
                "entityID": 1,
                "end": 6,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "governed by Justin Trudeau",
                "containsRefer": false,
                "originStr": "governed by Justin Trudeau",
                "start": 6,
                "entityID": 1,
                "end": 10,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Whose shrines are in a place governed by Justin Trudeau?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 4,
                "from": 2,
                "end": 10,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (SBAR (WHNP (WP$ Whose) (NNS shrines)) (S (VP (VBP are) (PP (IN in) (NP (NP (DT a) (NN place)) (VP (VBN governed) (PP (IN by) (NP (NNP Justin) (NNP Trudeau)))))))) (. ?)))",
        "id": 238
    },
    {
        "taggedQuestion": "What are the academic interests of the past members of Senser?",
        "entityMap": {},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are the academic interests of #entity1",
                "containsRefer": true,
                "originStr": "are the academic interests of #entity1",
                "start": 1,
                "entityID": 0,
                "end": 11,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the past members of Senser",
                "containsRefer": false,
                "originStr": "the past members of Senser",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What are the academic interests of the past members of Senser?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": -1,
                "from": 2,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBP are) (NP (NP (DT the) (JJ academic) (NNS interests)) (PP (IN of) (NP (NP (DT the) (JJ past) (NNS members)) (PP (IN of) (NP (NNP Senser))))))) (. ?)))",
        "id": 239
    },
    {
        "taggedQuestion": "Who is the leader of Hackweiser ?",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "who",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the leader of Hackweiser",
                "containsRefer": false,
                "originStr": "is the leader of Hackweiser",
                "start": 1,
                "entityID": 0,
                "end": 6,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Who is the leader of Hackweiser ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP Who)) (SQ (VBZ is) (NP (NP (DT the) (NN leader)) (PP (IN of) (NP (NNP Hackweiser))))) (. ?)))",
        "id": 240
    },
    {
        "taggedQuestion": "Which city is the sister station of KTXY located ?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "city",
                "containsRefer": false,
                "originStr": "city",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the sister station of KTXY located",
                "containsRefer": false,
                "originStr": "is the sister station of KTXY located",
                "start": 2,
                "entityID": 0,
                "end": 9,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which city is the sister station of KTXY located ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NN city)) (SQ (VBZ is) (NP (NP (DT the) (NN sister) (NN station)) (PP (IN of) (NP (NNP KTXY)))) (VP (VBN located))) (. ?)))",
        "id": 241
    },
    {
        "taggedQuestion": "Where was the successor of Hank Brown born?",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "Where",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "was the successor of Hank Brown born",
                "containsRefer": false,
                "originStr": "was the successor of Hank Brown born",
                "start": 1,
                "entityID": 0,
                "end": 8,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Where was the successor of Hank Brown born?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHADVP (WRB Where)) (SQ (VBD was) (NP (NP (DT the) (NN successor)) (PP (IN of) (NP (NNP Hank) (NNP Brown)))) (VP (VBN born))) (. ?)))",
        "id": 242
    },
    {
        "taggedQuestion": "Name the constituency of Jonas Gahr where Sverre Krogh was born .",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "name",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the constituency of Jonas Gahr",
                "containsRefer": false,
                "originStr": "the constituency of Jonas Gahr",
                "start": 1,
                "entityID": 0,
                "end": 6,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Sverre Krogh was born",
                "containsRefer": false,
                "originStr": "Sverre Krogh was born",
                "start": 6,
                "entityID": 0,
                "end": 11,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Name the constituency of Jonas Gahr where Sverre Krogh was born .",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Name) (NP (NP (DT the) (NN constituency)) (PP (IN of) (NP (NNP Jonas) (NNP Gahr)))) (SBAR (WHADVP (WRB where)) (S (NP (NNP Sverre) (NNP Krogh)) (VP (VBD was) (VP (VBN born)))))) (. .)))",
        "id": 243
    },
    {
        "taggedQuestion": "What is the common battle fought by Stephen Urban and <e0> ?",
        "entityMap": {"<e0>": "Ali Habib Mahmud"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the common battle fought by Stephen Urban",
                "containsRefer": false,
                "originStr": "is the common battle fought by Stephen Urban",
                "start": 1,
                "entityID": 0,
                "end": 9,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the common battle fought by Ali Habib Mahmud",
                "containsRefer": false,
                "originStr": "is the common battle fought by Ali Habib Mahmud",
                "start": 10,
                "entityID": 0,
                "end": 10,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is the common battle fought by Stephen Urban and Ali Habib Mahmud ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (DT the) (JJ common) (NN battle)) (VP (VBN fought) (PP (IN by) (NP (NP (NNP Stephen) (NNP Urban)) (CC and) (NP (ADD <e0>)))))) (. ?)))",
        "id": 244
    },
    {
        "taggedQuestion": "What is the relegious affiliations of Katyayana ?",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the relegious affiliations of Katyayana",
                "containsRefer": false,
                "originStr": "is the relegious affiliations of Katyayana",
                "start": 1,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is the relegious affiliations of Katyayana ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (NP (DT the) (JJ relegious) (NNS affiliations)) (PP (IN of) (NP (NNP Katyayana))))) (. ?)))",
        "id": 245
    },
    {
        "taggedQuestion": "Where was the engineer born who manufactured EP R.E.P. 1?",
        "entityMap": {"<e0>": "EP R.E. P. 1"},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "Where",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "was the engineer born #entity1",
                "containsRefer": true,
                "originStr": "was the engineer born #entity1",
                "start": 1,
                "entityID": 0,
                "end": 10,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "manufactured EP R.E.P. 1",
                "containsRefer": false,
                "originStr": "manufactured EP R.E.P. 1",
                "start": 6,
                "entityID": 1,
                "end": 10,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Where was the engineer born who manufactured EP R.E.P. 1?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 5,
                "from": 2,
                "end": 10,
                "to": 3
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHADVP (WRB Where)) (SQ (VBD was) (NP (DT the) (NN engineer)) (VP (VBN born) (SBAR (WHNP (WP who)) (S (VP (VBD manufactured) (NP (NNP EP) (NNP R.E.P.) (CD 1))))))) (. ?)))",
        "id": 246
    },
    {
        "taggedQuestion": "Who all have been a manager of english under twenty one football team?",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "who",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "have been a manager of english under twenty one football team",
                "containsRefer": false,
                "originStr": "have been a manager of english under twenty one football team",
                "start": 2,
                "entityID": 0,
                "end": 13,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Who all have been a manager of english under twenty one football team?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP Who)) (SQ (NP (DT all)) (VP (VBP have) (VP (VBN been) (NP (NP (DT a) (NN manager)) (PP (IN of) (NP (NNP english)))) (PP (IN under) (NP (QP (CD twenty) (CD one)) (NN football) (NN team)))))) (. ?)))",
        "id": 247
    },
    {
        "taggedQuestion": "What is the military conflict whose commanders are John McEwen and <e0>?",
        "entityMap": {"<e0>": "Phm Vn ng"},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the military conflict",
                "containsRefer": false,
                "originStr": "the military conflict",
                "start": 2,
                "entityID": 0,
                "end": 5,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "whose commanders are John McEwen",
                "containsRefer": false,
                "originStr": "whose commanders are John McEwen",
                "start": 7,
                "entityID": 0,
                "end": 10,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "whose commanders are Phm Vn ng",
                "containsRefer": false,
                "originStr": "whose commanders are Phm Vn ng",
                "start": 11,
                "entityID": 0,
                "end": 11,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is the military conflict whose commanders are John McEwen and Phm Vn ng?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3,
                "info": "whose commanders"
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (NP (DT the) (JJ military) (NN conflict)) (SBAR (WHNP (WP$ whose) (NNS commanders)) (S (VP (VBP are) (NP (NP (NNP John) (NNP McEwen)) (CC and) (NP (ADD <e0>)))))))) (. ?)))",
        "id": 248
    },
    {
        "taggedQuestion": "Which party has come in power in Mumbai North?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "party",
                "containsRefer": false,
                "originStr": "party",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "has come in power in Mumbai North",
                "containsRefer": false,
                "originStr": "has come in power in Mumbai North",
                "start": 2,
                "entityID": 0,
                "end": 9,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which party has come in power in Mumbai North?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NN party)) (SQ (VP (VBZ has) (VP (VBN come) (PP (IN in) (NP (NN power))) (PP (IN in) (NP (NNP Mumbai) (NNP North)))))) (. ?)))",
        "id": 249
    },
    {
        "taggedQuestion": "Name the tv show with judges Randy Jackson and Jennifer Lopez.",
        "entityMap": {},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "name",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the tv show",
                "containsRefer": false,
                "originStr": "the tv show",
                "start": 1,
                "entityID": 0,
                "end": 4,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "judges Randy Jackson and Jennifer Lopez judges Randy Jackson",
                "containsRefer": false,
                "originStr": "judges Randy Jackson and Jennifer Lopez judges Randy Jackson",
                "start": 5,
                "entityID": 0,
                "end": 8,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "judges Randy Jackson and Jennifer Lopez Jennifer Lopez",
                "containsRefer": false,
                "originStr": "judges Randy Jackson and Jennifer Lopez Jennifer Lopez",
                "start": 9,
                "entityID": 0,
                "end": 10,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Name the tv show with judges Randy Jackson and Jennifer Lopez.",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Name) (NP (DT the) (NN tv) (NN show)) (PP (IN with) (NP (NP (NP (NNS judges)) (NP (NNP Randy) (NNP Jackson))) (CC and) (NP (NNP Jennifer) (NNP Lopez))))) (. .)))",
        "id": 250
    },
    {
        "taggedQuestion": "What is the largest city of the country which hosted the <e0>?",
        "entityMap": {"<e0>": "1951 Asian Games"},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the largest city of #entity1",
                "containsRefer": true,
                "originStr": "is the largest city of #entity1",
                "start": 1,
                "entityID": 0,
                "end": 12,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the country",
                "containsRefer": false,
                "originStr": "the country",
                "start": 6,
                "entityID": 1,
                "end": 8,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "hosted the 1951 Asian Games",
                "containsRefer": false,
                "originStr": "hosted the 1951 Asian Games",
                "start": 9,
                "entityID": 1,
                "end": 12,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is the largest city of the country which hosted the 1951 Asian Games?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 6,
                "from": 2,
                "end": 12,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (NP (DT the) (JJS largest) (NN city)) (PP (IN of) (NP (NP (DT the) (NN country)) (SBAR (WHNP (WDT which)) (S (VP (VBD hosted) (NP (DT the) (NN <e0>))))))))) (. ?)))",
        "id": 251
    },
    {
        "taggedQuestion": "Which royalty was married to <e0> and had mother named Cleopatra V ?",
        "entityMap": {"<e0>": "ptolemy XIII Theos Philopator"},
        "nodeNum": 8,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "royalty",
                "containsRefer": false,
                "originStr": "royalty",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "married to ptolemy XIII Theos Philopator",
                "containsRefer": false,
                "originStr": "married to ptolemy XIII Theos Philopator",
                "start": 3,
                "entityID": 0,
                "end": 6,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "had #entity1",
                "containsRefer": true,
                "originStr": "had #entity1",
                "start": 7,
                "entityID": 0,
                "end": 12,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            },
            {
                "str": "mother",
                "containsRefer": false,
                "originStr": "mother",
                "start": 8,
                "entityID": 1,
                "end": 9,
                "nodeType": 4,
                "nodeID": 6,
                "questionType": "UNKNOWN"
            },
            {
                "str": "named Cleopatra V",
                "containsRefer": false,
                "originStr": "named Cleopatra V",
                "start": 9,
                "entityID": 1,
                "end": 12,
                "nodeType": 3,
                "nodeID": 7,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which royalty was married to ptolemy XIII Theos Philopator and had mother named Cleopatra V ?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 8,
                "from": 4,
                "end": 12,
                "to": 5
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 5,
                "end": -1,
                "to": 6
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 5,
                "end": -1,
                "to": 7
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NN royalty)) (SQ (VBD was) (VP (VP (VBN married) (PP (IN to) (NP (ADD <e0>)))) (CC and) (VP (VBD had) (NP (NP (NN mother)) (VP (VBN named) (NP (NNP Cleopatra) (NNP V))))))) (. ?)))",
        "id": 252
    },
    {
        "taggedQuestion": "Whose theme music was composed by a band which collaborated with Phish?",
        "entityMap": {},
        "nodeNum": 7,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "whose",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "theme",
                "containsRefer": false,
                "originStr": "theme",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "was composed by #entity1",
                "containsRefer": true,
                "originStr": "was composed by #entity1",
                "start": 3,
                "entityID": 0,
                "end": 12,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "a band",
                "containsRefer": false,
                "originStr": "a band",
                "start": 6,
                "entityID": 1,
                "end": 8,
                "nodeType": 4,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            },
            {
                "str": "collaborated with Phish",
                "containsRefer": false,
                "originStr": "collaborated with Phish",
                "start": 9,
                "entityID": 1,
                "end": 12,
                "nodeType": 3,
                "nodeID": 6,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Whose theme music was composed by a band which collaborated with Phish?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 6,
                "from": 3,
                "end": 12,
                "to": 4
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 5
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 6
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WHNP (WP$ Whose) (NML (NN theme))) (NN music)) (SQ (VBD was) (VP (VBN composed) (PP (IN by) (NP (NP (DT a) (NN band)) (SBAR (WHNP (WDT which)) (S (VP (VBD collaborated) (PP (IN with) (NP (NNP Phish)))))))))) (. ?)))",
        "id": 253
    },
    {
        "taggedQuestion": "Is morrissey in the smiths?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "is",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "JUDGE"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "morrissey",
                "containsRefer": false,
                "originStr": "morrissey",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the smiths",
                "containsRefer": false,
                "originStr": "the smiths",
                "start": 3,
                "entityID": 0,
                "end": 5,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Is morrissey in the smiths?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SQ (VBZ Is) (NP (NN morrissey)) (PP (IN in) (NP (DT the) (NNS smiths))) (. ?)))",
        "id": 254
    },
    {
        "taggedQuestion": "Which administrative headquarters of the Pulau Ubin is also the resting place of the Nicole Lai?",
        "entityMap": {},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "administrative headquarters of the Pulau Ubin",
                "containsRefer": false,
                "originStr": "administrative headquarters of the Pulau Ubin",
                "start": 1,
                "entityID": 0,
                "end": 7,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the resting place of the Nicole Lai",
                "containsRefer": false,
                "originStr": "the resting place of the Nicole Lai",
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "",
                "containsRefer": false,
                "originStr": "",
                "start": 7,
                "entityID": 0,
                "end": 8,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which administrative headquarters of the Pulau Ubin is also the resting place of the Nicole Lai?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NP (NP (JJ administrative) (NN headquarters)) (PP (IN of) (NP (DT the) (NNP Pulau) (NNP Ubin))))) (SQ (VBZ is) (ADVP (RB also)) (NP (NP (DT the) (JJ resting) (NN place)) (PP (IN of) (NP (DT the) (NNP Nicole) (NNP Lai))))) (. ?)))",
        "id": 255
    },
    {
        "taggedQuestion": "Where did the beverages sold by Refriango originate?",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "Where",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "did #entity1 originate",
                "containsRefer": true,
                "originStr": "did #entity1 originate",
                "start": 1,
                "entityID": 0,
                "end": 8,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the beverages",
                "containsRefer": false,
                "originStr": "the beverages",
                "start": 2,
                "entityID": 1,
                "end": 4,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "sold by Refriango",
                "containsRefer": false,
                "originStr": "sold by Refriango",
                "start": 4,
                "entityID": 1,
                "end": 7,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Where did the beverages sold by Refriango originate?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 2,
                "from": 2,
                "end": 7,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHADVP (WRB Where)) (SQ (VBD did) (NP (NP (DT the) (NNS beverages)) (VP (VBN sold) (PP (IN by) (NP (NNP Refriango))))) (VP (VB originate))) (. ?)))",
        "id": 256
    },
    {
        "taggedQuestion": "Who built the stadium which was rented by <e0>?",
        "entityMap": {"<e0>": "Costa Rica national football team"},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "who",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "built #entity1",
                "containsRefer": true,
                "originStr": "built #entity1",
                "start": 1,
                "entityID": 0,
                "end": 9,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the stadium",
                "containsRefer": false,
                "originStr": "the stadium",
                "start": 2,
                "entityID": 1,
                "end": 4,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "was rented by Costa Rica national football team",
                "containsRefer": false,
                "originStr": "was rented by Costa Rica national football team",
                "start": 5,
                "entityID": 1,
                "end": 9,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Who built the stadium which was rented by Costa Rica national football team?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 2,
                "from": 2,
                "end": 9,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP Who)) (SQ (VP (VBD built) (NP (NP (DT the) (NN stadium)) (SBAR (WHNP (WDT which)) (S (VP (VBD was) (VP (VBN rented) (PP (IN by) (NP (NN <e0>)))))))))) (. ?)))",
        "id": 257
    },
    {
        "taggedQuestion": "Which country does the <e0> play  ?",
        "entityMap": {"<e0>": "Auckland rugby union team"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "country",
                "containsRefer": false,
                "originStr": "country",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "does the Auckland rugby union team play",
                "containsRefer": false,
                "originStr": "does the Auckland rugby union team play",
                "start": 2,
                "entityID": 0,
                "end": 6,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which country does the Auckland rugby union team play  ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NN country)) (SQ (VBZ does) (NP (DT the) (NN <e0>)) (VP (VB play))) (. ?)))",
        "id": 258
    },
    {
        "taggedQuestion": "What is the serving railway line of <e0>, Perth ?",
        "entityMap": {"<e0>": "Warwick railway station"},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is #entity1 , Perth",
                "containsRefer": true,
                "originStr": "is #entity1 , Perth",
                "start": 1,
                "entityID": 0,
                "end": 10,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the serving railway line of Warwick railway station",
                "containsRefer": false,
                "originStr": "the serving railway line of Warwick railway station",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is the serving railway line of Warwick railway station, Perth ?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": -1,
                "from": 2,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (NP (DT the) (VBG serving) (NN railway) (NN line)) (PP (IN of) (NP (NP (NN <e0>)) (, ,) (NP (NNP Perth)))))) (. ?)))",
        "id": 259
    },
    {
        "taggedQuestion": "What is the radio show created by Timoteo Jeffries, about?",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the radio show created by Timoteo Jeffries , about",
                "containsRefer": false,
                "originStr": "is the radio show created by Timoteo Jeffries , about",
                "start": 1,
                "entityID": 0,
                "end": 11,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is the radio show created by Timoteo Jeffries, about?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (DT the) (NN radio) (NN show)) (VP (VBN created) (PP (IN by) (NP (NNP Timoteo) (NNP Jeffries))) (, ,) (ADVP (RB about)))) (. ?)))",
        "id": 260
    },
    {
        "taggedQuestion": "Where are all the protected areas near Bend, Oregon?",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "Where",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are all the protected areas near Bend , Oregon",
                "containsRefer": false,
                "originStr": "are all the protected areas near Bend , Oregon",
                "start": 1,
                "entityID": 0,
                "end": 10,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Where are all the protected areas near Bend, Oregon?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHADVP (WRB Where)) (SQ (VBP are) (NP (NP (PDT all) (DT the) (VBN protected) (NNS areas)) (PP (IN near) (NP (NNP Bend) (, ,) (NNP Oregon))))) (. ?)))",
        "id": 261
    },
    {
        "taggedQuestion": "Was True Grit a novel of the western genre?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "was",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "JUDGE"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "True Grit",
                "containsRefer": false,
                "originStr": "True Grit",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "a novel of the western genre",
                "containsRefer": false,
                "originStr": "a novel of the western genre",
                "start": 3,
                "entityID": 0,
                "end": 9,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Was True Grit a novel of the western genre?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SQ (VBD Was) (NP (JJ True) (NN Grit)) (NP (NP (DT a) (NN novel)) (PP (IN of) (NP (DT the) (JJ western) (NN genre)))) (. ?)))",
        "id": 262
    },
    {
        "taggedQuestion": "Which notable series of <e0> is also the series of Short Trips: A day in the life ?",
        "entityMap": {"<e0>": "Russell T Davies"},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "Which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "notable series of Russell T Davies",
                "containsRefer": false,
                "originStr": "notable series of Russell T Davies",
                "start": 0,
                "entityID": 0,
                "end": 4,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the series of Short Trips",
                "containsRefer": false,
                "originStr": "the series of Short Trips",
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "",
                "containsRefer": false,
                "originStr": "",
                "start": 4,
                "entityID": 0,
                "end": 5,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which notable series of Russell T Davies is also the series of Short Trips: A day in the life ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (FRAG (S (NP (NP (WDT Which) (JJ notable) (NN series)) (PP (IN of) (NP (NN <e0>)))) (VP (VBZ is) (ADVP (RB also)) (NP (NP (DT the) (NN series)) (PP (IN of) (NP (JJ Short) (NNS Trips)))))) (: :) (NP (NP (DT A) (NN day)) (PP (IN in) (NP (DT the) (NN life)))) (. ?)))",
        "id": 263
    },
    {
        "taggedQuestion": "Which battles were fought under the president when Chung Won Shik was the prime minister?",
        "entityMap": {},
        "nodeNum": 7,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "were fought under #entity1",
                "containsRefer": true,
                "originStr": "were fought under #entity1",
                "start": 2,
                "entityID": 0,
                "end": 15,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "battles",
                "containsRefer": false,
                "originStr": "battles",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the president",
                "containsRefer": false,
                "originStr": "the president",
                "start": 5,
                "entityID": 1,
                "end": 7,
                "nodeType": 4,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            },
            {
                "str": "when Chung Won Shik was the prime minister",
                "containsRefer": false,
                "originStr": "when Chung Won Shik was the prime minister",
                "start": 8,
                "entityID": 1,
                "end": 15,
                "nodeType": 3,
                "nodeID": 6,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which battles were fought under the president when Chung Won Shik was the prime minister?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 5,
                "from": 2,
                "end": 15,
                "to": 4
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 5
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 6
            }
        ],
        "syntaxTreeText": "(ROOT (SBAR (WHNP (WDT Which)) (S (NP (NNS battles)) (VP (VBD were) (VP (VBN fought) (PP (IN under) (NP (NP (DT the) (NN president)) (SBAR (WHADVP (WRB when)) (S (NP (NNP Chung) (NNP Won) (NNP Shik)) (VP (VBD was) (NP (DT the) (JJ prime) (NN minister)))))))))) (. ?)))",
        "id": 264
    },
    {
        "taggedQuestion": "Which office holder's resting place is in  Palo Alto, California and was succeeded by <e0> ?",
        "entityMap": {"<e0>": "Adrian A. Basora"},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "office holder",
                "containsRefer": false,
                "originStr": "office holder",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is in Palo Alto , California",
                "containsRefer": false,
                "originStr": "is in Palo Alto , California",
                "start": 0,
                "entityID": 0,
                "end": 8,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "was succeeded by Adrian A Basora",
                "containsRefer": false,
                "originStr": "was succeeded by Adrian A Basora",
                "start": 9,
                "entityID": 0,
                "end": 14,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which office holder's resting place is in  Palo Alto, California and was succeeded by Adrian A. Basora ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NN office)) (SQ (NP (NP (NN holder) (POS 's)) (JJ resting) (NN place)) (VP (VP (VBZ is) (PP (IN in) (NP (NP (NNP Palo) (NNP Alto)) (, ,) (NP (NNP California))))) (CC and) (VP (VBD was) (VP (VBN succeeded) (PP (IN by) (NP (NN <e0>))))))) (. ?)))",
        "id": 265
    },
    {
        "taggedQuestion": "Which movies have been published by <e0>?",
        "entityMap": {"<e0>": "Cinema International Corporation"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "have been published by Cinema International Corporation",
                "containsRefer": false,
                "originStr": "have been published by Cinema International Corporation",
                "start": 2,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "movies",
                "containsRefer": false,
                "originStr": "movies",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which movies have been published by Cinema International Corporation?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBAR (WHNP (WDT Which)) (S (NP (NNS movies)) (VP (VBP have) (VP (VBN been) (VP (VBN published) (PP (IN by) (NP (NN <e0>))))))) (. ?)))",
        "id": 266
    },
    {
        "taggedQuestion": "What is the total number of other destinations of the airlines whose one of the destinations is Mediterranean Sea?",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what is the number of",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "other destinations of #entity1",
                "containsRefer": true,
                "originStr": "other destinations of #entity1",
                "start": 0,
                "entityID": 0,
                "end": 13,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the airlines",
                "containsRefer": false,
                "originStr": "the airlines",
                "start": 3,
                "entityID": 1,
                "end": 5,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "whose one of the destinations is Mediterranean Sea",
                "containsRefer": false,
                "originStr": "whose one of the destinations is Mediterranean Sea",
                "start": 10,
                "entityID": 1,
                "end": 13,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is the total number of other destinations of the airlines whose one of the destinations is Mediterranean Sea?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 3,
                "from": 2,
                "end": 13,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5,
                "info": "whose one of the destinations"
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (NP (DT the) (JJ total) (NN number)) (PP (IN of) (NP (NP (JJ other) (NNS destinations)) (PP (IN of) (NP (NP (DT the) (NNS airlines)) (SBAR (WHNP (WP$ whose) (NP (NP (CD one)) (PP (IN of) (NP (DT the) (NNS destinations))))) (S (VP (VBZ is) (NP (NNP Mediterranean) (NNP Sea))))))))))) (. ?)))",
        "id": 267
    },
    {
        "taggedQuestion": "Count the academic discipline of the journals whose one of the academic discipline is Neuroimaging .",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "count",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the academic discipline of #entity1",
                "containsRefer": true,
                "originStr": "the academic discipline of #entity1",
                "start": 1,
                "entityID": 0,
                "end": 15,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the journals",
                "containsRefer": false,
                "originStr": "the journals",
                "start": 5,
                "entityID": 1,
                "end": 7,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "whose one of the academic discipline is Neuroimaging",
                "containsRefer": false,
                "originStr": "whose one of the academic discipline is Neuroimaging",
                "start": 13,
                "entityID": 1,
                "end": 15,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Count the academic discipline of the journals whose one of the academic discipline is Neuroimaging .",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 5,
                "from": 2,
                "end": 15,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5,
                "info": "whose one of the academic discipline"
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Count) (NP (NP (DT the) (JJ academic) (NN discipline)) (PP (IN of) (NP (NP (DT the) (NNS journals)) (SBAR (WHNP (WP$ whose) (NP (NP (CD one)) (PP (IN of) (NP (DT the) (JJ academic) (NN discipline))))) (S (VP (VBZ is) (NP (NNP Neuroimaging))))))))) (. .)))",
        "id": 268
    },
    {
        "taggedQuestion": "List the award which have been won by both Charles LeMaire and Nick Park ?",
        "entityMap": {},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "list",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the award",
                "containsRefer": false,
                "originStr": "the award",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "have been won by Charles LeMaire",
                "containsRefer": false,
                "originStr": "have been won by Charles LeMaire",
                "start": 0,
                "entityID": 0,
                "end": 6,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "have been won by Nick Park",
                "containsRefer": false,
                "originStr": "have been won by Nick Park",
                "start": 7,
                "entityID": 0,
                "end": 8,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "List the award which have been won by both Charles LeMaire and Nick Park ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SQ (VP (VB List) (NP (NP (DT the) (NN award)) (SBAR (WHNP (WDT which)) (S (VP (VBP have) (VP (VBN been) (VP (VBN won) (PP (IN by) (NP (NP (DT both) (NNP Charles) (NNP LeMaire)) (CC and) (NP (NNP Nick) (NNP Park))))))))))) (. ?)))",
        "id": 269
    },
    {
        "taggedQuestion": "What are some cities which have a Ferris wheel?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "some cities",
                "containsRefer": false,
                "originStr": "some cities",
                "start": 2,
                "entityID": 0,
                "end": 4,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "have a Ferris wheel",
                "containsRefer": false,
                "originStr": "have a Ferris wheel",
                "start": 5,
                "entityID": 0,
                "end": 9,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What are some cities which have a Ferris wheel?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBP are) (NP (NP (DT some) (NNS cities)) (SBAR (WHNP (WDT which)) (S (VP (VBP have) (NP (DT a) (NNP Ferris) (NN wheel))))))) (. ?)))",
        "id": 270
    },
    {
        "taggedQuestion": "Name the movie who has screenplay by Akiva Goldsman and is edited by Mark Stevens .",
        "entityMap": {},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "name",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the movie",
                "containsRefer": false,
                "originStr": "the movie",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "has screenplay by Akiva Goldsman",
                "containsRefer": false,
                "originStr": "has screenplay by Akiva Goldsman",
                "start": 4,
                "entityID": 0,
                "end": 9,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is edited by Mark Stevens",
                "containsRefer": false,
                "originStr": "is edited by Mark Stevens",
                "start": 10,
                "entityID": 0,
                "end": 15,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Name the movie who has screenplay by Akiva Goldsman and is edited by Mark Stevens .",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Name) (NP (NP (DT the) (NN movie)) (SBAR (WHNP (WP who)) (S (VP (VP (VBZ has) (NP (NN screenplay)) (PP (IN by) (NP (NNP Akiva) (NNP Goldsman)))) (CC and) (VP (VBZ is) (VP (VBN edited) (PP (IN by) (NP (NNP Mark) (NNP Stevens)))))))))) (. .)))",
        "id": 271
    },
    {
        "taggedQuestion": "Count the movies in Swedish language.",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "count",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the movies",
                "containsRefer": false,
                "originStr": "the movies",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Swedish language",
                "containsRefer": false,
                "originStr": "Swedish language",
                "start": 4,
                "entityID": 0,
                "end": 6,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Count the movies in Swedish language.",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Count) (NP (DT the) (NNS movies)) (PP (IN in) (NP (JJ Swedish) (NN language)))) (. .)))",
        "id": 272
    },
    {
        "taggedQuestion": "Give me the total number of <e0> whose theme music composer is Julian Gingell and created by  Simon Fuller.",
        "entityMap": {"<e0>": "television shows"},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "give me the total number of",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "television shows",
                "containsRefer": false,
                "originStr": "television shows",
                "start": 6,
                "entityID": 0,
                "end": 7,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Julian Gingell",
                "containsRefer": false,
                "originStr": "Julian Gingell",
                "start": 11,
                "entityID": 0,
                "end": 14,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "created by Simon Fuller",
                "containsRefer": false,
                "originStr": "created by Simon Fuller",
                "start": 15,
                "entityID": 0,
                "end": 18,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Give me the total number of television shows whose theme music composer is Julian Gingell and created by  Simon Fuller.",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3,
                "info": "whose theme music composer"
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Give) (NP (PRP me)) (NP (NP (DT the) (JJ total) (NN number)) (PP (IN of) (NP (NP (NN <e0>)) (SBAR (WHNP (WP$ whose) (NML (NN theme) (NN music)) (NN composer)) (S (VP (VBZ is) (UCP (NP (NNP Julian) (NNP Gingell)) (CC and) (VP (VBN created) (PP (IN by) (NP (NNP Simon) (NNP Fuller)))))))))))) (. .)))",
        "id": 273
    },
    {
        "taggedQuestion": "Which cloud platform of <e0> also provides services to 21Vianet ?",
        "entityMap": {"<e0>": "Google cloud connect"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "cloud platform of Google cloud connect",
                "containsRefer": false,
                "originStr": "cloud platform of Google cloud connect",
                "start": 1,
                "entityID": 0,
                "end": 5,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "also provides services to 21Vianet",
                "containsRefer": false,
                "originStr": "also provides services to 21Vianet",
                "start": 5,
                "entityID": 0,
                "end": 10,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which cloud platform of Google cloud connect also provides services to 21Vianet ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NP (NP (NN cloud) (NN platform)) (PP (IN of) (NP (NN <e0>))))) (SQ (VP (ADVP (RB also)) (VBZ provides) (NP (NNS services)) (PP (IN to) (NP (NN 21Vianet))))) (. ?)))",
        "id": 274
    },
    {
        "taggedQuestion": "Name the office holder whose constituency is Haight-Ashbury.",
        "entityMap": {"<e0>": "Haight - Ashbury"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "name",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the office holder",
                "containsRefer": false,
                "originStr": "the office holder",
                "start": 1,
                "entityID": 0,
                "end": 4,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "whose constituency is Haight-Ashbury",
                "containsRefer": false,
                "originStr": "whose constituency is Haight-Ashbury",
                "start": 6,
                "entityID": 0,
                "end": 10,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Name the office holder whose constituency is Haight-Ashbury.",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3,
                "info": "whose constituency"
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Name) (NP (NP (DT the) (NN office) (NN holder)) (SBAR (WHNP (WP$ whose) (NN constituency)) (S (VP (VBZ is) (NP (NNP Haight) (HYPH -) (NNP Ashbury))))))) (. .)))",
        "id": 275
    },
    {
        "taggedQuestion": "Name the loocation of Lekh Castle which is also the location of SamurAbsheron channel .",
        "entityMap": {},
        "nodeNum": 7,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "name",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the loocation of #entity1",
                "containsRefer": true,
                "originStr": "the loocation of #entity1",
                "start": 1,
                "entityID": 0,
                "end": 14,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Lekh Castle",
                "containsRefer": false,
                "originStr": "Lekh Castle",
                "start": 4,
                "entityID": 1,
                "end": 6,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the location of SamurAbsheron channel",
                "containsRefer": false,
                "originStr": "the location of SamurAbsheron channel",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 4,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            },
            {
                "str": "",
                "containsRefer": false,
                "originStr": "",
                "start": 7,
                "entityID": 1,
                "end": 8,
                "nodeType": 3,
                "nodeID": 6,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Name the loocation of Lekh Castle which is also the location of SamurAbsheron channel .",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 4,
                "from": 2,
                "end": 14,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 6
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Name) (NP (NP (DT the) (NN loocation)) (PP (IN of) (NP (NP (NNP Lekh) (NNP Castle)) (SBAR (WHNP (WDT which)) (S (VP (VBZ is) (ADVP (RB also)) (NP (NP (DT the) (NN location)) (PP (IN of) (NP (NNP SamurAbsheron) (NN channel))))))))))) (. .)))",
        "id": 276
    },
    {
        "taggedQuestion": "Count the families of the Animal kingdom.",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "count",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the families of the Animal kingdom",
                "containsRefer": false,
                "originStr": "the families of the Animal kingdom",
                "start": 1,
                "entityID": 0,
                "end": 7,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Count the families of the Animal kingdom.",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Count) (NP (NP (DT the) (NNS families)) (PP (IN of) (NP (DT the) (NN Animal) (NN kingdom))))) (. .)))",
        "id": 277
    },
    {
        "taggedQuestion": "What is the political party of the person succeeded by A.K. Singh?",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the political party of #entity1",
                "containsRefer": true,
                "originStr": "is the political party of #entity1",
                "start": 1,
                "entityID": 0,
                "end": 12,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the person",
                "containsRefer": false,
                "originStr": "the person",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "succeeded by A.K. Singh",
                "containsRefer": false,
                "originStr": "succeeded by A.K. Singh",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is the political party of the person succeeded by A.K. Singh?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": -1,
                "from": 2,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (NP (DT the) (JJ political) (NN party)) (PP (IN of) (NP (DT the) (NN person)))) (VP (VBN succeeded) (PP (IN by) (NP (NNP A.K.) (NNP Singh))))) (. ?)))",
        "id": 278
    },
    {
        "taggedQuestion": "Who is the head coach of the teams in Middlesbrough FC?",
        "entityMap": {},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "who",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the head coach of #entity1",
                "containsRefer": true,
                "originStr": "is the head coach of #entity1",
                "start": 1,
                "entityID": 0,
                "end": 11,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the teams in Middlesbrough FC",
                "containsRefer": false,
                "originStr": "the teams in Middlesbrough FC",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Who is the head coach of the teams in Middlesbrough FC?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": -1,
                "from": 2,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP Who)) (SQ (VBZ is) (NP (NP (DT the) (NN head) (NN coach)) (PP (IN of) (NP (NP (DT the) (NNS teams)) (PP (IN in) (NP (NNP Middlesbrough) (NNP FC))))))) (. ?)))",
        "id": 279
    },
    {
        "taggedQuestion": "Which uni. did  <e0> and cyril hume both once went?",
        "entityMap": {"<e0>": "sidney c patridge"},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "Which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "uni",
                "containsRefer": false,
                "originStr": "uni",
                "start": 0,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which uni. did  sidney c patridge and cyril hume both once went?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (FRAG (WHNP (WDT Which) (NN uni)) (. .)))(ROOT (S (VP (VBD did) (NP (NP (ADD <e0>)) (CC and) (NP (NP (NNP cyril) (NNP hume)) (VP (ADVP (DT both) (IN once)) (VBN went))))) (. ?)))",
        "id": 280
    },
    {
        "taggedQuestion": "People in the <e0> follow which religion?",
        "entityMap": {"<e0>": "royal Thai army"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "religion",
                "containsRefer": false,
                "originStr": "religion",
                "start": 6,
                "entityID": 0,
                "end": 8,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "People in the royal Thai army follow",
                "containsRefer": false,
                "originStr": "People in the royal Thai army follow",
                "start": 0,
                "entityID": 0,
                "end": 5,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "People in the royal Thai army follow which religion?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (S (NP (NP (NNS People)) (PP (IN in) (NP (DT the) (NN <e0>)))) (VP (VB follow) (WHNP (WDT which) (NN religion))) (. ?)))",
        "id": 281
    },
    {
        "taggedQuestion": "Was Lucrezia Tornabuoni the mother of Lorenzo de' Medici?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "was",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "JUDGE"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Lucrezia Tornabuoni",
                "containsRefer": false,
                "originStr": "Lucrezia Tornabuoni",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the mother of Lorenzo de ' Medici",
                "containsRefer": false,
                "originStr": "the mother of Lorenzo de ' Medici",
                "start": 3,
                "entityID": 0,
                "end": 10,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Was Lucrezia Tornabuoni the mother of Lorenzo de' Medici?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SQ (VBD Was) (NP (NNP Lucrezia) (NNP Tornabuoni)) (NP (NP (DT the) (NN mother)) (PP (IN of) (NP (NP (NNP Lorenzo) (NNP de) (POS ')) (NNP Medici)))) (. ?)))",
        "id": 282
    },
    {
        "taggedQuestion": "Who are the producers of the movies  which has music by Gary Chang ?",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "who",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are the producers of #entity1",
                "containsRefer": true,
                "originStr": "are the producers of #entity1",
                "start": 1,
                "entityID": 0,
                "end": 13,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the movies",
                "containsRefer": false,
                "originStr": "the movies",
                "start": 5,
                "entityID": 1,
                "end": 7,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "has music by Gary Chang",
                "containsRefer": false,
                "originStr": "has music by Gary Chang",
                "start": 8,
                "entityID": 1,
                "end": 13,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Who are the producers of the movies  which has music by Gary Chang ?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 5,
                "from": 2,
                "end": 13,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP Who)) (SQ (VBP are) (NP (NP (DT the) (NNS producers)) (PP (IN of) (NP (NP (DT the) (NNS movies)) (SBAR (WHNP (WDT which)) (S (VP (VBZ has) (NP (NN music)) (PP (IN by) (NP (NNP Gary) (NNP Chang)))))))))) (. ?)))",
        "id": 283
    },
    {
        "taggedQuestion": "Where was Special 26 recorded ?",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "Where",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "was Special 26 recorded",
                "containsRefer": false,
                "originStr": "was Special 26 recorded",
                "start": 1,
                "entityID": 0,
                "end": 5,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Where was Special 26 recorded ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHADVP (WRB Where)) (SQ (VBD was) (NP (JJ Special) (NP (CD 26))) (VP (VBN recorded))) (. ?)))",
        "id": 284
    },
    {
        "taggedQuestion": "How many movies music composers are associated with Demis Roussos ?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "how many",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "movies music composers",
                "containsRefer": false,
                "originStr": "movies music composers",
                "start": 2,
                "entityID": 0,
                "end": 5,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are associated with Demis Roussos",
                "containsRefer": false,
                "originStr": "are associated with Demis Roussos",
                "start": 5,
                "entityID": 0,
                "end": 10,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "How many movies music composers are associated with Demis Roussos ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WHADJP (WRB How) (JJ many)) (NP (NP (NNS movies)) (NP (NN music) (NNS composers)))) (SQ (VBP are) (VP (VBN associated) (PP (IN with) (NP (NNP Demis) (NNP Roussos))))) (. ?)))",
        "id": 285
    },
    {
        "taggedQuestion": "Which nation did <e0> owe his allegiance?",
        "entityMap": {"<e0>": "David Animle Hanses"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "nation",
                "containsRefer": false,
                "originStr": "nation",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "did David Animle Hanses owe his allegiance",
                "containsRefer": false,
                "originStr": "did David Animle Hanses owe his allegiance",
                "start": 2,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which nation did David Animle Hanses owe his allegiance?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NN nation)) (SQ (VP (VBD did) (NP (ADD <e0>)) (S (VP (VB owe) (NP (PRP$ his) (NN allegiance)))))) (. ?)))",
        "id": 286
    },
    {
        "taggedQuestion": "What is the alma mater of the actors of The God Who Wasn't There ?",
        "entityMap": {},
        "nodeNum": 8,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the alma mater of #entity1",
                "containsRefer": true,
                "originStr": "is the alma mater of #entity1",
                "start": 1,
                "entityID": 0,
                "end": 15,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the actors of #entity2",
                "containsRefer": true,
                "originStr": "the actors of #entity2",
                "start": 6,
                "entityID": 1,
                "end": 15,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 2,
                "end": -1,
                "nodeType": 2,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            },
            {
                "str": "The God",
                "containsRefer": false,
                "originStr": "The God",
                "start": 9,
                "entityID": 2,
                "end": 11,
                "nodeType": 4,
                "nodeID": 6,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Was n't There",
                "containsRefer": false,
                "originStr": "Was n't There",
                "start": 12,
                "entityID": 2,
                "end": 15,
                "nodeType": 3,
                "nodeID": 7,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is the alma mater of the actors of The God Who Wasn't There ?",
        "entityNum": 3,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 6,
                "from": 2,
                "end": 15,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 9,
                "from": 4,
                "end": 15,
                "to": 5
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 5,
                "end": -1,
                "to": 6
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 5,
                "end": -1,
                "to": 7
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (NP (DT the) (NN alma) (NN mater)) (PP (IN of) (NP (NP (DT the) (NNS actors)) (PP (IN of) (NP (NP (DT The) (NNP God)) (SBAR (WHNP (WP Who)) (S (VP (VBD Was) (RB n't) (NP (EX There))))))))))) (. ?)))",
        "id": 287
    },
    {
        "taggedQuestion": "List some musicians associated with <e0>?",
        "entityMap": {"<e0>": "famous guitar players"},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "list",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "some musicians associated with famous guitar players",
                "containsRefer": false,
                "originStr": "some musicians associated with famous guitar players",
                "start": 1,
                "entityID": 0,
                "end": 6,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "List some musicians associated with famous guitar players?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB List) (S (NP (DT some) (NNS musicians)) (VP (VBN associated) (PP (IN with) (NP (NN <e0>)))))) (. ?)))",
        "id": 288
    },
    {
        "taggedQuestion": "What are the airlines whose hub airport is operated by the <e0>?",
        "entityMap": {"<e0>": "Los Angeles World Airports"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the airlines",
                "containsRefer": false,
                "originStr": "the airlines",
                "start": 2,
                "entityID": 0,
                "end": 4,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "whose hub airport is operated by the Los Angeles World Airports",
                "containsRefer": false,
                "originStr": "whose hub airport is operated by the Los Angeles World Airports",
                "start": 7,
                "entityID": 0,
                "end": 12,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What are the airlines whose hub airport is operated by the Los Angeles World Airports?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3,
                "info": "whose hub airport"
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBP are) (NP (NP (DT the) (NNS airlines)) (SBAR (WHNP (WP$ whose) (NML (NN hub)) (NN airport)) (S (VP (VBZ is) (VP (VBN operated) (PP (IN by) (NP (DT the) (NN <e0>))))))))) (. ?)))",
        "id": 289
    },
    {
        "taggedQuestion": "Which company's cars are assembled in Colombia?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "company",
                "containsRefer": false,
                "originStr": "company",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "cars are assembled in Colombia",
                "containsRefer": false,
                "originStr": "cars are assembled in Colombia",
                "start": 3,
                "entityID": 0,
                "end": 8,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which company's cars are assembled in Colombia?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WHNP (WDT Which) (NN company) (POS 's)) (NNS cars)) (SQ (VBP are) (VP (VBN assembled) (PP (IN in) (NP (NNP Colombia))))) (. ?)))",
        "id": 290
    },
    {
        "taggedQuestion": "Who directed The Haunted House ?",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "who",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "directed The Haunted House",
                "containsRefer": false,
                "originStr": "directed The Haunted House",
                "start": 1,
                "entityID": 0,
                "end": 5,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Who directed The Haunted House ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP Who)) (SQ (VP (VBD directed) (NP (DT The) (NNP Haunted) (NNP House)))) (. ?)))",
        "id": 291
    },
    {
        "taggedQuestion": "Count all the different purposes followed by the different NGOs.",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "count",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "all the different purposes",
                "containsRefer": false,
                "originStr": "all the different purposes",
                "start": 1,
                "entityID": 0,
                "end": 5,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "followed by the different NGOs",
                "containsRefer": false,
                "originStr": "followed by the different NGOs",
                "start": 5,
                "entityID": 0,
                "end": 10,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Count all the different purposes followed by the different NGOs.",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Count) (NP (NP (PDT all) (DT the) (JJ different) (NNS purposes)) (VP (VBN followed) (PP (IN by) (NP (DT the) (JJ different) (NNPS NGOs)))))) (. .)))",
        "id": 292
    },
    {
        "taggedQuestion": "The players born in Bellaire, Ohio have played for which team?",
        "entityMap": {},
        "nodeNum": 7,
        "nodes": [
            {
                "str": "which team",
                "containsRefer": false,
                "start": 10,
                "entityID": -1,
                "end": 12,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "#entity1 born in Bellaire , Ohio have played for",
                "containsRefer": true,
                "originStr": "#entity1 born in Bellaire , Ohio have played for",
                "start": 0,
                "entityID": 0,
                "end": 13,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "team",
                "containsRefer": false,
                "originStr": "team",
                "start": 11,
                "entityID": 0,
                "end": 12,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "players",
                "containsRefer": false,
                "originStr": "players",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 4,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            },
            {
                "str": "team",
                "containsRefer": false,
                "originStr": "team",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 3,
                "nodeID": 6,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "The players born in Bellaire, Ohio have played for which team?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": -1,
                "from": 2,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 5
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 6
            }
        ],
        "syntaxTreeText": "(ROOT (S (S (NP (DT The) (NNS players)) (VP (VBN born) (PP (IN in) (NP (NNP Bellaire))))) (, ,) (NP (NNP Ohio)) (VP (VBP have) (VP (VBN played) (WHPP (IN for) (WHNP (WDT which) (NN team))))) (. ?)))",
        "id": 293
    },
    {
        "taggedQuestion": "What is the common ideology followed by Katyayana and <e0> ?",
        "entityMap": {"<e0>": "Palang Dharma Party"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the common ideology followed by Katyayana",
                "containsRefer": false,
                "originStr": "is the common ideology followed by Katyayana",
                "start": 1,
                "entityID": 0,
                "end": 8,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the common ideology followed by Palang Dharma Party",
                "containsRefer": false,
                "originStr": "is the common ideology followed by Palang Dharma Party",
                "start": 9,
                "entityID": 0,
                "end": 9,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is the common ideology followed by Katyayana and Palang Dharma Party ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (DT the) (JJ common) (NN ideology)) (VP (VBN followed) (PP (IN by) (NP (NP (NNP Katyayana)) (CC and) (NP (ADD <e0>)))))) (. ?)))",
        "id": 294
    },
    {
        "taggedQuestion": "Count the tenants of MasterCard Centre.",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "count",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the tenants of MasterCard Centre",
                "containsRefer": false,
                "originStr": "the tenants of MasterCard Centre",
                "start": 1,
                "entityID": 0,
                "end": 6,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Count the tenants of MasterCard Centre.",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Count) (NP (NP (DT the) (NNS tenants)) (PP (IN of) (NP (NNP MasterCard) (NNP Centre))))) (. .)))",
        "id": 295
    },
    {
        "taggedQuestion": "Who are starring in the movies written by Mark Sandrich ?",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "who",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are starring in #entity1",
                "containsRefer": true,
                "originStr": "are starring in #entity1",
                "start": 1,
                "entityID": 0,
                "end": 10,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the movies",
                "containsRefer": false,
                "originStr": "the movies",
                "start": 4,
                "entityID": 1,
                "end": 6,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "written by Mark Sandrich",
                "containsRefer": false,
                "originStr": "written by Mark Sandrich",
                "start": 6,
                "entityID": 1,
                "end": 10,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Who are starring in the movies written by Mark Sandrich ?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 4,
                "from": 2,
                "end": 10,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP Who)) (SQ (VP (VBP are) (VP (VBG starring) (PP (IN in) (NP (NP (DT the) (NNS movies)) (VP (VBN written) (PP (IN by) (NP (NNP Mark) (NNP Sandrich))))))))) (. ?)))",
        "id": 296
    },
    {
        "taggedQuestion": "Count the religions followed by BJP members.",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "count",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the religions followed by BJP members",
                "containsRefer": false,
                "originStr": "the religions followed by BJP members",
                "start": 1,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Count the religions followed by BJP members.",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Count) (S (NP (DT the) (NNS religions)) (VP (VBN followed) (PP (IN by) (NP (NNP BJP) (NNS members)))))) (. .)))",
        "id": 297
    },
    {
        "taggedQuestion": "What is the mascot of the rival school of <e0>?",
        "entityMap": {"<e0>": "Sullivan Central High"},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the mascot of #entity1",
                "containsRefer": true,
                "originStr": "is the mascot of #entity1",
                "start": 1,
                "entityID": 0,
                "end": 10,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the rival school of Sullivan Central High",
                "containsRefer": false,
                "originStr": "the rival school of Sullivan Central High",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is the mascot of the rival school of Sullivan Central High?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": -1,
                "from": 2,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (NP (DT the) (NN mascot)) (PP (IN of) (NP (NP (DT the) (JJ rival) (NN school)) (PP (IN of) (NP (NN <e0>))))))) (. ?)))",
        "id": 298
    },
    {
        "taggedQuestion": "What award has been awarded to both Dion Beebe and Charles LeMaire?",
        "entityMap": {},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "award",
                "containsRefer": false,
                "originStr": "award",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "has been awarded to Dion Beebe",
                "containsRefer": false,
                "originStr": "has been awarded to Dion Beebe",
                "start": 0,
                "entityID": 0,
                "end": 6,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "has been awarded to Charles LeMaire",
                "containsRefer": false,
                "originStr": "has been awarded to Charles LeMaire",
                "start": 7,
                "entityID": 0,
                "end": 8,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What award has been awarded to both Dion Beebe and Charles LeMaire?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT What) (NN award)) (SQ (VP (VBZ has) (VP (VBN been) (VP (VBN awarded) (PP (IN to) (NP (NP (DT both) (NNP Dion) (NNP Beebe)) (CC and) (NP (NNP Charles) (NNP LeMaire)))))))) (. ?)))",
        "id": 299
    },
    {
        "taggedQuestion": "What is the birth name  of Putri Raemawasti ?",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the birth name of Putri Raemawasti",
                "containsRefer": false,
                "originStr": "is the birth name of Putri Raemawasti",
                "start": 1,
                "entityID": 0,
                "end": 8,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is the birth name  of Putri Raemawasti ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (NP (DT the) (NN birth) (NN name)) (PP (IN of) (NP (NNP Putri) (NNP Raemawasti))))) (. ?)))",
        "id": 300
    },
    {
        "taggedQuestion": "What is the party of the politicians whose children is Sanjay Gandhi ?",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the party of #entity1",
                "containsRefer": true,
                "originStr": "is the party of #entity1",
                "start": 1,
                "entityID": 0,
                "end": 12,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the politicians",
                "containsRefer": false,
                "originStr": "the politicians",
                "start": 5,
                "entityID": 1,
                "end": 7,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "whose children is Sanjay Gandhi",
                "containsRefer": false,
                "originStr": "whose children is Sanjay Gandhi",
                "start": 9,
                "entityID": 1,
                "end": 12,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is the party of the politicians whose children is Sanjay Gandhi ?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 5,
                "from": 2,
                "end": 12,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5,
                "info": "whose children"
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (NP (DT the) (NN party)) (PP (IN of) (NP (NP (DT the) (NNS politicians)) (SBAR (WHNP (WP$ whose) (NNS children)) (S (VP (VBZ is) (NP (NNP Sanjay) (NNP Gandhi))))))))) (. ?)))",
        "id": 301
    },
    {
        "taggedQuestion": "Name the tenants of MAsterCard center wich is also the draft team of Antoine Bibeau.",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "name",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Name the tenants of MAsterCard center wich",
                "containsRefer": false,
                "originStr": "Name the tenants of MAsterCard center wich",
                "start": 0,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "",
                "containsRefer": false,
                "originStr": "",
                "start": 15,
                "entityID": 0,
                "end": 16,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the draft team of Antoine Bibeau",
                "containsRefer": false,
                "originStr": "the draft team of Antoine Bibeau",
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "",
                "containsRefer": false,
                "originStr": "",
                "start": 7,
                "entityID": 0,
                "end": 8,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Name the tenants of MAsterCard center wich is also the draft team of Antoine Bibeau.",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (S (S (VP (VB Name) (NP (NP (DT the) (NNS tenants)) (PP (IN of) (NP (NNP MAsterCard) (NN center) (NN wich)))))) (VP (VBZ is) (ADVP (RB also)) (NP (NP (DT the) (NN draft) (NN team)) (PP (IN of) (NP (NNP Antoine) (NNP Bibeau))))) (. .)))",
        "id": 302
    },
    {
        "taggedQuestion": "What is the number of occupation of the people who died in tampa bay, florida?",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what is the number of",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "occupation of #entity1",
                "containsRefer": true,
                "originStr": "occupation of #entity1",
                "start": 0,
                "entityID": 0,
                "end": 11,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the people",
                "containsRefer": false,
                "originStr": "the people",
                "start": 2,
                "entityID": 1,
                "end": 4,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "died in tampa bay , florida",
                "containsRefer": false,
                "originStr": "died in tampa bay , florida",
                "start": 5,
                "entityID": 1,
                "end": 11,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is the number of occupation of the people who died in tampa bay, florida?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 2,
                "from": 2,
                "end": 11,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (NP (DT the) (NN number)) (PP (IN of) (NP (NP (NN occupation)) (PP (IN of) (NP (NP (DT the) (NNS people)) (SBAR (WHNP (WP who)) (S (VP (VBD died) (PP (IN in) (NP (NNP tampa) (NN bay) (, ,) (NN florida)))))))))))) (. ?)))",
        "id": 303
    },
    {
        "taggedQuestion": "Who was the <e0> who also served as a governor of Indiana Territory?",
        "entityMap": {"<e0>": "United States president"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "who",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "United States president",
                "containsRefer": false,
                "originStr": "United States president",
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "also served as a governor of Indiana Territory",
                "containsRefer": false,
                "originStr": "also served as a governor of Indiana Territory",
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Who was the United States president who also served as a governor of Indiana Territory?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP Who)) (SQ (VBD was) (NP (NP (DT the) (NN <e0>)) (SBAR (WHNP (WP who)) (S (ADVP (RB also)) (VP (VBD served) (PP (IN as) (NP (NP (DT a) (NN governor)) (PP (IN of) (NP (NNP Indiana) (NNP Territory)))))))))) (. ?)))",
        "id": 304
    },
    {
        "taggedQuestion": "List the people who were born in Gelnhausen and graduated from Pepperdine University?",
        "entityMap": {},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "list",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the people",
                "containsRefer": false,
                "originStr": "the people",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "were born in Gelnhausen",
                "containsRefer": false,
                "originStr": "were born in Gelnhausen",
                "start": 4,
                "entityID": 0,
                "end": 8,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "graduated from Pepperdine University",
                "containsRefer": false,
                "originStr": "graduated from Pepperdine University",
                "start": 9,
                "entityID": 0,
                "end": 13,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "List the people who were born in Gelnhausen and graduated from Pepperdine University?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SQ (VP (VB List) (NP (NP (DT the) (NNS people)) (SBAR (WHNP (WP who)) (S (VP (VP (VBD were) (VP (VBN born) (PP (IN in) (NP (NNP Gelnhausen))))) (CC and) (VP (VBD graduated) (PP (IN from) (NP (NNP Pepperdine) (NNP University))))))))) (. ?)))",
        "id": 305
    },
    {
        "taggedQuestion": "Musical artists who are associated with <e0> were born where ?",
        "entityMap": {"<e0>": "Ren & Angela"},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "where",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Musical artists who are associated with Ren & Angela were born",
                "containsRefer": false,
                "originStr": "Musical artists who are associated with Ren & Angela were born",
                "start": 0,
                "entityID": 0,
                "end": 9,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Musical artists who are associated with Ren & Angela were born where ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (S (NP (NP (JJ Musical) (NNS artists)) (SBAR (WHNP (WP who)) (S (VP (VBP are) (VP (VBN associated) (PP (IN with) (NP (NN <e0>)))))))) (VP (VBD were) (VP (VBN born) (FRAG (WHADVP (WRB where))))) (. ?)))",
        "id": 306
    },
    {
        "taggedQuestion": "What religion do the Wickramabahu Centeral College and Neungin High School both follow?",
        "entityMap": {"<e0>": "Wickramabahu Centeral College Neungin High School"},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "religion",
                "containsRefer": false,
                "originStr": "religion",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "do the Wickramabahu Centeral College follow",
                "containsRefer": false,
                "originStr": "do the Wickramabahu Centeral College follow",
                "start": 2,
                "entityID": 0,
                "end": 13,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Neungin High School follow",
                "containsRefer": false,
                "originStr": "Neungin High School follow",
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What religion do the Wickramabahu Centeral College and Neungin High School both follow?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT What) (NN religion)) (SQ (VBP do) (NP (DT the) (NNP Wickramabahu) (NNP Centeral) (NNP College) (CC and) (NNP Neungin) (NNP High) (NNP School)) (VP (ADVP (CC both)) (VB follow))) (. ?)))",
        "id": 307
    },
    {
        "taggedQuestion": "Who designed the <e0>?",
        "entityMap": {"<e0>": "language integrated query"},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "who",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "designed the language integrated query",
                "containsRefer": false,
                "originStr": "designed the language integrated query",
                "start": 1,
                "entityID": 0,
                "end": 4,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Who designed the language integrated query?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP Who)) (SQ (VP (VBD designed) (NP (DT the) (NN <e0>)))) (. ?)))",
        "id": 308
    },
    {
        "taggedQuestion": "Name the debut team of Dan Otero .",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "name",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the debut team of Dan Otero",
                "containsRefer": false,
                "originStr": "the debut team of Dan Otero",
                "start": 1,
                "entityID": 0,
                "end": 7,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Name the debut team of Dan Otero .",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Name) (NP (NP (DT the) (NN debut) (NN team)) (PP (IN of) (NP (NNP Dan) (NNP Otero))))) (. .)))",
        "id": 309
    },
    {
        "taggedQuestion": "Who started at the pole position in both <e0> and the 94 spanish one?",
        "entityMap": {"<e0>": "1997 canadian grand prix"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "who",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the pole position in 1997 canadian grand prix",
                "containsRefer": false,
                "originStr": "the pole position in 1997 canadian grand prix",
                "start": 0,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "started at the 94 spanish one",
                "containsRefer": false,
                "originStr": "started at the 94 spanish one",
                "start": 8,
                "entityID": 0,
                "end": 11,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Who started at the pole position in both 1997 canadian grand prix and the 94 spanish one?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP Who)) (SQ (VP (VBD started) (PP (IN at) (NP (NP (DT the) (NN pole) (NN position)) (PP (IN in) (NP (CC both) (NP (ADD <e0>)) (CC and) (NP (DT the) (CD 94) (NNP spanish)))) (NP-TMP (CD one)))))) (. ?)))",
        "id": 310
    },
    {
        "taggedQuestion": "Who founded the Not on our Watch NGO?",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "who",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "founded the Not on our Watch NGO",
                "containsRefer": false,
                "originStr": "founded the Not on our Watch NGO",
                "start": 1,
                "entityID": 0,
                "end": 8,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Who founded the Not on our Watch NGO?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP Who)) (SQ (VP (VBD founded) (NP (DT the) (RB Not)) (PP (IN on) (NP (PRP$ our) (NNP Watch) (NNP NGO))))) (. ?)))",
        "id": 311
    },
    {
        "taggedQuestion": "What is the name of the artist which worked on the subsequent work of <e0> ?",
        "entityMap": {"<e0>": "Ella Loves Cole"},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the artist",
                "containsRefer": false,
                "originStr": "the artist",
                "start": 5,
                "entityID": 0,
                "end": 7,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "worked on #entity1",
                "containsRefer": true,
                "originStr": "worked on #entity1",
                "start": 8,
                "entityID": 0,
                "end": 15,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the subsequent work of Ella Loves Cole",
                "containsRefer": false,
                "originStr": "the subsequent work of Ella Loves Cole",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 4,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is the name of the artist which worked on the subsequent work of Ella Loves Cole ?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (NP (DT the) (NN name)) (PP (IN of) (NP (NP (DT the) (NN artist)) (SBAR (WHNP (WDT which)) (S (VP (VBD worked) (PP (IN on) (NP (NP (DT the) (JJ subsequent) (NN work)) (PP (IN of) (NP (NN <e0>)))))))))))) (. ?)))",
        "id": 312
    },
    {
        "taggedQuestion": "Which company owns Sony bank ?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "company",
                "containsRefer": false,
                "originStr": "company",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "owns Sony bank",
                "containsRefer": false,
                "originStr": "owns Sony bank",
                "start": 2,
                "entityID": 0,
                "end": 5,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which company owns Sony bank ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NN company)) (SQ (VP (VBZ owns) (NP (NNP Sony) (NN bank)))) (. ?)))",
        "id": 313
    },
    {
        "taggedQuestion": "What state was Cyrus Mann born in, and has the famous Downriver ?",
        "entityMap": {},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "state",
                "containsRefer": false,
                "originStr": "state",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "born in",
                "containsRefer": false,
                "originStr": "born in",
                "start": 2,
                "entityID": 0,
                "end": 8,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "has the famous Downriver",
                "containsRefer": false,
                "originStr": "has the famous Downriver",
                "start": 9,
                "entityID": 0,
                "end": 12,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What state was Cyrus Mann born in, and has the famous Downriver ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT What) (NN state)) (SQ (VBD was) (NP (NNP Cyrus) (NNP Mann)) (VP (VP (VBN born) (PP (IN in))) (, ,) (CC and) (VP (VBZ has) (NP (DT the) (JJ famous) (NNP Downriver))))) (. ?)))",
        "id": 314
    },
    {
        "taggedQuestion": "Who is a religious figure titled superior general?",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "who",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is a religious figure titled superior general",
                "containsRefer": false,
                "originStr": "is a religious figure titled superior general",
                "start": 1,
                "entityID": 0,
                "end": 8,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Who is a religious figure titled superior general?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP Who)) (SQ (VBZ is) (NP (DT a) (JJ religious) (NN figure)) (VP (VBN titled) (S (ADJP (JJ superior) (JJ general))))) (. ?)))",
        "id": 315
    },
    {
        "taggedQuestion": "List the employments of people who died in Tampa, Florida.",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "list",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the employments of #entity1",
                "containsRefer": true,
                "originStr": "the employments of #entity1",
                "start": 1,
                "entityID": 0,
                "end": 11,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "people",
                "containsRefer": false,
                "originStr": "people",
                "start": 4,
                "entityID": 1,
                "end": 5,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "died in Tampa , Florida",
                "containsRefer": false,
                "originStr": "died in Tampa , Florida",
                "start": 6,
                "entityID": 1,
                "end": 11,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "List the employments of people who died in Tampa, Florida.",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 4,
                "from": 2,
                "end": 11,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB List) (NP (NP (DT the) (NNS employments)) (PP (IN of) (NP (NP (NNS people)) (SBAR (WHNP (WP who)) (S (VP (VBD died) (PP (IN in) (NP (NNP Tampa) (, ,) (NNP Florida)))))))))) (. .)))",
        "id": 316
    },
    {
        "taggedQuestion": "What are some <e0> known for?",
        "entityMap": {"<e0>": "famous veterinary physicians"},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are some famous veterinary physicians known for",
                "containsRefer": false,
                "originStr": "are some famous veterinary physicians known for",
                "start": 1,
                "entityID": 0,
                "end": 6,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What are some famous veterinary physicians known for?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBP are) (NP (DT some) (NN <e0>)) (VP (VBN known) (PP (IN for)))) (. ?)))",
        "id": 317
    },
    {
        "taggedQuestion": "List the movies edited by Julian Doyle in which music was composed by Geoffrey Brugon ?",
        "entityMap": {},
        "nodeNum": 7,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "list",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the movies",
                "containsRefer": false,
                "originStr": "the movies",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "edited by #entity1",
                "containsRefer": true,
                "originStr": "edited by #entity1",
                "start": 3,
                "entityID": 0,
                "end": 15,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Julian Doyle",
                "containsRefer": false,
                "originStr": "Julian Doyle",
                "start": 5,
                "entityID": 1,
                "end": 7,
                "nodeType": 4,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            },
            {
                "str": "music was composed by Geoffrey Brugon",
                "containsRefer": false,
                "originStr": "music was composed by Geoffrey Brugon",
                "start": 9,
                "entityID": 1,
                "end": 14,
                "nodeType": 3,
                "nodeID": 6,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "List the movies edited by Julian Doyle in which music was composed by Geoffrey Brugon ?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 5,
                "from": 3,
                "end": 15,
                "to": 4
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 5
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 6
            }
        ],
        "syntaxTreeText": "(ROOT (SQ (VP (VB List) (NP (NP (DT the) (NNS movies)) (VP (VBN edited) (PP (IN by) (NP (NP (NNP Julian) (NNP Doyle)) (SBAR (WHPP (IN in) (WHNP (WDT which))) (S (NP (NN music)) (VP (VBD was) (VP (VBN composed) (PP (IN by) (NP (NNP Geoffrey) (NNP Brugon)))))))))))) (. ?)))",
        "id": 318
    },
    {
        "taggedQuestion": "Name the children of the person who is the star of <e0> .",
        "entityMap": {"<e0>": "The Weathered Underground"},
        "nodeNum": 8,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "name",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the children of #entity1",
                "containsRefer": true,
                "originStr": "the children of #entity1",
                "start": 1,
                "entityID": 0,
                "end": 12,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the person",
                "containsRefer": false,
                "originStr": "the person",
                "start": 4,
                "entityID": 1,
                "end": 6,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is #entity2",
                "containsRefer": true,
                "originStr": "is #entity2",
                "start": 7,
                "entityID": 1,
                "end": 12,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 2,
                "end": -1,
                "nodeType": 2,
                "nodeID": 6,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the star of The Weathered Underground",
                "containsRefer": false,
                "originStr": "the star of The Weathered Underground",
                "start": -1,
                "entityID": 2,
                "end": -1,
                "nodeType": 4,
                "nodeID": 7,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Name the children of the person who is the star of The Weathered Underground .",
        "entityNum": 3,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 4,
                "from": 2,
                "end": 12,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": -1,
                "from": 5,
                "end": -1,
                "to": 6
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 6,
                "end": -1,
                "to": 7
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Name) (NP (NP (DT the) (NNS children)) (PP (IN of) (NP (NP (DT the) (NN person)) (SBAR (WHNP (WP who)) (S (VP (VBZ is) (NP (NP (DT the) (NN star)) (PP (IN of) (NP (ADD <e0>))))))))))) (. .)))",
        "id": 319
    },
    {
        "taggedQuestion": "Which owner of Chelsea F.C also owns Evraz ?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "owner of Chelsea F.C",
                "containsRefer": false,
                "originStr": "owner of Chelsea F.C",
                "start": 1,
                "entityID": 0,
                "end": 5,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "also owns Evraz",
                "containsRefer": false,
                "originStr": "also owns Evraz",
                "start": 5,
                "entityID": 0,
                "end": 8,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which owner of Chelsea F.C also owns Evraz ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NP (NN owner) (PP (IN of) (NP (NNP Chelsea) (NNP F.C))))) (SQ (VP (ADVP (RB also)) (VBZ owns) (NP (NNP Evraz)))) (. ?)))",
        "id": 320
    },
    {
        "taggedQuestion": "Did <e0> had Nelson Mandela as a commander?",
        "entityMap": {"<e0>": "Umkhonto we Sizwe"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "did",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "JUDGE"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Umkhonto we Sizwe",
                "containsRefer": false,
                "originStr": "Umkhonto we Sizwe",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "had Nelson Mandela as a commander",
                "containsRefer": false,
                "originStr": "had Nelson Mandela as a commander",
                "start": 2,
                "entityID": 0,
                "end": 8,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Did Umkhonto we Sizwe had Nelson Mandela as a commander?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VBD Did) (SBAR (S (NP (ADD <e0>)) (VP (VBD had) (NP (NP (NNP Nelson) (NNP Mandela)) (PP (IN as) (NP (DT a) (NN commander)))))))) (. ?)))",
        "id": 321
    },
    {
        "taggedQuestion": "Name the office holder with associate as <e0> and has a kid named Augustus.",
        "entityMap": {"<e0>": "Marcus Calpurnius Bibulus"},
        "nodeNum": 8,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "name",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the office holder",
                "containsRefer": false,
                "originStr": "the office holder",
                "start": 1,
                "entityID": 0,
                "end": 4,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "associate as Marcus Calpurnius Bibulus",
                "containsRefer": false,
                "originStr": "associate as Marcus Calpurnius Bibulus",
                "start": 5,
                "entityID": 0,
                "end": 8,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "has #entity1",
                "containsRefer": true,
                "originStr": "has #entity1",
                "start": 9,
                "entityID": 0,
                "end": 14,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            },
            {
                "str": "a kid",
                "containsRefer": false,
                "originStr": "a kid",
                "start": 10,
                "entityID": 1,
                "end": 12,
                "nodeType": 4,
                "nodeID": 6,
                "questionType": "UNKNOWN"
            },
            {
                "str": "named Augustus",
                "containsRefer": false,
                "originStr": "named Augustus",
                "start": 12,
                "entityID": 1,
                "end": 14,
                "nodeType": 3,
                "nodeID": 7,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Name the office holder with associate as Marcus Calpurnius Bibulus and has a kid named Augustus.",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 10,
                "from": 4,
                "end": 14,
                "to": 5
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 5,
                "end": -1,
                "to": 6
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 5,
                "end": -1,
                "to": 7
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VP (VB Name) (NP (DT the) (NN office) (NN holder)) (PP (IN with) (NP (NP (NN associate)) (PP (IN as) (NP (ADD <e0>)))))) (CC and) (VP (VBZ has) (NP (NP (DT a) (NN kid)) (VP (VBN named) (NP (NNP Augustus)))))) (. .)))",
        "id": 322
    },
    {
        "taggedQuestion": "What are the movies whose screenplay is done by Eric Roth?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the movies",
                "containsRefer": false,
                "originStr": "the movies",
                "start": 2,
                "entityID": 0,
                "end": 4,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "whose screenplay is done by Eric Roth",
                "containsRefer": false,
                "originStr": "whose screenplay is done by Eric Roth",
                "start": 6,
                "entityID": 0,
                "end": 11,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What are the movies whose screenplay is done by Eric Roth?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3,
                "info": "whose screenplay"
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBP are) (NP (NP (DT the) (NNS movies)) (SBAR (WHNP (WP$ whose) (NN screenplay)) (S (VP (VBZ is) (VP (VBN done) (PP (IN by) (NP (NNP Eric) (NNP Roth))))))))) (. ?)))",
        "id": 323
    },
    {
        "taggedQuestion": "What is the total number of writers whose singles are recorded in Miami?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what is the number of",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "writers",
                "containsRefer": false,
                "originStr": "writers",
                "start": 0,
                "entityID": 0,
                "end": 1,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "whose singles are recorded in Miami",
                "containsRefer": false,
                "originStr": "whose singles are recorded in Miami",
                "start": 3,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is the total number of writers whose singles are recorded in Miami?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3,
                "info": "whose singles"
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (NP (DT the) (JJ total) (NN number)) (PP (IN of) (NP (NP (NNS writers)) (SBAR (WHNP (WP$ whose) (NNS singles)) (S (VP (VBP are) (VP (VBN recorded) (PP (IN in) (NP (NNP Miami))))))))))) (. ?)))",
        "id": 324
    },
    {
        "taggedQuestion": "What religions are followed by members of the societies whose architectural influences is  seen on the Sanggar Agung ?",
        "entityMap": {},
        "nodeNum": 9,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "religions",
                "containsRefer": false,
                "originStr": "religions",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are followed by #entity1",
                "containsRefer": true,
                "originStr": "are followed by #entity1",
                "start": 2,
                "entityID": 0,
                "end": 18,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "members of #entity2",
                "containsRefer": true,
                "originStr": "members of #entity2",
                "start": 5,
                "entityID": 1,
                "end": 18,
                "nodeType": 4,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 2,
                "end": -1,
                "nodeType": 2,
                "nodeID": 6,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the societies",
                "containsRefer": false,
                "originStr": "the societies",
                "start": 7,
                "entityID": 2,
                "end": 9,
                "nodeType": 4,
                "nodeID": 7,
                "questionType": "UNKNOWN"
            },
            {
                "str": "whose architectural influences is seen on the Sanggar Agung",
                "containsRefer": false,
                "originStr": "whose architectural influences is seen on the Sanggar Agung",
                "start": 10,
                "entityID": 2,
                "end": 18,
                "nodeType": 3,
                "nodeID": 8,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What religions are followed by members of the societies whose architectural influences is  seen on the Sanggar Agung ?",
        "entityNum": 3,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 5,
                "from": 3,
                "end": 18,
                "to": 4
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 5
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 7,
                "from": 5,
                "end": 18,
                "to": 6
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 6,
                "end": -1,
                "to": 7
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 6,
                "end": -1,
                "to": 8,
                "info": "whose"
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT What) (NNS religions)) (SQ (VBP are) (VP (VBN followed) (PP (IN by) (NP (NP (NNS members)) (PP (IN of) (NP (NP (DT the) (NNS societies)) (SBAR (WHNP (WP$ whose)) (S (NP (JJ architectural) (NNS influences)) (VP (VBZ is) (VP (VBN seen) (PP (IN on) (NP (DT the) (NNP Sanggar) (NNP Agung))))))))))))) (. ?)))",
        "id": 325
    },
    {
        "taggedQuestion": "Who is the producer of album which has the song Money?",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "who",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the producer of #entity1",
                "containsRefer": true,
                "originStr": "is the producer of #entity1",
                "start": 1,
                "entityID": 0,
                "end": 11,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "album",
                "containsRefer": false,
                "originStr": "album",
                "start": 5,
                "entityID": 1,
                "end": 6,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "has the song Money",
                "containsRefer": false,
                "originStr": "has the song Money",
                "start": 7,
                "entityID": 1,
                "end": 11,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Who is the producer of album which has the song Money?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 5,
                "from": 2,
                "end": 11,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP Who)) (SQ (VBZ is) (NP (NP (DT the) (NN producer)) (PP (IN of) (NP (NP (NN album)) (SBAR (WHNP (WDT which)) (S (VP (VBZ has) (NP (DT the) (NN song) (NN Money))))))))) (. ?)))",
        "id": 326
    },
    {
        "taggedQuestion": "List the <e0> with theme music given by Ron Grainer?",
        "entityMap": {"<e0>": "Sci-fi TV shows"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "list",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the Sci-fi TV shows with theme music",
                "containsRefer": false,
                "originStr": "the Sci-fi TV shows with theme music",
                "start": 1,
                "entityID": 0,
                "end": 6,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Ron Grainer",
                "containsRefer": false,
                "originStr": "Ron Grainer",
                "start": 7,
                "entityID": 0,
                "end": 10,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "List the Sci-fi TV shows with theme music given by Ron Grainer?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SQ (VP (VB List) (NP (NP (DT the) (NN <e0>)) (PP (IN with) (NP (NN theme) (NN music)))) (PP (VBN given) (PP (IN by) (NP (NNP Ron) (NNP Grainer))))) (. ?)))",
        "id": 327
    },
    {
        "taggedQuestion": "What is the company to which Fusajiro Yamauchi proprietor to ?",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is #entity1 to",
                "containsRefer": true,
                "originStr": "is #entity1 to",
                "start": 1,
                "entityID": 0,
                "end": 10,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "company",
                "containsRefer": false,
                "originStr": "company",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Fusajiro Yamauchi proprietor to",
                "containsRefer": false,
                "originStr": "Fusajiro Yamauchi proprietor to",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is the company to which Fusajiro Yamauchi proprietor to ?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": -1,
                "from": 2,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VP (VBZ is) (NP (NP (DT the) (NN company)) (WHPP (TO to) (WHNP (WDT which)))) (PP (NP (NML (NNP Fusajiro) (NNP Yamauchi)) (NN proprietor)) (IN to)))) (. ?)))",
        "id": 328
    },
    {
        "taggedQuestion": "Who is the writer of <e0> ?",
        "entityMap": {"<e0>": "mark twain Tonight"},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "who",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the writer of mark twain Tonight",
                "containsRefer": false,
                "originStr": "is the writer of mark twain Tonight",
                "start": 1,
                "entityID": 0,
                "end": 6,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Who is the writer of mark twain Tonight ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP Who)) (SQ (VBZ is) (NP (NP (DT the) (NN writer)) (PP (IN of) (NP (NN <e0>))))) (. ?)))",
        "id": 329
    },
    {
        "taggedQuestion": "How many members are there in the <e0>?",
        "entityMap": {"<e0>": "European Go Federation"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "how many",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "members",
                "containsRefer": false,
                "originStr": "members",
                "start": 2,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are there in the European Go Federation",
                "containsRefer": false,
                "originStr": "are there in the European Go Federation",
                "start": 3,
                "entityID": 0,
                "end": 8,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "How many members are there in the European Go Federation?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WHADJP (WRB How) (JJ many)) (NNS members)) (SQ (VBP are) (NP (EX there)) (PP (IN in) (NP (DT the) (NN <e0>)))) (. ?)))",
        "id": 330
    },
    {
        "taggedQuestion": "Was Kevin Rudd the PM of Julia Gillard?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "was",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "JUDGE"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Kevin Rudd",
                "containsRefer": false,
                "originStr": "Kevin Rudd",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the PM of Julia Gillard",
                "containsRefer": false,
                "originStr": "the PM of Julia Gillard",
                "start": 3,
                "entityID": 0,
                "end": 8,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Was Kevin Rudd the PM of Julia Gillard?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SQ (VBD Was) (NP (NNP Kevin) (NNP Rudd)) (NP (NP (DT the) (NN PM)) (PP (IN of) (NP (NNP Julia) (NNP Gillard)))) (. ?)))",
        "id": 331
    },
    {
        "taggedQuestion": "<e0> and Job Durfee have based their political career in which US state?",
        "entityMap": {"<e0>": "Daniel L D Granger"},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "US state",
                "containsRefer": false,
                "originStr": "US state",
                "start": 11,
                "entityID": 0,
                "end": 14,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Daniel L D Granger have based their political career in",
                "containsRefer": false,
                "originStr": "Daniel L D Granger have based their political career in",
                "start": 0,
                "entityID": 0,
                "end": 1,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Job Durfee have based their political career in",
                "containsRefer": false,
                "originStr": "Job Durfee have based their political career in",
                "start": 2,
                "entityID": 0,
                "end": 9,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Daniel L D Granger and Job Durfee have based their political career in which US state?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (S (NP (NP (ADD <e0>)) (CC and) (NP (NNP Job) (NNP Durfee))) (VP (VBP have) (VP (VBN based) (NP (NP (PRP$ their) (JJ political) (NN career)) (WHPP (IN in) (WHNP (WDT which) (NNP US) (NN state)))))) (. ?)))",
        "id": 332
    },
    {
        "taggedQuestion": "What is the mascot of the handball teams in the <e0>?",
        "entityMap": {"<e0>": "Turkish Handball Super League"},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the mascot of #entity1",
                "containsRefer": true,
                "originStr": "is the mascot of #entity1",
                "start": 1,
                "entityID": 0,
                "end": 11,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the handball teams in the Turkish Handball Super League",
                "containsRefer": false,
                "originStr": "the handball teams in the Turkish Handball Super League",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is the mascot of the handball teams in the Turkish Handball Super League?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": -1,
                "from": 2,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (NP (DT the) (NN mascot)) (PP (IN of) (NP (NP (DT the) (NN handball) (NNS teams)) (PP (IN in) (NP (DT the) (NN <e0>))))))) (. ?)))",
        "id": 333
    },
    {
        "taggedQuestion": "What city was recorded in Live in detroit which is also the official residence of ken Holland ?",
        "entityMap": {},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "city",
                "containsRefer": false,
                "originStr": "city",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the official residence of ken Holland",
                "containsRefer": false,
                "originStr": "the official residence of ken Holland",
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "was recorded in Live in detroit which",
                "containsRefer": false,
                "originStr": "was recorded in Live in detroit which",
                "start": 2,
                "entityID": 0,
                "end": 9,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What city was recorded in Live in detroit which is also the official residence of ken Holland ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT What) (NN city)) (SQ (VBD was) (VP (VBN recorded) (PP (IN in) (ADJP (JJ Live))) (PP (IN in) (NP (NP (NN detroit)) (SBAR (WHNP (WDT which)) (S (VP (VBZ is) (ADVP (RB also)) (NP (NP (DT the) (JJ official) (NN residence)) (PP (IN of) (NP (NNP ken) (NNP Holland))))))))))) (. ?)))",
        "id": 334
    },
    {
        "taggedQuestion": "Marika Gombitov makes songs in which languages?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "languages",
                "containsRefer": false,
                "originStr": "languages",
                "start": 6,
                "entityID": 0,
                "end": 8,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Marika Gombitov makes songs in",
                "containsRefer": false,
                "originStr": "Marika Gombitov makes songs in",
                "start": 0,
                "entityID": 0,
                "end": 5,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Marika Gombitov makes songs in which languages?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (S (NP (NNP Marika) (NNP Gombitov)) (VP (VBZ makes) (NP (NP (NNS songs)) (WHPP (IN in) (WHNP (WDT which) (NNS languages))))) (. ?)))",
        "id": 335
    },
    {
        "taggedQuestion": "What are some musical artists associated with the ones signed up with EMI?",
        "entityMap": {},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are some musical artists associated #entity1",
                "containsRefer": true,
                "originStr": "are some musical artists associated #entity1",
                "start": 1,
                "entityID": 0,
                "end": 13,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the ones signed up with EMI",
                "containsRefer": false,
                "originStr": "the ones signed up with EMI",
                "start": 7,
                "entityID": 1,
                "end": 13,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What are some musical artists associated with the ones signed up with EMI?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 6,
                "from": 2,
                "end": 13,
                "to": 3
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBP are) (NP (DT some) (JJ musical) (NNS artists)) (VP (VBN associated) (SBAR (IN with) (S (NP (DT the) (NNS ones)) (VP (VBD signed) (PRT (RP up)) (PP (IN with) (NP (NNP EMI)))))))) (. ?)))",
        "id": 336
    },
    {
        "taggedQuestion": "Name the river which flows through the closest city of Mount Raimer .",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "name",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the river",
                "containsRefer": false,
                "originStr": "the river",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "flows through #entity1",
                "containsRefer": true,
                "originStr": "flows through #entity1",
                "start": 4,
                "entityID": 0,
                "end": 12,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the closest city of Mount Raimer",
                "containsRefer": false,
                "originStr": "the closest city of Mount Raimer",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 4,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Name the river which flows through the closest city of Mount Raimer .",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Name) (NP (NP (DT the) (NN river)) (SBAR (WHNP (WDT which)) (S (VP (VBZ flows) (PP (IN through) (NP (NP (DT the) (JJS closest) (NN city)) (PP (IN of) (NP (NNP Mount) (NNP Raimer)))))))))) (. .)))",
        "id": 337
    },
    {
        "taggedQuestion": "Name the scientist whose supervisor also supervised Mary Ainsworth.",
        "entityMap": {},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "name",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the scientist",
                "containsRefer": false,
                "originStr": "the scientist",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "whose supervisor",
                "containsRefer": false,
                "originStr": "whose supervisor",
                "start": 5,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "supervised Mary Ainsworth",
                "containsRefer": false,
                "originStr": "supervised Mary Ainsworth",
                "start": 6,
                "entityID": 0,
                "end": 9,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Name the scientist whose supervisor also supervised Mary Ainsworth.",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3,
                "info": "whose supervisor"
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Name) (NP (NP (DT the) (NN scientist)) (SBAR (WHNP (WP$ whose) (NML (NN supervisor))) (S (ADVP (RB also)) (VP (VBD supervised) (NP (NNP Mary) (NNP Ainsworth))))))) (. .)))",
        "id": 338
    },
    {
        "taggedQuestion": "What are some relatives of armymen who died in Germany?",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are some relatives of #entity1",
                "containsRefer": true,
                "originStr": "are some relatives of #entity1",
                "start": 1,
                "entityID": 0,
                "end": 10,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "armymen",
                "containsRefer": false,
                "originStr": "armymen",
                "start": 5,
                "entityID": 1,
                "end": 6,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "died in Germany",
                "containsRefer": false,
                "originStr": "died in Germany",
                "start": 7,
                "entityID": 1,
                "end": 10,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What are some relatives of armymen who died in Germany?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 5,
                "from": 2,
                "end": 10,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBP are) (NP (NP (DT some) (NNS relatives)) (PP (IN of) (NP (NP (NNS armymen)) (SBAR (WHNP (WP who)) (S (VP (VBD died) (PP (IN in) (NP (NNP Germany)))))))))) (. ?)))",
        "id": 339
    },
    {
        "taggedQuestion": "Deion sanders and Hinkey haines debuted their career with which common team?",
        "entityMap": {},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "common team",
                "containsRefer": false,
                "originStr": "common team",
                "start": 10,
                "entityID": 0,
                "end": 13,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Deion sanders debuted their career with",
                "containsRefer": false,
                "originStr": "Deion sanders debuted their career with",
                "start": 0,
                "entityID": 0,
                "end": 2,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Hinkey haines debuted their career with",
                "containsRefer": false,
                "originStr": "Hinkey haines debuted their career with",
                "start": 3,
                "entityID": 0,
                "end": 8,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Deion sanders and Hinkey haines debuted their career with which common team?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (S (NP (NP (NNP Deion) (NNP sanders)) (CC and) (NP (NNP Hinkey) (NNS haines))) (VP (VBD debuted) (NP (PRP$ their) (NN career)) (PP (IN with) (NP (WDT which) (JJ common) (NN team)))) (. ?)))",
        "id": 340
    },
    {
        "taggedQuestion": "Which garrison of <e0> is also the route end of Mumbai Vadodara Express ?",
        "entityMap": {"<e0>": "East Indies Station"},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "garrison of East Indies Station",
                "containsRefer": false,
                "originStr": "garrison of East Indies Station",
                "start": 1,
                "entityID": 0,
                "end": 4,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the route end of Mumbai Vadodara Express",
                "containsRefer": false,
                "originStr": "the route end of Mumbai Vadodara Express",
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "",
                "containsRefer": false,
                "originStr": "",
                "start": 4,
                "entityID": 0,
                "end": 5,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which garrison of East Indies Station is also the route end of Mumbai Vadodara Express ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NP (NN garrison) (PP (IN of) (NP (NN <e0>))))) (SQ (VBZ is) (ADVP (RB also)) (NP (NP (DT the) (NN route) (NN end)) (PP (IN of) (NP (NNP Mumbai) (NNP Vadodara) (NNP Express))))) (. ?)))",
        "id": 341
    },
    {
        "taggedQuestion": "Which political party does Virendra Kataria belongs ?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "political party",
                "containsRefer": false,
                "originStr": "political party",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "does Virendra Kataria belongs",
                "containsRefer": false,
                "originStr": "does Virendra Kataria belongs",
                "start": 3,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which political party does Virendra Kataria belongs ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (JJ political) (NN party)) (SQ (VBZ does) (NP (NNP Virendra) (NNP Kataria)) (VP (VBZ belongs))) (. ?)))",
        "id": 342
    },
    {
        "taggedQuestion": "Copley Medal has been awarded to which scientists?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "scientists",
                "containsRefer": false,
                "originStr": "scientists",
                "start": 7,
                "entityID": 0,
                "end": 9,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Copley Medal has been awarded to",
                "containsRefer": false,
                "originStr": "Copley Medal has been awarded to",
                "start": 0,
                "entityID": 0,
                "end": 6,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Copley Medal has been awarded to which scientists?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (S (NP (NNP Copley) (NNP Medal)) (VP (VBZ has) (VP (VBN been) (VP (VBN awarded) (PP (IN to) (NP (WDT which) (NNS scientists)))))) (. ?)))",
        "id": 343
    },
    {
        "taggedQuestion": "What is the total number of awards whose presenter's headquarters is Beverly Hills, California?",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "awards",
                "containsRefer": false,
                "originStr": "awards",
                "start": 6,
                "entityID": 0,
                "end": 7,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "presenter is #entity1",
                "containsRefer": true,
                "originStr": "presenter is #entity1",
                "start": 11,
                "entityID": 0,
                "end": 16,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "headquarters is Beverly Hills , California",
                "containsRefer": false,
                "originStr": "headquarters is Beverly Hills , California",
                "start": 10,
                "entityID": 1,
                "end": 16,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is the total number of awards whose presenter's headquarters is Beverly Hills, California?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3,
                "info": "whose presenter 's headquarters"
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 10,
                "from": 3,
                "end": 16,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (NP (DT the) (JJ total) (NN number)) (PP (IN of) (NP (NP (NNS awards)) (SBAR (WHNP (WP$ whose) (NP (NN presenter) (POS 's)) (NN headquarters)) (S (VP (VBZ is) (NP (NP (NNP Beverly) (NNP Hills)) (, ,) (NP (NNP California)))))))))) (. ?)))",
        "id": 344
    },
    {
        "taggedQuestion": "Who is the narrator of <e0> ?",
        "entityMap": {"<e0>": "The Price of Beauty"},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "who",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the narrator of The Price of Beauty",
                "containsRefer": false,
                "originStr": "is the narrator of The Price of Beauty",
                "start": 1,
                "entityID": 0,
                "end": 6,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Who is the narrator of The Price of Beauty ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP Who)) (SQ (VBZ is) (NP (NP (DT the) (NN narrator)) (PP (IN of) (NP (NN <e0>))))) (. ?)))",
        "id": 345
    },
    {
        "taggedQuestion": "Does Dan River flow into the Jordan Valley?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "does",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "JUDGE"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Dan River",
                "containsRefer": false,
                "originStr": "Dan River",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "flow into the Jordan Valley",
                "containsRefer": false,
                "originStr": "flow into the Jordan Valley",
                "start": 3,
                "entityID": 0,
                "end": 8,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Does Dan River flow into the Jordan Valley?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SQ (VBZ Does) (NP (NNP Dan) (NNP River)) (VP (VB flow) (PP (IN into) (NP (DT the) (NNP Jordan) (NNP Valley)))) (. ?)))",
        "id": 346
    },
    {
        "taggedQuestion": "Who is the producer of the device which is the operating system of Now TV  ?",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "who",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the producer of #entity1",
                "containsRefer": true,
                "originStr": "is the producer of #entity1",
                "start": 1,
                "entityID": 0,
                "end": 15,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the device",
                "containsRefer": false,
                "originStr": "the device",
                "start": 5,
                "entityID": 1,
                "end": 7,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the operating system of Now TV",
                "containsRefer": false,
                "originStr": "is the operating system of Now TV",
                "start": 8,
                "entityID": 1,
                "end": 15,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Who is the producer of the device which is the operating system of Now TV  ?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 5,
                "from": 2,
                "end": 15,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP Who)) (SQ (VBZ is) (NP (NP (DT the) (NN producer)) (PP (IN of) (NP (NP (DT the) (NN device)) (SBAR (WHNP (WDT which)) (S (VP (VBZ is) (NP (NP (DT the) (NN operating) (NN system)) (PP (IN of) (NP (ADVP (RB Now)) (NN TV))))))))))) (. ?)))",
        "id": 347
    },
    {
        "taggedQuestion": "How many artists have collaborated with <e0>?",
        "entityMap": {"<e0>": "famous guitar players"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "How many",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "have collaborated with famous guitar players",
                "containsRefer": false,
                "originStr": "have collaborated with famous guitar players",
                "start": 3,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "artists",
                "containsRefer": false,
                "originStr": "artists",
                "start": 2,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "How many artists have collaborated with famous guitar players?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBAR (WHADJP (WRB How) (JJ many)) (S (NP (NNS artists)) (VP (VBP have) (VP (VBN collaborated) (PP (IN with) (NP (NN <e0>)))))) (. ?)))",
        "id": 348
    },
    {
        "taggedQuestion": "How many politicians live in India?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "How many",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "live in India",
                "containsRefer": false,
                "originStr": "live in India",
                "start": 3,
                "entityID": 0,
                "end": 6,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "politicians",
                "containsRefer": false,
                "originStr": "politicians",
                "start": 2,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "How many politicians live in India?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBAR (WHADJP (WRB How) (JJ many)) (S (NP (NNS politicians)) (VP (VBP live) (PP (IN in) (NP (NNP India))))) (. ?)))",
        "id": 349
    },
    {
        "taggedQuestion": "What is the base currency of the country which operates the Marion Dufresne?",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the base currency of #entity1",
                "containsRefer": true,
                "originStr": "is the base currency of #entity1",
                "start": 1,
                "entityID": 0,
                "end": 13,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the country",
                "containsRefer": false,
                "originStr": "the country",
                "start": 6,
                "entityID": 1,
                "end": 8,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "operates the Marion Dufresne",
                "containsRefer": false,
                "originStr": "operates the Marion Dufresne",
                "start": 9,
                "entityID": 1,
                "end": 13,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is the base currency of the country which operates the Marion Dufresne?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 6,
                "from": 2,
                "end": 13,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (NP (DT the) (NN base) (NN currency)) (PP (IN of) (NP (NP (DT the) (NN country)) (SBAR (WHNP (WDT which)) (S (VP (VBZ operates) (NP (DT the) (NNP Marion) (NNP Dufresne))))))))) (. ?)))",
        "id": 350
    },
    {
        "taggedQuestion": "What is the region served by the governor of Stephen L.R. McNichols ?",
        "entityMap": {"<e0>": "Stephen L. R. McNichols"},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the region served by #entity1",
                "containsRefer": true,
                "originStr": "is the region served by #entity1",
                "start": 1,
                "entityID": 0,
                "end": 12,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the governor of Stephen L.R. McNichols",
                "containsRefer": false,
                "originStr": "the governor of Stephen L.R. McNichols",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is the region served by the governor of Stephen L.R. McNichols ?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": -1,
                "from": 2,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (DT the) (NN region)) (VP (VBN served) (PP (IN by) (NP (NP (DT the) (NN governor)) (PP (IN of) (NP (NNP Stephen) (NNP L.R.) (NNP McNichols))))))) (. ?)))",
        "id": 351
    },
    {
        "taggedQuestion": "Who operates Liverpool Playhouse ?",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "who",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "operates Liverpool Playhouse",
                "containsRefer": false,
                "originStr": "operates Liverpool Playhouse",
                "start": 1,
                "entityID": 0,
                "end": 4,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Who operates Liverpool Playhouse ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP Who)) (SQ (VP (VBZ operates) (NP (NNP Liverpool) (NNP Playhouse)))) (. ?)))",
        "id": 352
    },
    {
        "taggedQuestion": "Who has composed songs produced by Terry Melcher?",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "who",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "has composed #entity1",
                "containsRefer": true,
                "originStr": "has composed #entity1",
                "start": 1,
                "entityID": 0,
                "end": 8,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "songs",
                "containsRefer": false,
                "originStr": "songs",
                "start": 3,
                "entityID": 1,
                "end": 4,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "produced by Terry Melcher",
                "containsRefer": false,
                "originStr": "produced by Terry Melcher",
                "start": 4,
                "entityID": 1,
                "end": 8,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Who has composed songs produced by Terry Melcher?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 3,
                "from": 2,
                "end": 8,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP Who)) (SQ (VP (VBZ has) (VP (VBN composed) (NP (NP (NNS songs)) (VP (VBN produced) (PP (IN by) (NP (NNP Terry) (NNP Melcher)))))))) (. ?)))",
        "id": 353
    },
    {
        "taggedQuestion": "Which series does <e0> to ?",
        "entityMap": {"<e0>": "Lost special belong"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "series",
                "containsRefer": false,
                "originStr": "series",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "does Lost special belong to",
                "containsRefer": false,
                "originStr": "does Lost special belong to",
                "start": 2,
                "entityID": 0,
                "end": 5,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which series does Lost special belong to ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NN series)) (SQ (VP (VBZ does) (NP (ADD <e0>)) (S (VP (TO to))))) (. ?)))",
        "id": 354
    },
    {
        "taggedQuestion": "How many albums did the maker of The Band produce?",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "how many",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "albums",
                "containsRefer": false,
                "originStr": "albums",
                "start": 2,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "did#entity1 produce",
                "containsRefer": true,
                "originStr": "did#entity1 produce",
                "start": 3,
                "entityID": 0,
                "end": 10,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the maker of The Band",
                "containsRefer": false,
                "originStr": "the maker of The Band",
                "start": 4,
                "entityID": 1,
                "end": 9,
                "nodeType": 4,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "How many albums did the maker of The Band produce?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 4,
                "from": 3,
                "end": 9,
                "to": 4
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WHADJP (WRB How) (JJ many)) (NNS albums)) (SQ (VBD did) (NP (NP (DT the) (NN maker)) (PP (IN of) (NP (DT The) (NNP Band)))) (VP (VB produce))) (. ?)))",
        "id": 355
    },
    {
        "taggedQuestion": "List few musical artist whose notable instruments are Ludwig Drums and  Remo?",
        "entityMap": {},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "whose",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "notable instruments are Ludwig Drums",
                "containsRefer": false,
                "originStr": "notable instruments are Ludwig Drums",
                "start": 0,
                "entityID": 0,
                "end": 5,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "few musical artist",
                "containsRefer": false,
                "originStr": "few musical artist",
                "start": 0,
                "entityID": 0,
                "end": 4,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "notable instruments are Remo",
                "containsRefer": false,
                "originStr": "notable instruments are Remo",
                "start": 6,
                "entityID": 0,
                "end": 6,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "List few musical artist whose notable instruments are Ludwig Drums and  Remo?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (NP (NP (NN List) (JJ few) (JJ musical) (NN artist)) (SBAR (WHNP (WP$ whose)) (S (NP (JJ notable) (NNS instruments)) (VP (VBP are) (NP (NP (NNP Ludwig) (NNPS Drums)) (CC and) (NP (NNP Remo)))))) (. ?)))",
        "id": 356
    },
    {
        "taggedQuestion": "How many rivers start in an <e0>?",
        "entityMap": {"<e0>": "English speaking country"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "How many",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "start in an English speaking country",
                "containsRefer": false,
                "originStr": "start in an English speaking country",
                "start": 3,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "rivers",
                "containsRefer": false,
                "originStr": "rivers",
                "start": 2,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "How many rivers start in an English speaking country?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBAR (WHADJP (WRB How) (JJ many)) (S (NP (NNS rivers)) (VP (VBP start) (PP (IN in) (NP (DT an) (NN <e0>))))) (. ?)))",
        "id": 357
    },
    {
        "taggedQuestion": "For a position in which institution were both Jack Ryan and Robert sarvis both appointed?",
        "entityMap": {},
        "nodeNum": 8,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "institution were both #entity1",
                "containsRefer": true,
                "originStr": "institution were both #entity1",
                "start": 0,
                "entityID": 0,
                "end": 11,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Jack Ryan and Robert sarvis Jack Ryan",
                "containsRefer": false,
                "originStr": "Jack Ryan and Robert sarvis Jack Ryan",
                "start": 0,
                "entityID": 1,
                "end": 2,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "appointed",
                "containsRefer": false,
                "originStr": "appointed",
                "start": 9,
                "entityID": 1,
                "end": 10,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            },
            {
                "str": "For a position in",
                "containsRefer": false,
                "originStr": "For a position in",
                "start": 0,
                "entityID": 0,
                "end": 4,
                "nodeType": 3,
                "nodeID": 6,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Jack Ryan and Robert sarvis Robert sarvis",
                "containsRefer": false,
                "originStr": "Jack Ryan and Robert sarvis Robert sarvis",
                "start": 3,
                "entityID": 1,
                "end": 4,
                "nodeType": 4,
                "nodeID": 7,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "For a position in which institution were both Jack Ryan and Robert sarvis both appointed?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 6
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 3,
                "from": 2,
                "end": 10,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 7
            }
        ],
        "syntaxTreeText": "(ROOT (FRAG (S (PP (IN For) (NP (NP (DT a) (NN position)) (SBAR (WHPP (IN in) (WHNP (WDT which))) (S (NP (NN institution)) (VP (VBD were) (DT both) (NP (NP (NNP Jack) (NNP Ryan)) (CC and) (NP (NNP Robert) (NNP sarvis))))))))) (NP (DT both)) (ADJP (VBN appointed)) (. ?)))",
        "id": 358
    },
    {
        "taggedQuestion": "Where Everybody knows you is the theme album of which show ?",
        "entityMap": {},
        "nodeNum": 8,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "Where",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is #entity1 album of",
                "containsRefer": true,
                "originStr": "is #entity1 album of",
                "start": 4,
                "entityID": 0,
                "end": 11,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Everybody",
                "containsRefer": false,
                "originStr": "Everybody",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "you",
                "containsRefer": false,
                "originStr": "you",
                "start": 3,
                "entityID": 0,
                "end": 4,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            },
            {
                "str": "theme",
                "containsRefer": false,
                "originStr": "theme",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 4,
                "nodeID": 6,
                "questionType": "UNKNOWN"
            },
            {
                "str": "show",
                "containsRefer": false,
                "originStr": "show",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 3,
                "nodeID": 7,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Where Everybody knows you is the theme album of which show ?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": -1,
                "from": 2,
                "end": -1,
                "to": 5
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 5,
                "end": -1,
                "to": 6
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 5,
                "end": -1,
                "to": 7
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHADVP (WRB Where)) (SQ (NP (NN Everybody)) (VP (VBZ knows) (SBAR (S (NP (PRP you)) (VP (VBZ is) (NP (NP (DT the) (NN theme) (NN album)) (WHPP (IN of) (WHNP (WDT which) (NN show))))))))) (. ?)))",
        "id": 359
    },
    {
        "taggedQuestion": "Food in which countries has shallot in it?",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Food in which countries has shallot in it",
                "containsRefer": false,
                "originStr": "Food in which countries has shallot in it",
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Food in which countries has shallot in it?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (NP (NNP Food)) (WHPP (IN in) (WHNP (WDT which) (NNS countries))) (SQ (VBZ has) (NP (NP (NN shallot)) (PP (IN in) (NP (PRP it))))) (. ?)))",
        "id": 360
    },
    {
        "taggedQuestion": "Which rivers have source origins asnorth western, Zambia ?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "Which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "have source origins asnorth western",
                "containsRefer": false,
                "originStr": "have source origins asnorth western",
                "start": 1,
                "entityID": 0,
                "end": 6,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "rivers",
                "containsRefer": false,
                "originStr": "rivers",
                "start": 0,
                "entityID": 0,
                "end": 1,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which rivers have source origins asnorth western, Zambia ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (FRAG (SBAR (WHNP (WDT Which)) (S (NP (NNS rivers)) (VP (VBP have) (NP (NP (NN source) (NNS origins)) (ADJP (JJ asnorth) (JJ western)))))) (, ,) (NP (NNP Zambia)) (. ?)))",
        "id": 361
    },
    {
        "taggedQuestion": "Organization holding stocks of  Galician and German wikipedias?",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Organization holding stocks of  Galician and German wikipedias?",
                "containsRefer": false,
                "originStr": "Organization holding stocks of  Galician and German wikipedias?",
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Organization holding stocks of  Galician and German wikipedias?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "id": 362
    },
    {
        "taggedQuestion": "Name the river with Readin, Brekshire in its path and mouth place is Sothend-on-sea .",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "name",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the river with Readin , Brekshire in its path",
                "containsRefer": false,
                "originStr": "the river with Readin , Brekshire in its path",
                "start": 0,
                "entityID": 0,
                "end": 9,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "mouth place is Sothend-on-sea",
                "containsRefer": false,
                "originStr": "mouth place is Sothend-on-sea",
                "start": 10,
                "entityID": 0,
                "end": 17,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Name the river with Readin, Brekshire in its path and mouth place is Sothend-on-sea .",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (S (S (VP (VB Name) (NP (DT the) (NN river)) (PP (IN with) (NP (NNP Readin))))) (, ,) (NP (NP (NNP Brekshire)) (PP (IN in) (NP (NP (PRP$ its) (NN path)) (CC and) (NP (NN mouth) (NN place))))) (VP (VBZ is) (NP (NP (NNP Sothend)) (HYPH -) (PP (IN on) (HYPH -) (NP (NN sea))))) (. .)))",
        "id": 363
    },
    {
        "taggedQuestion": "Alexander Magleby, a rugby player is alma mater to which university?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "university",
                "containsRefer": false,
                "originStr": "university",
                "start": 11,
                "entityID": 0,
                "end": 13,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Alexander Magleby , a rugby player is alma mater to",
                "containsRefer": false,
                "originStr": "Alexander Magleby , a rugby player is alma mater to",
                "start": 0,
                "entityID": 0,
                "end": 10,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Alexander Magleby, a rugby player is alma mater to which university?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (S (NP (NP (NNP Alexander) (NNP Magleby)) (, ,) (NP (DT a) (JJ rugby) (NN player))) (VP (VBZ is) (NP (NP (JJ alma) (NN mater)) (WHPP (TO to) (WHNP (WDT which) (NN university))))) (. ?)))",
        "id": 364
    },
    {
        "taggedQuestion": "Is Amharic the official language of Ethiopia?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "is",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "JUDGE"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Amharic",
                "containsRefer": false,
                "originStr": "Amharic",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the official language of Ethiopia",
                "containsRefer": false,
                "originStr": "the official language of Ethiopia",
                "start": 2,
                "entityID": 0,
                "end": 7,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Is Amharic the official language of Ethiopia?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SQ (VBZ Is) (NP (NNP Amharic)) (NP (NP (DT the) (JJ official) (NN language)) (PP (IN of) (NP (NNP Ethiopia)))) (. ?)))",
        "id": 365
    },
    {
        "taggedQuestion": "What sport played at <e1> employes <e0>?",
        "entityMap": {
            "<e1>": "Islamic azad uni",
            "<e0>": "Craig Van Tilbury"
        },
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "sport",
                "containsRefer": false,
                "originStr": "sport",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "played at Islamic azad uni employes Craig Van Tilbury",
                "containsRefer": false,
                "originStr": "played at Islamic azad uni employes Craig Van Tilbury",
                "start": 2,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What sport played at Islamic azad uni employes Craig Van Tilbury?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT What) (NN sport)) (SQ (VP (VBD played) (ADVP (IN at) (NP (CD <e1>) (NNS employes))) (NP (ADD <e0>)))) (. ?)))",
        "id": 366
    },
    {
        "taggedQuestion": "List the products of the company which published Tweenies: Game Time.",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "list",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the products of #entity1",
                "containsRefer": true,
                "originStr": "the products of #entity1",
                "start": 1,
                "entityID": 0,
                "end": 12,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the company",
                "containsRefer": false,
                "originStr": "the company",
                "start": 4,
                "entityID": 1,
                "end": 6,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "published Tweenies : Game Time",
                "containsRefer": false,
                "originStr": "published Tweenies : Game Time",
                "start": 7,
                "entityID": 1,
                "end": 12,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "List the products of the company which published Tweenies: Game Time.",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 4,
                "from": 2,
                "end": 12,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB List) (NP (NP (DT the) (NNS products)) (PP (IN of) (NP (NP (DT the) (NN company)) (SBAR (WHNP (WDT which)) (S (VP (VBD published) (NP (NP (NNP Tweenies)) (: :) (NP (NN Game) (NN Time)))))))))) (. .)))",
        "id": 367
    },
    {
        "taggedQuestion": "List the agencies located someplace lead by Alex Chalk.",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "list",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "#entity1 Chalk",
                "containsRefer": true,
                "originStr": "#entity1 Chalk",
                "start": 1,
                "entityID": 0,
                "end": 9,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the agencies",
                "containsRefer": false,
                "originStr": "the agencies",
                "start": 1,
                "entityID": 1,
                "end": 3,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "located someplace lead by Alex",
                "containsRefer": false,
                "originStr": "located someplace lead by Alex",
                "start": 3,
                "entityID": 1,
                "end": 8,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "List the agencies located someplace lead by Alex Chalk.",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 1,
                "from": 2,
                "end": 8,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB List) (S (NP (NP (DT the) (NNS agencies)) (VP (VBN located) (ADVP (RB someplace) (NP (NP (JJ lead)) (PP (IN by) (NP (NNP Alex))))))) (VP (VB Chalk)))) (. .)))",
        "id": 368
    },
    {
        "taggedQuestion": "What religion are the characters of Absolutely Fabulous from?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "religion",
                "containsRefer": false,
                "originStr": "religion",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are the characters of Absolutely Fabulous from",
                "containsRefer": false,
                "originStr": "are the characters of Absolutely Fabulous from",
                "start": 2,
                "entityID": 0,
                "end": 9,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What religion are the characters of Absolutely Fabulous from?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT What) (NN religion)) (SQ (VBP are) (NP (NP (DT the) (NNS characters)) (PP (IN of) (ADVP (RB Absolutely) (PP (NP (NNP Fabulous)) (IN from)))))) (. ?)))",
        "id": 369
    },
    {
        "taggedQuestion": "What are the movies whose music composer uses a Hammond organ?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the movies",
                "containsRefer": false,
                "originStr": "the movies",
                "start": 2,
                "entityID": 0,
                "end": 4,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "whose music composer uses a Hammond organ",
                "containsRefer": false,
                "originStr": "whose music composer uses a Hammond organ",
                "start": 7,
                "entityID": 0,
                "end": 11,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What are the movies whose music composer uses a Hammond organ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3,
                "info": "whose music composer"
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBP are) (NP (NP (DT the) (NNS movies)) (SBAR (WHNP (WP$ whose) (NN music) (NN composer)) (S (VP (VBZ uses) (NP (DT a) (NNP Hammond) (NN organ))))))) (. ?)))",
        "id": 370
    },
    {
        "taggedQuestion": "Was Love Hurts in <e0>?",
        "entityMap": {"<e0>": "Short Cut Draw Blood"},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "was",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "JUDGE"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Love Hurts in Short Cut Draw Blood",
                "containsRefer": false,
                "originStr": "Love Hurts in Short Cut Draw Blood",
                "start": 1,
                "entityID": 0,
                "end": 5,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Was Love Hurts in Short Cut Draw Blood?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SQ (VBD Was) (S (NP (NNP Love)) (VP (VBZ Hurts) (PP (IN in) (NP (NN <e0>))))) (. ?)))",
        "id": 371
    },
    {
        "taggedQuestion": "Janaka Thissakuttiarachchi follows what religion, which once employed Atisa Srijnana too?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "once employed Atisa Srijnana too",
                "containsRefer": false,
                "originStr": "once employed Atisa Srijnana too",
                "start": 7,
                "entityID": 0,
                "end": 13,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Janaka Thissakuttiarachchi follows what religion",
                "containsRefer": false,
                "originStr": "Janaka Thissakuttiarachchi follows what religion",
                "start": 0,
                "entityID": 0,
                "end": 6,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Janaka Thissakuttiarachchi follows what religion, which once employed Atisa Srijnana too?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (S (NP (NNP Janaka) (NNP Thissakuttiarachchi)) (VP (VBZ follows) (NP (NP (WP what) (NN religion)) (, ,) (SBAR (WHNP (WDT which)) (S (ADVP (RB once)) (VP (VBD employed) (NP (NNP Atisa) (NNP Srijnana)) (ADVP (RB too))))))) (. ?)))",
        "id": 372
    },
    {
        "taggedQuestion": "Which birthplace of Svetlana Gounkina is also the largest city of Union State ?",
        "entityMap": {},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "birthplace of Svetlana Gounkina",
                "containsRefer": false,
                "originStr": "birthplace of Svetlana Gounkina",
                "start": 1,
                "entityID": 0,
                "end": 5,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the largest city of Union State",
                "containsRefer": false,
                "originStr": "the largest city of Union State",
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "",
                "containsRefer": false,
                "originStr": "",
                "start": 5,
                "entityID": 0,
                "end": 6,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which birthplace of Svetlana Gounkina is also the largest city of Union State ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NP (NN birthplace) (PP (IN of) (NP (NNP Svetlana) (NNP Gounkina))))) (SQ (VBZ is) (ADVP (RB also)) (NP (NP (DT the) (JJS largest) (NN city)) (PP (IN of) (NP (NNP Union) (NNP State))))) (. ?)))",
        "id": 373
    },
    {
        "taggedQuestion": "Name the TV show with artist Christopher Franke and cast member Jason Carter .",
        "entityMap": {},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "name",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the TV show",
                "containsRefer": false,
                "originStr": "the TV show",
                "start": 1,
                "entityID": 0,
                "end": 4,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "artist Christopher Franke",
                "containsRefer": false,
                "originStr": "artist Christopher Franke",
                "start": 5,
                "entityID": 0,
                "end": 8,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "cast member Jason Carter",
                "containsRefer": false,
                "originStr": "cast member Jason Carter",
                "start": 9,
                "entityID": 0,
                "end": 13,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Name the TV show with artist Christopher Franke and cast member Jason Carter .",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VP (VB Name) (NP (DT the) (NN TV) (NN show)) (PP (IN with) (NP (NN artist) (NNP Christopher) (NNP Franke)))) (CC and) (VP (VBD cast) (NP (NN member) (NNP Jason) (NNP Carter)))) (. .)))",
        "id": 374
    },
    {
        "taggedQuestion": "Which artist married to Lee Krasner?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "artist",
                "containsRefer": false,
                "originStr": "artist",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "married to Lee Krasner",
                "containsRefer": false,
                "originStr": "married to Lee Krasner",
                "start": 2,
                "entityID": 0,
                "end": 6,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which artist married to Lee Krasner?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NN artist)) (SQ (VP (VBD married) (PP (IN to) (NP (NNP Lee) (NNP Krasner))))) (. ?)))",
        "id": 375
    },
    {
        "taggedQuestion": "What teams did the ex teamplayers of <e0> start their career with?",
        "entityMap": {"<e0>": "lighthouse boy club"},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "teams",
                "containsRefer": false,
                "originStr": "teams",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "did #entity1 start their career with",
                "containsRefer": true,
                "originStr": "did #entity1 start their career with",
                "start": 2,
                "entityID": 0,
                "end": 12,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the ex teamplayers of lighthouse boy club",
                "containsRefer": false,
                "originStr": "the ex teamplayers of lighthouse boy club",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 4,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What teams did the ex teamplayers of lighthouse boy club start their career with?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT What) (NNS teams)) (SQ (VP (VBD did) (SBAR (S (NP (NP (DT the) (NN ex) (NNS teamplayers)) (PP (IN of) (NP (NN <e0>)))) (VP (VBP start) (NP (PRP$ their) (NN career)) (PP (IN with))))))) (. ?)))",
        "id": 376
    },
    {
        "taggedQuestion": "Where was the deadbody discovered of one of the alumni of <e0>?",
        "entityMap": {"<e0>": "General Educational Development"},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "Where",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "was the deadbody discovered of one of #entity1",
                "containsRefer": true,
                "originStr": "was the deadbody discovered of one of #entity1",
                "start": 1,
                "entityID": 0,
                "end": 12,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the alumni of General Educational Development",
                "containsRefer": false,
                "originStr": "the alumni of General Educational Development",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Where was the deadbody discovered of one of the alumni of General Educational Development?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": -1,
                "from": 2,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHADVP (WRB Where)) (SQ (VBD was) (NP (DT the) (NN deadbody)) (VP (VBN discovered) (PP (IN of) (NP (NP (CD one)) (PP (IN of) (NP (NP (DT the) (NNS alumni)) (PP (IN of) (NP (NN <e0>))))))))) (. ?)))",
        "id": 377
    },
    {
        "taggedQuestion": "Who designed the bridge in Oddamavadi?",
        "entityMap": {},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "who",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "designed #entity1",
                "containsRefer": true,
                "originStr": "designed #entity1",
                "start": 1,
                "entityID": 0,
                "end": 6,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the bridge in Oddamavadi",
                "containsRefer": false,
                "originStr": "the bridge in Oddamavadi",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Who designed the bridge in Oddamavadi?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": -1,
                "from": 2,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP Who)) (SQ (VP (VBD designed) (NP (DT the) (NN bridge)) (PP (IN in) (NP (NNP Oddamavadi))))) (. ?)))",
        "id": 378
    },
    {
        "taggedQuestion": "What is the leader name of the settlements whose governing body is Municipal council?",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the leader name of #entity1",
                "containsRefer": true,
                "originStr": "is the leader name of #entity1",
                "start": 1,
                "entityID": 0,
                "end": 14,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the settlements",
                "containsRefer": false,
                "originStr": "the settlements",
                "start": 6,
                "entityID": 1,
                "end": 8,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "whose governing body is Municipal council",
                "containsRefer": false,
                "originStr": "whose governing body is Municipal council",
                "start": 11,
                "entityID": 1,
                "end": 14,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is the leader name of the settlements whose governing body is Municipal council?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 6,
                "from": 2,
                "end": 14,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5,
                "info": "whose governing body"
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (NP (DT the) (NN leader) (NN name)) (PP (IN of) (NP (NP (DT the) (NNS settlements)) (SBAR (WHNP (WP$ whose) (NN governing) (NN body)) (S (VP (VBZ is) (NP (JJ Municipal) (NN council))))))))) (. ?)))",
        "id": 379
    },
    {
        "taggedQuestion": "Name the co-founder of the record labels which have one of the founder as Chris DuBois .",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "name",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the co-founder of #entity1",
                "containsRefer": true,
                "originStr": "the co-founder of #entity1",
                "start": 1,
                "entityID": 0,
                "end": 16,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the record labels",
                "containsRefer": false,
                "originStr": "the record labels",
                "start": 4,
                "entityID": 1,
                "end": 7,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "have one of the founder as Chris DuBois",
                "containsRefer": false,
                "originStr": "have one of the founder as Chris DuBois",
                "start": 8,
                "entityID": 1,
                "end": 16,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Name the co-founder of the record labels which have one of the founder as Chris DuBois .",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 4,
                "from": 2,
                "end": 16,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Name) (NP (NP (DT the) (NN co-founder)) (PP (IN of) (NP (NP (DT the) (NN record) (NNS labels)) (SBAR (WHNP (WDT which)) (S (VP (VBP have) (NP (NP (CD one)) (PP (IN of) (NP (NP (DT the) (NN founder)) (PP (IN as) (NP (NNP Chris) (NNP DuBois))))))))))))) (. .)))",
        "id": 380
    },
    {
        "taggedQuestion": "List the companies operating in Australia?",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "list",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the companies operating in Australia",
                "containsRefer": false,
                "originStr": "the companies operating in Australia",
                "start": 1,
                "entityID": 0,
                "end": 6,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "List the companies operating in Australia?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB List) (S (NP (DT the) (NNS companies)) (VP (VBG operating) (PP (IN in) (NP (NNP Australia)))))) (. ?)))",
        "id": 381
    },
    {
        "taggedQuestion": "Which countries is coconut used as a food ingredient?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "countries",
                "containsRefer": false,
                "originStr": "countries",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is coconut used as a food ingredient",
                "containsRefer": false,
                "originStr": "is coconut used as a food ingredient",
                "start": 2,
                "entityID": 0,
                "end": 9,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which countries is coconut used as a food ingredient?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NNS countries)) (SQ (VBZ is) (NP (NN coconut)) (VP (VBN used) (PP (IN as) (NP (DT a) (NN food) (NN ingredient))))) (. ?)))",
        "id": 382
    },
    {
        "taggedQuestion": "How many people have worked for teams chaired by Patricia Amorim?",
        "entityMap": {},
        "nodeNum": 7,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "how many",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "people",
                "containsRefer": false,
                "originStr": "people",
                "start": 2,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "have worked for #entity1",
                "containsRefer": true,
                "originStr": "have worked for #entity1",
                "start": 3,
                "entityID": 0,
                "end": 11,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "teams",
                "containsRefer": false,
                "originStr": "teams",
                "start": 6,
                "entityID": 1,
                "end": 7,
                "nodeType": 4,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            },
            {
                "str": "chaired by Patricia Amorim",
                "containsRefer": false,
                "originStr": "chaired by Patricia Amorim",
                "start": 7,
                "entityID": 1,
                "end": 11,
                "nodeType": 3,
                "nodeID": 6,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "How many people have worked for teams chaired by Patricia Amorim?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 6,
                "from": 3,
                "end": 11,
                "to": 4
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 5
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 6
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WHADJP (WRB How) (JJ many)) (NNS people)) (SQ (VP (VBP have) (VP (VBN worked) (PP (IN for) (NP (NP (NNS teams)) (VP (VBN chaired) (PP (IN by) (NP (NNP Patricia) (NNP Amorim))))))))) (. ?)))",
        "id": 383
    },
    {
        "taggedQuestion": "How many kinds of games is  played on the Amiga?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "how many",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "kinds of games",
                "containsRefer": false,
                "originStr": "kinds of games",
                "start": 2,
                "entityID": 0,
                "end": 5,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is played on the Amiga",
                "containsRefer": false,
                "originStr": "is played on the Amiga",
                "start": 5,
                "entityID": 0,
                "end": 10,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "How many kinds of games is  played on the Amiga?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WHNP (WHADJP (WRB How) (JJ many)) (NNS kinds)) (PP (IN of) (NP (NNS games)))) (SQ (VBZ is) (VP (VBN played) (PP (IN on) (NP (DT the) (NNP Amiga))))) (. ?)))",
        "id": 384
    },
    {
        "taggedQuestion": "Is the book <e0> a book about Buddhism?",
        "entityMap": {"<e0>": "The Buddha and his Dhamma"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "is",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "JUDGE"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the book The Buddha and his Dhamma",
                "containsRefer": false,
                "originStr": "the book The Buddha and his Dhamma",
                "start": 1,
                "entityID": 0,
                "end": 4,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "a book about Buddhism",
                "containsRefer": false,
                "originStr": "a book about Buddhism",
                "start": 4,
                "entityID": 0,
                "end": 8,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Is the book The Buddha and his Dhamma a book about Buddhism?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SQ (VBZ Is) (NP (DT the) (NN book) (NN <e0>)) (NP (NP (DT a) (NN book)) (PP (IN about) (NP (NNP Buddhism)))) (. ?)))",
        "id": 385
    },
    {
        "taggedQuestion": "How many relatives are there of people fought in the <e0>?",
        "entityMap": {"<e0>": "Battle of the Bulge"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "How many",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are there of people fought in the Battle of the Bulge",
                "containsRefer": false,
                "originStr": "are there of people fought in the Battle of the Bulge",
                "start": 3,
                "entityID": 0,
                "end": 11,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "relatives",
                "containsRefer": false,
                "originStr": "relatives",
                "start": 2,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "How many relatives are there of people fought in the Battle of the Bulge?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBAR (WHADJP (WRB How) (JJ many)) (S (NP (NNS relatives)) (VP (VBP are) (ADVP (RB there) (PP (IN of) (NP (NNS people)))) (VP (VBN fought) (PP (IN in) (NP (DT the) (NN <e0>)))))) (. ?)))",
        "id": 386
    },
    {
        "taggedQuestion": "How many genres of games can I find on the commodore CDTV?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "how many",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "genres of games",
                "containsRefer": false,
                "originStr": "genres of games",
                "start": 2,
                "entityID": 0,
                "end": 5,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "can I find on the commodore CDTV",
                "containsRefer": false,
                "originStr": "can I find on the commodore CDTV",
                "start": 5,
                "entityID": 0,
                "end": 12,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "How many genres of games can I find on the commodore CDTV?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WHADJP (WRB How) (JJ many)) (NP (NP (NNS genres)) (PP (IN of) (NP (NNS games))))) (SQ (MD can) (NP (PRP I)) (VP (VB find) (PP (IN on) (NP (DT the) (NN commodore) (NNP CDTV))))) (. ?)))",
        "id": 387
    },
    {
        "taggedQuestion": "Does Jevan Snead play as Quarterback?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "does",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "JUDGE"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Jevan Snead",
                "containsRefer": false,
                "originStr": "Jevan Snead",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "play as Quarterback",
                "containsRefer": false,
                "originStr": "play as Quarterback",
                "start": 3,
                "entityID": 0,
                "end": 6,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Does Jevan Snead play as Quarterback?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SQ (VBZ Does) (NP (NNP Jevan) (NNP Snead)) (VP (VB play) (PP (IN as) (NP (NN Quarterback)))) (. ?)))",
        "id": 388
    },
    {
        "taggedQuestion": "Give me the sitcoms where Eliza Schneider and Isaac Hayes gave voice.",
        "entityMap": {},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "give me",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the sitcoms",
                "containsRefer": false,
                "originStr": "the sitcoms",
                "start": 2,
                "entityID": 0,
                "end": 4,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Eliza Schneider gave voice",
                "containsRefer": false,
                "originStr": "Eliza Schneider gave voice",
                "start": 4,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Isaac Hayes gave voice",
                "containsRefer": false,
                "originStr": "Isaac Hayes gave voice",
                "start": 8,
                "entityID": 0,
                "end": 11,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Give me the sitcoms where Eliza Schneider and Isaac Hayes gave voice.",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Give) (NP (PRP me)) (NP (DT the) (NNS sitcoms)) (SBAR (WHADVP (WRB where)) (S (NP (NP (NNP Eliza) (NNP Schneider)) (CC and) (NP (NNP Isaac) (NNP Hayes))) (VP (VBD gave) (NP (NN voice)))))) (. .)))",
        "id": 389
    },
    {
        "taggedQuestion": "Directors of which movies are buried in Ronda?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "movies are buried in Ronda",
                "containsRefer": false,
                "originStr": "movies are buried in Ronda",
                "start": 0,
                "entityID": 0,
                "end": 6,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Directors of",
                "containsRefer": false,
                "originStr": "Directors of",
                "start": 0,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Directors of which movies are buried in Ronda?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (NP (NP (NNS Directors)) (PP (IN of) (SBAR (WHNP (WDT which)) (S (NP (NNS movies)) (VP (VBP are) (VP (VBN buried) (PP (IN in) (NP (NNP Ronda)))))))) (. ?)))",
        "id": 390
    },
    {
        "taggedQuestion": "List the debut team of the baseball player who born in Houston.",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "list",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the debut team of #entity1",
                "containsRefer": true,
                "originStr": "the debut team of #entity1",
                "start": 1,
                "entityID": 0,
                "end": 12,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the baseball player",
                "containsRefer": false,
                "originStr": "the baseball player",
                "start": 5,
                "entityID": 1,
                "end": 8,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "born in Houston",
                "containsRefer": false,
                "originStr": "born in Houston",
                "start": 9,
                "entityID": 1,
                "end": 12,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "List the debut team of the baseball player who born in Houston.",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 5,
                "from": 2,
                "end": 12,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB List) (NP (NP (DT the) (NN debut) (NN team)) (PP (IN of) (NP (NP (DT the) (NN baseball) (NN player)) (SBAR (WHNP (WP who)) (S (VP (VBN born) (PP (IN in) (NP (NNP Houston)))))))))) (. .)))",
        "id": 391
    },
    {
        "taggedQuestion": "Does Cascade Airways have a hub in Seattle?",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "does cascade",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "JUDGE"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Airways have a hub in Seattle",
                "containsRefer": false,
                "originStr": "Airways have a hub in Seattle",
                "start": 2,
                "entityID": 0,
                "end": 8,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Does Cascade Airways have a hub in Seattle?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SQ (SQ (VBZ Does) (NP (NNP Cascade))) (S (NP (NNPS Airways)) (VP (VBP have) (NP (NP (DT a) (NN hub)) (PP (IN in) (NP (NNP Seattle)))))) (. ?)))",
        "id": 392
    },
    {
        "taggedQuestion": "Who edited  British Gazette ?",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "who",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "edited British Gazette",
                "containsRefer": false,
                "originStr": "edited British Gazette",
                "start": 1,
                "entityID": 0,
                "end": 4,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Who edited  British Gazette ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP Who)) (SQ (VP (VBN edited) (NP (JJ British) (NNP Gazette)))) (. ?)))",
        "id": 393
    },
    {
        "taggedQuestion": "List the things for which the relatives of Mrunalini Kunte are known?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "list",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the things",
                "containsRefer": false,
                "originStr": "the things",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the relatives of Mrunalini Kunte are known",
                "containsRefer": false,
                "originStr": "the relatives of Mrunalini Kunte are known",
                "start": 5,
                "entityID": 0,
                "end": 11,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "List the things for which the relatives of Mrunalini Kunte are known?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SQ (VP (VB List) (NP (NP (DT the) (NNS things)) (SBAR (WHPP (IN for) (WHNP (WDT which))) (S (NP (NP (DT the) (NNS relatives)) (PP (IN of) (NP (NNP Mrunalini) (NNP Kunte)))) (VP (VBP are) (VP (VBN known))))))) (. ?)))",
        "id": 394
    },
    {
        "taggedQuestion": "What acts and artists are associated with people who have worked with Divertis?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "What acts",
                "containsRefer": false,
                "originStr": "What acts",
                "start": 0,
                "entityID": 0,
                "end": 2,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "artists are associated with people who have worked with Divertis",
                "containsRefer": false,
                "originStr": "artists are associated with people who have worked with Divertis",
                "start": 3,
                "entityID": 0,
                "end": 13,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What acts and artists are associated with people who have worked with Divertis?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (S (S (NP (WDT What)) (VP (VBZ acts))) (CC and) (S (NP (NNS artists)) (VP (VBP are) (VP (VBN associated) (PP (IN with) (NP (NP (NNS people)) (SBAR (WHNP (WP who)) (S (VP (VBP have) (VP (VBN worked) (PP (IN with) (NP (NNP Divertis)))))))))))) (. ?)))",
        "id": 395
    },
    {
        "taggedQuestion": "What are the notableworks of <e0>?",
        "entityMap": {"<e0>": "Russell T Davies"},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are the notableworks of Russell T Davies",
                "containsRefer": false,
                "originStr": "are the notableworks of Russell T Davies",
                "start": 1,
                "entityID": 0,
                "end": 6,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What are the notableworks of Russell T Davies?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBP are) (NP (NP (DT the) (NNS notableworks)) (PP (IN of) (NP (NN <e0>))))) (. ?)))",
        "id": 396
    },
    {
        "taggedQuestion": "Which company has developed games whose music is done by Gerard Marino?",
        "entityMap": {},
        "nodeNum": 7,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "company",
                "containsRefer": false,
                "originStr": "company",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "has developed #entity1",
                "containsRefer": true,
                "originStr": "has developed #entity1",
                "start": 2,
                "entityID": 0,
                "end": 12,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "games",
                "containsRefer": false,
                "originStr": "games",
                "start": 4,
                "entityID": 1,
                "end": 5,
                "nodeType": 4,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            },
            {
                "str": "whose music is done by Gerard Marino",
                "containsRefer": false,
                "originStr": "whose music is done by Gerard Marino",
                "start": 7,
                "entityID": 1,
                "end": 12,
                "nodeType": 3,
                "nodeID": 6,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which company has developed games whose music is done by Gerard Marino?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 4,
                "from": 3,
                "end": 12,
                "to": 4
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 5
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 6,
                "info": "whose music"
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NN company)) (SQ (VP (VBZ has) (VP (VBN developed) (NP (NP (NNS games)) (SBAR (WHNP (WP$ whose) (NN music)) (S (VP (VBZ is) (VP (VBN done) (PP (IN by) (NP (NNP Gerard) (NNP Marino))))))))))) (. ?)))",
        "id": 397
    },
    {
        "taggedQuestion": "Who all have developed softwares for Unix Like OSes?",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "who",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "have developed softwares for Unix Like OSes",
                "containsRefer": false,
                "originStr": "have developed softwares for Unix Like OSes",
                "start": 2,
                "entityID": 0,
                "end": 9,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Who all have developed softwares for Unix Like OSes?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP Who)) (SQ (NP (DT all)) (VP (VBP have) (VP (VBN developed) (NP (NP (NNS softwares)) (PP (IN for) (NP (NNP Unix)))) (PP (IN Like) (NP (NNPS OSes)))))) (. ?)))",
        "id": 398
    },
    {
        "taggedQuestion": "What are some party leaders of the parties which have had a seat in Berlin?",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are some party leaders of #entity1",
                "containsRefer": true,
                "originStr": "are some party leaders of #entity1",
                "start": 1,
                "entityID": 0,
                "end": 15,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the parties",
                "containsRefer": false,
                "originStr": "the parties",
                "start": 6,
                "entityID": 1,
                "end": 8,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "have had a seat in Berlin",
                "containsRefer": false,
                "originStr": "have had a seat in Berlin",
                "start": 9,
                "entityID": 1,
                "end": 15,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What are some party leaders of the parties which have had a seat in Berlin?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 6,
                "from": 2,
                "end": 15,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBP are) (NP (NP (DT some) (NN party) (NNS leaders)) (PP (IN of) (NP (NP (DT the) (NNS parties)) (SBAR (WHNP (WDT which)) (S (VP (VBP have) (VP (VBN had) (NP (NP (DT a) (NN seat)) (PP (IN in) (NP (NNP Berlin)))))))))))) (. ?)))",
        "id": 399
    },
    {
        "taggedQuestion": "Was James maker in the band Noko?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "was",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "JUDGE"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "James",
                "containsRefer": false,
                "originStr": "James",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "maker in the band Noko",
                "containsRefer": false,
                "originStr": "maker in the band Noko",
                "start": 2,
                "entityID": 0,
                "end": 7,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Was James maker in the band Noko?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SQ (VBD Was) (NP (NNP James)) (NP (NP (NN maker)) (PP (IN in) (NP (DT the) (NN band) (NNP Noko)))) (. ?)))",
        "id": 400
    },
    {
        "taggedQuestion": "Was Nick Jonas a member of the Jonas Brothers?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "was",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "JUDGE"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Nick Jonas",
                "containsRefer": false,
                "originStr": "Nick Jonas",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "a member of the Jonas Brothers",
                "containsRefer": false,
                "originStr": "a member of the Jonas Brothers",
                "start": 3,
                "entityID": 0,
                "end": 9,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Was Nick Jonas a member of the Jonas Brothers?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SQ (VBD Was) (NP (NNP Nick) (NNP Jonas)) (NP (NP (DT a) (NN member)) (PP (IN of) (NP (DT the) (NNP Jonas) (NNPS Brothers)))) (. ?)))",
        "id": 401
    },
    {
        "taggedQuestion": "Which tenant of <e0> is the military branch of the Gary Holder-Winfield ?",
        "entityMap": {"<e0>": "New Sanno Hotel"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "tenant of New Sanno Hotel",
                "containsRefer": false,
                "originStr": "tenant of New Sanno Hotel",
                "start": 1,
                "entityID": 0,
                "end": 4,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the military branch of the Gary Holder-Winfield",
                "containsRefer": false,
                "originStr": "is the military branch of the Gary Holder-Winfield",
                "start": 4,
                "entityID": 0,
                "end": 14,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which tenant of New Sanno Hotel is the military branch of the Gary Holder-Winfield ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NP (NN tenant) (PP (IN of) (NP (NN <e0>))))) (SQ (VBZ is) (NP (NP (DT the) (JJ military) (NN branch)) (PP (IN of) (NP (DT the) (NNP Gary) (NNP Holder) (HYPH -) (NNP Winfield))))) (. ?)))",
        "id": 402
    },
    {
        "taggedQuestion": "List the director of The Adventures of mimi ?",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "list",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the director of The Adventures of mimi",
                "containsRefer": false,
                "originStr": "the director of The Adventures of mimi",
                "start": 1,
                "entityID": 0,
                "end": 8,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "List the director of The Adventures of mimi ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SQ (VP (VB List) (NP (NP (DT the) (NN director)) (PP (IN of) (NP (NP (DT The) (NNS Adventures)) (PP (IN of) (NP (NN mimi))))))) (. ?)))",
        "id": 403
    },
    {
        "taggedQuestion": "List sports managers who managed Middlesbrough F.C. and England national under-21 football team?",
        "entityMap": {"<e0>": "Middlesbrough F.C. England national under-21 football team"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "List",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "sports managers who managed Middlesbrough F.C",
                "containsRefer": false,
                "originStr": "sports managers who managed Middlesbrough F.C",
                "start": 0,
                "entityID": 0,
                "end": 6,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "England national under-21 football team",
                "containsRefer": false,
                "originStr": "England national under-21 football team",
                "start": 7,
                "entityID": 0,
                "end": 13,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "List sports managers who managed Middlesbrough F.C. and England national under-21 football team?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (NP (NP (NN List) (NNS sports) (NNS managers)) (SBAR (WHNP (WP who)) (S (VP (VBD managed) (NP (NML (NNP Middlesbrough) (NNP F.C.) (CC and) (NNP England)) (JJ national) (NML (PP (IN under) (HYPH -) (NP (CD 21)))) (NN football) (NN team))))) (. ?)))",
        "id": 404
    },
    {
        "taggedQuestion": "Name all the soccer players who played in a under 18 club for La Liga.",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "name",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "all the soccer players",
                "containsRefer": false,
                "originStr": "all the soccer players",
                "start": 1,
                "entityID": 0,
                "end": 5,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "played in a under 18 club for La Liga",
                "containsRefer": false,
                "originStr": "played in a under 18 club for La Liga",
                "start": 6,
                "entityID": 0,
                "end": 15,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Name all the soccer players who played in a under 18 club for La Liga.",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Name) (NP (NP (PDT all) (DT the) (NN soccer) (NNS players)) (SBAR (WHNP (WP who)) (S (VP (VBD played) (PP (IN in) (NP (NP (DT a) (NML (QP (IN under) (CD 18))) (NN club)) (PP (IN for) (NP (NNP La) (NNP Liga)))))))))) (. .)))",
        "id": 405
    },
    {
        "taggedQuestion": "Which key perosn of the Elders is also the president of <e0> ?",
        "entityMap": {"<e0>": "united World College"},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "key perosn of the Elders",
                "containsRefer": false,
                "originStr": "key perosn of the Elders",
                "start": 1,
                "entityID": 0,
                "end": 6,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the president of united World College",
                "containsRefer": false,
                "originStr": "the president of united World College",
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "",
                "containsRefer": false,
                "originStr": "",
                "start": 6,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which key perosn of the Elders is also the president of united World College ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NP (NP (JJ key) (NN perosn)) (PP (IN of) (NP (DT the) (NNPS Elders))))) (SQ (VBZ is) (ADVP (RB also)) (NP (NP (DT the) (NN president)) (PP (IN of) (NP (NN <e0>))))) (. ?)))",
        "id": 406
    },
    {
        "taggedQuestion": "Who are the players whose current clubs have Ferran Soriano as chairman?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "who",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the players",
                "containsRefer": false,
                "originStr": "the players",
                "start": 2,
                "entityID": 0,
                "end": 4,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "whose current clubs have Ferran Soriano as chairman",
                "containsRefer": false,
                "originStr": "whose current clubs have Ferran Soriano as chairman",
                "start": 7,
                "entityID": 0,
                "end": 12,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Who are the players whose current clubs have Ferran Soriano as chairman?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3,
                "info": "whose current clubs"
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP Who)) (SQ (VBP are) (NP (NP (DT the) (NNS players)) (SBAR (WHNP (WP$ whose) (NML (JJ current) (NNS clubs))) (S (VP (VBP have) (NP (NP (NNP Ferran) (NNP Soriano)) (PP (IN as) (NP (NN chairman))))))))) (. ?)))",
        "id": 407
    },
    {
        "taggedQuestion": "What are some parties which have people from Mangalore as a member?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "some parties",
                "containsRefer": false,
                "originStr": "some parties",
                "start": 2,
                "entityID": 0,
                "end": 4,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "have people from Mangalore as a member",
                "containsRefer": false,
                "originStr": "have people from Mangalore as a member",
                "start": 5,
                "entityID": 0,
                "end": 12,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What are some parties which have people from Mangalore as a member?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBP are) (NP (NP (DT some) (NNS parties)) (SBAR (WHNP (WDT which)) (S (VP (VBP have) (NP (NP (NNS people)) (PP (IN from) (NP (NNP Mangalore)))) (PP (IN as) (NP (DT a) (NN member)))))))) (. ?)))",
        "id": 408
    },
    {
        "taggedQuestion": "Which employer of <e0> is also the producer of Delta III ?",
        "entityMap": {"<e0>": "Michael M. Sears"},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "employer of Michael M. Sears",
                "containsRefer": false,
                "originStr": "employer of Michael M. Sears",
                "start": 1,
                "entityID": 0,
                "end": 4,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the producer of Delta III",
                "containsRefer": false,
                "originStr": "the producer of Delta III",
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "",
                "containsRefer": false,
                "originStr": "",
                "start": 4,
                "entityID": 0,
                "end": 5,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which employer of Michael M. Sears is also the producer of Delta III ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NP (NN employer) (PP (IN of) (NP (NN <e0>))))) (SQ (VBZ is) (ADVP (RB also)) (NP (NP (DT the) (NN producer)) (PP (IN of) (NP (NNP Delta) (NNP III))))) (. ?)))",
        "id": 409
    },
    {
        "taggedQuestion": "Name the largest city in the county where there is a Cy-<e0>",
        "entityMap": {"<e0>": "Fair High School."},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "name",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the largest city in #entity1",
                "containsRefer": true,
                "originStr": "the largest city in #entity1",
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "county",
                "containsRefer": false,
                "originStr": "county",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "there is a Cy-Fair High School",
                "containsRefer": false,
                "originStr": "there is a Cy-Fair High School",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Name the largest city in the county where there is a Cy-Fair High School.",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": -1,
                "from": 2,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (FRAG (SINV (VP (VB Name)) (NP (NP (NP (DT the) (JJS largest) (NN city)) (PP (IN in) (NP (DT the) (NN county)))) (SBAR (WHADVP (WRB where)) (S (NP (EX there)) (VP (VBZ is) (NP (DT a) (NNP Cy))))))) (HYPH -) (NP (ADD <e0>))))",
        "id": 410
    },
    {
        "taggedQuestion": "How many bacterias are there whose division is Firmicutes?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "How many",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "bacterias",
                "containsRefer": false,
                "originStr": "bacterias",
                "start": 2,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "whose division is Firmicutes",
                "containsRefer": false,
                "originStr": "whose division is Firmicutes",
                "start": 7,
                "entityID": 0,
                "end": 9,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "How many bacterias are there whose division is Firmicutes?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3,
                "info": "whose division"
            }
        ],
        "syntaxTreeText": "(ROOT (SBAR (WHADJP (WRB How) (JJ many)) (S (NP (NNS bacterias)) (VP (VBP are) (NP (NP (EX there)) (SBAR (WHNP (WP$ whose) (NML (NN division))) (S (VP (VBZ is) (NP (NNP Firmicutes)))))))) (. ?)))",
        "id": 411
    },
    {
        "taggedQuestion": "Which country does Peter Blay owe his allegiance?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "country",
                "containsRefer": false,
                "originStr": "country",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "does Peter Blay owe his allegiance",
                "containsRefer": false,
                "originStr": "does Peter Blay owe his allegiance",
                "start": 2,
                "entityID": 0,
                "end": 8,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which country does Peter Blay owe his allegiance?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NN country)) (SQ (VBZ does) (NP (NNP Peter) (NNP Blay)) (VP (VB owe) (NP (PRP$ his) (NN allegiance)))) (. ?)))",
        "id": 412
    },
    {
        "taggedQuestion": "Is jim harbaugh currently in the Michigan Wolverines?",
        "entityMap": {},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "is",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "JUDGE"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "jim harbaugh",
                "containsRefer": false,
                "originStr": "jim harbaugh",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "currently",
                "containsRefer": false,
                "originStr": "currently",
                "start": 3,
                "entityID": 0,
                "end": 3,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the Michigan Wolverines",
                "containsRefer": false,
                "originStr": "the Michigan Wolverines",
                "start": 5,
                "entityID": 0,
                "end": 8,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Is jim harbaugh currently in the Michigan Wolverines?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SQ (VBZ Is) (NP (NNP jim) (NNP harbaugh)) (ADVP (RB currently)) (PP (IN in) (NP (DT the) (NNP Michigan) (NNPS Wolverines))) (. ?)))",
        "id": 413
    },
    {
        "taggedQuestion": "Name the <e0> whose subsequent work is Crusade and Composer is Stewart Copeland.",
        "entityMap": {"<e0>": "television show"},
        "nodeNum": 8,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "name",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the television show",
                "containsRefer": false,
                "originStr": "the television show",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "whose #entity1 is Stewart Copeland",
                "containsRefer": true,
                "originStr": "whose #entity1 is Stewart Copeland",
                "start": 6,
                "entityID": 0,
                "end": 13,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Crusade is Stewart Copeland",
                "containsRefer": false,
                "originStr": "Crusade is Stewart Copeland",
                "start": 7,
                "entityID": 1,
                "end": 8,
                "nodeType": 4,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is Stewart Copeland",
                "containsRefer": false,
                "originStr": "is Stewart Copeland",
                "start": 10,
                "entityID": 1,
                "end": 13,
                "nodeType": 3,
                "nodeID": 6,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Composer is Stewart Copeland",
                "containsRefer": false,
                "originStr": "Composer is Stewart Copeland",
                "start": 9,
                "entityID": 1,
                "end": 9,
                "nodeType": 3,
                "nodeID": 7,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Name the television show whose subsequent work is Crusade and Composer is Stewart Copeland.",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3,
                "info": "whose subsequent work"
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 7,
                "from": 3,
                "end": 13,
                "to": 4
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 5
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 6
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 7
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Name) (NP (NP (DT the) (NN <e0>)) (SBAR (WHNP (WP$ whose) (NML (JJ subsequent) (NN work))) (S (VP (VBZ is) (NP (NP (NN Crusade) (CC and) (NN Composer)) (SBAR (S (VP (VBZ is) (NP (NNP Stewart) (NNP Copeland))))))))))) (. .)))",
        "id": 414
    },
    {
        "taggedQuestion": "What are the current music bands of Chester Bennington?",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are the current music bands of Chester Bennington",
                "containsRefer": false,
                "originStr": "are the current music bands of Chester Bennington",
                "start": 1,
                "entityID": 0,
                "end": 9,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What are the current music bands of Chester Bennington?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBP are) (NP (NP (DT the) (JJ current) (NN music) (NNS bands)) (PP (IN of) (NP (NNP Chester) (NNP Bennington))))) (. ?)))",
        "id": 415
    },
    {
        "taggedQuestion": "Who was the prime minister under which the predecessor of <e0> served?",
        "entityMap": {"<e0>": "Derick Heathcoat Amory"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "who",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the prime minister",
                "containsRefer": false,
                "originStr": "the prime minister",
                "start": 2,
                "entityID": 0,
                "end": 5,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the predecessor of Derick Heathcoat Amory served",
                "containsRefer": false,
                "originStr": "the predecessor of Derick Heathcoat Amory served",
                "start": 7,
                "entityID": 0,
                "end": 11,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Who was the prime minister under which the predecessor of Derick Heathcoat Amory served?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP Who)) (SQ (VBD was) (NP (NP (DT the) (JJ prime) (NN minister)) (SBAR (WHPP (IN under) (WHNP (WDT which))) (S (NP (NP (DT the) (NN predecessor)) (PP (IN of) (NP (NN <e0>)))) (VP (VBN served)))))) (. ?)))",
        "id": 416
    },
    {
        "taggedQuestion": "Which person designed the cars which has been designed by <e0>?",
        "entityMap": {"<e0>": "ASC Creative Services"},
        "nodeNum": 7,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "person",
                "containsRefer": false,
                "originStr": "person",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "designed #entity1",
                "containsRefer": true,
                "originStr": "designed #entity1",
                "start": 2,
                "entityID": 0,
                "end": 11,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the cars",
                "containsRefer": false,
                "originStr": "the cars",
                "start": 3,
                "entityID": 1,
                "end": 5,
                "nodeType": 4,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            },
            {
                "str": "has been designed by ASC Creative Services",
                "containsRefer": false,
                "originStr": "has been designed by ASC Creative Services",
                "start": 6,
                "entityID": 1,
                "end": 11,
                "nodeType": 3,
                "nodeID": 6,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which person designed the cars which has been designed by ASC Creative Services?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 3,
                "from": 3,
                "end": 11,
                "to": 4
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 5
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 6
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NN person)) (SQ (VP (VBD designed) (NP (NP (DT the) (NNS cars)) (SBAR (WHNP (WDT which)) (S (VP (VBZ has) (VP (VBN been) (VP (VBN designed) (PP (IN by) (NP (NN <e0>))))))))))) (. ?)))",
        "id": 417
    },
    {
        "taggedQuestion": "What are some orthonychidae birds?",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are some orthonychidae birds",
                "containsRefer": false,
                "originStr": "are some orthonychidae birds",
                "start": 1,
                "entityID": 0,
                "end": 5,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What are some orthonychidae birds?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBP are) (NP (NP (DT some) (NNS orthonychidae)) (NP (NNS birds)))) (. ?)))",
        "id": 418
    },
    {
        "taggedQuestion": "Which driver had the pole position in <e0> ?",
        "entityMap": {"<e0>": "1994 Spanish Grand Prix"},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "driver",
                "containsRefer": false,
                "originStr": "driver",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "had #entity1",
                "containsRefer": true,
                "originStr": "had #entity1",
                "start": 2,
                "entityID": 0,
                "end": 8,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the pole position in 1994 Spanish Grand Prix",
                "containsRefer": false,
                "originStr": "the pole position in 1994 Spanish Grand Prix",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 4,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which driver had the pole position in 1994 Spanish Grand Prix ?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NN driver)) (SQ (VP (VBD had) (NP (NP (DT the) (NN pole) (NN position)) (PP (IN in) (NP (NN <e0>)))))) (. ?)))",
        "id": 419
    },
    {
        "taggedQuestion": "Does the US route 281 have a junction at San Antonio?",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "does the us route",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "JUDGE"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "281 have a junction at San Antonio",
                "containsRefer": false,
                "originStr": "281 have a junction at San Antonio",
                "start": 4,
                "entityID": 0,
                "end": 11,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Does the US route 281 have a junction at San Antonio?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SQ (SQ (VBZ Does) (NP (DT the) (NNP US) (NN route))) (S (NP (CD 281)) (VP (VBP have) (NP (NP (DT a) (NN junction)) (PP (IN at) (NP (NNP San) (NNP Antonio)))))) (. ?)))",
        "id": 420
    },
    {
        "taggedQuestion": "How many awards have been given to the founder of Grameen Bank?",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "How many",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "have been given to #entity1",
                "containsRefer": true,
                "originStr": "have been given to #entity1",
                "start": 3,
                "entityID": 0,
                "end": 12,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "awards",
                "containsRefer": false,
                "originStr": "awards",
                "start": 2,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the founder of Grameen Bank",
                "containsRefer": false,
                "originStr": "the founder of Grameen Bank",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 4,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "How many awards have been given to the founder of Grameen Bank?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": -1,
                "from": 2,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (SBAR (WHADJP (WRB How) (JJ many)) (S (NP (NNS awards)) (VP (VBP have) (VP (VBN been) (VP (VBN given) (PP (IN to) (NP (NP (DT the) (NN founder)) (PP (IN of) (NP (NNP Grameen) (NNP Bank))))))))) (. ?)))",
        "id": 421
    },
    {
        "taggedQuestion": "Was Queen Latifah in the U.N.I.T.Y. group?",
        "entityMap": {"<e0>": "U.N. I.T. Y. group"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "was",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "JUDGE"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Queen Latifah",
                "containsRefer": false,
                "originStr": "Queen Latifah",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the U.N.I.T.Y. group",
                "containsRefer": false,
                "originStr": "the U.N.I.T.Y. group",
                "start": 4,
                "entityID": 0,
                "end": 7,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Was Queen Latifah in the U.N.I.T.Y. group?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SQ (VBD Was) (NP (NNP Queen) (NNP Latifah)) (PP (IN in) (NP (DT the) (NNP U.N.I.T.Y.) (NN group))) (. ?)))",
        "id": 422
    },
    {
        "taggedQuestion": "Count the important works done by the writers of The Second Coming.",
        "entityMap": {},
        "nodeNum": 7,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "count",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Count the important",
                "containsRefer": false,
                "originStr": "Count the important",
                "start": 0,
                "entityID": 0,
                "end": 3,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "works done by #entity1",
                "containsRefer": true,
                "originStr": "works done by #entity1",
                "start": 3,
                "entityID": 0,
                "end": 12,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the writers of The Second Coming",
                "containsRefer": false,
                "originStr": "the writers of The Second Coming",
                "start": 6,
                "entityID": 1,
                "end": 12,
                "nodeType": 4,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            },
            {
                "str": "",
                "containsRefer": false,
                "originStr": "",
                "start": 12,
                "entityID": 0,
                "end": 13,
                "nodeType": 4,
                "nodeID": 6,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Count the important works done by the writers of The Second Coming.",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 6
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 6,
                "from": 3,
                "end": 12,
                "to": 4
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (S (S (VP (VB Count) (NP (DT the) (JJ important)))) (VP (VBZ works) (VP (VBN done) (PP (IN by) (NP (NP (DT the) (NNS writers)) (PP (IN of) (NP (NP (DT The) (JJ Second)) (VP (VBG Coming)))))))) (. .)))",
        "id": 423
    },
    {
        "taggedQuestion": "Who all are known to play the <e0>?",
        "entityMap": {"<e0>": "Gibson Guitar Corporation"},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "who",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are known to play the Gibson Guitar Corporation",
                "containsRefer": false,
                "originStr": "are known to play the Gibson Guitar Corporation",
                "start": 2,
                "entityID": 0,
                "end": 8,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Who all are known to play the Gibson Guitar Corporation?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP Who)) (SQ (NP (DT all)) (VP (VBP are) (VP (VBN known) (S (VP (TO to) (VP (VB play) (NP (DT the) (NN <e0>)))))))) (. ?)))",
        "id": 424
    },
    {
        "taggedQuestion": "Which child of Jack Ferguson became a Prime Minister?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "child of Jack Ferguson",
                "containsRefer": false,
                "originStr": "child of Jack Ferguson",
                "start": 1,
                "entityID": 0,
                "end": 5,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "became a Prime Minister",
                "containsRefer": false,
                "originStr": "became a Prime Minister",
                "start": 5,
                "entityID": 0,
                "end": 9,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which child of Jack Ferguson became a Prime Minister?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WHNP (WDT Which) (NN child)) (PP (IN of) (NP (NNP Jack) (NNP Ferguson)))) (SQ (VP (VBD became) (NP (DT a) (NML (NNP Prime) (NNP Minister))))) (. ?)))",
        "id": 425
    },
    {
        "taggedQuestion": "Did Annie Leibovitz do the cover of The Road Ahead?",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "did",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "JUDGE"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Annie Leibovitz",
                "containsRefer": false,
                "originStr": "Annie Leibovitz",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "do#entity1 Ahead",
                "containsRefer": true,
                "originStr": "do#entity1 Ahead",
                "start": 3,
                "entityID": 0,
                "end": 10,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the cover of The Road",
                "containsRefer": false,
                "originStr": "the cover of The Road",
                "start": 4,
                "entityID": 1,
                "end": 9,
                "nodeType": 4,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Did Annie Leibovitz do the cover of The Road Ahead?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 4,
                "from": 3,
                "end": 9,
                "to": 4
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (SQ (VBD Did) (NP (NNP Annie) (NNP Leibovitz)) (VP (VBP do) (NP (NP (DT the) (NN cover)) (PP (IN of) (NP (DT The) (NNP Road)))) (ADVP (RB Ahead))) (. ?)))",
        "id": 426
    },
    {
        "taggedQuestion": "What are the things whose mascots are from the class Eutheria?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the things",
                "containsRefer": false,
                "originStr": "the things",
                "start": 2,
                "entityID": 0,
                "end": 4,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "whose mascots are from the class Eutheria",
                "containsRefer": false,
                "originStr": "whose mascots are from the class Eutheria",
                "start": 6,
                "entityID": 0,
                "end": 11,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What are the things whose mascots are from the class Eutheria?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3,
                "info": "whose mascots"
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBP are) (NP (NP (DT the) (NNS things)) (SBAR (WHNP (WP$ whose) (NNS mascots)) (S (VP (VBP are) (PP (IN from) (NP (DT the) (NN class) (NNP Eutheria)))))))) (. ?)))",
        "id": 427
    },
    {
        "taggedQuestion": "Whom did Michael Springer palyed for which is also had a former student named Donald Brooks ?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "whom",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "did Michael Springer palyed for which",
                "containsRefer": false,
                "originStr": "did Michael Springer palyed for which",
                "start": 1,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "had a former student named Donald Brooks",
                "containsRefer": false,
                "originStr": "had a former student named Donald Brooks",
                "start": 9,
                "entityID": 0,
                "end": 16,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Whom did Michael Springer palyed for which is also had a former student named Donald Brooks ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP Whom)) (SQ (VBD did) (NP (NNP Michael) (NNP Springer)) (VP (VBD palyed) (PP (IN for) (SBAR (WHNP (WDT which)) (S (VP (VBZ is) (ADVP (RB also)) (VP (VBN had) (NP (NP (DT a) (JJ former) (NN student)) (VP (VBN named) (NP (NNP Donald) (NNP Brooks))))))))))) (. ?)))",
        "id": 428
    },
    {
        "taggedQuestion": "Name the common nationality of <e1> and <e0> .",
        "entityMap": {
            "<e1>": "Georgina Theodora Wood",
            "<e0>": "akwasi Oppong Fosu"
        },
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "name",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the common nationality",
                "containsRefer": false,
                "originStr": "the common nationality",
                "start": 1,
                "entityID": 0,
                "end": 4,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Name the common nationality of Georgina Theodora Wood and akwasi Oppong Fosu .",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Name) (NP (DT the) (JJ common) (NN nationality)) (PP (IN of) (FRAG (NP (ADD <e1>) (CC and) (ADD <e0>))))) (. .)))",
        "id": 429
    },
    {
        "taggedQuestion": "Name the movie written by Monty Python and distributed by <e0> .",
        "entityMap": {"<e0>": "Cinema International Corporation"},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "name",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the movie",
                "containsRefer": false,
                "originStr": "the movie",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "written by Monty Python",
                "containsRefer": false,
                "originStr": "written by Monty Python",
                "start": 3,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "distributed by Cinema International Corporation",
                "containsRefer": false,
                "originStr": "distributed by Cinema International Corporation",
                "start": 8,
                "entityID": 0,
                "end": 11,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Name the movie written by Monty Python and distributed by Cinema International Corporation .",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Name) (NP (NP (DT the) (NN movie)) (VP (VP (VBN written) (PP (IN by) (NP (NNP Monty) (NNP Python)))) (CC and) (VP (VBN distributed) (PP (IN by) (NP (ADD <e0>))))))) (. .)))",
        "id": 430
    },
    {
        "taggedQuestion": "Is Pittsburgh Steelers the former team of Marv McFadden?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "is",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "JUDGE"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Pittsburgh Steelers",
                "containsRefer": false,
                "originStr": "Pittsburgh Steelers",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the former team of Marv McFadden",
                "containsRefer": false,
                "originStr": "the former team of Marv McFadden",
                "start": 3,
                "entityID": 0,
                "end": 9,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Is Pittsburgh Steelers the former team of Marv McFadden?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SQ (VBZ Is) (NP (NNP Pittsburgh) (NNPS Steelers)) (NP (NP (DT the) (JJ former) (NN team)) (PP (IN of) (NP (NNP Marv) (NNP McFadden)))) (. ?)))",
        "id": 431
    },
    {
        "taggedQuestion": "Which series was written by Eric Jendresen and John Orloff?",
        "entityMap": {},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "series",
                "containsRefer": false,
                "originStr": "series",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "was written by Eric Jendresen",
                "containsRefer": false,
                "originStr": "was written by Eric Jendresen",
                "start": 2,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "was written by John Orloff",
                "containsRefer": false,
                "originStr": "was written by John Orloff",
                "start": 8,
                "entityID": 0,
                "end": 9,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which series was written by Eric Jendresen and John Orloff?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NN series)) (SQ (VBD was) (VP (VBN written) (PP (IN by) (NP (NP (NNP Eric) (NNP Jendresen)) (CC and) (NP (NNP John) (NNP Orloff)))))) (. ?)))",
        "id": 432
    },
    {
        "taggedQuestion": "Which city can I find both the office of Elasticsearch and <e0> DJ?",
        "entityMap": {"<e0>": "the Yellow Claw"},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "city",
                "containsRefer": false,
                "originStr": "city",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the office of Elasticsearch",
                "containsRefer": false,
                "originStr": "the office of Elasticsearch",
                "start": 0,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "can I find the Yellow Claw DJ",
                "containsRefer": false,
                "originStr": "can I find the Yellow Claw DJ",
                "start": 8,
                "entityID": 0,
                "end": 9,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which city can I find both the office of Elasticsearch and the Yellow Claw DJ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NN city)) (SQ (MD can) (NP (PRP I)) (VP (VB find) (NP (PDT both) (NP (NP (DT the) (NN office)) (PP (IN of) (NP (NNP Elasticsearch)))) (CC and) (NP (NP (ADD <e0>)) (NP (NN DJ)))))) (. ?)))",
        "id": 433
    },
    {
        "taggedQuestion": "Name the partners of Kelly Brook.",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "name",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the partners of Kelly Brook",
                "containsRefer": false,
                "originStr": "the partners of Kelly Brook",
                "start": 1,
                "entityID": 0,
                "end": 6,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Name the partners of Kelly Brook.",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Name) (NP (NP (DT the) (NNS partners)) (PP (IN of) (NP (NNP Kelly) (NNP Brook))))) (. .)))",
        "id": 434
    },
    {
        "taggedQuestion": "What is the area of the broadcast network which has the affiliation with 9TV?",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the area of #entity1",
                "containsRefer": true,
                "originStr": "is the area of #entity1",
                "start": 1,
                "entityID": 0,
                "end": 14,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the broadcast network",
                "containsRefer": false,
                "originStr": "the broadcast network",
                "start": 5,
                "entityID": 1,
                "end": 8,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "has the affiliation with 9TV",
                "containsRefer": false,
                "originStr": "has the affiliation with 9TV",
                "start": 9,
                "entityID": 1,
                "end": 14,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is the area of the broadcast network which has the affiliation with 9TV?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 5,
                "from": 2,
                "end": 14,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (NP (DT the) (NN area)) (PP (IN of) (NP (NP (DT the) (NN broadcast) (NN network)) (SBAR (WHNP (WDT which)) (S (VP (VBZ has) (NP (NP (DT the) (NN affiliation)) (PP (IN with) (NP (NN 9TV))))))))))) (. ?)))",
        "id": 435
    },
    {
        "taggedQuestion": "Who is married to Gerard Piqu?",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "who",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is married to Gerard Piqu",
                "containsRefer": false,
                "originStr": "is married to Gerard Piqu",
                "start": 1,
                "entityID": 0,
                "end": 6,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Who is married to Gerard Piqu?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP Who)) (SQ (VBZ is) (VP (VBN married) (PP (IN to) (NP (NNP Gerard) (NNP Piqu))))) (. ?)))",
        "id": 436
    },
    {
        "taggedQuestion": "Which sports are played in schools affiliated with the <e0>?",
        "entityMap": {"<e0>": "Harvest Christian Center"},
        "nodeNum": 7,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "sports",
                "containsRefer": false,
                "originStr": "sports",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are played in #entity1",
                "containsRefer": true,
                "originStr": "are played in #entity1",
                "start": 2,
                "entityID": 0,
                "end": 10,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "schools",
                "containsRefer": false,
                "originStr": "schools",
                "start": 5,
                "entityID": 1,
                "end": 6,
                "nodeType": 4,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            },
            {
                "str": "affiliated with the Harvest Christian Center",
                "containsRefer": false,
                "originStr": "affiliated with the Harvest Christian Center",
                "start": 6,
                "entityID": 1,
                "end": 10,
                "nodeType": 3,
                "nodeID": 6,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which sports are played in schools affiliated with the Harvest Christian Center?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 5,
                "from": 3,
                "end": 10,
                "to": 4
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 5
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 6
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NNS sports)) (SQ (VBP are) (VP (VBN played) (PP (IN in) (NP (NP (NNS schools)) (VP (VBN affiliated) (PP (IN with) (NP (DT the) (NN <e0>)))))))) (. ?)))",
        "id": 437
    },
    {
        "taggedQuestion": "Who debuted their career in a team coached by Chip Kelly?",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "who",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "debuted their career in #entity1",
                "containsRefer": true,
                "originStr": "debuted their career in #entity1",
                "start": 1,
                "entityID": 0,
                "end": 11,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "a team",
                "containsRefer": false,
                "originStr": "a team",
                "start": 5,
                "entityID": 1,
                "end": 7,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "coached by Chip Kelly",
                "containsRefer": false,
                "originStr": "coached by Chip Kelly",
                "start": 7,
                "entityID": 1,
                "end": 11,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Who debuted their career in a team coached by Chip Kelly?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 5,
                "from": 2,
                "end": 11,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP Who)) (SQ (VP (VBD debuted) (NP (PRP$ their) (NN career)) (PP (IN in) (NP (NP (DT a) (NN team)) (VP (VBN coached) (PP (IN by) (NP (NN Chip) (NNP Kelly)))))))) (. ?)))",
        "id": 438
    },
    {
        "taggedQuestion": "What are the nicknames given to the characters of The Wolves of the Mercy Falls?",
        "entityMap": {},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are the nicknames given to #entity1",
                "containsRefer": true,
                "originStr": "are the nicknames given to #entity1",
                "start": 1,
                "entityID": 0,
                "end": 15,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the characters of The Wolves of the Mercy Falls",
                "containsRefer": false,
                "originStr": "the characters of The Wolves of the Mercy Falls",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What are the nicknames given to the characters of The Wolves of the Mercy Falls?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": -1,
                "from": 2,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBP are) (NP (DT the) (NNS nicknames)) (VP (VBN given) (PP (IN to) (NP (NP (DT the) (NNS characters)) (PP (IN of) (NP (NP (DT The) (NNS Wolves)) (PP (IN of) (NP (DT the) (NN Mercy) (NNS Falls))))))))) (. ?)))",
        "id": 439
    },
    {
        "taggedQuestion": "Name the river with source country in Zambia and source region as North-Western Province, Zambia.",
        "entityMap": {},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "name",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the river",
                "containsRefer": false,
                "originStr": "the river",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "source country in Zambia",
                "containsRefer": false,
                "originStr": "source country in Zambia",
                "start": 4,
                "entityID": 0,
                "end": 8,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "source region as North-Western Province , Zambia",
                "containsRefer": false,
                "originStr": "source region as North-Western Province , Zambia",
                "start": 9,
                "entityID": 0,
                "end": 17,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Name the river with source country in Zambia and source region as North-Western Province, Zambia.",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Name) (NP (DT the) (NN river)) (PP (IN with) (NP (NP (NP (NN source) (NN country)) (PP (IN in) (NP (NNP Zambia)))) (CC and) (NP (NP (NN source) (NN region)) (PP (IN as) (NP (NNP North) (HYPH -) (NNP Western) (NNP Province) (, ,) (NNP Zambia))))))) (. .)))",
        "id": 440
    },
    {
        "taggedQuestion": "Members of how many political parties have died in Delhi?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "how many",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "political parties have died in Delhi",
                "containsRefer": false,
                "originStr": "political parties have died in Delhi",
                "start": 0,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Members of",
                "containsRefer": false,
                "originStr": "Members of",
                "start": 0,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Members of how many political parties have died in Delhi?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (NP (NP (NNS Members)) (PP (IN of) (SBAR (WHADJP (WRB how) (JJ many)) (S (NP (JJ political) (NNS parties)) (VP (VBP have) (VP (VBN died) (PP (IN in) (NP (NNP Delhi)))))))) (. ?)))",
        "id": 441
    },
    {
        "taggedQuestion": "What is the birthplace of Adugna Deyas and the place where Fiq is located?",
        "entityMap": {},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "place",
                "containsRefer": false,
                "originStr": "place",
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Fiq is located",
                "containsRefer": false,
                "originStr": "Fiq is located",
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the birthplace of Adugna Deyas",
                "containsRefer": false,
                "originStr": "is the birthplace of Adugna Deyas",
                "start": 1,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is the birthplace of Adugna Deyas and the place where Fiq is located?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (NP (DT the) (NN birthplace)) (PP (IN of) (NP (NP (NNP Adugna) (NNP Deyas)) (CC and) (NP (NP (DT the) (NN place)) (SBAR (WHADVP (WRB where)) (S (NP (NNP Fiq)) (VP (VBZ is) (VP (VBN located)))))))))) (. ?)))",
        "id": 442
    },
    {
        "taggedQuestion": "What is the headquarters of <e0>?",
        "entityMap": {"<e0>": "Juan Dalmau Ramerez"},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the headquarters of Juan Dalmau Ramerez",
                "containsRefer": false,
                "originStr": "is the headquarters of Juan Dalmau Ramerez",
                "start": 1,
                "entityID": 0,
                "end": 6,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is the headquarters of Juan Dalmau Ramerez?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (NP (DT the) (NN headquarters)) (PP (IN of) (NP (NN <e0>))))) (. ?)))",
        "id": 443
    },
    {
        "taggedQuestion": "The president who was in office when <e0> was the PM followed which religion?",
        "entityMap": {"<e0>": "Lee Hyun Jae"},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "religion",
                "containsRefer": false,
                "originStr": "religion",
                "start": 13,
                "entityID": 0,
                "end": 15,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "president",
                "containsRefer": false,
                "originStr": "president",
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "was in office when Lee Hyun Jae was the PM followed",
                "containsRefer": false,
                "originStr": "was in office when Lee Hyun Jae was the PM followed",
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "The president who was in office when Lee Hyun Jae was the PM followed which religion?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (S (NP (NP (DT The) (NN president)) (SBAR (WHNP (WP who)) (S (VP (VBD was) (PP (IN in) (NP (NN office))) (SBAR (WHADVP (WRB when)) (S (NP (ADD <e0>)) (VP (VBD was) (NP-TMP (DT the) (NN PM))))))))) (VP (VBD followed) (SBARQ (WHNP (WDT which) (NN religion)))) (. ?)))",
        "id": 444
    },
    {
        "taggedQuestion": "Who is the maker of the engine of Ford F-Series first generation ?",
        "entityMap": {"<e0>": "Ford F-Series generation"},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "who",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the maker of #entity1",
                "containsRefer": true,
                "originStr": "is the maker of #entity1",
                "start": 1,
                "entityID": 0,
                "end": 14,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the engine of Ford F-Series first generation",
                "containsRefer": false,
                "originStr": "the engine of Ford F-Series first generation",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Who is the maker of the engine of Ford F-Series first generation ?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": -1,
                "from": 2,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP Who)) (SQ (VBZ is) (NP (NP (DT the) (NN maker)) (PP (IN of) (NP (NP (DT the) (NN engine)) (PP (IN of) (NP (NML (NNP Ford) (NNP F) (HYPH -) (NNP Series)) (JJ first) (NN generation))))))) (. ?)))",
        "id": 445
    },
    {
        "taggedQuestion": "What is the religious affiliation of <e0>?",
        "entityMap": {"<e0>": "Neungin High School"},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the religious affiliation of Neungin High School",
                "containsRefer": false,
                "originStr": "is the religious affiliation of Neungin High School",
                "start": 1,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is the religious affiliation of Neungin High School?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (NP (DT the) (JJ religious) (NN affiliation)) (PP (IN of) (NP (NN <e0>))))) (. ?)))",
        "id": 446
    },
    {
        "taggedQuestion": "Is Maria Sharapova the silver medalist of Tennis at the 2012 Summer Olympics  Women's singles?",
        "entityMap": {"<e0>": "2012 Summer Olympics Women"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "is",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "JUDGE"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Maria Sharapova",
                "containsRefer": false,
                "originStr": "Maria Sharapova",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the silver medalist of Tennis at the 2012 Summer Olympics Women's singles",
                "containsRefer": false,
                "originStr": "the silver medalist of Tennis at the 2012 Summer Olympics Women's singles",
                "start": 3,
                "entityID": 0,
                "end": 16,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Is Maria Sharapova the silver medalist of Tennis at the 2012 Summer Olympics  Women's singles?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SQ (VBZ Is) (NP (NNP Maria) (NNP Sharapova)) (NP (NP (DT the) (NN silver) (NN medalist)) (PP (IN of) (NP (NP (NN Tennis)) (PP (IN at) (NP (NP (DT the) (CD 2012) (NN Summer)) (NP (NP (NNP Olympics) (NNP Women) (POS 's)) (NNS singles))))))) (. ?)))",
        "id": 447
    },
    {
        "taggedQuestion": "Name the office holder with successor as Adrian A Basora and child as Lori Black .",
        "entityMap": {"<e0>": "Adrian Basora child"},
        "nodeNum": 7,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "name",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the office holder",
                "containsRefer": false,
                "originStr": "the office holder",
                "start": 1,
                "entityID": 0,
                "end": 4,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "successor",
                "containsRefer": false,
                "originStr": "successor",
                "start": 5,
                "entityID": 0,
                "end": 6,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Adrian A Basora and child Adrian A Basora",
                "containsRefer": false,
                "originStr": "Adrian A Basora and child Adrian A Basora",
                "start": 7,
                "entityID": 0,
                "end": 10,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Lori Black",
                "containsRefer": false,
                "originStr": "Lori Black",
                "start": 13,
                "entityID": 0,
                "end": 15,
                "nodeType": 4,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Adrian A Basora and child child",
                "containsRefer": false,
                "originStr": "Adrian A Basora and child child",
                "start": 11,
                "entityID": 0,
                "end": 11,
                "nodeType": 4,
                "nodeID": 6,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Name the office holder with successor as Adrian A Basora and child as Lori Black .",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 5
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 6
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Name) (NP (DT the) (NN office) (NN holder)) (PP (IN with) (NP (NN successor))) (PP (IN as) (NP (NP (NNP Adrian) (NNP A) (NNP Basora)) (CC and) (NP (NN child)))) (PP (IN as) (NP (NNP Lori) (NNP Black)))) (. .)))",
        "id": 448
    },
    {
        "taggedQuestion": "Who is the owner of the South end ?",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "who",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the owner of the South end",
                "containsRefer": false,
                "originStr": "is the owner of the South end",
                "start": 1,
                "entityID": 0,
                "end": 8,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Who is the owner of the South end ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP Who)) (SQ (VBZ is) (NP (NP (DT the) (NN owner)) (PP (IN of) (NP (DT the) (JJ South) (NN end))))) (. ?)))",
        "id": 449
    },
    {
        "taggedQuestion": "What is the colour of Xocolatlite ?",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the colour of Xocolatlite",
                "containsRefer": false,
                "originStr": "is the colour of Xocolatlite",
                "start": 1,
                "entityID": 0,
                "end": 6,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is the colour of Xocolatlite ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (NP (DT the) (NN colour)) (PP (IN of) (NP (NNP Xocolatlite))))) (. ?)))",
        "id": 450
    },
    {
        "taggedQuestion": "How many other teams have the members of <e0> played?",
        "entityMap": {"<e0>": "Atlant Moscow Oblast"},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "how many",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "other teams",
                "containsRefer": false,
                "originStr": "other teams",
                "start": 2,
                "entityID": 0,
                "end": 4,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "have #entity1 played",
                "containsRefer": true,
                "originStr": "have #entity1 played",
                "start": 4,
                "entityID": 0,
                "end": 10,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the members of Atlant Moscow Oblast",
                "containsRefer": false,
                "originStr": "the members of Atlant Moscow Oblast",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 4,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "How many other teams have the members of Atlant Moscow Oblast played?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WHADJP (WRB How) (JJ many)) (JJ other) (NNS teams)) (SQ (VBP have) (NP (NP (DT the) (NNS members)) (PP (IN of) (NP (NN <e0>)))) (VP (VBN played))) (. ?)))",
        "id": 451
    },
    {
        "taggedQuestion": "What is the <e1> of the president whose alma mater is <e0> ?",
        "entityMap": {
            "<e1>": "state of origin",
            "<e0>": "Hellenic Naval Academy"
        },
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the state of origin of #entity1",
                "containsRefer": true,
                "originStr": "is the state of origin of #entity1",
                "start": 1,
                "entityID": 0,
                "end": 12,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the president",
                "containsRefer": false,
                "originStr": "the president",
                "start": 5,
                "entityID": 1,
                "end": 7,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "whose alma mater is Hellenic Naval Academy",
                "containsRefer": false,
                "originStr": "whose alma mater is Hellenic Naval Academy",
                "start": 10,
                "entityID": 1,
                "end": 12,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is the state of origin of the president whose alma mater is Hellenic Naval Academy ?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 5,
                "from": 2,
                "end": 12,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5,
                "info": "whose alma mater"
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (NP (DT the) (NN <e1>)) (PP (IN of) (NP (NP (DT the) (NN president)) (SBAR (WHNP (WP$ whose) (NML (NN alma) (NN mater))) (S (VP (VBZ is) (NP (ADD <e0>))))))))) (. ?)))",
        "id": 452
    },
    {
        "taggedQuestion": "What is the common ethnicity of the Maike Evers and Francisco Lachowski ?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the common ethnicity of the Maike Evers",
                "containsRefer": false,
                "originStr": "is the common ethnicity of the Maike Evers",
                "start": 1,
                "entityID": 0,
                "end": 9,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the common ethnicity of Francisco Lachowski",
                "containsRefer": false,
                "originStr": "is the common ethnicity of Francisco Lachowski",
                "start": 10,
                "entityID": 0,
                "end": 11,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is the common ethnicity of the Maike Evers and Francisco Lachowski ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (NP (DT the) (JJ common) (NN ethnicity)) (PP (IN of) (NP (NP (DT the) (NNP Maike) (NNP Evers)) (CC and) (NP (NNP Francisco) (NNP Lachowski)))))) (. ?)))",
        "id": 453
    },
    {
        "taggedQuestion": "Which places do companies founded in Newcastle operate?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "do companies founded in Newcastle operate",
                "containsRefer": false,
                "originStr": "do companies founded in Newcastle operate",
                "start": 2,
                "entityID": 0,
                "end": 8,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "places",
                "containsRefer": false,
                "originStr": "places",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which places do companies founded in Newcastle operate?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBAR (WHNP (WDT Which)) (S (NP (NNS places)) (VP (VBP do) (S (NP (NP (NNS companies)) (VP (VBN founded) (PP (IN in) (NP (NNP Newcastle))))) (VP (VB operate))))) (. ?)))",
        "id": 454
    },
    {
        "taggedQuestion": "Which senator served in <e0> and VMF-218?",
        "entityMap": {"<e0>": "military units VMF-155"},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "senator",
                "containsRefer": false,
                "originStr": "senator",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "served in military units VMF-155",
                "containsRefer": false,
                "originStr": "served in military units VMF-155",
                "start": 2,
                "entityID": 0,
                "end": 5,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "served in VMF-218",
                "containsRefer": false,
                "originStr": "served in VMF-218",
                "start": 6,
                "entityID": 0,
                "end": 8,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which senator served in military units VMF-155 and VMF-218?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NN senator)) (SQ (VP (VBD served) (PP (IN in) (NP (NN <e0>) (CC and) (NN VMF) (HYPH -) (CD 218))))) (. ?)))",
        "id": 455
    },
    {
        "taggedQuestion": "What games are made by Interplay Entertainment?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "games",
                "containsRefer": false,
                "originStr": "games",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are made by Interplay Entertainment",
                "containsRefer": false,
                "originStr": "are made by Interplay Entertainment",
                "start": 2,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What games are made by Interplay Entertainment?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT What) (NNS games)) (SQ (VBP are) (VP (VBN made) (PP (IN by) (NP (NNP Interplay) (NNP Entertainment))))) (. ?)))",
        "id": 456
    },
    {
        "taggedQuestion": "Which producer of Purvis Eureka engine is also the owner of Ford Theatre ?",
        "entityMap": {},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "producer of Purvis Eureka engine",
                "containsRefer": false,
                "originStr": "producer of Purvis Eureka engine",
                "start": 1,
                "entityID": 0,
                "end": 6,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the owner of Ford Theatre",
                "containsRefer": false,
                "originStr": "the owner of Ford Theatre",
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "",
                "containsRefer": false,
                "originStr": "",
                "start": 6,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which producer of Purvis Eureka engine is also the owner of Ford Theatre ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NP (NN producer) (PP (IN of) (NP (NML (NNP Purvis) (NNP Eureka)) (NN engine))))) (SQ (VBZ is) (ADVP (RB also)) (NP (NP (DT the) (NN owner)) (PP (IN of) (NP (NNP Ford) (NNP Theatre))))) (. ?)))",
        "id": 457
    },
    {
        "taggedQuestion": "What developed EMMS?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "developed EMMS",
                "containsRefer": false,
                "originStr": "developed EMMS",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "",
                "containsRefer": false,
                "originStr": "",
                "start": 3,
                "entityID": 0,
                "end": 4,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What developed EMMS?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (NP (WDT What) (JJ developed) (NN EMMS))) (. ?)))",
        "id": 458
    },
    {
        "taggedQuestion": "Which music band made <e0>, and to which Tedd Riley was associated?",
        "entityMap": {"<e0>": "Take Me There"},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "music band",
                "containsRefer": false,
                "originStr": "music band",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "made Take Me There",
                "containsRefer": false,
                "originStr": "made Take Me There",
                "start": 3,
                "entityID": 0,
                "end": 6,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "to which Tedd Riley was associated",
                "containsRefer": false,
                "originStr": "to which Tedd Riley was associated",
                "start": 7,
                "entityID": 0,
                "end": 12,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which music band made Take Me There, and to which Tedd Riley was associated?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NN music) (NN band)) (SQ (VP (VBD made) (NP (NP (ADD <e0>)) (, ,) (CC and) (SBAR (WHPP (TO to) (WHNP (WDT which))) (S (NP (NNP Tedd) (NNP Riley)) (VP (VBD was) (VP (VBN associated)))))))) (. ?)))",
        "id": 459
    },
    {
        "taggedQuestion": "Which time zone is Pong Pha?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "time zone",
                "containsRefer": false,
                "originStr": "time zone",
                "start": 1,
                "entityID": 0,
                "end": 6,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is Pong Pha",
                "containsRefer": false,
                "originStr": "is Pong Pha",
                "start": 3,
                "entityID": 0,
                "end": 6,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which time zone is Pong Pha?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (NP (WDT Which) (NN time) (NN zone))) (SQ (VBZ is) (NP (NNP Pong) (NNP Pha))) (. ?)))",
        "id": 460
    },
    {
        "taggedQuestion": "How many fictional characters are there in a series in which Craig Robinson acted?",
        "entityMap": {},
        "nodeNum": 7,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "how many",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "fictional characters",
                "containsRefer": false,
                "originStr": "fictional characters",
                "start": 2,
                "entityID": 0,
                "end": 4,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are there in #entity1",
                "containsRefer": true,
                "originStr": "are there in #entity1",
                "start": 4,
                "entityID": 0,
                "end": 14,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "series in",
                "containsRefer": false,
                "originStr": "series in",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 4,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Craig Robinson acted",
                "containsRefer": false,
                "originStr": "Craig Robinson acted",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 3,
                "nodeID": 6,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "How many fictional characters are there in a series in which Craig Robinson acted?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 5
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 6
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WHADJP (WRB How) (JJ many)) (JJ fictional) (NNS characters)) (SQ (VBP are) (NP (EX there)) (PP (IN in) (NP (DT a) (NN series))) (SBAR (WHPP (IN in) (WHNP (WDT which))) (S (NP (NNP Craig) (NNP Robinson)) (VP (VBD acted))))) (. ?)))",
        "id": 461
    },
    {
        "taggedQuestion": "Which political party of Chandra Shekhar is also the political party of <e0> ?",
        "entityMap": {"<e0>": "Datl Satyanarayana Raju"},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "political party",
                "containsRefer": false,
                "originStr": "political party",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the political party of Datl Satyanarayana Raju",
                "containsRefer": false,
                "originStr": "the political party of Datl Satyanarayana Raju",
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "",
                "containsRefer": false,
                "originStr": "",
                "start": 6,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which political party of Chandra Shekhar is also the political party of Datl Satyanarayana Raju ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WHNP (WDT Which) (JJ political) (NN party)) (PP (IN of) (NP (NNP Chandra) (NNP Shekhar)))) (SQ (VBZ is) (ADVP (RB also)) (NP (NP (DT the) (JJ political) (NN party)) (PP (IN of) (NP (NN <e0>))))) (. ?)))",
        "id": 462
    },
    {
        "taggedQuestion": "Who owns the airport in Paphos?",
        "entityMap": {},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "who",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "owns #entity1",
                "containsRefer": true,
                "originStr": "owns #entity1",
                "start": 1,
                "entityID": 0,
                "end": 6,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the airport in Paphos",
                "containsRefer": false,
                "originStr": "the airport in Paphos",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Who owns the airport in Paphos?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": -1,
                "from": 2,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP Who)) (SQ (VP (VBZ owns) (NP (NP (DT the) (NN airport)) (PP (IN in) (NP (NNP Paphos)))))) (. ?)))",
        "id": 463
    },
    {
        "taggedQuestion": "What is the baseball team whose club manager is Chip Hale?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the baseball team",
                "containsRefer": false,
                "originStr": "the baseball team",
                "start": 2,
                "entityID": 0,
                "end": 5,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "whose club manager is Chip Hale",
                "containsRefer": false,
                "originStr": "whose club manager is Chip Hale",
                "start": 8,
                "entityID": 0,
                "end": 11,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is the baseball team whose club manager is Chip Hale?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3,
                "info": "whose club manager"
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (NP (DT the) (NN baseball) (NN team)) (SBAR (WHNP (WP$ whose) (NML (NN club) (NN manager))) (S (VP (VBZ is) (NP (NNP Chip) (NNP Hale))))))) (. ?)))",
        "id": 464
    },
    {
        "taggedQuestion": "Which bacteria's taxonomic class is Bacilli?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "bacteria",
                "containsRefer": false,
                "originStr": "bacteria",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "taxonomic class is Bacilli",
                "containsRefer": false,
                "originStr": "taxonomic class is Bacilli",
                "start": 3,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which bacteria's taxonomic class is Bacilli?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBAR (WHNP (WDT Which)) (S (NP (NP (NNS bacteria) (POS 's)) (JJ taxonomic) (NN class)) (VP (VBZ is) (NP (NNP Bacilli)))) (. ?)))",
        "id": 465
    },
    {
        "taggedQuestion": "What honours did Reigh Count receive?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "honours",
                "containsRefer": false,
                "originStr": "honours",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "did Reigh Count receive",
                "containsRefer": false,
                "originStr": "did Reigh Count receive",
                "start": 2,
                "entityID": 0,
                "end": 6,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What honours did Reigh Count receive?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT What) (NNS honours)) (SQ (VBD did) (NP (NNP Reigh) (NNP Count)) (VP (VB receive))) (. ?)))",
        "id": 466
    },
    {
        "taggedQuestion": "What are some products of the the company whose subsidiary is Sony Corp shareholders and subsidies?",
        "entityMap": {"<e0>": "Sony Corp shareholders subsidies"},
        "nodeNum": 7,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are some products of #entity1",
                "containsRefer": true,
                "originStr": "are some products of #entity1",
                "start": 1,
                "entityID": 0,
                "end": 16,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the the company",
                "containsRefer": false,
                "originStr": "the the company",
                "start": 5,
                "entityID": 1,
                "end": 8,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "whose subsidiary is Sony Corp shareholders",
                "containsRefer": false,
                "originStr": "whose subsidiary is Sony Corp shareholders",
                "start": 10,
                "entityID": 1,
                "end": 14,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            },
            {
                "str": "whose subsidiary is subsidies",
                "containsRefer": false,
                "originStr": "whose subsidiary is subsidies",
                "start": 15,
                "entityID": 1,
                "end": 15,
                "nodeType": 4,
                "nodeID": 6,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What are some products of the the company whose subsidiary is Sony Corp shareholders and subsidies?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 5,
                "from": 2,
                "end": 16,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5,
                "info": "whose subsidiary"
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 6
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBP are) (NP (NP (DT some) (NNS products)) (PP (IN of) (NP (NP (DT the) (DT the) (NN company)) (SBAR (WHNP (WP$ whose) (NML (NN subsidiary))) (S (VP (VBZ is) (NP (NNP Sony) (NNP Corp) (NNS shareholders) (CC and) (NNS subsidies))))))))) (. ?)))",
        "id": 467
    },
    {
        "taggedQuestion": "Who built the stadiums where 2014 FIFA under 17 woman<e0> took place?",
        "entityMap": {"<e0>": "'s world cup"},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "who",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "built #entity1",
                "containsRefer": true,
                "originStr": "built #entity1",
                "start": 1,
                "entityID": 0,
                "end": 13,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the stadiums",
                "containsRefer": false,
                "originStr": "the stadiums",
                "start": 2,
                "entityID": 1,
                "end": 4,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "2014 FIFA under 17 woman's world cup took place",
                "containsRefer": false,
                "originStr": "2014 FIFA under 17 woman's world cup took place",
                "start": 5,
                "entityID": 1,
                "end": 13,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Who built the stadiums where 2014 FIFA under 17 woman's world cup took place?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 2,
                "from": 2,
                "end": 13,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP Who)) (SQ (VP (VBD built) (NP (DT the) (NNS stadiums)) (SBAR (WHADVP (WRB where)) (S (NP (NP (CD 2014) (NNP FIFA)) (PP (IN under) (NP (NP (CD 17) (NN woman)) (NP (ADD <e0>))))) (VP (VBD took) (NP (NN place))))))) (. ?)))",
        "id": 468
    },
    {
        "taggedQuestion": "Which area operataed by the <e0> is also the place of death of the Sakari Suzuki ?",
        "entityMap": {"<e0>": "South Side Elevated Railroad"},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "area operataed by the South Side Elevated Railroad",
                "containsRefer": false,
                "originStr": "area operataed by the South Side Elevated Railroad",
                "start": 1,
                "entityID": 0,
                "end": 6,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the place of death of the Sakari Suzuki",
                "containsRefer": false,
                "originStr": "the place of death of the Sakari Suzuki",
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "",
                "containsRefer": false,
                "originStr": "",
                "start": 6,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which area operataed by the South Side Elevated Railroad is also the place of death of the Sakari Suzuki ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NP (NP (NN area)) (VBN operataed) (PP (IN by) (NP (DT the) (NN <e0>))))) (SQ (VBZ is) (ADVP (RB also)) (NP (NP (DT the) (NN place)) (PP (IN of) (NP (NP (NN death)) (PP (IN of) (NP (DT the) (NNP Sakari) (NNP Suzuki))))))) (. ?)))",
        "id": 469
    },
    {
        "taggedQuestion": "What is the <e0> whose related with  <e1>?",
        "entityMap": {
            "<e1>": "Doctor Who Confidential",
            "<e0>": "television show"
        },
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "television show",
                "containsRefer": false,
                "originStr": "television show",
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "related with Doctor Who Confidential",
                "containsRefer": false,
                "originStr": "related with Doctor Who Confidential",
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is the television show whose related with  Doctor Who Confidential?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (NP (NP (DT the) (NN <e0>)) (SBAR (WHNP (WP$ whose)) (FRAG (ADJP (JJ related))))) (PP (IN with) (NP (NN <e1>))))) (. ?)))",
        "id": 470
    },
    {
        "taggedQuestion": "Which <e0>  performed live?",
        "entityMap": {"<e0>": "city wasThe Triple Door (The Courage album)"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "city wasThe Triple Door(The Courage album)",
                "containsRefer": false,
                "originStr": "city wasThe Triple Door(The Courage album)",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "performed live",
                "containsRefer": false,
                "originStr": "performed live",
                "start": 2,
                "entityID": 0,
                "end": 4,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which city wasThe Triple Door (The Courage album)  performed live?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NP (NN <e0>))) (SQ (VP (VBD performed) (ADVP (RB live)))) (. ?)))",
        "id": 471
    },
    {
        "taggedQuestion": "Which nearest city of Jurgens Site is the death plce of Jimmie Heuga ?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "nearest city of Jurgens Site",
                "containsRefer": false,
                "originStr": "nearest city of Jurgens Site",
                "start": 1,
                "entityID": 0,
                "end": 6,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the death plce of Jimmie Heuga",
                "containsRefer": false,
                "originStr": "is the death plce of Jimmie Heuga",
                "start": 6,
                "entityID": 0,
                "end": 13,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which nearest city of Jurgens Site is the death plce of Jimmie Heuga ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NP (NP (JJS nearest) (NN city)) (PP (IN of) (NP (NNP Jurgens) (NNP Site))))) (SQ (VBZ is) (NP (NP (DT the) (NN death) (NN plce)) (PP (IN of) (NP (NNP Jimmie) (NNP Heuga))))) (. ?)))",
        "id": 472
    },
    {
        "taggedQuestion": "List the battles fought by  <e0> ?",
        "entityMap": {"<e0>": "Ali Habib Mahmud"},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "list",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the battles fought by Ali Habib Mahmud",
                "containsRefer": false,
                "originStr": "the battles fought by Ali Habib Mahmud",
                "start": 1,
                "entityID": 0,
                "end": 6,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "List the battles fought by  Ali Habib Mahmud ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB List) (S (NP (DT the) (NNS battles)) (VP (VBN fought) (PP (IN by) (NP (NN <e0>)))))) (. ?)))",
        "id": 473
    },
    {
        "taggedQuestion": "How many companies were started in the states?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "How many",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "were started in the states",
                "containsRefer": false,
                "originStr": "were started in the states",
                "start": 3,
                "entityID": 0,
                "end": 8,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "companies",
                "containsRefer": false,
                "originStr": "companies",
                "start": 2,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "How many companies were started in the states?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBAR (WHADJP (WRB How) (JJ many)) (S (NP (NNS companies)) (VP (VBD were) (VP (VBN started) (PP (IN in) (NP (DT the) (NNS states)))))) (. ?)))",
        "id": 474
    },
    {
        "taggedQuestion": "Is <e0> a doctoral student of James Chadwick?",
        "entityMap": {"<e0>": "Charles Drummond Ellis"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "is",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "JUDGE"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Charles Drummond Ellis a doctoral student of",
                "containsRefer": false,
                "originStr": "Charles Drummond Ellis a doctoral student of",
                "start": 1,
                "entityID": 0,
                "end": 6,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "James Chadwick",
                "containsRefer": false,
                "originStr": "James Chadwick",
                "start": 6,
                "entityID": 0,
                "end": 8,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Is Charles Drummond Ellis a doctoral student of James Chadwick?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SQ (VBZ Is) (NP (NP (ADD <e0>)) (PP (NP (DT a) (JJ doctoral) (NN student)) (IN of))) (NP (NNP James) (NNP Chadwick)) (. ?)))",
        "id": 475
    },
    {
        "taggedQuestion": "How many movies are distributed by <e0>?",
        "entityMap": {"<e0>": "Cinema International Corporation"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "How many",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are distributed by Cinema International Corporation",
                "containsRefer": false,
                "originStr": "are distributed by Cinema International Corporation",
                "start": 3,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "movies",
                "containsRefer": false,
                "originStr": "movies",
                "start": 2,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "How many movies are distributed by Cinema International Corporation?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBAR (WHADJP (WRB How) (JJ many)) (S (NP (NNS movies)) (VP (VBP are) (VP (VBN distributed) (PP (IN by) (NP (NN <e0>)))))) (. ?)))",
        "id": 476
    },
    {
        "taggedQuestion": "Name the local authority of Trinity School, Brentwood .",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "name",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the local authority of Trinity School , Brentwood",
                "containsRefer": false,
                "originStr": "the local authority of Trinity School , Brentwood",
                "start": 1,
                "entityID": 0,
                "end": 9,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Name the local authority of Trinity School, Brentwood .",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Name) (NP (NP (DT the) (JJ local) (NN authority)) (PP (IN of) (NP (NP (NNP Trinity) (NNP School)) (, ,) (NP (NNP Brentwood)))))) (. .)))",
        "id": 477
    },
    {
        "taggedQuestion": "Name the president of Wyche Fowler .",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "name",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the president of Wyche Fowler",
                "containsRefer": false,
                "originStr": "the president of Wyche Fowler",
                "start": 1,
                "entityID": 0,
                "end": 6,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Name the president of Wyche Fowler .",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Name) (NP (NP (DT the) (NN president)) (PP (IN of) (NP (NNP Wyche) (NNP Fowler))))) (. .)))",
        "id": 478
    },
    {
        "taggedQuestion": "Which fields have people born in Lausanne worked?",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "fields have #entity1",
                "containsRefer": true,
                "originStr": "fields have #entity1",
                "start": 1,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "people",
                "containsRefer": false,
                "originStr": "people",
                "start": 3,
                "entityID": 1,
                "end": 4,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "born in Lausanne",
                "containsRefer": false,
                "originStr": "born in Lausanne",
                "start": 4,
                "entityID": 1,
                "end": 7,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which fields have people born in Lausanne worked?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 3,
                "from": 2,
                "end": 7,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (SBAR (WHNP (WDT Which)) (S (NP (NNS fields)) (VP (VBP have) (NP (NP (NNS people)) (VP (VBN born) (PP (IN in) (NP (NNP Lausanne)))))))) (VP (VBD worked)) (. ?)))",
        "id": 479
    },
    {
        "taggedQuestion": "Which <e0>  was founded by Jim Harris ?",
        "entityMap": {"<e0>": "Texas based company"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "was founded by Jim Harris",
                "containsRefer": false,
                "originStr": "was founded by Jim Harris",
                "start": 2,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Texas based company",
                "containsRefer": false,
                "originStr": "Texas based company",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which Texas based company  was founded by Jim Harris ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBAR (WHNP (WDT Which)) (S (NP (ADD <e0>)) (VP (VBD was) (VP (VBN founded) (PP (IN by) (NP (NNP Jim) (NNP Harris)))))) (. ?)))",
        "id": 480
    },
    {
        "taggedQuestion": "Name a show hosted by Brian Dunkleman and judged by Harry Connick, Jr..",
        "entityMap": {},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "name",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "a show",
                "containsRefer": false,
                "originStr": "a show",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "hosted by Brian Dunkleman",
                "containsRefer": false,
                "originStr": "hosted by Brian Dunkleman",
                "start": 3,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "judged by Harry Connick , Jr",
                "containsRefer": false,
                "originStr": "judged by Harry Connick , Jr",
                "start": 8,
                "entityID": 0,
                "end": 14,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Name a show hosted by Brian Dunkleman and judged by Harry Connick, Jr..",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Name) (NP (NP (DT a) (NN show)) (VP (VP (VBN hosted) (PP (IN by) (NP (NNP Brian) (NNP Dunkleman)))) (CC and) (VP (VBN judged) (PP (IN by) (NP (NP (NNP Harry) (NNP Connick)) (, ,) (NP (NNP Jr.)))))))) (. .)))(ROOT (. .))",
        "id": 481
    },
    {
        "taggedQuestion": "Which educational institute does <e0> belong to?",
        "entityMap": {"<e0>": "Cornell University Press"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "educational institute",
                "containsRefer": false,
                "originStr": "educational institute",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "does Cornell University Press belong to",
                "containsRefer": false,
                "originStr": "does Cornell University Press belong to",
                "start": 3,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which educational institute does Cornell University Press belong to?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NP (JJ educational) (NN institute))) (SQ (VBZ does) (S (NP (ADD <e0>)) (VP (VBP belong) (PP (IN to))))) (. ?)))",
        "id": 482
    },
    {
        "taggedQuestion": "Which country's cuisine, ham is an important part?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "country",
                "containsRefer": false,
                "originStr": "country",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "cuisine, ham is an important part",
                "containsRefer": false,
                "originStr": "cuisine, ham is an important part",
                "start": 3,
                "entityID": 0,
                "end": 9,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which country's cuisine, ham is an important part?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NP (NP (NN country) (POS 's)) (NP (NP (NN cuisine)) (, ,) (NP (NN ham))))) (SQ (VBZ is) (NP (DT an) (JJ important) (NN part))) (. ?)))",
        "id": 483
    },
    {
        "taggedQuestion": "List the softwares which runs on Microsoft Windows and has license as <e0>?",
        "entityMap": {"<e0>": "Software as a service"},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "list",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the softwares",
                "containsRefer": false,
                "originStr": "the softwares",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "runs on Microsoft Windows",
                "containsRefer": false,
                "originStr": "runs on Microsoft Windows",
                "start": 4,
                "entityID": 0,
                "end": 8,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "has license as Software as a service",
                "containsRefer": false,
                "originStr": "has license as Software as a service",
                "start": 9,
                "entityID": 0,
                "end": 13,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "List the softwares which runs on Microsoft Windows and has license as Software as a service?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SQ (VP (VB List) (NP (NP (DT the) (NNS softwares)) (SBAR (WHNP (WDT which)) (S (VP (VP (VBZ runs) (PP (IN on) (NP (NNP Microsoft) (NNP Windows)))) (CC and) (VP (VBZ has) (NP (NP (NN license)) (PP (IN as) (NP (NN <e0>)))))))))) (. ?)))",
        "id": 484
    },
    {
        "taggedQuestion": "Which ppolitical party of Yashpal Kapur is also the owner of National Herald ?",
        "entityMap": {},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "ppolitical party of Yashpal Kapur",
                "containsRefer": false,
                "originStr": "ppolitical party of Yashpal Kapur",
                "start": 1,
                "entityID": 0,
                "end": 6,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the owner of National Herald",
                "containsRefer": false,
                "originStr": "the owner of National Herald",
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "",
                "containsRefer": false,
                "originStr": "",
                "start": 6,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which ppolitical party of Yashpal Kapur is also the owner of National Herald ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NP (NP (JJ ppolitical) (NN party)) (PP (IN of) (NP (NNP Yashpal) (NNP Kapur))))) (SQ (VBZ is) (ADVP (RB also)) (NP (NP (DT the) (NN owner)) (PP (IN of) (NP (NNP National) (NNP Herald))))) (. ?)))",
        "id": 485
    },
    {
        "taggedQuestion": "Who all have been presenters on shows by the NBC?",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "who",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "have been presenters on shows by the NBC",
                "containsRefer": false,
                "originStr": "have been presenters on shows by the NBC",
                "start": 2,
                "entityID": 0,
                "end": 10,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Who all have been presenters on shows by the NBC?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP Who)) (SQ (NP (DT all)) (VP (VBP have) (VP (VBN been) (NP (NP (NNS presenters)) (PP (IN on) (NP (NNS shows)))) (PP (IN by) (NP (DT the) (NNP NBC)))))) (. ?)))",
        "id": 486
    },
    {
        "taggedQuestion": "Give me the <e0> which are the predecessor of <e1>.",
        "entityMap": {
            "<e1>": "Full Sized Cars",
            "<e0>": "list of cars"
        },
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "give me",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the list of cars",
                "containsRefer": false,
                "originStr": "the list of cars",
                "start": 2,
                "entityID": 0,
                "end": 4,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are the predecessor of Full Sized Cars",
                "containsRefer": false,
                "originStr": "are the predecessor of Full Sized Cars",
                "start": 5,
                "entityID": 0,
                "end": 10,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Give me the list of cars which are the predecessor of Full Sized Cars.",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Give) (NP (PRP me)) (NP (NP (DT the) (NN <e0>)) (SBAR (WHNP (WDT which)) (S (VP (VBP are) (NP (NP (DT the) (NN predecessor)) (PP (IN of) (NP (ADD <e1>))))))))) (. .)))",
        "id": 487
    },
    {
        "taggedQuestion": "List the people with final resting place as Plymouth, Vermont and has <e0> as predecessor?",
        "entityMap": {"<e0>": "Samuel W. McCall"},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "list",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the people",
                "containsRefer": false,
                "originStr": "the people",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "final resting place as Plymouth , Vermont",
                "containsRefer": false,
                "originStr": "final resting place as Plymouth , Vermont",
                "start": 4,
                "entityID": 0,
                "end": 11,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "has Samuel W. McCall as predecessor",
                "containsRefer": false,
                "originStr": "has Samuel W. McCall as predecessor",
                "start": 12,
                "entityID": 0,
                "end": 16,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "List the people with final resting place as Plymouth, Vermont and has Samuel W. McCall as predecessor?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VP (VB List) (NP (DT the) (NNS people)) (PP (IN with) (NP (NP (JJ final) (JJ resting) (NN place)) (PP (IN as) (NP (NNP Plymouth) (, ,) (NNP Vermont)))))) (CC and) (VP (VBZ has) (NP (NP (ADD <e0>)) (PP (IN as) (NP (NN predecessor)))))) (. ?)))",
        "id": 488
    },
    {
        "taggedQuestion": "What disease led to the demise of <e0> and Martino Martini ?",
        "entityMap": {"<e0>": "Letitia MacTavish Hargrave"},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "disease",
                "containsRefer": false,
                "originStr": "disease",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "led to #entity1 and Martino Martini",
                "containsRefer": true,
                "originStr": "led to #entity1 and Martino Martini",
                "start": 2,
                "entityID": 0,
                "end": 11,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the demise of Letitia MacTavish Hargrave",
                "containsRefer": false,
                "originStr": "the demise of Letitia MacTavish Hargrave",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 4,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What disease led to the demise of Letitia MacTavish Hargrave and Martino Martini ?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT What) (NN disease)) (SQ (VP (VBD led) (PP (IN to) (NP (NP (DT the) (NN demise)) (PP (IN of) (NP (NP (ADD <e0>)) (CC and) (NP (NNP Martino) (NNP Martini)))))))) (. ?)))",
        "id": 489
    },
    {
        "taggedQuestion": "What are some software which are written in languages that are run on Unix like OS?",
        "entityMap": {},
        "nodeNum": 7,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "some software",
                "containsRefer": false,
                "originStr": "some software",
                "start": 2,
                "entityID": 0,
                "end": 4,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are written in #entity1",
                "containsRefer": true,
                "originStr": "are written in #entity1",
                "start": 5,
                "entityID": 0,
                "end": 16,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "languages",
                "containsRefer": false,
                "originStr": "languages",
                "start": 8,
                "entityID": 1,
                "end": 9,
                "nodeType": 4,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are run on Unix like OS",
                "containsRefer": false,
                "originStr": "are run on Unix like OS",
                "start": 10,
                "entityID": 1,
                "end": 16,
                "nodeType": 3,
                "nodeID": 6,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What are some software which are written in languages that are run on Unix like OS?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 8,
                "from": 3,
                "end": 16,
                "to": 4
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 5
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 6
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBP are) (NP (NP (DT some) (NN software)) (SBAR (WHNP (WDT which)) (S (VP (VBP are) (VP (VBN written) (PP (IN in) (NP (NP (NNS languages)) (SBAR (WHNP (WDT that)) (S (VP (VBP are) (VP (VBN run) (PP (IN on) (NP (NNP Unix))) (PP (IN like) (NP (NNP OS))))))))))))))) (. ?)))",
        "id": 490
    },
    {
        "taggedQuestion": "List all the movies whose directors were born in Kenosha, Wisconsin?",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "list",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "all #entity1",
                "containsRefer": true,
                "originStr": "all #entity1",
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "movies",
                "containsRefer": false,
                "originStr": "movies",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "directors were born in Kenosha, Wisconsin",
                "containsRefer": false,
                "originStr": "directors were born in Kenosha, Wisconsin",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "List all the movies whose directors were born in Kenosha, Wisconsin?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": -1,
                "from": 2,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (FRAG (NP (NN List)) (NP (NP (PDT all) (DT the) (NNS movies)) (SBAR (WHNP (WP$ whose) (NML (NNS directors))) (S (VP (VBD were) (VP (VBN born) (PP (IN in) (NP (NNP Kenosha) (, ,) (NNP Wisconsin)))))))) (. ?)))",
        "id": 491
    },
    {
        "taggedQuestion": "Does the <e0> in Kingston, Ontario?",
        "entityMap": {"<e0>": "St lawrence river start"},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "does",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "JUDGE"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the St lawrence river start in Kingston , Ontario",
                "containsRefer": false,
                "originStr": "the St lawrence river start in Kingston , Ontario",
                "start": 1,
                "entityID": 0,
                "end": 7,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Does the St lawrence river start in Kingston, Ontario?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SQ (VP (VBZ Does) (NP (NP (DT the) (NN <e0>)) (PP (IN in) (NP (NNP Kingston) (, ,) (NNP Ontario))))) (. ?)))",
        "id": 492
    },
    {
        "taggedQuestion": "What stadium's operator is Stan Kroenke?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "stadium",
                "containsRefer": false,
                "originStr": "stadium",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "operator is Stan Kroenke",
                "containsRefer": false,
                "originStr": "operator is Stan Kroenke",
                "start": 3,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What stadium's operator is Stan Kroenke?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WHNP (WDT What) (NN stadium) (POS 's)) (NP (NN operator))) (SQ (VBZ is) (NP (NNP Stan) (NNP Kroenke))) (. ?)))",
        "id": 493
    },
    {
        "taggedQuestion": "Is Mike Babcock the head coach of <e0>?",
        "entityMap": {"<e0>": "Toronto Maple Leafs"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "is",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "JUDGE"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Mike Babcock",
                "containsRefer": false,
                "originStr": "Mike Babcock",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the head coach of Toronto Maple Leafs",
                "containsRefer": false,
                "originStr": "the head coach of Toronto Maple Leafs",
                "start": 3,
                "entityID": 0,
                "end": 8,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Is Mike Babcock the head coach of Toronto Maple Leafs?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SQ (VBZ Is) (NP (NNP Mike) (NNP Babcock)) (NP (NP (DT the) (NN head) (NN coach)) (PP (IN of) (NP (NN <e0>)))) (. ?)))",
        "id": 494
    },
    {
        "taggedQuestion": "Whose commanders are John Mc Ewen and Park Chunghee?",
        "entityMap": {},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "whose",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "commanders",
                "containsRefer": false,
                "originStr": "commanders",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are John Mc Ewen",
                "containsRefer": false,
                "originStr": "are John Mc Ewen",
                "start": 2,
                "entityID": 0,
                "end": 6,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are Park Chunghee",
                "containsRefer": false,
                "originStr": "are Park Chunghee",
                "start": 7,
                "entityID": 0,
                "end": 8,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Whose commanders are John Mc Ewen and Park Chunghee?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WHNP (WP$ Whose)) (NNS commanders)) (SQ (VBP are) (NP (NP (NNP John) (NNP Mc) (NNP Ewen)) (CC and) (NP (NNP Park) (NNP Chunghee)))) (. ?)))",
        "id": 495
    },
    {
        "taggedQuestion": "Who gave guest appearances on the show which is the next episode after the Bombshell one?",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "who",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "gave guest appearances on #entity1",
                "containsRefer": true,
                "originStr": "gave guest appearances on #entity1",
                "start": 1,
                "entityID": 0,
                "end": 16,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the show",
                "containsRefer": false,
                "originStr": "the show",
                "start": 5,
                "entityID": 1,
                "end": 7,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the next episode after the Bombshell one",
                "containsRefer": false,
                "originStr": "is the next episode after the Bombshell one",
                "start": 8,
                "entityID": 1,
                "end": 16,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Who gave guest appearances on the show which is the next episode after the Bombshell one?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 5,
                "from": 2,
                "end": 16,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP Who)) (SQ (VP (VBD gave) (NP (NN guest) (NNS appearances)) (PP (IN on) (NP (NP (DT the) (NN show)) (SBAR (WHNP (WDT which)) (S (VP (VBZ is) (NP (NP (DT the) (JJ next) (NN episode)) (PP (IN after) (NP (DT the) (NN Bombshell) (CD one))))))))))) (. ?)))",
        "id": 496
    },
    {
        "taggedQuestion": "What is manufactured by a company headed by Kazuo Hirai?",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is manufactured by #entity1",
                "containsRefer": true,
                "originStr": "is manufactured by #entity1",
                "start": 1,
                "entityID": 0,
                "end": 10,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "a company",
                "containsRefer": false,
                "originStr": "a company",
                "start": 4,
                "entityID": 1,
                "end": 6,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "headed by Kazuo Hirai",
                "containsRefer": false,
                "originStr": "headed by Kazuo Hirai",
                "start": 6,
                "entityID": 1,
                "end": 10,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is manufactured by a company headed by Kazuo Hirai?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 4,
                "from": 2,
                "end": 10,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (VP (VBN manufactured) (PP (IN by) (NP (NP (DT a) (NN company)) (VP (VBN headed) (PP (IN by) (NP (NNP Kazuo) (NNP Hirai)))))))) (. ?)))",
        "id": 497
    },
    {
        "taggedQuestion": "Which presidents have politicians from the Continental army served?",
        "entityMap": {},
        "nodeNum": 7,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "presidents",
                "containsRefer": false,
                "originStr": "presidents",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "have #entity1",
                "containsRefer": true,
                "originStr": "have #entity1",
                "start": 2,
                "entityID": 0,
                "end": 9,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "politicians from the Continental army",
                "containsRefer": false,
                "originStr": "politicians from the Continental army",
                "start": 3,
                "entityID": 1,
                "end": 8,
                "nodeType": 4,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            },
            {
                "str": "served",
                "containsRefer": false,
                "originStr": "served",
                "start": 8,
                "entityID": 1,
                "end": 9,
                "nodeType": 3,
                "nodeID": 6,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which presidents have politicians from the Continental army served?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 3,
                "from": 3,
                "end": 9,
                "to": 4
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 5
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 6
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NNS presidents)) (SQ (VP (VBP have) (NP (NP (NP (NNS politicians)) (PP (IN from) (NP (DT the) (NNP Continental) (NN army)))) (SBAR (S (VP (VBD served))))))) (. ?)))",
        "id": 498
    },
    {
        "taggedQuestion": "<e0> is the governing body of which city?",
        "entityMap": {"<e0>": "Philadelphia City Council"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "city",
                "containsRefer": false,
                "originStr": "city",
                "start": 7,
                "entityID": 0,
                "end": 9,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Philadelphia City Council is the governing body of",
                "containsRefer": false,
                "originStr": "Philadelphia City Council is the governing body of",
                "start": 0,
                "entityID": 0,
                "end": 6,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Philadelphia City Council is the governing body of which city?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (S (NP (ADD <e0>)) (VP (VBZ is) (NP (NP (DT the) (VBG governing) (NN body)) (PP (IN of) (NP (WDT which) (NN city))))) (. ?)))",
        "id": 499
    },
    {
        "taggedQuestion": "What are the binomial authority of Menetries's warbler?",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are the binomial authority of Menetries's warbler",
                "containsRefer": false,
                "originStr": "are the binomial authority of Menetries's warbler",
                "start": 1,
                "entityID": 0,
                "end": 9,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What are the binomial authority of Menetries's warbler?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBP are) (NP (NP (DT the) (JJ binomial) (NN authority)) (PP (IN of) (NP (NP (NNPS Menetries) (POS 's)) (NN warbler))))) (. ?)))",
        "id": 500
    },
    {
        "taggedQuestion": "Name the movie which has music composed by Elliot Goldenthal and screenplay by Akiva Goldsman .",
        "entityMap": {},
        "nodeNum": 8,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "name",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the movie",
                "containsRefer": false,
                "originStr": "the movie",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "has #entity1",
                "containsRefer": true,
                "originStr": "has #entity1",
                "start": 4,
                "entityID": 0,
                "end": 15,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "music",
                "containsRefer": false,
                "originStr": "music",
                "start": 5,
                "entityID": 1,
                "end": 6,
                "nodeType": 4,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            },
            {
                "str": "composed by Elliot Goldenthal",
                "containsRefer": false,
                "originStr": "composed by Elliot Goldenthal",
                "start": 6,
                "entityID": 1,
                "end": 10,
                "nodeType": 3,
                "nodeID": 6,
                "questionType": "UNKNOWN"
            },
            {
                "str": "screenplay by Akiva Goldsman",
                "containsRefer": false,
                "originStr": "screenplay by Akiva Goldsman",
                "start": 11,
                "entityID": 1,
                "end": 14,
                "nodeType": 4,
                "nodeID": 7,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Name the movie which has music composed by Elliot Goldenthal and screenplay by Akiva Goldsman .",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 5,
                "from": 3,
                "end": 15,
                "to": 4
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 5
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 6
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 7
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Name) (NP (NP (DT the) (NN movie)) (SBAR (WHNP (WDT which)) (S (VP (VBZ has) (NP (NP (NN music)) (VP (VBN composed) (PP (IN by) (NP (NP (NNP Elliot) (NNP Goldenthal)) (CC and) (NP (NN screenplay)))) (PP (IN by) (NP (NNP Akiva) (NNP Goldsman)))))))))) (. .)))",
        "id": 501
    },
    {
        "taggedQuestion": "Name the fictional character whose relative are Duck family and Clan McDuck.",
        "entityMap": {},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "name",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the fictional character",
                "containsRefer": false,
                "originStr": "the fictional character",
                "start": 1,
                "entityID": 0,
                "end": 4,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "whose relative are Duck family",
                "containsRefer": false,
                "originStr": "whose relative are Duck family",
                "start": 6,
                "entityID": 0,
                "end": 9,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "whose relative are Clan McDuck",
                "containsRefer": false,
                "originStr": "whose relative are Clan McDuck",
                "start": 10,
                "entityID": 0,
                "end": 11,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Name the fictional character whose relative are Duck family and Clan McDuck.",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3,
                "info": "whose relative"
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Name) (NP (NP (DT the) (JJ fictional) (NN character)) (SBAR (WHNP (WP$ whose) (NN relative)) (S (VP (VBP are) (NP (NP (NN Duck) (NN family)) (CC and) (NP (NNP Clan) (NNP McDuck)))))))) (. .)))",
        "id": 502
    },
    {
        "taggedQuestion": "Which university with athletics department in NCAA Division I Football Bowl Subdivision has nickname <e0> ?",
        "entityMap": {
            "<e1>": "NCAA Division Football Bowl Subdivision",
            "<e0>": "Tulane Green Wave"
        },
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "university with athletics department in NCAA Division I Football Bowl Subdivision",
                "containsRefer": false,
                "originStr": "university with athletics department in NCAA Division I Football Bowl Subdivision",
                "start": 1,
                "entityID": 0,
                "end": 12,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "has nickname Tulane Green Wave",
                "containsRefer": false,
                "originStr": "has nickname Tulane Green Wave",
                "start": 12,
                "entityID": 0,
                "end": 15,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which university with athletics department in NCAA Division I Football Bowl Subdivision has nickname Tulane Green Wave ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WHNP (WDT Which) (NN university)) (PP (IN with) (NP (NP (NNS athletics) (NN department)) (PP (IN in) (NP (NML (NNP NCAA) (NNP Division)) (NNP I) (NNP Football) (NNP Bowl) (NNP Subdivision)))))) (SQ (VP (VBZ has) (NP (NN nickname) (NN <e0>)))) (. ?)))",
        "id": 503
    },
    {
        "taggedQuestion": "Which state does <e0> belong ?",
        "entityMap": {"<e0>": "Jerome B. Chaffee"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "state",
                "containsRefer": false,
                "originStr": "state",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "does Jerome B. Chaffee belong",
                "containsRefer": false,
                "originStr": "does Jerome B. Chaffee belong",
                "start": 2,
                "entityID": 0,
                "end": 5,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which state does Jerome B. Chaffee belong ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NN state)) (SQ (VP (VBZ does) (NP (ADD <e0>)) (VP (VB belong)))) (. ?)))",
        "id": 504
    },
    {
        "taggedQuestion": "Which of the parties that have governed over Rishikesh, does Govinda belong too?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the parties",
                "containsRefer": false,
                "originStr": "the parties",
                "start": 2,
                "entityID": 0,
                "end": 4,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "that have governed over Rishikesh , does Govinda belong too",
                "containsRefer": false,
                "originStr": "that have governed over Rishikesh , does Govinda belong too",
                "start": 4,
                "entityID": 0,
                "end": 14,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which of the parties that have governed over Rishikesh, does Govinda belong too?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WHNP (WDT Which)) (PP (IN of) (NP (DT the) (NNS parties)))) (SQ (SBAR (WHNP (WDT that)) (S (VP (VBP have) (VP (VBN governed) (PP (IN over) (NP (NNP Rishikesh))))))) (, ,) (VBZ does) (NP (NNP Govinda)) (VP (VB belong) (ADVP (RB too)))) (. ?)))",
        "id": 505
    },
    {
        "taggedQuestion": "What awards are won by the screenwriter of Lucky You?",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are won by #entity1",
                "containsRefer": true,
                "originStr": "are won by #entity1",
                "start": 2,
                "entityID": 0,
                "end": 10,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "awards",
                "containsRefer": false,
                "originStr": "awards",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the screenwriter of Lucky You",
                "containsRefer": false,
                "originStr": "the screenwriter of Lucky You",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 4,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What awards are won by the screenwriter of Lucky You?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": -1,
                "from": 2,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (SBAR (WHNP (WDT What)) (S (NP (NNS awards)) (VP (VBP are) (VP (VBN won) (PP (IN by) (NP (NP (DT the) (NN screenwriter)) (PP (IN of) (NP (NNP Lucky) (NNP You)))))))) (. ?)))",
        "id": 506
    },
    {
        "taggedQuestion": "Name  the Pole driver of <e0> .",
        "entityMap": {"<e0>": "1994 Spanish Grand Prix"},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "name",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the Pole driver of 1994 Spanish Grand Prix",
                "containsRefer": false,
                "originStr": "the Pole driver of 1994 Spanish Grand Prix",
                "start": 1,
                "entityID": 0,
                "end": 6,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Name  the Pole driver of 1994 Spanish Grand Prix .",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Name) (NP (NP (DT the) (NNP Pole) (NN driver)) (PP (IN of) (NP (ADD <e0>))))) (. .)))",
        "id": 507
    },
    {
        "taggedQuestion": "Where did Georges Wolinski and Judson Huss die/?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "Where",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Georges Wolinski",
                "containsRefer": false,
                "originStr": "Georges Wolinski",
                "start": 1,
                "entityID": 0,
                "end": 4,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Judson Huss die /",
                "containsRefer": false,
                "originStr": "Judson Huss die /",
                "start": 5,
                "entityID": 0,
                "end": 8,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Where did Georges Wolinski and Judson Huss die/?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHADVP (WRB Where)) (SQ (VP (VBD did) (NP (NP (NNP Georges) (NNP Wolinski)) (CC and) (NP (NNP Judson) (NNPS Huss)) (NML (NN die) (HYPH /))))) (. ?)))",
        "id": 508
    },
    {
        "taggedQuestion": "What is the parent company of the airline whose hub is in Detroit?",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the parent company of #entity1",
                "containsRefer": true,
                "originStr": "is the parent company of #entity1",
                "start": 1,
                "entityID": 0,
                "end": 13,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the airline",
                "containsRefer": false,
                "originStr": "the airline",
                "start": 6,
                "entityID": 1,
                "end": 8,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "whose hub is in Detroit",
                "containsRefer": false,
                "originStr": "whose hub is in Detroit",
                "start": 10,
                "entityID": 1,
                "end": 13,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is the parent company of the airline whose hub is in Detroit?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 6,
                "from": 2,
                "end": 13,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5,
                "info": "whose hub"
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (NP (DT the) (NN parent) (NN company)) (PP (IN of) (NP (NP (DT the) (NN airline)) (SBAR (WHNP (WP$ whose) (NML (NN hub))) (S (VP (VBZ is) (PP (IN in) (NP (NNP Detroit)))))))))) (. ?)))",
        "id": 509
    },
    {
        "taggedQuestion": "What is the appliance which uses the <e1> manufactured by <e0>?",
        "entityMap": {
            "<e1>": "central processing unit",
            "<e0>": "Marvell Technology Group"
        },
        "nodeNum": 7,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the appliance",
                "containsRefer": false,
                "originStr": "the appliance",
                "start": 2,
                "entityID": 0,
                "end": 4,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "uses #entity1",
                "containsRefer": true,
                "originStr": "uses #entity1",
                "start": 5,
                "entityID": 0,
                "end": 11,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the central processing unit",
                "containsRefer": false,
                "originStr": "the central processing unit",
                "start": 6,
                "entityID": 1,
                "end": 8,
                "nodeType": 4,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            },
            {
                "str": "manufactured by Marvell Technology Group",
                "containsRefer": false,
                "originStr": "manufactured by Marvell Technology Group",
                "start": 8,
                "entityID": 1,
                "end": 11,
                "nodeType": 3,
                "nodeID": 6,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is the appliance which uses the central processing unit manufactured by Marvell Technology Group?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 6,
                "from": 3,
                "end": 11,
                "to": 4
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 5
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 6
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (NP (DT the) (NN appliance)) (SBAR (WHNP (WDT which)) (S (VP (VBZ uses) (NP (NP (DT the) (NN <e1>)) (VP (VBN manufactured) (PP (IN by) (NP (NN <e0>)))))))))) (. ?)))",
        "id": 510
    },
    {
        "taggedQuestion": "Give me all magazines whose founder died in Berkeley, California.",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "give me",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "all magazines",
                "containsRefer": false,
                "originStr": "all magazines",
                "start": 2,
                "entityID": 0,
                "end": 4,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "whose founder died in Berkeley , California",
                "containsRefer": false,
                "originStr": "whose founder died in Berkeley , California",
                "start": 6,
                "entityID": 0,
                "end": 11,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Give me all magazines whose founder died in Berkeley, California.",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3,
                "info": "whose founder"
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Give) (NP (PRP me)) (NP (NP (DT all) (NNS magazines)) (SBAR (WHNP (WP$ whose) (NN founder)) (S (VP (VBD died) (PP (IN in) (NP (NNP Berkeley) (, ,) (NNP California)))))))) (. .)))",
        "id": 511
    },
    {
        "taggedQuestion": "Which technological products were manufactured by Foxconn?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "were manufactured by Foxconn",
                "containsRefer": false,
                "originStr": "were manufactured by Foxconn",
                "start": 3,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "technological products",
                "containsRefer": false,
                "originStr": "technological products",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which technological products were manufactured by Foxconn?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBAR (WHNP (WDT Which)) (S (NP (JJ technological) (NNS products)) (VP (VBD were) (VP (VBN manufactured) (PP (IN by) (NP (NNP Foxconn)))))) (. ?)))",
        "id": 512
    },
    {
        "taggedQuestion": "Is George Lucas the cinematographer of 6-18-67?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "is",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "JUDGE"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "George Lucas",
                "containsRefer": false,
                "originStr": "George Lucas",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the cinematographer of 6-18-67",
                "containsRefer": false,
                "originStr": "the cinematographer of 6-18-67",
                "start": 3,
                "entityID": 0,
                "end": 7,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Is George Lucas the cinematographer of 6-18-67?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SQ (VBZ Is) (NP (NNP George) (NNP Lucas)) (NP (NP (DT the) (NN cinematographer)) (PP (IN of) (NP (CD 6-18-67)))) (. ?)))",
        "id": 513
    },
    {
        "taggedQuestion": "Whose predecessor had Jenny Macklin as a deputy ?",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "whose",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "had Jenny Macklin as a deputy",
                "containsRefer": false,
                "originStr": "had Jenny Macklin as a deputy",
                "start": 2,
                "entityID": 0,
                "end": 8,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Whose predecessor had Jenny Macklin as a deputy ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP$ Whose) (NN predecessor)) (SQ (VP (VBD had) (NP (NP (NNP Jenny) (NNP Macklin)) (PP (IN as) (NP (DT a) (NN deputy)))))) (. ?)))",
        "id": 514
    },
    {
        "taggedQuestion": "How many cars are similar to the ones assembled in the <e0>?",
        "entityMap": {"<e0>": "Jefferson North Assembly"},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "how many",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "cars",
                "containsRefer": false,
                "originStr": "cars",
                "start": 2,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are similar to #entity1",
                "containsRefer": true,
                "originStr": "are similar to #entity1",
                "start": 3,
                "entityID": 0,
                "end": 12,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the ones assembled in the Jefferson North Assembly",
                "containsRefer": false,
                "originStr": "the ones assembled in the Jefferson North Assembly",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 4,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "How many cars are similar to the ones assembled in the Jefferson North Assembly?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WHADJP (WRB How) (JJ many)) (NNS cars)) (SQ (VP (VBP are) (ADJP (JJ similar) (PP (IN to) (NP (NP (DT the) (NNS ones)) (VP (VBN assembled) (PP (IN in) (NP (DT the) (NN <e0>))))))))) (. ?)))",
        "id": 515
    },
    {
        "taggedQuestion": "Count the region of AN/FSQ-7 Combat Direction Central.",
        "entityMap": {"<e0>": "/ FSQ-7 Combat Direction Central"},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "count",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the region of AN / FSQ-7 Combat Direction Central",
                "containsRefer": false,
                "originStr": "the region of AN / FSQ-7 Combat Direction Central",
                "start": 1,
                "entityID": 0,
                "end": 12,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Count the region of AN/FSQ-7 Combat Direction Central.",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Count) (NP (NP (DT the) (NN region)) (PP (IN of) (NP (DT AN) (ADJP (SYM /) (NP (NN FSQ) (HYPH -) (CD 7))) (NNP Combat) (NNP Direction) (NNP Central))))) (. .)))",
        "id": 516
    },
    {
        "taggedQuestion": "What are the common houses of US Congress and the Kansas Legislature?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are the common houses of US Congress",
                "containsRefer": false,
                "originStr": "are the common houses of US Congress",
                "start": 1,
                "entityID": 0,
                "end": 8,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are the common houses of the Kansas Legislature",
                "containsRefer": false,
                "originStr": "are the common houses of the Kansas Legislature",
                "start": 9,
                "entityID": 0,
                "end": 11,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What are the common houses of US Congress and the Kansas Legislature?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBP are) (NP (NP (DT the) (JJ common) (NNS houses)) (PP (IN of) (NP (NP (NNP US) (NNP Congress)) (CC and) (NP (DT the) (NNP Kansas) (NNP Legislature)))))) (. ?)))",
        "id": 517
    },
    {
        "taggedQuestion": "Was John Muir the first one to ascend one of the peaks in the cathedral peak?",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "was",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "JUDGE"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "John Muir",
                "containsRefer": false,
                "originStr": "John Muir",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the first one to ascend one of #entity1",
                "containsRefer": true,
                "originStr": "the first one to ascend one of #entity1",
                "start": 3,
                "entityID": 0,
                "end": 16,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the peaks in the cathedral peak",
                "containsRefer": false,
                "originStr": "the peaks in the cathedral peak",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 4,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Was John Muir the first one to ascend one of the peaks in the cathedral peak?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (SQ (VBD Was) (NP (NNP John) (NNP Muir)) (NP (NP (DT the) (JJ first) (CD one)) (S (VP (TO to) (VP (VB ascend) (NP (NP (CD one)) (PP (IN of) (NP (NP (DT the) (NNS peaks)) (PP (IN in) (NP (DT the) (NN cathedral) (NN peak)))))))))) (. ?)))",
        "id": 518
    },
    {
        "taggedQuestion": "How many different places have people gone to the <e0>?",
        "entityMap": {"<e0>": "Harward Medical School"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "how many",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "different places",
                "containsRefer": false,
                "originStr": "different places",
                "start": 2,
                "entityID": 0,
                "end": 4,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "have people gone to the Harward Medical School",
                "containsRefer": false,
                "originStr": "have people gone to the Harward Medical School",
                "start": 4,
                "entityID": 0,
                "end": 10,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "How many different places have people gone to the Harward Medical School?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WHADJP (WRB How) (JJ many)) (JJ different) (NML (NNS places))) (SQ (VBP have) (NP (NNS people)) (VP (VBN gone) (PP (IN to) (NP (DT the) (NN <e0>))))) (. ?)))",
        "id": 519
    },
    {
        "taggedQuestion": "Name the <e0> where Mona Marshall has given voice and is distributed by Comedy Central.",
        "entityMap": {"<e0>": "television show"},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "name",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the television show",
                "containsRefer": false,
                "originStr": "the television show",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "has given voice",
                "containsRefer": false,
                "originStr": "has given voice",
                "start": 3,
                "entityID": 0,
                "end": 9,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is distributed by Comedy Central",
                "containsRefer": false,
                "originStr": "is distributed by Comedy Central",
                "start": 10,
                "entityID": 0,
                "end": 14,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Name the television show where Mona Marshall has given voice and is distributed by Comedy Central.",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Name) (NP (DT the) (NN <e0>)) (SBAR (WHADVP (WRB where)) (S (NP (NNP Mona) (NNP Marshall)) (VP (VP (VBZ has) (VP (VBN given) (NP (NN voice)))) (CC and) (VP (VBZ is) (VP (VBN distributed) (PP (IN by) (NP (NNP Comedy) (NNP Central))))))))) (. .)))",
        "id": 520
    },
    {
        "taggedQuestion": "What are Jerry Bock's musicals based upon?",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are Jerry Bock's musicals based upon",
                "containsRefer": false,
                "originStr": "are Jerry Bock's musicals based upon",
                "start": 1,
                "entityID": 0,
                "end": 8,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What are Jerry Bock's musicals based upon?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBP are) (NP (NP (NNP Jerry) (NNP Bock) (POS 's)) (NNS musicals)) (VP (VBN based) (PP (IN upon)))) (. ?)))",
        "id": 521
    },
    {
        "taggedQuestion": "Give me list of people who were the first to climb a peak in the Yosemite park.",
        "entityMap": {},
        "nodeNum": 8,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "give me",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "of #entity1",
                "containsRefer": true,
                "originStr": "of #entity1",
                "start": 2,
                "entityID": 0,
                "end": 17,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "people",
                "containsRefer": false,
                "originStr": "people",
                "start": 4,
                "entityID": 1,
                "end": 5,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "were #entity2",
                "containsRefer": true,
                "originStr": "were #entity2",
                "start": 6,
                "entityID": 1,
                "end": 17,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 2,
                "end": -1,
                "nodeType": 2,
                "nodeID": 6,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the first to climb a peak in the Yosemite park",
                "containsRefer": false,
                "originStr": "the first to climb a peak in the Yosemite park",
                "start": -1,
                "entityID": 2,
                "end": -1,
                "nodeType": 4,
                "nodeID": 7,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Give me list of people who were the first to climb a peak in the Yosemite park.",
        "entityNum": 3,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 4,
                "from": 2,
                "end": 17,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": -1,
                "from": 5,
                "end": -1,
                "to": 6
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 6,
                "end": -1,
                "to": 7
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Give) (NP (PRP me)) (NP (NP (NN list)) (PP (IN of) (NP (NP (NNS people)) (SBAR (WHNP (WP who)) (S (VP (VBD were) (NP (DT the) (JJ first) (S (VP (TO to) (VP (VB climb) (NP (DT a) (NN peak)) (PP (IN in) (NP (DT the) (NNP Yosemite) (NN park)))))))))))))) (. .)))",
        "id": 522
    },
    {
        "taggedQuestion": "What is <e0> a part of?",
        "entityMap": {"<e0>": "Naval Support Activity Naples"},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is Naval Support Activity Naples a part of",
                "containsRefer": false,
                "originStr": "is Naval Support Activity Naples a part of",
                "start": 1,
                "entityID": 0,
                "end": 6,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is Naval Support Activity Naples a part of?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (NP (ADD <e0>)) (PP (NP (DT a) (NN part)) (IN of)))) (. ?)))",
        "id": 523
    },
    {
        "taggedQuestion": "Who has allegiance is <e0> and buried in Montpelier?",
        "entityMap": {"<e0>": "Colony of Virginia"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "who",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is Colony of Virginia",
                "containsRefer": false,
                "originStr": "is Colony of Virginia",
                "start": 3,
                "entityID": 0,
                "end": 5,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "buried in Montpelier",
                "containsRefer": false,
                "originStr": "buried in Montpelier",
                "start": 6,
                "entityID": 0,
                "end": 9,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Who has allegiance is Colony of Virginia and buried in Montpelier?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP Who)) (SQ (VBZ has) (NP (NN allegiance)) (VP (VP (VBZ is) (NP (ADD <e0>))) (CC and) (VP (VBN buried) (PP (IN in) (NP (NNP Montpelier)))))) (. ?)))",
        "id": 524
    },
    {
        "taggedQuestion": "Was Tim Gunn a guest on <e0>?",
        "entityMap": {"<e0>": "The Broken Code"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "was",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "JUDGE"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Tim Gunn",
                "containsRefer": false,
                "originStr": "Tim Gunn",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "a guest on The Broken Code",
                "containsRefer": false,
                "originStr": "a guest on The Broken Code",
                "start": 3,
                "entityID": 0,
                "end": 7,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Was Tim Gunn a guest on The Broken Code?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SQ (VBD Was) (NP (NNP Tim) (NNP Gunn)) (NP (NP (DT a) (NN guest)) (PP (IN on) (NP (NN <e0>)))) (. ?)))",
        "id": 525
    },
    {
        "taggedQuestion": "What is the successor of PlayStation 4?",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the successor of PlayStation 4",
                "containsRefer": false,
                "originStr": "is the successor of PlayStation 4",
                "start": 1,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is the successor of PlayStation 4?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (NP (DT the) (NN successor)) (PP (IN of) (NP (NNP PlayStation) (CD 4))))) (. ?)))",
        "id": 526
    },
    {
        "taggedQuestion": "What is the sovereign state of the Dafydd Benfras where Jasmine Lowson is also citizen of ?",
        "entityMap": {},
        "nodeNum": 7,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the sovereign state of #entity1",
                "containsRefer": true,
                "originStr": "is the sovereign state of #entity1",
                "start": 1,
                "entityID": 0,
                "end": 16,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Dafydd Benfras",
                "containsRefer": false,
                "originStr": "Dafydd Benfras",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Jasmine Lowson",
                "containsRefer": false,
                "originStr": "Jasmine Lowson",
                "start": -1,
                "entityID": 1,
                "end": 1,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            },
            {
                "str": "citizen of",
                "containsRefer": false,
                "originStr": "citizen of",
                "start": -3,
                "entityID": 1,
                "end": -1,
                "nodeType": 4,
                "nodeID": 6,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is the sovereign state of the Dafydd Benfras where Jasmine Lowson is also citizen of ?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": -1,
                "from": 2,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 6
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (NP (DT the) (JJ sovereign) (NN state)) (PP (IN of) (NP (NP (DT the) (NNP Dafydd) (NNP Benfras)) (SBAR (WHADVP (WRB where)) (S (NP (NNP Jasmine) (NNP Lowson)) (VP (VBZ is) (ADVP (RB also)) (NP (NP (NN citizen)) (PP (IN of)))))))))) (. ?)))",
        "id": 527
    },
    {
        "taggedQuestion": "Who did their highschool from a school whose mascot was a fighting tiger?",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "who",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "did their highschool from #entity1",
                "containsRefer": true,
                "originStr": "did their highschool from #entity1",
                "start": 1,
                "entityID": 0,
                "end": 13,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "school",
                "containsRefer": false,
                "originStr": "school",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "mascot was a fighting tiger",
                "containsRefer": false,
                "originStr": "mascot was a fighting tiger",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Who did their highschool from a school whose mascot was a fighting tiger?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": -1,
                "from": 2,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP Who)) (SQ (VP (VBD did) (NP (PRP$ their) (NN highschool)) (PP (IN from) (NP (NP (DT a) (NN school)) (SBAR (WHNP (WP$ whose) (NN mascot)) (S (VP (VBD was) (NP (DT a) (NN fighting) (NN tiger))))))))) (. ?)))",
        "id": 528
    },
    {
        "taggedQuestion": "Which destination of Emerald Air is also the city served by <e0> ?",
        "entityMap": {"<e0>": "houston Fort Bend Airport"},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "destination of Emerald Air",
                "containsRefer": false,
                "originStr": "destination of Emerald Air",
                "start": 1,
                "entityID": 0,
                "end": 5,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the city served by houston Fort Bend Airport",
                "containsRefer": false,
                "originStr": "the city served by houston Fort Bend Airport",
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "",
                "containsRefer": false,
                "originStr": "",
                "start": 5,
                "entityID": 0,
                "end": 6,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which destination of Emerald Air is also the city served by houston Fort Bend Airport ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NP (NN destination) (PP (IN of) (NP (NNP Emerald) (NNP Air))))) (SQ (VP (VBZ is) (ADVP (RB also)) (NP (NP (DT the) (NN city)) (VP (VBN served) (PP (IN by) (NP (NN <e0>))))))) (. ?)))",
        "id": 529
    },
    {
        "taggedQuestion": "Name the region served by Jerusalem Institue of Justice which was also the conflict region in GazaIsrael .",
        "entityMap": {},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "name",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the region",
                "containsRefer": false,
                "originStr": "the region",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the conflict region in GazaIsrael",
                "containsRefer": false,
                "originStr": "the conflict region in GazaIsrael",
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "served by Jerusalem Institue of Justice which",
                "containsRefer": false,
                "originStr": "served by Jerusalem Institue of Justice which",
                "start": 3,
                "entityID": 0,
                "end": 10,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Name the region served by Jerusalem Institue of Justice which was also the conflict region in GazaIsrael .",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Name) (NP (NP (DT the) (NN region)) (VP (VBN served) (PP (IN by) (NP (NP (NP (NNP Jerusalem) (NNP Institue)) (PP (IN of) (NP (NNP Justice)))) (SBAR (WHNP (WDT which)) (S (VP (VBD was) (ADVP (RB also)) (NP (NP (DT the) (NN conflict) (NN region)) (PP (IN in) (NP (NNP GazaIsrael)))))))))))) (. .)))",
        "id": 530
    },
    {
        "taggedQuestion": "Name the company whose key person is Raymond Conner and produces <e0>.",
        "entityMap": {"<e0>": "Boeing CH-47 Chinook"},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "name",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the company",
                "containsRefer": false,
                "originStr": "the company",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "whose key person is Raymond Conner",
                "containsRefer": false,
                "originStr": "whose key person is Raymond Conner",
                "start": 6,
                "entityID": 0,
                "end": 9,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "produces Boeing CH-47 Chinook",
                "containsRefer": false,
                "originStr": "produces Boeing CH-47 Chinook",
                "start": 10,
                "entityID": 0,
                "end": 12,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Name the company whose key person is Raymond Conner and produces Boeing CH-47 Chinook.",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3,
                "info": "whose key person"
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4,
                "info": "whose key person"
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Name) (NP (NP (DT the) (NN company)) (SBAR (WHNP (WP$ whose) (ADJP (JJ key)) (NN person)) (S (VP (VP (VBZ is) (NP (NNP Raymond) (NNP Conner))) (CC and) (VP (VBZ produces) (NP (ADD <e0>)))))))) (. .)))",
        "id": 531
    },
    {
        "taggedQuestion": "What is the total number of professions in which someone who has suicided worked?",
        "entityMap": {},
        "nodeNum": 7,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": " which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "professions",
                "containsRefer": false,
                "originStr": "professions",
                "start": 0,
                "entityID": 0,
                "end": 1,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "#entity1 worked",
                "containsRefer": true,
                "originStr": "#entity1 worked",
                "start": 3,
                "entityID": 0,
                "end": 8,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "someone",
                "containsRefer": false,
                "originStr": "someone",
                "start": 3,
                "entityID": 1,
                "end": 4,
                "nodeType": 4,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            },
            {
                "str": "has suicided",
                "containsRefer": false,
                "originStr": "has suicided",
                "start": 5,
                "entityID": 1,
                "end": 7,
                "nodeType": 3,
                "nodeID": 6,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is the total number of professions in which someone who has suicided worked?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1,
                "info": " in"
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3,
                "info": "in"
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 3,
                "from": 3,
                "end": 7,
                "to": 4
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 5
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 6
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (NP (DT the) (JJ total) (NN number)) (PP (IN of) (NP (NP (NNS professions)) (SBAR (WHPP (IN in) (WHNP (WDT which))) (S (NP (NP (NN someone)) (SBAR (WHNP (WP who)) (S (VP (VBZ has) (VP (VBN suicided)))))) (VP (VBN worked)))))))) (. ?)))",
        "id": 532
    },
    {
        "taggedQuestion": "How many golf players are there in <e0> ?",
        "entityMap": {"<e0>": "Arizona State Sun Devils"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "how many",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "golf players",
                "containsRefer": false,
                "originStr": "golf players",
                "start": 2,
                "entityID": 0,
                "end": 4,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are there in Arizona State Sun Devils",
                "containsRefer": false,
                "originStr": "are there in Arizona State Sun Devils",
                "start": 4,
                "entityID": 0,
                "end": 8,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "How many golf players are there in Arizona State Sun Devils ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WHADJP (WRB How) (JJ many)) (NML (NN golf)) (NNS players)) (SQ (VBP are) (NP (EX there)) (PP (IN in) (NP (NN <e0>)))) (. ?)))",
        "id": 533
    },
    {
        "taggedQuestion": "Count the characters in Batman Live.",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "count",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the characters",
                "containsRefer": false,
                "originStr": "the characters",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Batman Live",
                "containsRefer": false,
                "originStr": "Batman Live",
                "start": 4,
                "entityID": 0,
                "end": 6,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Count the characters in Batman Live.",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Count) (NP (DT the) (NNS characters)) (PP (IN in) (NP (NNP Batman) (NNP Live)))) (. .)))",
        "id": 534
    },
    {
        "taggedQuestion": "List the services provided by the company which provides Microsoft azure as one of the service ?",
        "entityMap": {},
        "nodeNum": 7,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "list",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the services",
                "containsRefer": false,
                "originStr": "the services",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the #entity1",
                "containsRefer": true,
                "originStr": "the #entity1",
                "start": 4,
                "entityID": 0,
                "end": 16,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the company",
                "containsRefer": false,
                "originStr": "the company",
                "start": 5,
                "entityID": 1,
                "end": 7,
                "nodeType": 4,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            },
            {
                "str": "provides Microsoft azure as one of the service",
                "containsRefer": false,
                "originStr": "provides Microsoft azure as one of the service",
                "start": 8,
                "entityID": 1,
                "end": 16,
                "nodeType": 3,
                "nodeID": 6,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "List the services provided by the company which provides Microsoft azure as one of the service ?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 5,
                "from": 3,
                "end": 16,
                "to": 4
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 5
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 6
            }
        ],
        "syntaxTreeText": "(ROOT (SQ (VP (VB List) (NP (DT the) (NNS services)) (PP (VBN provided) (PP (IN by) (NP (NP (DT the) (NN company)) (SBAR (WHNP (WDT which)) (S (VP (VBZ provides) (NP (NNP Microsoft) (JJ azure)) (PP (IN as) (NP (NP (CD one)) (PP (IN of) (NP (DT the) (NN service)))))))))))) (. ?)))",
        "id": 535
    },
    {
        "taggedQuestion": "What are some team members of the team based in Camp Nou?",
        "entityMap": {},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are some team members of #entity1",
                "containsRefer": true,
                "originStr": "are some team members of #entity1",
                "start": 1,
                "entityID": 0,
                "end": 12,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the team based in Camp Nou",
                "containsRefer": false,
                "originStr": "the team based in Camp Nou",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What are some team members of the team based in Camp Nou?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": -1,
                "from": 2,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBP are) (NP (NP (DT some) (NN team) (NNS members)) (PP (IN of) (NP (DT the) (NN team)))) (VP (VBN based) (PP (IN in) (NP (NNP Camp) (NNP Nou))))) (. ?)))",
        "id": 536
    },
    {
        "taggedQuestion": "Which universities are also known as the <e0>?",
        "entityMap": {"<e0>": "Tulane Green wave"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "universities",
                "containsRefer": false,
                "originStr": "universities",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "known as the Tulane Green wave",
                "containsRefer": false,
                "originStr": "known as the Tulane Green wave",
                "start": 4,
                "entityID": 0,
                "end": 8,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which universities are also known as the Tulane Green wave?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBAR (WHNP (WDT Which)) (S (NP (NNS universities)) (VP (VBP are) (ADVP (RB also)) (VP (VBN known) (PP (IN as) (NP (DT the) (NN <e0>)))))) (. ?)))",
        "id": 537
    },
    {
        "taggedQuestion": "What is the branch of the politicians whose governor is Bill Clements?",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the branch of #entity1",
                "containsRefer": true,
                "originStr": "is the branch of #entity1",
                "start": 1,
                "entityID": 0,
                "end": 12,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the politicians",
                "containsRefer": false,
                "originStr": "the politicians",
                "start": 5,
                "entityID": 1,
                "end": 7,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "whose governor is Bill Clements",
                "containsRefer": false,
                "originStr": "whose governor is Bill Clements",
                "start": 9,
                "entityID": 1,
                "end": 12,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is the branch of the politicians whose governor is Bill Clements?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 5,
                "from": 2,
                "end": 12,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5,
                "info": "whose governor"
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (NP (DT the) (NN branch)) (PP (IN of) (NP (NP (DT the) (NNS politicians)) (SBAR (WHNP (WP$ whose) (NML (NN governor))) (S (VP (VBZ is) (NP (NNP Bill) (NNP Clements))))))))) (. ?)))",
        "id": 538
    },
    {
        "taggedQuestion": "Who composed the episode after which came Butter's Very own Episode?",
        "entityMap": {},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "who",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "composed the episode after #entity1",
                "containsRefer": true,
                "originStr": "composed the episode after #entity1",
                "start": 1,
                "entityID": 0,
                "end": 12,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "came Butter's Very own Episode",
                "containsRefer": false,
                "originStr": "came Butter's Very own Episode",
                "start": 6,
                "entityID": 1,
                "end": 12,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Who composed the episode after which came Butter's Very own Episode?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 5,
                "from": 2,
                "end": 12,
                "to": 3
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP Who)) (SQ (VP (VBN composed) (NP (DT the) (NN episode)) (PP (IN after) (SBAR (WHNP (WDT which)) (S (VP (VBD came) (NP (NP (NNP Butter) (POS 's)) (ADJP (RB Very) (JJ own)) (NN Episode)))))))) (. ?)))",
        "id": 539
    },
    {
        "taggedQuestion": "What is the location country of Teperberg 1870 ?",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the location country of Teperberg 1870",
                "containsRefer": false,
                "originStr": "is the location country of Teperberg 1870",
                "start": 1,
                "entityID": 0,
                "end": 8,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is the location country of Teperberg 1870 ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (NP (DT the) (NN location) (NN country)) (PP (IN of) (NP (NNP Teperberg) (CD 1870))))) (. ?)))",
        "id": 540
    },
    {
        "taggedQuestion": "List the software developed by Shawn Fanning ?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "list",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the software",
                "containsRefer": false,
                "originStr": "the software",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "developed by Shawn Fanning",
                "containsRefer": false,
                "originStr": "developed by Shawn Fanning",
                "start": 3,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "List the software developed by Shawn Fanning ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SQ (VP (VB List) (NP (NP (DT the) (NN software)) (VP (VBN developed) (PP (IN by) (NP (NNP Shawn) (NNP Fanning)))))) (. ?)))",
        "id": 541
    },
    {
        "taggedQuestion": "What is the stylistic origin of the music genres where the Bass guitar is important?",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the stylistic origin of #entity1",
                "containsRefer": true,
                "originStr": "is the stylistic origin of #entity1",
                "start": 1,
                "entityID": 0,
                "end": 15,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the music genres",
                "containsRefer": false,
                "originStr": "the music genres",
                "start": 6,
                "entityID": 1,
                "end": 9,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the Bass guitar is important",
                "containsRefer": false,
                "originStr": "the Bass guitar is important",
                "start": 10,
                "entityID": 1,
                "end": 15,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is the stylistic origin of the music genres where the Bass guitar is important?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 6,
                "from": 2,
                "end": 15,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (NP (DT the) (JJ stylistic) (NN origin)) (PP (IN of) (NP (NP (DT the) (NN music) (NNS genres)) (SBAR (WHADVP (WRB where)) (S (NP (DT the) (NNP Bass) (NN guitar)) (VP (VBZ is) (ADJP (JJ important))))))))) (. ?)))",
        "id": 542
    },
    {
        "taggedQuestion": "What are the other notable work of the executive producer of <e0> episode of Doctor Who?",
        "entityMap": {"<e0>": "The Runaway Bride"},
        "nodeNum": 10,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are the other notable work of #entity1",
                "containsRefer": true,
                "originStr": "are the other notable work of #entity1",
                "start": 1,
                "entityID": 0,
                "end": 16,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the executive producer of #entity2",
                "containsRefer": true,
                "originStr": "the executive producer of #entity2",
                "start": 7,
                "entityID": 1,
                "end": 16,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 2,
                "end": -1,
                "nodeType": 2,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            },
            {
                "str": "The Runaway Bride episode of #entity3",
                "containsRefer": true,
                "originStr": "The Runaway Bride episode of #entity3",
                "start": 11,
                "entityID": 2,
                "end": 16,
                "nodeType": 4,
                "nodeID": 6,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 3,
                "end": -1,
                "nodeType": 2,
                "nodeID": 7,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Doctor",
                "containsRefer": false,
                "originStr": "Doctor",
                "start": 14,
                "entityID": 3,
                "end": 15,
                "nodeType": 4,
                "nodeID": 8,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Who",
                "containsRefer": false,
                "originStr": "Who",
                "start": 15,
                "entityID": 3,
                "end": 16,
                "nodeType": 3,
                "nodeID": 9,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What are the other notable work of the executive producer of The Runaway Bride episode of Doctor Who?",
        "entityNum": 4,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 7,
                "from": 2,
                "end": 16,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 11,
                "from": 4,
                "end": 16,
                "to": 5
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 5,
                "end": -1,
                "to": 6
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 14,
                "from": 6,
                "end": 16,
                "to": 7
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 7,
                "end": -1,
                "to": 8
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 7,
                "end": -1,
                "to": 9
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBP are) (NP (NP (DT the) (JJ other) (JJ notable) (NN work)) (PP (IN of) (NP (NP (DT the) (JJ executive) (NN producer)) (PP (IN of) (NP (NP (NN <e0>) (NN episode)) (PP (IN of) (NP (NP (NNP Doctor)) (SBAR (WHNP (WP Who))))))))))) (. ?)))",
        "id": 543
    },
    {
        "taggedQuestion": "Who was the voice actor of allen walker also gave voice to kimihiro watanuki?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "who",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "was the voice actor of allen walker",
                "containsRefer": false,
                "originStr": "was the voice actor of allen walker",
                "start": 1,
                "entityID": 0,
                "end": 8,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "gave voice to kimihiro watanuki",
                "containsRefer": false,
                "originStr": "gave voice to kimihiro watanuki",
                "start": 9,
                "entityID": 0,
                "end": 14,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Who was the voice actor of allen walker also gave voice to kimihiro watanuki?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP Who)) (SQ (VBD was) (NP (NP (DT the) (NN voice)) (SBAR (S (NP (NP (NN actor)) (PP (IN of) (NP (NN allen) (NN walker)))) (ADVP (RB also)) (VP (VBD gave) (NP (NN voice)) (PP (IN to) (NP (NN kimihiro) (NN watanuki)))))))) (. ?)))",
        "id": 544
    },
    {
        "taggedQuestion": "Name the office holder whose final resting place is North Bend and was part of <e0> conflict .",
        "entityMap": {"<e0>": "Siege of fort recovery"},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "name",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the office holder",
                "containsRefer": false,
                "originStr": "the office holder",
                "start": 1,
                "entityID": 0,
                "end": 4,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "whose final resting place is North Bend",
                "containsRefer": false,
                "originStr": "whose final resting place is North Bend",
                "start": 4,
                "entityID": 0,
                "end": 11,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "was part of Siege of fort recovery conflict",
                "containsRefer": false,
                "originStr": "was part of Siege of fort recovery conflict",
                "start": 12,
                "entityID": 0,
                "end": 16,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Name the office holder whose final resting place is North Bend and was part of Siege of fort recovery conflict .",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Name) (NP (DT the) (NN office) (NN holder)) (SBAR (WHNP (WP$ whose)) (S (NP (JJ final) (JJ resting) (NN place)) (VP (VBZ is) (ADJP (JJ North)) (UCP (NP (NNP Bend)) (CC and) (S (VP (VBD was) (NP (NP (NN part)) (PP (IN of) (NP (NN <e0>) (NN conflict))))))))))) (. .)))",
        "id": 545
    },
    {
        "taggedQuestion": "What type of engines are utilised by Purvis Eureka?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "type of engines",
                "containsRefer": false,
                "originStr": "type of engines",
                "start": 1,
                "entityID": 0,
                "end": 4,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are utilised by Purvis Eureka",
                "containsRefer": false,
                "originStr": "are utilised by Purvis Eureka",
                "start": 4,
                "entityID": 0,
                "end": 9,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What type of engines are utilised by Purvis Eureka?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WHNP (WDT What) (NN type)) (PP (IN of) (NP (NNS engines)))) (SQ (VBP are) (VP (VBN utilised) (PP (IN by) (NP (NNP Purvis) (NNP Eureka))))) (. ?)))",
        "id": 546
    },
    {
        "taggedQuestion": "Who edited Easy street ?",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "who",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "edited Easy street",
                "containsRefer": false,
                "originStr": "edited Easy street",
                "start": 1,
                "entityID": 0,
                "end": 4,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Who edited Easy street ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP Who)) (SQ (VP (VBN edited) (NP (JJ Easy) (NN street)))) (. ?)))",
        "id": 547
    },
    {
        "taggedQuestion": "Who were involved in the wars where Jonathan Haskell battled?",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "who",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "were involved in #entity1",
                "containsRefer": true,
                "originStr": "were involved in #entity1",
                "start": 1,
                "entityID": 0,
                "end": 10,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the wars",
                "containsRefer": false,
                "originStr": "the wars",
                "start": 4,
                "entityID": 1,
                "end": 6,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Jonathan Haskell battled",
                "containsRefer": false,
                "originStr": "Jonathan Haskell battled",
                "start": 7,
                "entityID": 1,
                "end": 10,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Who were involved in the wars where Jonathan Haskell battled?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 4,
                "from": 2,
                "end": 10,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP Who)) (SQ (VP (VBD were) (VP (VBN involved) (PP (IN in) (NP (NP (DT the) (NNS wars)) (SBAR (WHADVP (WRB where)) (S (NP (NNP Jonathan) (NNP Haskell)) (VP (VBD battled))))))))) (. ?)))",
        "id": 548
    },
    {
        "taggedQuestion": "Which city was the film star of Singhasan Battisi born ?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "city",
                "containsRefer": false,
                "originStr": "city",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "was the film star of Singhasan Battisi born",
                "containsRefer": false,
                "originStr": "was the film star of Singhasan Battisi born",
                "start": 2,
                "entityID": 0,
                "end": 10,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which city was the film star of Singhasan Battisi born ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NN city)) (SQ (VBD was) (NP (NP (DT the) (NN film) (NN star)) (PP (IN of) (NP (NNP Singhasan) (NNP Battisi)))) (VP (VBN born))) (. ?)))",
        "id": 549
    },
    {
        "taggedQuestion": "What are the reason served by <e0> which is also the country of LPGA ?",
        "entityMap": {"<e0>": "Toll Global Express"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are the reason served by Toll Global Express which",
                "containsRefer": false,
                "originStr": "are the reason served by Toll Global Express which",
                "start": 1,
                "entityID": 0,
                "end": 8,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the country of LPGA",
                "containsRefer": false,
                "originStr": "the country of LPGA",
                "start": 10,
                "entityID": 0,
                "end": 14,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What are the reason served by Toll Global Express which is also the country of LPGA ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBP are) (NP (DT the) (NN reason)) (VP (VBN served) (PP (IN by) (NP (NP (NN <e0>)) (SBAR (WHNP (WDT which)) (S (VP (VBZ is) (ADVP (RB also)) (NP (NP (DT the) (NN country)) (PP (IN of) (NP (NN LPGA))))))))))) (. ?)))",
        "id": 550
    },
    {
        "taggedQuestion": "List the territory of Tonkin Campaign ?",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "list",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the territory of Tonkin Campaign",
                "containsRefer": false,
                "originStr": "the territory of Tonkin Campaign",
                "start": 1,
                "entityID": 0,
                "end": 6,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "List the territory of Tonkin Campaign ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SQ (VP (VB List) (NP (NP (DT the) (NN territory)) (PP (IN of) (NP (NNP Tonkin) (NNP Campaign))))) (. ?)))",
        "id": 551
    },
    {
        "taggedQuestion": "Which teams did Ryan Powell play for?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "teams",
                "containsRefer": false,
                "originStr": "teams",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "did Ryan Powell play for",
                "containsRefer": false,
                "originStr": "did Ryan Powell play for",
                "start": 2,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which teams did Ryan Powell play for?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NNS teams)) (SQ (VBD did) (NP (NNP Ryan) (NNP Powell)) (VP (VB play) (PP (IN for)))) (. ?)))",
        "id": 552
    },
    {
        "taggedQuestion": "What are the awards won by the person who wrote the screen play for Lost in Rio ?",
        "entityMap": {},
        "nodeNum": 8,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are the awards won by #entity1",
                "containsRefer": true,
                "originStr": "are the awards won by #entity1",
                "start": 1,
                "entityID": 0,
                "end": 17,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the person",
                "containsRefer": false,
                "originStr": "the person",
                "start": 6,
                "entityID": 1,
                "end": 8,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "wrote #entity2",
                "containsRefer": true,
                "originStr": "wrote #entity2",
                "start": 9,
                "entityID": 1,
                "end": 17,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 2,
                "end": -1,
                "nodeType": 2,
                "nodeID": 6,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the screen play for Lost in Rio",
                "containsRefer": false,
                "originStr": "the screen play for Lost in Rio",
                "start": -1,
                "entityID": 2,
                "end": -1,
                "nodeType": 4,
                "nodeID": 7,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What are the awards won by the person who wrote the screen play for Lost in Rio ?",
        "entityNum": 3,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 6,
                "from": 2,
                "end": 17,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": -1,
                "from": 5,
                "end": -1,
                "to": 6
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 6,
                "end": -1,
                "to": 7
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBP are) (NP (DT the) (NNS awards)) (VP (VBN won) (PP (IN by) (NP (NP (DT the) (NN person)) (SBAR (WHNP (WP who)) (S (VP (VBD wrote) (NP (DT the) (NN screen) (NN play)) (PP (IN for) (S (VP (VBN Lost) (PP (IN in) (NP (NNP Rio))))))))))))) (. ?)))",
        "id": 553
    },
    {
        "taggedQuestion": "Total number of places where people drafted in the detroit pistons have died.",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "total number of",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Total number of places where people drafted in the detroit pistons",
                "containsRefer": false,
                "originStr": "Total number of places where people drafted in the detroit pistons",
                "start": 3,
                "entityID": 0,
                "end": 11,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "have died",
                "containsRefer": false,
                "originStr": "have died",
                "start": 11,
                "entityID": 0,
                "end": 13,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Total number of places where people drafted in the detroit pistons have died.",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (S (NP (NP (JJ Total) (NN number)) (PP (IN of) (NP (NP (NNS places)) (SBAR (WHADVP (WRB where)) (S (NP (NNS people)) (VP (VBD drafted) (PP (IN in) (NP (DT the) (NN detroit) (NNS pistons))))))))) (VP (VBP have) (VP (VBN died))) (. .)))",
        "id": 554
    },
    {
        "taggedQuestion": "What band made The trial and One of these days song?",
        "entityMap": {},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "band",
                "containsRefer": false,
                "originStr": "band",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "made The trial",
                "containsRefer": false,
                "originStr": "made The trial",
                "start": 2,
                "entityID": 0,
                "end": 5,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "One of these days song",
                "containsRefer": false,
                "originStr": "One of these days song",
                "start": 6,
                "entityID": 0,
                "end": 10,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What band made The trial and One of these days song?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT What) (NN band)) (SQ (VP (VBD made) (NP (NP (DT The) (NN trial)) (CC and) (NP (NP (CD One)) (PP (IN of) (NP (DT these) (NNS days) (NN song))))))) (. ?)))",
        "id": 555
    },
    {
        "taggedQuestion": "Name the club of Julie Hastings .",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "name",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the club of Julie Hastings",
                "containsRefer": false,
                "originStr": "the club of Julie Hastings",
                "start": 1,
                "entityID": 0,
                "end": 6,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Name the club of Julie Hastings .",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Name) (NP (NP (DT the) (NN club)) (PP (IN of) (NP (NNP Julie) (NNP Hastings))))) (. .)))",
        "id": 556
    },
    {
        "taggedQuestion": "Where does the river Upper Neretva start flowing?",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "Where",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "does the river Upper Neretva start flowing",
                "containsRefer": false,
                "originStr": "does the river Upper Neretva start flowing",
                "start": 1,
                "entityID": 0,
                "end": 8,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Where does the river Upper Neretva start flowing?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHADVP (WRB Where)) (SQ (VBZ does) (S (NP (DT the) (NN river)) (NP (NP (NML (NNP Upper) (NNP Neretva)) (NN start)) (VP (VBG flowing))))) (. ?)))",
        "id": 557
    },
    {
        "taggedQuestion": "Name the university located in Indiana and has affiliations with Kaplan, Inc..",
        "entityMap": {},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "name",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the university",
                "containsRefer": false,
                "originStr": "the university",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "located in Indiana",
                "containsRefer": false,
                "originStr": "located in Indiana",
                "start": 3,
                "entityID": 0,
                "end": 6,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "has affiliations with Kaplan , Inc",
                "containsRefer": false,
                "originStr": "has affiliations with Kaplan , Inc",
                "start": 7,
                "entityID": 0,
                "end": 13,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Name the university located in Indiana and has affiliations with Kaplan, Inc..",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VP (VB Name) (NP (NP (DT the) (NN university)) (VP (VBN located) (PP (IN in) (NP (NNP Indiana)))))) (CC and) (VP (VBZ has) (NP (NP (NNS affiliations)) (PP (IN with) (NP (NNP Kaplan) (, ,) (NNP Inc.)))))) (. .)))(ROOT (. .))",
        "id": 558
    },
    {
        "taggedQuestion": "List the newspapers whose offices are situated in <e0>?",
        "entityMap": {"<e0>": "1211 Avenue of the Americas"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "list",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the newspapers",
                "containsRefer": false,
                "originStr": "the newspapers",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "whose offices are situated in 1211 Avenue of the Americas",
                "containsRefer": false,
                "originStr": "whose offices are situated in 1211 Avenue of the Americas",
                "start": 5,
                "entityID": 0,
                "end": 9,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "List the newspapers whose offices are situated in 1211 Avenue of the Americas?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3,
                "info": "whose offices"
            }
        ],
        "syntaxTreeText": "(ROOT (SQ (VP (VB List) (NP (NP (DT the) (NNS newspapers)) (SBAR (WHNP (WP$ whose) (NNS offices)) (S (VP (VBP are) (VP (VBN situated) (PP (IN in) (NP (NN <e0>))))))))) (. ?)))",
        "id": 559
    },
    {
        "taggedQuestion": "Was Morrissey a member of the Smiths?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "was",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "JUDGE"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Morrissey",
                "containsRefer": false,
                "originStr": "Morrissey",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "a member of the Smiths",
                "containsRefer": false,
                "originStr": "a member of the Smiths",
                "start": 2,
                "entityID": 0,
                "end": 7,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Was Morrissey a member of the Smiths?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SQ (VBD Was) (NP (NNP Morrissey)) (NP (NP (DT a) (NN member)) (PP (IN of) (NP (DT the) (NNP Smiths)))) (. ?)))",
        "id": 560
    },
    {
        "taggedQuestion": "Did Phillippe Cabot go to Columbia for studying?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "did",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "JUDGE"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Phillippe Cabot",
                "containsRefer": false,
                "originStr": "Phillippe Cabot",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "go to Columbia for studying",
                "containsRefer": false,
                "originStr": "go to Columbia for studying",
                "start": 3,
                "entityID": 0,
                "end": 8,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Did Phillippe Cabot go to Columbia for studying?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SQ (VBD Did) (NP (NNP Phillippe) (NNP Cabot)) (VP (VB go) (PP (IN to) (NP (NNP Columbia))) (PP (IN for) (S (VP (VBG studying))))) (. ?)))",
        "id": 561
    },
    {
        "taggedQuestion": "What river originates in Kingston Ontario?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "river",
                "containsRefer": false,
                "originStr": "river",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "originates in Kingston Ontario",
                "containsRefer": false,
                "originStr": "originates in Kingston Ontario",
                "start": 2,
                "entityID": 0,
                "end": 6,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What river originates in Kingston Ontario?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT What) (NN river)) (SQ (VP (VBZ originates) (PP (IN in) (NP (NNP Kingston) (NNP Ontario))))) (. ?)))",
        "id": 562
    },
    {
        "taggedQuestion": "What style was Providence Chapel, Charlwood made?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "style",
                "containsRefer": false,
                "originStr": "style",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "was Providence Chapel , Charlwood made",
                "containsRefer": false,
                "originStr": "was Providence Chapel , Charlwood made",
                "start": 2,
                "entityID": 0,
                "end": 8,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What style was Providence Chapel, Charlwood made?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT What) (NP (NN style))) (SQ (VBD was) (NP (NP (NNP Providence) (NN Chapel)) (, ,) (NP (NNP Charlwood))) (VP (VBN made))) (. ?)))",
        "id": 563
    },
    {
        "taggedQuestion": "How many PMs did the politician work, whose successor was Kingsley Wood?",
        "entityMap": {},
        "nodeNum": 7,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "how many",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "PMs did the politici #entity1",
                "containsRefer": true,
                "originStr": "PMs did the politici #entity1",
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "successor was Kingsley Wood",
                "containsRefer": false,
                "originStr": "successor was Kingsley Wood",
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "work",
                "containsRefer": false,
                "originStr": "work",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 4,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            },
            {
                "str": "successor was Kingsley Wood",
                "containsRefer": false,
                "originStr": "successor was Kingsley Wood",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 3,
                "nodeID": 6,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "How many PMs did the politician work, whose successor was Kingsley Wood?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": -1,
                "from": 2,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 5
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 6
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (SBAR (WHADJP (WRB How) (JJ many)) (S (NP (NNPS PMs)) (VP (VBD did) (NP (DT the) (NN politician) (NN work))))) (, ,) (WHNP (WP$ whose) (NN successor)) (SQ (VBD was) (NP (NNP Kingsley) (NNP Wood))) (. ?)))",
        "id": 564
    },
    {
        "taggedQuestion": "List some companies founded by Jim Harris.",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "list",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "some companies founded by Jim Harris",
                "containsRefer": false,
                "originStr": "some companies founded by Jim Harris",
                "start": 1,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "List some companies founded by Jim Harris.",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB List) (S (NP (DT some) (NNS companies)) (VP (VBN founded) (PP (IN by) (NP (NNP Jim) (NNP Harris)))))) (. .)))",
        "id": 565
    },
    {
        "taggedQuestion": "Give me the total number of employer of the engineers whose one of the employer is McDonnell Aircraft .",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "give me the total number of",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "employer of #entity1",
                "containsRefer": true,
                "originStr": "employer of #entity1",
                "start": 6,
                "entityID": 0,
                "end": 18,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the engineers",
                "containsRefer": false,
                "originStr": "the engineers",
                "start": 8,
                "entityID": 1,
                "end": 10,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "whose one of the employer is McDonnell Aircraft",
                "containsRefer": false,
                "originStr": "whose one of the employer is McDonnell Aircraft",
                "start": 15,
                "entityID": 1,
                "end": 18,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Give me the total number of employer of the engineers whose one of the employer is McDonnell Aircraft .",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 8,
                "from": 2,
                "end": 18,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5,
                "info": "whose one of the employer"
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Give) (NP (PRP me)) (NP (NP (DT the) (JJ total) (NN number)) (PP (IN of) (NP (NP (NN employer)) (PP (IN of) (NP (NP (DT the) (NNS engineers)) (SBAR (WHNP (WP$ whose) (NP (NP (CD one)) (PP (IN of) (NP (DT the) (NN employer))))) (S (VP (VBZ is) (NP (NNP McDonnell) (NNP Aircraft))))))))))) (. .)))",
        "id": 566
    },
    {
        "taggedQuestion": "How many developers have games where I can hear Lightning McQueen?",
        "entityMap": {},
        "nodeNum": 7,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "How many",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "have #entity1",
                "containsRefer": true,
                "originStr": "have #entity1",
                "start": 3,
                "entityID": 0,
                "end": 11,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "developers",
                "containsRefer": false,
                "originStr": "developers",
                "start": 2,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "games",
                "containsRefer": false,
                "originStr": "games",
                "start": 4,
                "entityID": 1,
                "end": 5,
                "nodeType": 4,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            },
            {
                "str": "I can hear Lightning McQueen",
                "containsRefer": false,
                "originStr": "I can hear Lightning McQueen",
                "start": 6,
                "entityID": 1,
                "end": 11,
                "nodeType": 3,
                "nodeID": 6,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "How many developers have games where I can hear Lightning McQueen?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 4,
                "from": 2,
                "end": 11,
                "to": 4
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 5
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 6
            }
        ],
        "syntaxTreeText": "(ROOT (SBAR (WHADJP (WRB How) (JJ many)) (S (NP (NNS developers)) (VP (VBP have) (NP (NP (NNS games)) (SBAR (WHADVP (WRB where)) (S (NP (PRP I)) (VP (MD can) (VP (VB hear) (NP (NNP Lightning) (NNP McQueen))))))))) (. ?)))",
        "id": 567
    },
    {
        "taggedQuestion": "Which universit's affiliation is with Kalpan, Inc. and has campus at Iowa ?",
        "entityMap": {"<e0>": "Kalpan , Inc."},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "universit",
                "containsRefer": false,
                "originStr": "universit",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is with Kalpan , Inc",
                "containsRefer": false,
                "originStr": "is with Kalpan , Inc",
                "start": 0,
                "entityID": 0,
                "end": 6,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "has campus at Iowa",
                "containsRefer": false,
                "originStr": "has campus at Iowa",
                "start": 7,
                "entityID": 0,
                "end": 10,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which universit's affiliation is with Kalpan, Inc. and has campus at Iowa ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBAR (WHNP (WDT Which)) (S (NP (NP (NN universit) (POS 's)) (NN affiliation)) (VP (VP (VBZ is) (PP (IN with) (NP (NNP Kalpan) (, ,) (NNP Inc.)))) (CC and) (VP (VBZ has) (NP (NP (NN campus)) (PP (IN at) (NP (NNP Iowa))))))) (. ?)))",
        "id": 568
    },
    {
        "taggedQuestion": "How many record labels publish works of Jazz fusion?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "How many",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "publish works of Jazz fusion",
                "containsRefer": false,
                "originStr": "publish works of Jazz fusion",
                "start": 4,
                "entityID": 0,
                "end": 9,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "record labels",
                "containsRefer": false,
                "originStr": "record labels",
                "start": 2,
                "entityID": 0,
                "end": 4,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "How many record labels publish works of Jazz fusion?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHADJP (WRB How) (JJ many)) (SQ (NP (NN record) (NNS labels)) (VP (VB publish) (NP (NP (NNS works)) (PP (IN of) (NP (NN Jazz) (NN fusion)))))) (. ?)))",
        "id": 569
    },
    {
        "taggedQuestion": "What are the regions in which the distributor of Secrets and Lies serves ? ?",
        "entityMap": {},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the regions",
                "containsRefer": false,
                "originStr": "the regions",
                "start": 2,
                "entityID": 0,
                "end": 4,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the distributor of Secrets",
                "containsRefer": false,
                "originStr": "the distributor of Secrets",
                "start": 0,
                "entityID": 0,
                "end": 4,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Lies serves",
                "containsRefer": false,
                "originStr": "Lies serves",
                "start": 5,
                "entityID": 0,
                "end": 6,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What are the regions in which the distributor of Secrets and Lies serves ? ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBP are) (NP (NP (DT the) (NNS regions)) (SBAR (WHPP (IN in) (WHNP (WDT which))) (S (NP (NP (DT the) (NN distributor)) (PP (IN of) (NP (NNS Secrets)))) (VP (VP (CC and) (VP (VBZ Lies))) (VP (VBZ serves))))))) (. ?)))(ROOT (. ?))",
        "id": 570
    },
    {
        "taggedQuestion": "List all the writers of the comics which has Robert Bernstein as one of the writer ?",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "list",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "all the writers of #entity1",
                "containsRefer": true,
                "originStr": "all the writers of #entity1",
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "comics",
                "containsRefer": false,
                "originStr": "comics",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "has Robert Bernstein as one of the writer",
                "containsRefer": false,
                "originStr": "has Robert Bernstein as one of the writer",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "List all the writers of the comics which has Robert Bernstein as one of the writer ?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": -1,
                "from": 2,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (FRAG (NP (NN List)) (NP (NP (NP (PDT all) (DT the) (NNS writers)) (PP (IN of) (NP (DT the) (NNS comics)))) (SBAR (WHNP (WDT which)) (S (VP (VBZ has) (NP (NP (NNP Robert) (NNP Bernstein)) (PP (IN as) (NP (NP (CD one)) (PP (IN of) (NP (DT the) (NN writer)))))))))) (. ?)))",
        "id": 571
    },
    {
        "taggedQuestion": "What are the settlements whose neighboring municipalities is Lancy?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the settlements",
                "containsRefer": false,
                "originStr": "the settlements",
                "start": 2,
                "entityID": 0,
                "end": 4,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "whose neighboring municipalities is Lancy",
                "containsRefer": false,
                "originStr": "whose neighboring municipalities is Lancy",
                "start": 5,
                "entityID": 0,
                "end": 9,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What are the settlements whose neighboring municipalities is Lancy?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3,
                "info": "whose"
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBP are) (NP (NP (DT the) (NNS settlements)) (SBAR (WHNP (WP$ whose)) (S (NP (NN neighboring) (NNS municipalities)) (VP (VBZ is) (NP (NNP Lancy))))))) (. ?)))",
        "id": 572
    },
    {
        "taggedQuestion": "Count the total number  of hometown of the gymnasts whose one of the hometown in Russia .",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "count",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "hometown of #entity1",
                "containsRefer": true,
                "originStr": "hometown of #entity1",
                "start": 5,
                "entityID": 0,
                "end": 16,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the gymnasts",
                "containsRefer": false,
                "originStr": "the gymnasts",
                "start": 7,
                "entityID": 1,
                "end": 9,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "whose one of the hometown in Russia",
                "containsRefer": false,
                "originStr": "whose one of the hometown in Russia",
                "start": 9,
                "entityID": 1,
                "end": 16,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Count the total number  of hometown of the gymnasts whose one of the hometown in Russia .",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 7,
                "from": 2,
                "end": 16,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Count) (NP (NP (DT the) (JJ total) (NN number)) (PP (IN of) (NP (NP (NN hometown)) (PP (IN of) (NP (NP (DT the) (NNS gymnasts)) (SBAR (WHNP (WP$ whose) (NP (NP (CD one)) (PP (IN of) (NP (NP (DT the) (NN hometown)) (PP (IN in) (NP (NNP Russia)))))))))))))) (. .)))",
        "id": 573
    },
    {
        "taggedQuestion": "Which states does the river flow whose left tributary is Toms Creek?",
        "entityMap": {},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "states",
                "containsRefer": false,
                "originStr": "states",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "river flow",
                "containsRefer": false,
                "originStr": "river flow",
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "left tributary is Toms Creek",
                "containsRefer": false,
                "originStr": "left tributary is Toms Creek",
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which states does the river flow whose left tributary is Toms Creek?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NNS states)) (SQ (VP (VBZ does) (NP (NP (DT the) (NN river) (NN flow)) (SBAR (WHNP (WP$ whose) (NML (JJ left) (NN tributary))) (S (VP (VBZ is) (NP (NNP Toms) (NNP Creek)))))))) (. ?)))",
        "id": 574
    },
    {
        "taggedQuestion": "Name the river whose source mountain is Baikal Mountains and mouth location is Arctic Ocean.",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "name",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the river whose source mountain is Baikal Mountains",
                "containsRefer": false,
                "originStr": "the river whose source mountain is Baikal Mountains",
                "start": 0,
                "entityID": 0,
                "end": 8,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "mouth location is Arctic Ocean",
                "containsRefer": false,
                "originStr": "mouth location is Arctic Ocean",
                "start": 9,
                "entityID": 0,
                "end": 13,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Name the river whose source mountain is Baikal Mountains and mouth location is Arctic Ocean.",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (S (S (VP (VB Name) (NP (NP (DT the) (NN river)) (SBAR (WHNP (WP$ whose) (NML (NN source)) (NN mountain)) (S (VP (VBZ is) (NP (JJ Baikal) (NNS Mountains)))))))) (CC and) (S (NP (NN mouth) (NN location)) (VP (VBZ is) (NP (NNP Arctic) (NNP Ocean)))) (. .)))",
        "id": 575
    },
    {
        "taggedQuestion": "Count the PhD students whose thesis are supervised by <e0> winners.",
        "entityMap": {"<e0>": "National Medal of Science"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "count",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the PhD students",
                "containsRefer": false,
                "originStr": "the PhD students",
                "start": 1,
                "entityID": 0,
                "end": 4,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "whose thesis are supervised by National Medal of Science winners",
                "containsRefer": false,
                "originStr": "whose thesis are supervised by National Medal of Science winners",
                "start": 6,
                "entityID": 0,
                "end": 11,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Count the PhD students whose thesis are supervised by National Medal of Science winners.",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3,
                "info": "whose thesis"
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Count) (NP (NP (DT the) (NN PhD) (NNS students)) (SBAR (WHNP (WP$ whose) (NN thesis)) (S (VP (VBP are) (VP (VBN supervised) (PP (IN by) (NP (NN <e0>) (NNS winners))))))))) (. .)))",
        "id": 576
    },
    {
        "taggedQuestion": "Which broadcast area of CFRX is also the place of birth of Anthony Raymond ?",
        "entityMap": {},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "broadcast area of CFRX",
                "containsRefer": false,
                "originStr": "broadcast area of CFRX",
                "start": 1,
                "entityID": 0,
                "end": 5,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the place of birth of Anthony Raymond",
                "containsRefer": false,
                "originStr": "the place of birth of Anthony Raymond",
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "",
                "containsRefer": false,
                "originStr": "",
                "start": 5,
                "entityID": 0,
                "end": 6,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which broadcast area of CFRX is also the place of birth of Anthony Raymond ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NP (NP (NN broadcast) (NN area)) (PP (IN of) (NP (NNP CFRX))))) (SQ (VBZ is) (ADVP (RB also)) (NP (NP (DT the) (NN place)) (PP (IN of) (NP (NP (NN birth)) (PP (IN of) (NP (NNP Anthony) (NNP Raymond))))))) (. ?)))",
        "id": 577
    },
    {
        "taggedQuestion": "Count the cast member of the <e0> whose actress is Joey McIntyre.",
        "entityMap": {"<e0>": "television shows"},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "count",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the cast member of #entity1",
                "containsRefer": true,
                "originStr": "the cast member of #entity1",
                "start": 1,
                "entityID": 0,
                "end": 12,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the television shows",
                "containsRefer": false,
                "originStr": "the television shows",
                "start": 5,
                "entityID": 1,
                "end": 7,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "whose actress is Joey McIntyre",
                "containsRefer": false,
                "originStr": "whose actress is Joey McIntyre",
                "start": 9,
                "entityID": 1,
                "end": 12,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Count the cast member of the television shows whose actress is Joey McIntyre.",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 5,
                "from": 2,
                "end": 12,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5,
                "info": "whose actress"
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Count) (NP (NP (DT the) (NN cast) (NN member)) (PP (IN of) (NP (NP (DT the) (NN <e0>)) (SBAR (WHNP (WP$ whose) (NN actress)) (S (VP (VBZ is) (NP (NNP Joey) (NNP McIntyre))))))))) (. .)))",
        "id": 578
    },
    {
        "taggedQuestion": "List all the awards won by the artist who has won SIGGRAPH ?",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "list",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "all the awards won by #entity1",
                "containsRefer": true,
                "originStr": "all the awards won by #entity1",
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "artist",
                "containsRefer": false,
                "originStr": "artist",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "has won SIGGRAPH",
                "containsRefer": false,
                "originStr": "has won SIGGRAPH",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "List all the awards won by the artist who has won SIGGRAPH ?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": -1,
                "from": 2,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (FRAG (NP (NN List)) (NP (NP (PDT all) (DT the) (NNS awards)) (VP (VBN won) (PP (IN by) (NP (NP (DT the) (NN artist)) (SBAR (WHNP (WP who)) (S (VP (VBZ has) (VP (VBN won) (NP (NNP SIGGRAPH)))))))))) (. ?)))",
        "id": 579
    },
    {
        "taggedQuestion": "Where was david Scherman trained ?",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "Where",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "was david Scherman trained",
                "containsRefer": false,
                "originStr": "was david Scherman trained",
                "start": 1,
                "entityID": 0,
                "end": 5,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Where was david Scherman trained ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHADVP (WRB Where)) (SQ (VBD was) (NP (JJ david) (NNP Scherman)) (VP (VBN trained))) (. ?)))",
        "id": 580
    },
    {
        "taggedQuestion": "Count the battles fought by Raoul Magrin-Vernerey.",
        "entityMap": {"<e0>": "Raoul Magrin - Vernerey"},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "count",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the battles fought by Raoul Magrin-Vernerey",
                "containsRefer": false,
                "originStr": "the battles fought by Raoul Magrin-Vernerey",
                "start": 1,
                "entityID": 0,
                "end": 9,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Count the battles fought by Raoul Magrin-Vernerey.",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Count) (S (NP (DT the) (NNS battles)) (VP (VBN fought) (PP (IN by) (NP (NNP Raoul) (NNP Magrin) (HYPH -) (NNP Vernerey)))))) (. .)))",
        "id": 581
    },
    {
        "taggedQuestion": "Which athlete was the flag bearer for Switzerland in 2004 and <e0> ?",
        "entityMap": {"<e0>": "2008 summer Olympics"},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "athlete",
                "containsRefer": false,
                "originStr": "athlete",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "was the flag bearer for Switzerland in 2004",
                "containsRefer": false,
                "originStr": "was the flag bearer for Switzerland in 2004",
                "start": 2,
                "entityID": 0,
                "end": 10,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "was the flag bearer for Switzerland in 2008 summer Olympics",
                "containsRefer": false,
                "originStr": "was the flag bearer for Switzerland in 2008 summer Olympics",
                "start": 11,
                "entityID": 0,
                "end": 11,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which athlete was the flag bearer for Switzerland in 2004 and 2008 summer Olympics ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NN athlete)) (SQ (VBD was) (NP (NP (DT the) (NN flag) (NN bearer)) (PP (IN for) (NP (NP (NNP Switzerland)) (PP (IN in) (NP (CD 2004) (CC and) (CD <e0>))))))) (. ?)))",
        "id": 582
    },
    {
        "taggedQuestion": "Which nationalist group was responsible for foundation of Young Lords?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "nationalist group",
                "containsRefer": false,
                "originStr": "nationalist group",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "was responsible for foundation of Young Lords",
                "containsRefer": false,
                "originStr": "was responsible for foundation of Young Lords",
                "start": 3,
                "entityID": 0,
                "end": 10,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which nationalist group was responsible for foundation of Young Lords?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (ADJP (JJ nationalist)) (NN group)) (SQ (VP (VBD was) (ADJP (JJ responsible) (PP (IN for) (NP (NP (NN foundation)) (PP (IN of) (NP (NNP Young) (NNPS Lords)))))))) (. ?)))",
        "id": 583
    },
    {
        "taggedQuestion": "What award was won by the father of Angelina Jolie?",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "award",
                "containsRefer": false,
                "originStr": "award",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "was won by #entity1",
                "containsRefer": true,
                "originStr": "was won by #entity1",
                "start": 2,
                "entityID": 0,
                "end": 10,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the father of Angelina Jolie",
                "containsRefer": false,
                "originStr": "the father of Angelina Jolie",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 4,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What award was won by the father of Angelina Jolie?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT What) (NN award)) (SQ (VBD was) (VP (VBN won) (PP (IN by) (NP (NP (DT the) (NN father)) (PP (IN of) (NP (NNP Angelina) (NNP Jolie))))))) (. ?)))",
        "id": 584
    },
    {
        "taggedQuestion": "What are the software whose programming language are Multilingual?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the software",
                "containsRefer": false,
                "originStr": "the software",
                "start": 2,
                "entityID": 0,
                "end": 4,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "whose programming language are Multilingual",
                "containsRefer": false,
                "originStr": "whose programming language are Multilingual",
                "start": 7,
                "entityID": 0,
                "end": 9,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What are the software whose programming language are Multilingual?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3,
                "info": "whose programming language"
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBP are) (NP (NP (DT the) (NN software)) (SBAR (WHNP (WP$ whose) (NML (NN programming)) (NN language)) (S (VP (VBP are) (ADJP (JJ Multilingual))))))) (. ?)))",
        "id": 585
    },
    {
        "taggedQuestion": "Was Marshall Arisman the cover artist in american psycho?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "was",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "JUDGE"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Marshall Arisman",
                "containsRefer": false,
                "originStr": "Marshall Arisman",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the cover artist in american psycho",
                "containsRefer": false,
                "originStr": "the cover artist in american psycho",
                "start": 3,
                "entityID": 0,
                "end": 9,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Was Marshall Arisman the cover artist in american psycho?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SQ (VBD Was) (NP (NNP Marshall) (NNP Arisman)) (NP (NP (DT the) (NN cover) (NN artist)) (PP (IN in) (NP (JJ american) (NN psycho)))) (. ?)))",
        "id": 586
    },
    {
        "taggedQuestion": "Which birthplace of Liliya Lobanova is also the location of the Snake Island ?",
        "entityMap": {},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "birthplace of Liliya Lobanova",
                "containsRefer": false,
                "originStr": "birthplace of Liliya Lobanova",
                "start": 1,
                "entityID": 0,
                "end": 5,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the location of the Snake Island",
                "containsRefer": false,
                "originStr": "the location of the Snake Island",
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "",
                "containsRefer": false,
                "originStr": "",
                "start": 5,
                "entityID": 0,
                "end": 6,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which birthplace of Liliya Lobanova is also the location of the Snake Island ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NP (NN birthplace) (PP (IN of) (NP (NNP Liliya) (NNP Lobanova))))) (SQ (VBZ is) (ADVP (RB also)) (NP (NP (DT the) (NN location)) (PP (IN of) (NP (DT the) (NNP Snake) (NNP Island))))) (. ?)))",
        "id": 587
    },
    {
        "taggedQuestion": "Count all the stateless people",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "count",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "all the stateless people",
                "containsRefer": false,
                "originStr": "all the stateless people",
                "start": 1,
                "entityID": 0,
                "end": 5,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Count all the stateless people",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Count) (NP (PDT all) (DT the) (JJ stateless) (NNS people)))))",
        "id": 588
    },
    {
        "taggedQuestion": "Josef Bhler belongs to which political party?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "political party",
                "containsRefer": false,
                "originStr": "political party",
                "start": 5,
                "entityID": 0,
                "end": 8,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Josef Bhler belongs to",
                "containsRefer": false,
                "originStr": "Josef Bhler belongs to",
                "start": 0,
                "entityID": 0,
                "end": 4,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Josef Bhler belongs to which political party?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (S (NP (NNP Josef) (NNP Bhler)) (VP (VBZ belongs) (PP (IN to) (NP (WDT which) (JJ political) (NN party)))) (. ?)))",
        "id": 589
    },
    {
        "taggedQuestion": "Where did the war take place where one of the commander was Zuo Zongtang?",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "Where",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "did the war take #entity1",
                "containsRefer": true,
                "originStr": "did the war take #entity1",
                "start": 1,
                "entityID": 0,
                "end": 14,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "place",
                "containsRefer": false,
                "originStr": "place",
                "start": 5,
                "entityID": 1,
                "end": 6,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "one of the commander was Zuo Zongtang",
                "containsRefer": false,
                "originStr": "one of the commander was Zuo Zongtang",
                "start": 7,
                "entityID": 1,
                "end": 14,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Where did the war take place where one of the commander was Zuo Zongtang?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 5,
                "from": 2,
                "end": 14,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHADVP (WRB Where)) (SQ (VBD did) (NP (DT the) (NN war)) (VP (VB take) (NP (NN place)) (SBAR (WHADVP (WRB where)) (S (NP (NP (CD one)) (PP (IN of) (NP (DT the) (NN commander)))) (VP (VBD was) (NP (NNP Zuo) (NNP Zongtang))))))) (. ?)))",
        "id": 590
    },
    {
        "taggedQuestion": "Which place is the company which is known for Barbara bestor located ?",
        "entityMap": {},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "place",
                "containsRefer": false,
                "originStr": "place",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the company",
                "containsRefer": false,
                "originStr": "the company",
                "start": 3,
                "entityID": 0,
                "end": 5,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is known for Barbara bestor located",
                "containsRefer": false,
                "originStr": "is known for Barbara bestor located",
                "start": 6,
                "entityID": 0,
                "end": 12,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which place is the company which is known for Barbara bestor located ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NN place)) (SQ (VBZ is) (NP (NP (DT the) (NN company)) (SBAR (WHNP (WDT which)) (S (VP (VBZ is) (VP (VBN known) (PP (IN for) (NP (NP (NNP Barbara) (NNP bestor)) (VP (VBN located)))))))))) (. ?)))",
        "id": 591
    },
    {
        "taggedQuestion": "What novels are belong to the genre of Utopian and dystopian fiction?",
        "entityMap": {"<e0>": "Utopian dystopian fiction"},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "novels",
                "containsRefer": false,
                "originStr": "novels",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are belong to the genre of Utopian",
                "containsRefer": false,
                "originStr": "are belong to the genre of Utopian",
                "start": 2,
                "entityID": 0,
                "end": 9,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are belong to the genre of dystopian fiction",
                "containsRefer": false,
                "originStr": "are belong to the genre of dystopian fiction",
                "start": 10,
                "entityID": 0,
                "end": 11,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What novels are belong to the genre of Utopian and dystopian fiction?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT What) (NNS novels)) (SQ (VP (VP (VBP are)) (VP (VBP belong) (PP (IN to) (NP (NP (DT the) (NN genre)) (PP (IN of) (NP (ADJP (JJ Utopian) (CC and) (JJ dystopian)) (NN fiction)))))))) (. ?)))",
        "id": 592
    },
    {
        "taggedQuestion": "What are the movies written by Nick Castle?",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are the movies written by Nick Castle",
                "containsRefer": false,
                "originStr": "are the movies written by Nick Castle",
                "start": 1,
                "entityID": 0,
                "end": 8,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What are the movies written by Nick Castle?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBP are) (NP (DT the) (NNS movies)) (VP (VBN written) (PP (IN by) (NP (NNP Nick) (NNP Castle))))) (. ?)))",
        "id": 593
    },
    {
        "taggedQuestion": "Which river are there things belonging to <e0>?",
        "entityMap": {"<e0>": "zambezi river authority"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "river",
                "containsRefer": false,
                "originStr": "river",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are there things belonging to zambezi river authority",
                "containsRefer": false,
                "originStr": "are there things belonging to zambezi river authority",
                "start": 2,
                "entityID": 0,
                "end": 8,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which river are there things belonging to zambezi river authority?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NN river)) (SQ (VBP are) (S (NP (EX there)) (NP (NP (NNS things)) (VP (VBG belonging) (PP (IN to) (NP (ADD <e0>))))))) (. ?)))",
        "id": 594
    },
    {
        "taggedQuestion": "Is Egyptian Arabic belong to the <e0>?",
        "entityMap": {"<e0>": "Central Semitic Languages family"},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "is",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "JUDGE"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Egyptian",
                "containsRefer": false,
                "originStr": "Egyptian",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Arabic",
                "containsRefer": false,
                "originStr": "Arabic",
                "start": 2,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "belong to the Central Semitic Languages family",
                "containsRefer": false,
                "originStr": "belong to the Central Semitic Languages family",
                "start": 3,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Is Egyptian Arabic belong to the Central Semitic Languages family?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SQ (VBZ Is) (NP (JJ Egyptian)) (NP (NP (NNP Arabic)) (SBAR (S (VP (VBP belong) (PP (IN to) (NP (DT the) (NN <e0>))))))) (. ?)))",
        "id": 595
    },
    {
        "taggedQuestion": "Who is the artist of Sings Kristofferson and also performed <e0> atleast once?",
        "entityMap": {"<e0>": "Milk Cow Blues"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "who",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the artist of Sings Kristofferson",
                "containsRefer": false,
                "originStr": "is the artist of Sings Kristofferson",
                "start": 1,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "performed Milk Cow Blues atleast once",
                "containsRefer": false,
                "originStr": "performed Milk Cow Blues atleast once",
                "start": 8,
                "entityID": 0,
                "end": 12,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Who is the artist of Sings Kristofferson and also performed Milk Cow Blues atleast once?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP Who)) (SQ (VP (VP (VBZ is) (NP (NP (DT the) (NN artist)) (PP (IN of) (NP (NNP Sings) (NNP Kristofferson))))) (CC and) (ADVP (RB also)) (VP (VBD performed) (NP (NN <e0>)) (ADVP (RB atleast) (RB once))))) (. ?)))",
        "id": 596
    },
    {
        "taggedQuestion": "Who has fought in wars under <e0>?",
        "entityMap": {"<e0>": "commander Arthur St Clair"},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "who",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "has fought in wars under commander Arthur St Clair",
                "containsRefer": false,
                "originStr": "has fought in wars under commander Arthur St Clair",
                "start": 1,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Who has fought in wars under commander Arthur St Clair?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP Who)) (SQ (VP (VBZ has) (VP (VBN fought) (PP (IN in) (NP (NNS wars))) (PP (IN under) (NP (NN <e0>)))))) (. ?)))",
        "id": 597
    },
    {
        "taggedQuestion": "Which Paramount TV show was produced by <e0> ?",
        "entityMap": {"<e0>": "Glen and Les Charles"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Paramount TV show",
                "containsRefer": false,
                "originStr": "Paramount TV show",
                "start": 1,
                "entityID": 0,
                "end": 4,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "was produced by Glen and Les Charles",
                "containsRefer": false,
                "originStr": "was produced by Glen and Les Charles",
                "start": 4,
                "entityID": 0,
                "end": 8,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which Paramount TV show was produced by Glen and Les Charles ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NNP Paramount) (NN TV) (NN show)) (SQ (VBD was) (VP (VBN produced) (PP (IN by) (NP (NN <e0>))))) (. ?)))",
        "id": 598
    },
    {
        "taggedQuestion": "Name some basketball players who  have played for chicago bulls.",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "name",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "some basketball players",
                "containsRefer": false,
                "originStr": "some basketball players",
                "start": 1,
                "entityID": 0,
                "end": 4,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "have played for chicago bulls",
                "containsRefer": false,
                "originStr": "have played for chicago bulls",
                "start": 5,
                "entityID": 0,
                "end": 10,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Name some basketball players who  have played for chicago bulls.",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Name) (NP (NP (DT some) (NN basketball) (NNS players)) (SBAR (WHNP (WP who)) (S (VP (VBP have) (VP (VBN played) (PP (IN for) (NP (NN chicago) (NNS bulls))))))))) (. .)))",
        "id": 599
    },
    {
        "taggedQuestion": "Which owner of the national Herald india is the leader of Kumta ?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "owner of the national Herald india",
                "containsRefer": false,
                "originStr": "owner of the national Herald india",
                "start": 1,
                "entityID": 0,
                "end": 7,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the leader of Kumta",
                "containsRefer": false,
                "originStr": "is the leader of Kumta",
                "start": 7,
                "entityID": 0,
                "end": 12,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which owner of the national Herald india is the leader of Kumta ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NP (NN owner) (PP (IN of) (NP (DT the) (JJ national) (NNP Herald) (NNP india))))) (SQ (VBZ is) (NP (NP (DT the) (NN leader)) (PP (IN of) (NP (NNP Kumta))))) (. ?)))",
        "id": 600
    },
    {
        "taggedQuestion": "Was Francisco Pizarro of the monarch of Charles 5, of the roman empire?",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "was",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "JUDGE"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Francisco",
                "containsRefer": false,
                "originStr": "Francisco",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Pizarro of #entity1",
                "containsRefer": true,
                "originStr": "Pizarro of #entity1",
                "start": 2,
                "entityID": 0,
                "end": 14,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the monarch of Charles 5 , of the roman empire",
                "containsRefer": false,
                "originStr": "the monarch of Charles 5 , of the roman empire",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 4,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Was Francisco Pizarro of the monarch of Charles 5, of the roman empire?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (SQ (VBD Was) (NP (NNP Francisco)) (NP (NP (NNP Pizarro)) (PP (IN of) (NP (NP (DT the) (NN monarch)) (PP (IN of) (NP (NNP Charles) (CD 5))) (, ,) (PP (IN of) (NP (DT the) (JJ roman) (NN empire)))))) (. ?)))",
        "id": 601
    },
    {
        "taggedQuestion": "What is the largest city of Pulau Ubin ?",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the largest city of Pulau Ubin",
                "containsRefer": false,
                "originStr": "is the largest city of Pulau Ubin",
                "start": 1,
                "entityID": 0,
                "end": 8,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is the largest city of Pulau Ubin ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (NP (DT the) (JJS largest) (NN city)) (PP (IN of) (NP (NNP Pulau) (NNP Ubin))))) (. ?)))",
        "id": 602
    },
    {
        "taggedQuestion": "What is the origin of the musical artist of A <e0> ?",
        "entityMap": {"<e0>": "Todo Romantic Style"},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the origin of #entity1",
                "containsRefer": true,
                "originStr": "is the origin of #entity1",
                "start": 1,
                "entityID": 0,
                "end": 11,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the musical artist of A Todo Romantic Style",
                "containsRefer": false,
                "originStr": "the musical artist of A Todo Romantic Style",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is the origin of the musical artist of A Todo Romantic Style ?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": -1,
                "from": 2,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (NP (DT the) (NN origin)) (PP (IN of) (NP (NP (DT the) (JJ musical) (NN artist)) (PP (IN of) (NP (DT A) (NN <e0>))))))) (. ?)))",
        "id": 603
    },
    {
        "taggedQuestion": "Horses sired by Karinga Bay have participated in which races?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "races",
                "containsRefer": false,
                "originStr": "races",
                "start": 9,
                "entityID": 0,
                "end": 11,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Horses sired by Karinga Bay have participated in",
                "containsRefer": false,
                "originStr": "Horses sired by Karinga Bay have participated in",
                "start": 0,
                "entityID": 0,
                "end": 8,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Horses sired by Karinga Bay have participated in which races?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (S (NP (NP (NNS Horses)) (VP (VBN sired) (PP (IN by) (NP (NNP Karinga) (NNP Bay))))) (VP (VBP have) (VP (VBN participated) (PP (IN in) (NP (WDT which) (NNS races))))) (. ?)))",
        "id": 604
    },
    {
        "taggedQuestion": "What is the alma mater of the scientists  known for  String theory?",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the alma mater of the scientists known for String theory",
                "containsRefer": false,
                "originStr": "is the alma mater of the scientists known for String theory",
                "start": 1,
                "entityID": 0,
                "end": 12,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is the alma mater of the scientists  known for  String theory?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (NP (DT the) (NN alma) (NN mater)) (PP (IN of) (NP (DT the) (NNS scientists)))) (VP (VBN known) (PP (IN for) (NP (NN String) (NN theory))))) (. ?)))",
        "id": 605
    },
    {
        "taggedQuestion": "How many apes are there?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "how many",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "apes",
                "containsRefer": false,
                "originStr": "apes",
                "start": 2,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are there",
                "containsRefer": false,
                "originStr": "are there",
                "start": 3,
                "entityID": 0,
                "end": 5,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "How many apes are there?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WHADJP (WRB How) (JJ many)) (NNS apes)) (SQ (VBP are) (NP (EX there))) (. ?)))",
        "id": 606
    },
    {
        "taggedQuestion": "What is a common nickname given to both <e0> and the wheaton college in massachusetts?",
        "entityMap": {"<e0>": "Lyons Township high school"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is a common nickname given to Lyons Township high school",
                "containsRefer": false,
                "originStr": "is a common nickname given to Lyons Township high school",
                "start": 0,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the wheaton college in massachusetts",
                "containsRefer": false,
                "originStr": "the wheaton college in massachusetts",
                "start": 8,
                "entityID": 0,
                "end": 12,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is a common nickname given to both Lyons Township high school and the wheaton college in massachusetts?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (DT a) (JJ common) (NN nickname)) (VP (VBN given) (PP (IN to) (NP (NP (DT both) (NN <e0>)) (CC and) (NP (DT the) (NN wheaton) (NN college)))) (PP (IN in) (NP (NNS massachusetts))))) (. ?)))",
        "id": 607
    },
    {
        "taggedQuestion": "Where do beauty queens with brown hair reside?",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "Where",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "do beauty queens with brown hair reside",
                "containsRefer": false,
                "originStr": "do beauty queens with brown hair reside",
                "start": 1,
                "entityID": 0,
                "end": 8,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Where do beauty queens with brown hair reside?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHADVP (WRB Where)) (SQ (VBP do) (NP (NP (NN beauty) (NNS queens)) (PP (IN with) (NP (NP (JJ brown) (NN hair)) (SBAR (S (VP (VBP reside)))))))) (. ?)))",
        "id": 608
    },
    {
        "taggedQuestion": "List the <e0> one of whose distributor's divisions is <e1>.",
        "entityMap": {
            "<e1>": "Warner Bros. Animation",
            "<e0>": "television shows"
        },
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "list",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "distributor is #entity1",
                "containsRefer": true,
                "originStr": "distributor is #entity1",
                "start": 1,
                "entityID": 0,
                "end": 11,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "divisions is Warner Bros. Animation",
                "containsRefer": false,
                "originStr": "divisions is Warner Bros. Animation",
                "start": 8,
                "entityID": 1,
                "end": 11,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the television shows one of",
                "containsRefer": false,
                "originStr": "the television shows one of",
                "start": 1,
                "entityID": 0,
                "end": 5,
                "nodeType": 4,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "List the television shows one of whose distributor's divisions is Warner Bros. Animation.",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 5
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 8,
                "from": 2,
                "end": 11,
                "to": 3
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB List) (NP (NP (DT the) (NN <e0>)) (NP-TMP (CD one)) (PP (IN of) (SBAR (WHNP (WP$ whose)) (S (NP (NP (NN distributor) (POS 's)) (NNS divisions)) (VP (VBZ is) (NP (ADD <e1>)))))))) (. .)))",
        "id": 609
    },
    {
        "taggedQuestion": "Name the <e0> directed by Simon Fuller and judged by Jennifier Lopez .",
        "entityMap": {"<e0>": "television show"},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "name",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the television show",
                "containsRefer": false,
                "originStr": "the television show",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "directed by Simon Fuller",
                "containsRefer": false,
                "originStr": "directed by Simon Fuller",
                "start": 3,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "judged by Jennifier Lopez",
                "containsRefer": false,
                "originStr": "judged by Jennifier Lopez",
                "start": 8,
                "entityID": 0,
                "end": 12,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Name the television show directed by Simon Fuller and judged by Jennifier Lopez .",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Name) (NP (NP (DT the) (NN <e0>)) (VP (VP (VBN directed) (PP (IN by) (NP (NNP Simon) (NNP Fuller)))) (CC and) (VP (VBN judged) (PP (IN by) (NP (NNP Jennifier) (NNP Lopez))))))) (. .)))",
        "id": 610
    },
    {
        "taggedQuestion": "Name the appointer of William Clark .",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "name",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the appointer of William Clark",
                "containsRefer": false,
                "originStr": "the appointer of William Clark",
                "start": 1,
                "entityID": 0,
                "end": 6,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Name the appointer of William Clark .",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Name) (NP (NP (DT the) (NN appointer)) (PP (IN of) (NP (NNP William) (NNP Clark))))) (. .)))",
        "id": 611
    },
    {
        "taggedQuestion": "Which movies have momoki kochi acted?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "movies",
                "containsRefer": false,
                "originStr": "movies",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "have momoki kochi acted",
                "containsRefer": false,
                "originStr": "have momoki kochi acted",
                "start": 2,
                "entityID": 0,
                "end": 6,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which movies have momoki kochi acted?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NP (NNS movies))) (SQ (VBP have) (NP (NN momoki) (NNS kochi)) (VP (VBN acted))) (. ?)))",
        "id": 612
    },
    {
        "taggedQuestion": "What is the base currency of the Benelux and is also used as money in Kerguelen Islands?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the base currency of the Benelux",
                "containsRefer": false,
                "originStr": "is the base currency of the Benelux",
                "start": 1,
                "entityID": 0,
                "end": 8,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is used as money in Kerguelen Islands",
                "containsRefer": false,
                "originStr": "is used as money in Kerguelen Islands",
                "start": 9,
                "entityID": 0,
                "end": 16,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is the base currency of the Benelux and is also used as money in Kerguelen Islands?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VP (VP (VBZ is) (NP (NP (DT the) (NN base) (NN currency)) (PP (IN of) (NP (DT the) (NNP Benelux))))) (CC and) (VP (VBZ is) (ADVP (RB also)) (VP (VBN used) (PP (IN as) (NP (NN money))) (PP (IN in) (NP (NNP Kerguelen) (NNPS Islands))))))) (. ?)))",
        "id": 613
    },
    {
        "taggedQuestion": "List the mammals whose taxonomy is Diprotodontia and phylum is Chordate?",
        "entityMap": {},
        "nodeNum": 7,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "list",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "#entity1 is Chordate",
                "containsRefer": true,
                "originStr": "#entity1 is Chordate",
                "start": 0,
                "entityID": 0,
                "end": 11,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the mammals",
                "containsRefer": false,
                "originStr": "the mammals",
                "start": 0,
                "entityID": 1,
                "end": 2,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "whose taxonomy is Diprotodontia",
                "containsRefer": false,
                "originStr": "whose taxonomy is Diprotodontia",
                "start": 0,
                "entityID": 1,
                "end": 4,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            },
            {
                "str": "whose taxonomy is phylum",
                "containsRefer": false,
                "originStr": "whose taxonomy is phylum",
                "start": 5,
                "entityID": 1,
                "end": 5,
                "nodeType": 4,
                "nodeID": 6,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "List the mammals whose taxonomy is Diprotodontia and phylum is Chordate?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 0,
                "from": 2,
                "end": 8,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5,
                "info": "whose taxonomy"
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 6
            }
        ],
        "syntaxTreeText": "(ROOT (S (S (VP (VB List) (NP (NP (DT the) (NNS mammals)) (SBAR (WHNP (WP$ whose) (NML (NN taxonomy))) (S (VP (VBZ is) (NP (NP (NNP Diprotodontia)) (CC and) (NP (NN phylum))))))))) (VP (VBZ is) (NP (NN Chordate))) (. ?)))",
        "id": 614
    },
    {
        "taggedQuestion": "Count the key people of the Clinton Foundation.",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "count",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the key people of the Clinton Foundation",
                "containsRefer": false,
                "originStr": "the key people of the Clinton Foundation",
                "start": 1,
                "entityID": 0,
                "end": 8,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Count the key people of the Clinton Foundation.",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Count) (NP (NP (DT the) (JJ key) (NNS people)) (PP (IN of) (NP (DT the) (NNP Clinton) (NNP Foundation))))) (. .)))",
        "id": 615
    },
    {
        "taggedQuestion": "Name the company founded in New Mexico and provides Outlook.com as services .",
        "entityMap": {},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "name",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the company",
                "containsRefer": false,
                "originStr": "the company",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "founded in New Mexico",
                "containsRefer": false,
                "originStr": "founded in New Mexico",
                "start": 3,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "provides Outlook.com as services",
                "containsRefer": false,
                "originStr": "provides Outlook.com as services",
                "start": 8,
                "entityID": 0,
                "end": 12,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Name the company founded in New Mexico and provides Outlook.com as services .",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VP (VB Name) (NP (NP (DT the) (NN company)) (VP (VBN founded) (PP (IN in) (NP (NNP New) (NNP Mexico)))))) (CC and) (VP (VBZ provides) (NP (NP (ADD Outlook.com)) (PP (IN as) (NP (NNS services)))))) (. .)))",
        "id": 616
    },
    {
        "taggedQuestion": "Which tv show was preceded by The spirit of Christmas and voice to the character was given by Mona Marshall ?",
        "entityMap": {},
        "nodeNum": 7,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "tv show",
                "containsRefer": false,
                "originStr": "tv show",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "was preceded by The spirit of Christmas and voice to #entity1",
                "containsRefer": true,
                "originStr": "was preceded by The spirit of Christmas and voice to #entity1",
                "start": 3,
                "entityID": 0,
                "end": 20,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the character",
                "containsRefer": false,
                "originStr": "the character",
                "start": 13,
                "entityID": 1,
                "end": 15,
                "nodeType": 4,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            },
            {
                "str": "was given by Mona Marshall",
                "containsRefer": false,
                "originStr": "was given by Mona Marshall",
                "start": 15,
                "entityID": 1,
                "end": 20,
                "nodeType": 3,
                "nodeID": 6,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which tv show was preceded by The spirit of Christmas and voice to the character was given by Mona Marshall ?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 13,
                "from": 3,
                "end": 20,
                "to": 4
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 5
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 6
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NML (NN tv)) (NN show)) (SQ (VBD was) (VP (VBN preceded) (PP (IN by) (NP (NP (DT The) (NN spirit)) (PP (IN of) (NP (NP (NNP Christmas)) (CC and) (NP (NN voice)))))) (PP (IN to) (NP (NP (DT the) (NN character)) (SBAR (S (VP (VBD was) (VP (VBN given) (PP (IN by) (NP (NNP Mona) (NNP Marshall))))))))))) (. ?)))",
        "id": 617
    },
    {
        "taggedQuestion": "Which common jurisdiction do Trinity School, Brentwood and <e0> fall?",
        "entityMap": {"<e0>": "Buckhurst Hill County High School"},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "common jurisdiction",
                "containsRefer": false,
                "originStr": "common jurisdiction",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "do fall Trinity School , Brentwood",
                "containsRefer": false,
                "originStr": "do fall Trinity School , Brentwood",
                "start": 3,
                "entityID": 0,
                "end": 8,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "do fall Buckhurst Hill County High School fall",
                "containsRefer": false,
                "originStr": "do fall Buckhurst Hill County High School fall",
                "start": 9,
                "entityID": 0,
                "end": 10,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which common jurisdiction do Trinity School, Brentwood and Buckhurst Hill County High School fall?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (JJ common) (NN jurisdiction)) (SQ (VBP do) (NP (NP (NNP Trinity) (NNP School)) (, ,) (NP (NNP Brentwood)) (CC and) (NP (ADD <e0>))) (VP (VB fall))) (. ?)))",
        "id": 618
    },
    {
        "taggedQuestion": "Music of how many things has been given by Akira Ifukube?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "how many",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "things has been given by Akira Ifukube",
                "containsRefer": false,
                "originStr": "things has been given by Akira Ifukube",
                "start": 0,
                "entityID": 0,
                "end": 8,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Music of",
                "containsRefer": false,
                "originStr": "Music of",
                "start": 0,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Music of how many things has been given by Akira Ifukube?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (NP (NP (NN Music)) (PP (IN of) (SBAR (WHADJP (WRB how) (JJ many)) (S (NP (NNS things)) (VP (VBZ has) (VP (VBN been) (VP (VBN given) (PP (IN by) (NP (NNP Akira) (NNP Ifukube))))))))) (. ?)))",
        "id": 619
    },
    {
        "taggedQuestion": "What made jo garcia and merritt cabal both famous?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "made jo garcia famous",
                "containsRefer": false,
                "originStr": "made jo garcia famous",
                "start": 1,
                "entityID": 0,
                "end": 9,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "merritt cabal famous",
                "containsRefer": false,
                "originStr": "merritt cabal famous",
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What made jo garcia and merritt cabal both famous?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VP (VBD made) (S (NP (NP (NNP jo) (NNP garcia)) (CC and) (NP (NN merritt) (NN cabal) (CC both))) (ADJP (JJ famous))))) (. ?)))",
        "id": 620
    },
    {
        "taggedQuestion": "What was the career of some people who have committed suicide?",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "was the career of #entity1",
                "containsRefer": true,
                "originStr": "was the career of #entity1",
                "start": 1,
                "entityID": 0,
                "end": 11,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "some people",
                "containsRefer": false,
                "originStr": "some people",
                "start": 5,
                "entityID": 1,
                "end": 7,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "have committed suicide",
                "containsRefer": false,
                "originStr": "have committed suicide",
                "start": 8,
                "entityID": 1,
                "end": 11,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What was the career of some people who have committed suicide?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 5,
                "from": 2,
                "end": 11,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD was) (NP (NP (DT the) (NN career)) (PP (IN of) (NP (NP (DT some) (NNS people)) (SBAR (WHNP (WP who)) (S (VP (VBP have) (VP (VBN committed) (NP (NN suicide)))))))))) (. ?)))",
        "id": 621
    },
    {
        "taggedQuestion": "How many places are the tombs of people who died in Connecticut Colony?",
        "entityMap": {},
        "nodeNum": 7,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "How many",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are the tombs of #entity1",
                "containsRefer": true,
                "originStr": "are the tombs of #entity1",
                "start": 3,
                "entityID": 0,
                "end": 13,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "places",
                "containsRefer": false,
                "originStr": "places",
                "start": 2,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "people",
                "containsRefer": false,
                "originStr": "people",
                "start": 7,
                "entityID": 1,
                "end": 8,
                "nodeType": 4,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            },
            {
                "str": "died in Connecticut Colony",
                "containsRefer": false,
                "originStr": "died in Connecticut Colony",
                "start": 9,
                "entityID": 1,
                "end": 13,
                "nodeType": 3,
                "nodeID": 6,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "How many places are the tombs of people who died in Connecticut Colony?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 7,
                "from": 2,
                "end": 13,
                "to": 4
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 5
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 6
            }
        ],
        "syntaxTreeText": "(ROOT (SBAR (WHADJP (WRB How) (JJ many)) (S (NP (NNS places)) (VP (VBP are) (NP (NP (DT the) (NNS tombs)) (PP (IN of) (NP (NP (NNS people)) (SBAR (WHNP (WP who)) (S (VP (VBD died) (PP (IN in) (NP (NNP Connecticut) (NN Colony))))))))))) (. ?)))",
        "id": 622
    },
    {
        "taggedQuestion": "List the producer of the <e0> distributed by FremantleMedia.",
        "entityMap": {"<e0>": "television shows"},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "list",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the producer of #entity1",
                "containsRefer": true,
                "originStr": "the producer of #entity1",
                "start": 1,
                "entityID": 0,
                "end": 9,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the television shows",
                "containsRefer": false,
                "originStr": "the television shows",
                "start": 4,
                "entityID": 1,
                "end": 6,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "distributed by FremantleMedia",
                "containsRefer": false,
                "originStr": "distributed by FremantleMedia",
                "start": 6,
                "entityID": 1,
                "end": 9,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "List the producer of the television shows distributed by FremantleMedia.",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 4,
                "from": 2,
                "end": 9,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB List) (NP (NP (DT the) (NN producer)) (PP (IN of) (NP (NP (DT the) (NN <e0>)) (VP (VBN distributed) (PP (IN by) (NP (NNP FremantleMedia)))))))) (. .)))",
        "id": 623
    },
    {
        "taggedQuestion": "Name the awards won by Elie Wiesel .",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "name",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the awards won by Elie Wiesel",
                "containsRefer": false,
                "originStr": "the awards won by Elie Wiesel",
                "start": 1,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Name the awards won by Elie Wiesel .",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Name) (S (NP (DT the) (NNS awards)) (VP (VBN won) (PP (IN by) (NP (NNP Elie) (NNP Wiesel)))))) (. .)))",
        "id": 624
    },
    {
        "taggedQuestion": "Who are the producers of Marie Sisters?",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "who",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are the producers of Marie Sisters",
                "containsRefer": false,
                "originStr": "are the producers of Marie Sisters",
                "start": 1,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Who are the producers of Marie Sisters?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP Who)) (SQ (VBP are) (NP (NP (DT the) (NNS producers)) (PP (IN of) (NP (NNP Marie) (NNPS Sisters))))) (. ?)))",
        "id": 625
    },
    {
        "taggedQuestion": "Who won the silver medal when the bronze was won by Yang Yilin?",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "who",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "won #entity1",
                "containsRefer": true,
                "originStr": "won #entity1",
                "start": 1,
                "entityID": 0,
                "end": 13,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the silver medal",
                "containsRefer": false,
                "originStr": "the silver medal",
                "start": 2,
                "entityID": 1,
                "end": 5,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "when the bronze was won by Yang Yilin",
                "containsRefer": false,
                "originStr": "when the bronze was won by Yang Yilin",
                "start": 6,
                "entityID": 1,
                "end": 13,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Who won the silver medal when the bronze was won by Yang Yilin?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 2,
                "from": 2,
                "end": 13,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP Who)) (SQ (VP (VBD won) (NP (DT the) (NN silver) (NN medal)) (SBAR (WHADVP (WRB when)) (S (NP (DT the) (NN bronze)) (VP (VBD was) (VP (VBN won) (PP (IN by) (NP (NNP Yang) (NNP Yilin))))))))) (. ?)))",
        "id": 626
    },
    {
        "taggedQuestion": "List the successor of successor of Hayden, Stone & Co.",
        "entityMap": {"<e0>": "Hayden , Stone & Co."},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "list",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the successor of successor of Hayden , Stone",
                "containsRefer": false,
                "originStr": "the successor of successor of Hayden , Stone",
                "start": 1,
                "entityID": 0,
                "end": 9,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the successor of successor of Co",
                "containsRefer": false,
                "originStr": "the successor of successor of Co",
                "start": 10,
                "entityID": 0,
                "end": 10,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "List the successor of successor of Hayden, Stone & Co.",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB List) (NP (NP (DT the) (NN successor)) (PP (IN of) (NP (NP (NN successor)) (PP (IN of) (NP (NNP Hayden) (, ,) (NNP Stone) (CC &) (NNP Co.))))))) (. .)))",
        "id": 627
    },
    {
        "taggedQuestion": "Count the battles fought by the military person involved in Morocco .",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "count",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the battles fought by #entity1",
                "containsRefer": true,
                "originStr": "the battles fought by #entity1",
                "start": 1,
                "entityID": 0,
                "end": 11,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the military person",
                "containsRefer": false,
                "originStr": "the military person",
                "start": 5,
                "entityID": 1,
                "end": 8,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "involved in Morocco",
                "containsRefer": false,
                "originStr": "involved in Morocco",
                "start": 8,
                "entityID": 1,
                "end": 11,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Count the battles fought by the military person involved in Morocco .",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 5,
                "from": 2,
                "end": 11,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Count) (S (NP (DT the) (NNS battles)) (VP (VBN fought) (PP (IN by) (NP (NP (DT the) (JJ military) (NN person)) (VP (VBN involved) (PP (IN in) (NP (NNP Morocco))))))))) (. .)))",
        "id": 628
    },
    {
        "taggedQuestion": "What is the origin of Xynisteri?",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the origin of Xynisteri",
                "containsRefer": false,
                "originStr": "is the origin of Xynisteri",
                "start": 1,
                "entityID": 0,
                "end": 6,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is the origin of Xynisteri?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (NP (DT the) (NN origin)) (PP (IN of) (NP (NNP Xynisteri))))) (. ?)))",
        "id": 629
    },
    {
        "taggedQuestion": "How many important works have been done by Russel Davies?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "how many",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "important works",
                "containsRefer": false,
                "originStr": "important works",
                "start": 2,
                "entityID": 0,
                "end": 4,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "have been done by Russel Davies",
                "containsRefer": false,
                "originStr": "have been done by Russel Davies",
                "start": 4,
                "entityID": 0,
                "end": 10,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "How many important works have been done by Russel Davies?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WHADJP (WRB How) (JJ many)) (JJ important) (NNS works)) (SQ (VP (VBP have) (VP (VBN been) (VP (VBN done) (PP (IN by) (NP (NNP Russel) (NNP Davies))))))) (. ?)))",
        "id": 630
    },
    {
        "taggedQuestion": "Who are currently playing for Barcelona FC?",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "who",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are currently playing for Barcelona FC",
                "containsRefer": false,
                "originStr": "are currently playing for Barcelona FC",
                "start": 1,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Who are currently playing for Barcelona FC?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP Who)) (SQ (VP (VBP are) (ADVP (RB currently)) (VP (VBG playing) (PP (IN for) (NP (NNP Barcelona) (NNP FC)))))) (. ?)))",
        "id": 631
    },
    {
        "taggedQuestion": "Is Andrew Lincoln the narrator of <e0>?",
        "entityMap": {"<e0>": "Million Dollar Traders"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "is",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "JUDGE"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Andrew Lincoln",
                "containsRefer": false,
                "originStr": "Andrew Lincoln",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the narrator of Million Dollar Traders",
                "containsRefer": false,
                "originStr": "the narrator of Million Dollar Traders",
                "start": 3,
                "entityID": 0,
                "end": 7,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Is Andrew Lincoln the narrator of Million Dollar Traders?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SQ (VBZ Is) (NP (NNP Andrew) (NNP Lincoln)) (NP (NP (DT the) (NN narrator)) (PP (IN of) (NP (NN <e0>)))) (. ?)))",
        "id": 632
    },
    {
        "taggedQuestion": "Who is the owner of Saumarez ?",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "who",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the owner of Saumarez",
                "containsRefer": false,
                "originStr": "is the owner of Saumarez",
                "start": 1,
                "entityID": 0,
                "end": 6,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Who is the owner of Saumarez ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP Who)) (SQ (VBZ is) (NP (NP (DT the) (NN owner)) (PP (IN of) (NP (NNP Saumarez))))) (. ?)))",
        "id": 633
    },
    {
        "taggedQuestion": "What is telecasted on the network where Deborah Turness holds important position?",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is telecasted on #entity1",
                "containsRefer": true,
                "originStr": "is telecasted on #entity1",
                "start": 1,
                "entityID": 0,
                "end": 12,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the network",
                "containsRefer": false,
                "originStr": "the network",
                "start": 4,
                "entityID": 1,
                "end": 6,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Deborah Turness holds important position",
                "containsRefer": false,
                "originStr": "Deborah Turness holds important position",
                "start": 7,
                "entityID": 1,
                "end": 12,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is telecasted on the network where Deborah Turness holds important position?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 4,
                "from": 2,
                "end": 12,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (VP (VBN telecasted) (PP (IN on) (NP (NP (DT the) (NN network)) (SBAR (WHADVP (WRB where)) (S (NP (NNP Deborah) (NNP Turness)) (VP (VBZ holds) (NP (JJ important) (NN position))))))))) (. ?)))",
        "id": 634
    },
    {
        "taggedQuestion": "Who is the fictional character whose relative is Vestigial Peter?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "who",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the fictional character",
                "containsRefer": false,
                "originStr": "the fictional character",
                "start": 2,
                "entityID": 0,
                "end": 5,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "whose relative is Vestigial Peter",
                "containsRefer": false,
                "originStr": "whose relative is Vestigial Peter",
                "start": 6,
                "entityID": 0,
                "end": 10,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Who is the fictional character whose relative is Vestigial Peter?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3,
                "info": "whose"
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP Who)) (SQ (VBZ is) (NP (NP (DT the) (JJ fictional) (NN character)) (SBAR (WHNP (WP$ whose)) (S (ADVP (JJ relative)) (VP (VBZ is) (NP (JJ Vestigial) (NNP Peter))))))) (. ?)))",
        "id": 635
    },
    {
        "taggedQuestion": "How many home stadium are there, of the soccer club seasons whose chairman is Merritt Paulson?",
        "entityMap": {},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "how many",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "home stadium",
                "containsRefer": false,
                "originStr": "home stadium",
                "start": 2,
                "entityID": 0,
                "end": 4,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "there , of the soccer club seasons",
                "containsRefer": false,
                "originStr": "there , of the soccer club seasons",
                "start": 5,
                "entityID": 0,
                "end": 12,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "whose chairman is Merritt Paulson",
                "containsRefer": false,
                "originStr": "whose chairman is Merritt Paulson",
                "start": 14,
                "entityID": 0,
                "end": 17,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "How many home stadium are there, of the soccer club seasons whose chairman is Merritt Paulson?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4,
                "info": "whose chairman"
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WHADJP (WRB How) (JJ many)) (NN home) (NN stadium)) (SQ (VBP are) (NP (NP (NP (RB there)) (, ,) (PP (IN of) (NP (DT the) (NML (NN soccer) (NN club)) (NNS seasons)))) (SBAR (WHNP (WP$ whose) (NML (NN chairman))) (S (VP (VBZ is) (NP (NNP Merritt) (NNP Paulson))))))) (. ?)))",
        "id": 636
    },
    {
        "taggedQuestion": "Name the alma mater of <e0> .",
        "entityMap": {"<e0>": "Ernest de Saisset"},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "name",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the alma mater of Ernest de Saisset",
                "containsRefer": false,
                "originStr": "the alma mater of Ernest de Saisset",
                "start": 1,
                "entityID": 0,
                "end": 6,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Name the alma mater of Ernest de Saisset .",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Name) (NP (NP (DT the) (NN alma) (NN mater)) (PP (IN of) (NP (ADD <e0>))))) (. .)))",
        "id": 637
    },
    {
        "taggedQuestion": "What magazine companies are of <e0>?",
        "entityMap": {"<e0>": "form Limited liability company"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are of form Limited liability company",
                "containsRefer": false,
                "originStr": "are of form Limited liability company",
                "start": 3,
                "entityID": 0,
                "end": 6,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "magazine companies",
                "containsRefer": false,
                "originStr": "magazine companies",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What magazine companies are of form Limited liability company?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBAR (WHNP (WDT What)) (S (NP (NN magazine) (NNS companies)) (VP (VBP are) (PP (IN of) (NP (NN <e0>))))) (. ?)))",
        "id": 638
    },
    {
        "taggedQuestion": "List the driver of <e0> is also the Pole driver of Canadian Grand Proix ?",
        "entityMap": {"<e0>": "SA MArino Grand Prix"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "list",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the Pole driver of Canadian Grand Proix",
                "containsRefer": false,
                "originStr": "the Pole driver of Canadian Grand Proix",
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the driver of SA MArino Grand Prix",
                "containsRefer": false,
                "originStr": "the driver of SA MArino Grand Prix",
                "start": 0,
                "entityID": 0,
                "end": 4,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "List the driver of SA MArino Grand Prix is also the Pole driver of Canadian Grand Proix ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (S (S (VP (VB List) (NP (NP (DT the) (NN driver)) (PP (IN of) (NP (NN <e0>)))))) (VP (VBZ is) (ADVP (RB also)) (NP (NP (DT the) (NNP Pole) (NN driver)) (PP (IN of) (NP (JJ Canadian) (NNP Grand) (NNP Proix))))) (. ?)))",
        "id": 639
    },
    {
        "taggedQuestion": "Where does John A Danaher III work?",
        "entityMap": {"<e0>": "John Danaher III work"},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "Where",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "does John A Danaher III work",
                "containsRefer": false,
                "originStr": "does John A Danaher III work",
                "start": 1,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Where does John A Danaher III work?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHADVP (WRB Where)) (SQ (VBZ does) (NP (NNP John) (NNP A) (NNP Danaher) (NNP III) (NN work))) (. ?)))",
        "id": 640
    },
    {
        "taggedQuestion": "Name few movies directed by Tim Burton .",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "name",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "few movies",
                "containsRefer": false,
                "originStr": "few movies",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "directed by Tim Burton",
                "containsRefer": false,
                "originStr": "directed by Tim Burton",
                "start": 3,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Name few movies directed by Tim Burton .",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Name) (NP (NP (JJ few) (NNS movies)) (VP (VBN directed) (PP (IN by) (NP (NNP Tim) (NNP Burton)))))) (. .)))",
        "id": 641
    },
    {
        "taggedQuestion": "Where was Live in Detroit, MI recorded ?",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "Where",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "was Live in Detroit , MI recorded",
                "containsRefer": false,
                "originStr": "was Live in Detroit , MI recorded",
                "start": 1,
                "entityID": 0,
                "end": 8,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Where was Live in Detroit, MI recorded ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHADVP (WRB Where)) (SQ (VBD was) (NP (NP (JJ Live)) (PP (IN in) (NP (NNP Detroit) (, ,) (NNP MI)))) (VP (VBN recorded))) (. ?)))",
        "id": 642
    },
    {
        "taggedQuestion": "Name all the bands which have members of QDT in them.",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "name",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "all the bands",
                "containsRefer": false,
                "originStr": "all the bands",
                "start": 1,
                "entityID": 0,
                "end": 4,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "have members of QDT in them",
                "containsRefer": false,
                "originStr": "have members of QDT in them",
                "start": 5,
                "entityID": 0,
                "end": 11,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Name all the bands which have members of QDT in them.",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Name) (NP (NP (PDT all) (DT the) (NNS bands)) (SBAR (WHNP (WDT which)) (S (VP (VBP have) (NP (NP (NNS members)) (PP (IN of) (NP (NP (NN QDT)) (PP (IN in) (NP (PRP them))))))))))) (. .)))",
        "id": 643
    },
    {
        "taggedQuestion": "Which footballers did their high school in west Sacramento california? ?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "footballers",
                "containsRefer": false,
                "originStr": "footballers",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "did their high school in west Sacramento california",
                "containsRefer": false,
                "originStr": "did their high school in west Sacramento california",
                "start": 2,
                "entityID": 0,
                "end": 10,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which footballers did their high school in west Sacramento california? ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NP (NNS footballers))) (SQ (VP (VBD did) (NP (PRP$ their) (JJ high) (NN school)) (PP (IN in) (NP (NN west) (NNP Sacramento) (NNP california))))) (. ?)))(ROOT (. ?))",
        "id": 644
    },
    {
        "taggedQuestion": "List the names of the soccer club seasons whose division is <e0>",
        "entityMap": {"<e0>": "2012 Campeonato Brasileiro Srie A."},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "list",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the names of the soccer club seasons",
                "containsRefer": false,
                "originStr": "the names of the soccer club seasons",
                "start": 1,
                "entityID": 0,
                "end": 8,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "whose division is 2012 Campeonato Brasileiro Srie A",
                "containsRefer": false,
                "originStr": "whose division is 2012 Campeonato Brasileiro Srie A",
                "start": 10,
                "entityID": 0,
                "end": 12,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "List the names of the soccer club seasons whose division is 2012 Campeonato Brasileiro Srie A.",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3,
                "info": "whose division"
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB List) (NP (NP (NP (DT the) (NNS names)) (PP (IN of) (NP (DT the) (NML (NN soccer) (NN club)) (NNS seasons)))) (SBAR (WHNP (WP$ whose) (NML (NN division))) (S (VP (VBZ is) (NP (ADD <e0>)))))))))",
        "id": 645
    },
    {
        "taggedQuestion": "Which successor of <e0> is the <e1> of <e2> ?",
        "entityMap": {
            "<e2>": "Ruben J. Villote",
            "<e1>": "state of origin",
            "<e0>": "Philippine Ports Authority"
        },
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "successor of Philippine Ports Authority",
                "containsRefer": false,
                "originStr": "successor of Philippine Ports Authority",
                "start": 1,
                "entityID": 0,
                "end": 4,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the state of origin of Ruben J. Villote",
                "containsRefer": false,
                "originStr": "is the state of origin of Ruben J. Villote",
                "start": 4,
                "entityID": 0,
                "end": 9,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which successor of Philippine Ports Authority is the state of origin of Ruben J. Villote ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NP (NN successor) (PP (IN of) (NP (NN <e0>))))) (SQ (VBZ is) (NP (NP (DT the) (NN <e1>)) (PP (IN of) (NP (NN <e2>))))) (. ?)))",
        "id": 646
    },
    {
        "taggedQuestion": "What awards have been won by the executive producer of Timmy Time ?",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "have been won by #entity1",
                "containsRefer": true,
                "originStr": "have been won by #entity1",
                "start": 2,
                "entityID": 0,
                "end": 12,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "awards",
                "containsRefer": false,
                "originStr": "awards",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the executive producer of Timmy Time",
                "containsRefer": false,
                "originStr": "the executive producer of Timmy Time",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 4,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What awards have been won by the executive producer of Timmy Time ?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": -1,
                "from": 2,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (SBAR (WHNP (WDT What)) (S (NP (NNS awards)) (VP (VBP have) (VP (VBN been) (VP (VBN won) (PP (IN by) (NP (NP (DT the) (JJ executive) (NN producer)) (PP (IN of) (NP (NNP Timmy) (NNP Time))))))))) (. ?)))",
        "id": 647
    },
    {
        "taggedQuestion": "Which american football team is owned by Mark davis and is located in O.co Colliseum ?",
        "entityMap": {"<e0>": "O.c o Colliseum"},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "american football team",
                "containsRefer": false,
                "originStr": "american football team",
                "start": 1,
                "entityID": 0,
                "end": 4,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "owned by Mark davis",
                "containsRefer": false,
                "originStr": "owned by Mark davis",
                "start": 5,
                "entityID": 0,
                "end": 9,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is located in O.co Colliseum",
                "containsRefer": false,
                "originStr": "is located in O.co Colliseum",
                "start": 10,
                "entityID": 0,
                "end": 15,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which american football team is owned by Mark davis and is located in O.co Colliseum ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (JJ american) (NN football) (NN team)) (SQ (VBZ is) (VP (VP (VBN owned) (PP (IN by) (NP (NNP Mark) (NNP davis)))) (CC and) (VP (VBZ is) (VP (VBN located) (PP (IN in) (NP (NNP O.co) (NNP Colliseum))))))) (. ?)))",
        "id": 648
    },
    {
        "taggedQuestion": "The successor of Ulrich II, Count of East Frisia was born in what place?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "place",
                "containsRefer": false,
                "originStr": "place",
                "start": 14,
                "entityID": 0,
                "end": 16,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "The successor of Ulrich II , Count of East Frisia was born in",
                "containsRefer": false,
                "originStr": "The successor of Ulrich II , Count of East Frisia was born in",
                "start": 0,
                "entityID": 0,
                "end": 13,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "The successor of Ulrich II, Count of East Frisia was born in what place?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (S (NP (NP (DT The) (NN successor)) (PP (IN of) (NP (NP (NNP Ulrich) (NNP II)) (, ,) (NP (NP (NNP Count)) (PP (IN of) (NP (NNP East) (NNP Frisia))))))) (VP (VBD was) (VP (VBN born) (PP (IN in) (X (WP what)) (NP (NN place))))) (. ?)))",
        "id": 649
    },
    {
        "taggedQuestion": "Who is the prime minister of Michael Jeffery who is also the minister of Williuam Deane ?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "who",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the prime minister of Michael Jeffery who",
                "containsRefer": false,
                "originStr": "is the prime minister of Michael Jeffery who",
                "start": 1,
                "entityID": 0,
                "end": 9,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the minister of Williuam Deane",
                "containsRefer": false,
                "originStr": "the minister of Williuam Deane",
                "start": 11,
                "entityID": 0,
                "end": 16,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Who is the prime minister of Michael Jeffery who is also the minister of Williuam Deane ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP Who)) (SQ (VBZ is) (NP (NP (DT the) (JJ prime) (NN minister)) (PP (IN of) (NP (NP (NNP Michael) (NNP Jeffery)) (SBAR (WHNP (WP who)) (S (VP (VBZ is) (ADVP (RB also)) (NP (NP (DT the) (NN minister)) (PP (IN of) (NP (NNP Williuam) (NNP Deane))))))))))) (. ?)))",
        "id": 650
    },
    {
        "taggedQuestion": "Who is the owner of the FC which owns the <e0>?",
        "entityMap": {"<e0>": "Cobham Training Centre"},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "who",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the owner of #entity1",
                "containsRefer": true,
                "originStr": "is the owner of #entity1",
                "start": 1,
                "entityID": 0,
                "end": 11,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the FC",
                "containsRefer": false,
                "originStr": "the FC",
                "start": 5,
                "entityID": 1,
                "end": 7,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "owns the Cobham Training Centre",
                "containsRefer": false,
                "originStr": "owns the Cobham Training Centre",
                "start": 8,
                "entityID": 1,
                "end": 11,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Who is the owner of the FC which owns the Cobham Training Centre?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 5,
                "from": 2,
                "end": 11,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP Who)) (SQ (VBZ is) (NP (NP (DT the) (NN owner)) (PP (IN of) (NP (NP (DT the) (NNP FC)) (SBAR (WHNP (WDT which)) (S (VP (VBZ owns) (NP (DT the) (NN <e0>))))))))) (. ?)))",
        "id": 651
    },
    {
        "taggedQuestion": "Who is considered to be the deciding person when it comes to crustaceans from the Balanidae family?",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "who",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is considered to be the deciding person when it comes to crustaceans from the Balanidae family",
                "containsRefer": false,
                "originStr": "is considered to be the deciding person when it comes to crustaceans from the Balanidae family",
                "start": 1,
                "entityID": 0,
                "end": 17,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Who is considered to be the deciding person when it comes to crustaceans from the Balanidae family?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP Who)) (SQ (VBZ is) (VP (VBN considered) (S (VP (TO to) (VP (VB be) (NP (NP (DT the) (VBG deciding) (NN person)) (SBAR (WHADVP (WRB when)) (S (NP (PRP it)) (VP (VBZ comes) (PP (IN to) (NP (NP (NNS crustaceans)) (PP (IN from) (NP (DT the) (NNP Balanidae) (NN family)))))))))))))) (. ?)))",
        "id": 652
    },
    {
        "taggedQuestion": "What have some US citizens died of?",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "have #entity1",
                "containsRefer": true,
                "originStr": "have #entity1",
                "start": 1,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "some",
                "containsRefer": false,
                "originStr": "some",
                "start": 2,
                "entityID": 1,
                "end": 3,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "US citizens died of",
                "containsRefer": false,
                "originStr": "US citizens died of",
                "start": 3,
                "entityID": 1,
                "end": 7,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What have some US citizens died of?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 2,
                "from": 2,
                "end": 7,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VP (VBP have) (NP (NP (DT some)) (SBAR (S (NP (NNP US) (NNS citizens)) (VP (VBD died) (PP (IN of)))))))) (. ?)))",
        "id": 653
    },
    {
        "taggedQuestion": "What are some apes?",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are some apes",
                "containsRefer": false,
                "originStr": "are some apes",
                "start": 1,
                "entityID": 0,
                "end": 4,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What are some apes?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBP are) (NP (DT some) (NNS apes))) (. ?)))",
        "id": 654
    },
    {
        "taggedQuestion": "Who is buried at the place governed by <e0>?",
        "entityMap": {"<e0>": "National Park Service"},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "who",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is buried at #entity1",
                "containsRefer": true,
                "originStr": "is buried at #entity1",
                "start": 1,
                "entityID": 0,
                "end": 9,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the place",
                "containsRefer": false,
                "originStr": "the place",
                "start": 4,
                "entityID": 1,
                "end": 6,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "governed by National Park Service",
                "containsRefer": false,
                "originStr": "governed by National Park Service",
                "start": 6,
                "entityID": 1,
                "end": 9,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Who is buried at the place governed by National Park Service?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 4,
                "from": 2,
                "end": 9,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP Who)) (SQ (VBZ is) (VP (VBN buried) (PP (IN at) (NP (NP (DT the) (NN place)) (VP (VBN governed) (PP (IN by) (NP (NN <e0>)))))))) (. ?)))",
        "id": 655
    },
    {
        "taggedQuestion": "Name the municipality of <e0> .",
        "entityMap": {"<e0>": "Roberto Clemente Bridge"},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "name",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the municipality of Roberto Clemente Bridge",
                "containsRefer": false,
                "originStr": "the municipality of Roberto Clemente Bridge",
                "start": 1,
                "entityID": 0,
                "end": 5,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Name the municipality of Roberto Clemente Bridge .",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Name) (NP (NP (DT the) (NN municipality)) (PP (IN of) (NP (ADD <e0>))))) (. .)))",
        "id": 656
    },
    {
        "taggedQuestion": "Which past members of the The Conglomerate (American group) also sang <e0>?",
        "entityMap": {"<e0>": "Take Me There (Blackstreet & Ma song)"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "past members of the The Conglomerate (American group)",
                "containsRefer": false,
                "originStr": "past members of the The Conglomerate (American group)",
                "start": 1,
                "entityID": 0,
                "end": 11,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "also sang Take Me There(Blackstreet & Ma song)",
                "containsRefer": false,
                "originStr": "also sang Take Me There(Blackstreet & Ma song)",
                "start": 11,
                "entityID": 0,
                "end": 14,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which past members of the The Conglomerate (American group) also sang Take Me There (Blackstreet & Ma song)?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NP (NP (JJ past) (NNS members)) (PP (IN of) (NP (DT the) (NP (NP (DT The) (NN Conglomerate)) (-LRB- -LRB-) (NP (JJ American) (NN group)) (-RRB- -RRB-)))))) (SQ (VP (ADVP (RB also)) (VBD sang) (NP (ADD <e0>)))) (. ?)))",
        "id": 657
    },
    {
        "taggedQuestion": "List all the notable works of  <e0>?",
        "entityMap": {"<e0>": "Russell T Davies"},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "List all",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the notable works of Russell T Davies",
                "containsRefer": false,
                "originStr": "the notable works of Russell T Davies",
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "List all the notable works of  Russell T Davies?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (NP (NP (NN List)) (NP (NP (PDT all) (DT the) (JJ notable) (NNS works)) (PP (IN of) (NP (NN <e0>)))) (. ?)))",
        "id": 658
    },
    {
        "taggedQuestion": "Which military unit garrison is Arlington County, Virginia and The Pentagon?",
        "entityMap": {},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "military unit garrison",
                "containsRefer": false,
                "originStr": "military unit garrison",
                "start": 1,
                "entityID": 0,
                "end": 4,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is Arlington County , Virginia",
                "containsRefer": false,
                "originStr": "is Arlington County , Virginia",
                "start": 4,
                "entityID": 0,
                "end": 9,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is The Pentagon",
                "containsRefer": false,
                "originStr": "is The Pentagon",
                "start": 10,
                "entityID": 0,
                "end": 11,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which military unit garrison is Arlington County, Virginia and The Pentagon?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NP (NP (JJ military) (NN unit)) (NP (NN garrison)))) (SQ (VBZ is) (NP (NP (NNP Arlington) (NNP County)) (, ,) (NP (NNP Virginia)) (CC and) (NP (DT The) (NNP Pentagon)))) (. ?)))",
        "id": 659
    },
    {
        "taggedQuestion": "Name all the products produced by the producer of <e0> .",
        "entityMap": {"<e0>": "United States dollar"},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "name",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "all the products produced by #entity1",
                "containsRefer": true,
                "originStr": "all the products produced by #entity1",
                "start": 1,
                "entityID": 0,
                "end": 10,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the producer of United States dollar",
                "containsRefer": false,
                "originStr": "the producer of United States dollar",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Name all the products produced by the producer of United States dollar .",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": -1,
                "from": 2,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Name) (S (NP (PDT all) (DT the) (NNS products)) (VP (VBN produced) (PP (IN by) (NP (NP (DT the) (NN producer)) (PP (IN of) (NP (ADD <e0>)))))))) (. .)))",
        "id": 660
    },
    {
        "taggedQuestion": "What is the launch site of Aquarius (rocket) ?",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the launch site of Aquarius(rocket)",
                "containsRefer": false,
                "originStr": "is the launch site of Aquarius(rocket)",
                "start": 1,
                "entityID": 0,
                "end": 10,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is the launch site of Aquarius (rocket) ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (NP (DT the) (NN launch) (NN site)) (PP (IN of) (NP (NP (NNP Aquarius)) (-LRB- -LRB-) (NP (NN rocket)) (-RRB- -RRB-))))) (. ?)))",
        "id": 661
    },
    {
        "taggedQuestion": "What are the players whose former teams are Carolina Panthers and Indianapolis Colts?",
        "entityMap": {},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the players",
                "containsRefer": false,
                "originStr": "the players",
                "start": 2,
                "entityID": 0,
                "end": 4,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "whose former teams are Carolina Panthers",
                "containsRefer": false,
                "originStr": "whose former teams are Carolina Panthers",
                "start": 7,
                "entityID": 0,
                "end": 10,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "whose former teams are Indianapolis Colts",
                "containsRefer": false,
                "originStr": "whose former teams are Indianapolis Colts",
                "start": 11,
                "entityID": 0,
                "end": 12,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What are the players whose former teams are Carolina Panthers and Indianapolis Colts?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3,
                "info": "whose former teams"
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBP are) (NP (NP (DT the) (NNS players)) (SBAR (WHNP (WP$ whose) (JJ former) (NNS teams)) (S (VP (VBP are) (NP (NP (NNP Carolina) (NNPS Panthers)) (CC and) (NP (NNP Indianapolis) (NNPS Colts)))))))) (. ?)))",
        "id": 662
    },
    {
        "taggedQuestion": "Count the mammals whose phylum is Chordate and order (taxonomy) is Diprotodontia.",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "count",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the mammals whose phylum is Chordate",
                "containsRefer": false,
                "originStr": "the mammals whose phylum is Chordate",
                "start": 0,
                "entityID": 0,
                "end": 6,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "order (taxonomy) is Diprotodontia",
                "containsRefer": false,
                "originStr": "order (taxonomy) is Diprotodontia",
                "start": 7,
                "entityID": 0,
                "end": 12,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Count the mammals whose phylum is Chordate and order (taxonomy) is Diprotodontia.",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (S (S (VP (VB Count) (NP (NP (DT the) (NNS mammals)) (SBAR (WHNP (WP$ whose) (NML (NN phylum))) (S (VP (VBZ is) (NP (NN Chordate)))))))) (CC and) (S (NP (NN order) (-LRB- -LRB-) (NN taxonomy) (-RRB- -RRB-)) (VP (VBZ is) (NP (NNP Diprotodontia)))) (. .)))",
        "id": 663
    },
    {
        "taggedQuestion": "Who is the music composer of Kenny Dies ?",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "who",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the music composer of Kenny Dies",
                "containsRefer": false,
                "originStr": "is the music composer of Kenny Dies",
                "start": 1,
                "entityID": 0,
                "end": 8,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Who is the music composer of Kenny Dies ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP Who)) (SQ (VBZ is) (NP (NP (NP (DT the) (NN music) (NN composer)) (PP (IN of) (NP (NNP Kenny)))) (VP (VBZ Dies)))) (. ?)))",
        "id": 664
    },
    {
        "taggedQuestion": "How many cities are around the sea into which the aegean sea flows?",
        "entityMap": {},
        "nodeNum": 7,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "how many",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "cities",
                "containsRefer": false,
                "originStr": "cities",
                "start": 2,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are around #entity1",
                "containsRefer": true,
                "originStr": "are around #entity1",
                "start": 3,
                "entityID": 0,
                "end": 13,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the sea",
                "containsRefer": false,
                "originStr": "the sea",
                "start": 5,
                "entityID": 1,
                "end": 7,
                "nodeType": 4,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the aegean sea flows",
                "containsRefer": false,
                "originStr": "the aegean sea flows",
                "start": 9,
                "entityID": 1,
                "end": 12,
                "nodeType": 3,
                "nodeID": 6,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "How many cities are around the sea into which the aegean sea flows?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 5,
                "from": 3,
                "end": 13,
                "to": 4
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 5
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 6
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WHADJP (WRB How) (JJ many)) (NNS cities)) (SQ (VP (VBP are) (PP (IN around) (NP (NP (DT the) (NN sea)) (SBAR (WHPP (IN into) (WHNP (WDT which))) (S (NP (DT the) (JJ aegean) (NN sea)) (VP (VBZ flows)))))))) (. ?)))",
        "id": 665
    },
    {
        "taggedQuestion": "Where did the office holder  who is predecessor to <e0> died ?",
        "entityMap": {"<e0>": "Marco Aurelio Robles"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "Where",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "office holder",
                "containsRefer": false,
                "originStr": "office holder",
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is predecessor to Marco Aurelio Robles died",
                "containsRefer": false,
                "originStr": "is predecessor to Marco Aurelio Robles died",
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Where did the office holder  who is predecessor to Marco Aurelio Robles died ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHADVP (WRB Where)) (SQ (VP (VBD did) (SBAR (S (NP (NP (DT the) (NN office) (NN holder)) (SBAR (WHNP (WP who)) (S (VP (VBZ is) (NP (NP (NN predecessor)) (TO to) (NP (ADD <e0>))))))) (VP (VBD died)))))) (. ?)))",
        "id": 666
    },
    {
        "taggedQuestion": "Who is associated  with the musical artists from Africa '70 (band) and Tony Allen ?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "who",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the musical artists from Africa '70 (band)",
                "containsRefer": false,
                "originStr": "the musical artists from Africa '70 (band)",
                "start": 1,
                "entityID": 0,
                "end": 13,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is associated with Tony Allen",
                "containsRefer": false,
                "originStr": "is associated with Tony Allen",
                "start": 14,
                "entityID": 0,
                "end": 15,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Who is associated  with the musical artists from Africa '70 (band) and Tony Allen ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP Who)) (SQ (VBZ is) (VP (VBN associated) (PP (IN with) (NP (NP (NP (DT the) (JJ musical) (NNS artists)) (PP (IN from) (NP (NNP Africa) (CD '70))) (PRN (-LRB- -LRB-) (NP (NN band)) (-RRB- -RRB-))) (CC and) (NP (NNP Tony) (NNP Allen)))))) (. ?)))",
        "id": 667
    },
    {
        "taggedQuestion": "Is the Hyundai Lavita assembled in Kulim?",
        "entityMap": {},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "is",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "JUDGE"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the Hyundai",
                "containsRefer": false,
                "originStr": "the Hyundai",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Lavita",
                "containsRefer": false,
                "originStr": "Lavita",
                "start": 3,
                "entityID": 0,
                "end": 4,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "assembled in Kulim",
                "containsRefer": false,
                "originStr": "assembled in Kulim",
                "start": 4,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Is the Hyundai Lavita assembled in Kulim?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SQ (VBZ Is) (NP (DT the) (NNP Hyundai)) (NP (NP (NNP Lavita)) (SBAR (S (VP (VBD assembled) (PP (IN in) (NP (NNP Kulim))))))) (. ?)))",
        "id": 668
    },
    {
        "taggedQuestion": "What is the programme format of WWTR ?",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the programme format of WWTR",
                "containsRefer": false,
                "originStr": "is the programme format of WWTR",
                "start": 1,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is the programme format of WWTR ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (NP (DT the) (NN programme) (NN format)) (PP (IN of) (NP (NNP WWTR))))) (. ?)))",
        "id": 669
    },
    {
        "taggedQuestion": "List the founders of Bream Bay ?",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "list",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the founders of Bream Bay",
                "containsRefer": false,
                "originStr": "the founders of Bream Bay",
                "start": 1,
                "entityID": 0,
                "end": 6,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "List the founders of Bream Bay ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SQ (VP (VB List) (NP (NP (DT the) (NNS founders)) (PP (IN of) (NP (NNP Bream) (NNP Bay))))) (. ?)))",
        "id": 670
    },
    {
        "taggedQuestion": "Is Essex the Ceremonial County of West Tilbury?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "is",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "JUDGE"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Essex",
                "containsRefer": false,
                "originStr": "Essex",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the Ceremonial County of West Tilbury",
                "containsRefer": false,
                "originStr": "the Ceremonial County of West Tilbury",
                "start": 2,
                "entityID": 0,
                "end": 8,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Is Essex the Ceremonial County of West Tilbury?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SQ (VBZ Is) (NP (NNP Essex)) (NP (NP (DT the) (NNP Ceremonial) (NNP County)) (PP (IN of) (NP (NNP West) (NNP Tilbury)))) (. ?)))",
        "id": 671
    },
    {
        "taggedQuestion": "What is the total number of participant in conflict of SFOR?",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what is the number of",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "participant in conflict of SFOR",
                "containsRefer": false,
                "originStr": "participant in conflict of SFOR",
                "start": 0,
                "entityID": 0,
                "end": 5,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is the total number of participant in conflict of SFOR?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (NP (DT the) (JJ total) (NN number)) (PP (IN of) (NP (NP (NN participant)) (PP (IN in) (NP (NP (NN conflict)) (PP (IN of) (NP (NNP SFOR))))))))) (. ?)))",
        "id": 672
    },
    {
        "taggedQuestion": "Name the people whose academic advisor has also mentored the thesis of Alexius Meinong.",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "name",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the people",
                "containsRefer": false,
                "originStr": "the people",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "whose academic advisor has also mentored #entity1",
                "containsRefer": true,
                "originStr": "whose academic advisor has also mentored #entity1",
                "start": 6,
                "entityID": 0,
                "end": 14,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the thesis of Alexius Meinong",
                "containsRefer": false,
                "originStr": "the thesis of Alexius Meinong",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 4,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Name the people whose academic advisor has also mentored the thesis of Alexius Meinong.",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3,
                "info": "whose academic advisor"
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Name) (NP (NP (DT the) (NNS people)) (SBAR (WHNP (WP$ whose) (JJ academic) (NN advisor)) (S (VP (VBZ has) (ADVP (RB also)) (VP (VBD mentored) (NP (NP (DT the) (NN thesis)) (PP (IN of) (NP (NNP Alexius) (NNP Meinong)))))))))) (. .)))",
        "id": 673
    },
    {
        "taggedQuestion": "Where is Denver Broncos located ?",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "Where",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is Denver Broncos located",
                "containsRefer": false,
                "originStr": "is Denver Broncos located",
                "start": 1,
                "entityID": 0,
                "end": 5,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Where is Denver Broncos located ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHADVP (WRB Where)) (SQ (VBZ is) (NP (NNP Denver) (NNPS Broncos)) (VP (VBN located))) (. ?)))",
        "id": 674
    },
    {
        "taggedQuestion": "Which serving railway line of the <e0> is the home port of INS Viraat ?",
        "entityMap": {"<e0>": "Daund Junction railway station"},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the home port of INS Viraat",
                "containsRefer": false,
                "originStr": "is the home port of INS Viraat",
                "start": 7,
                "entityID": 0,
                "end": 14,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which serving railway line of the Daund Junction railway station is the home port of INS Viraat ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WHNP (WDT Which)) (SBAR (S (VP (VBG serving) (NP (NP (NN railway) (NN line)) (PP (IN of) (NP (DT the) (NN <e0>)))))))) (SQ (VBZ is) (NP (NP (DT the) (NN home) (NN port)) (PP (IN of) (NP (NNP INS) (NNP Viraat))))) (. ?)))",
        "id": 675
    },
    {
        "taggedQuestion": "Which river flows through <e0> and also through Troy, New york ?",
        "entityMap": {"<e0>": "Hudson Highlands State park"},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "river",
                "containsRefer": false,
                "originStr": "river",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "through Hudson Highlands State park",
                "containsRefer": false,
                "originStr": "through Hudson Highlands State park",
                "start": 2,
                "entityID": 0,
                "end": 5,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "through Troy , New york",
                "containsRefer": false,
                "originStr": "through Troy , New york",
                "start": 6,
                "entityID": 0,
                "end": 11,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which river flows through Hudson Highlands State park and also through Troy, New york ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NN river)) (SQ (VP (VBZ flows) (PP (PP (IN through) (NP (ADD <e0>))) (CC and) (PP (ADVP (RB also)) (IN through) (NP (NP (NNP Troy)) (, ,) (NP (NNP New) (NNP york))))))) (. ?)))",
        "id": 676
    },
    {
        "taggedQuestion": "What is the university to which Erica Frank went, and where Ivan Toplak was a club manager?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the university",
                "containsRefer": false,
                "originStr": "the university",
                "start": 2,
                "entityID": 0,
                "end": 4,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "to which Erica Frank went",
                "containsRefer": false,
                "originStr": "to which Erica Frank went",
                "start": 4,
                "entityID": 0,
                "end": 9,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is the university to which Erica Frank went, and where Ivan Toplak was a club manager?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (NP (DT the) (NN university)) (SBAR (SBAR (WHPP (TO to) (WHNP (WDT which))) (S (NP (NNP Erica) (NNP Frank)) (VP (VBD went)))) (, ,) (CC and) (SBAR (WHADVP (WRB where)) (S (NP (NNP Ivan) (NNP Toplak)) (VP (VBD was) (NP (DT a) (NN club) (NN manager)))))))) (. ?)))",
        "id": 677
    },
    {
        "taggedQuestion": "How many movies have been directed by Orson Welles ?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "How many",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "have been directed by Orson Welles",
                "containsRefer": false,
                "originStr": "have been directed by Orson Welles",
                "start": 3,
                "entityID": 0,
                "end": 9,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "movies",
                "containsRefer": false,
                "originStr": "movies",
                "start": 2,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "How many movies have been directed by Orson Welles ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBAR (WHADJP (WRB How) (JJ many)) (S (NP (NNS movies)) (VP (VBP have) (VP (VBN been) (VP (VBN directed) (PP (IN by) (NP (NNP Orson) (NNP Welles))))))) (. ?)))",
        "id": 678
    },
    {
        "taggedQuestion": "Which borough is common for Duddeston and <e0> ?",
        "entityMap": {"<e0>": "Bordesley railway station"},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "borough",
                "containsRefer": false,
                "originStr": "borough",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is common for Duddeston",
                "containsRefer": false,
                "originStr": "is common for Duddeston",
                "start": 2,
                "entityID": 0,
                "end": 6,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is common for Bordesley railway station",
                "containsRefer": false,
                "originStr": "is common for Bordesley railway station",
                "start": 7,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which borough is common for Duddeston and Bordesley railway station ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NN borough)) (SQ (VBZ is) (NP (NP (JJ common)) (PP (IN for) (NP (NP (NNP Duddeston)) (CC and) (NP (ADD <e0>)))))) (. ?)))",
        "id": 679
    },
    {
        "taggedQuestion": "Does Mauritius follow a parliamentary republic?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "does",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "JUDGE"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Mauritius",
                "containsRefer": false,
                "originStr": "Mauritius",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "follow a parliamentary republic",
                "containsRefer": false,
                "originStr": "follow a parliamentary republic",
                "start": 2,
                "entityID": 0,
                "end": 6,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Does Mauritius follow a parliamentary republic?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SQ (VBZ Does) (NP (NNP Mauritius)) (VP (VB follow) (NP (DT a) (JJ parliamentary) (NN republic))) (. ?)))",
        "id": 680
    },
    {
        "taggedQuestion": "Who is the performer of the album whose subsequent work is <e0> ?",
        "entityMap": {"<e0>": "Willie Nelson and Family"},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "who",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the performer of #entity1",
                "containsRefer": true,
                "originStr": "is the performer of #entity1",
                "start": 1,
                "entityID": 0,
                "end": 12,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the album",
                "containsRefer": false,
                "originStr": "the album",
                "start": 5,
                "entityID": 1,
                "end": 7,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "whose subsequent work is Willie Nelson and Family",
                "containsRefer": false,
                "originStr": "whose subsequent work is Willie Nelson and Family",
                "start": 10,
                "entityID": 1,
                "end": 12,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Who is the performer of the album whose subsequent work is Willie Nelson and Family ?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 5,
                "from": 2,
                "end": 12,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5,
                "info": "whose subsequent work"
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP Who)) (SQ (VBZ is) (NP (NP (DT the) (NN performer)) (PP (IN of) (NP (NP (DT the) (NN album)) (SBAR (WHNP (WP$ whose) (NML (JJ subsequent) (NN work))) (S (VP (VBZ is) (NP (ADD <e0>))))))))) (. ?)))",
        "id": 681
    },
    {
        "taggedQuestion": "What is the birthplace of Ludovic Boi which is also the residence of Fernando Augustin?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the birthplace of Ludovic Boi which",
                "containsRefer": false,
                "originStr": "is the birthplace of Ludovic Boi which",
                "start": 1,
                "entityID": 0,
                "end": 8,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the residence of Fernando Augustin",
                "containsRefer": false,
                "originStr": "the residence of Fernando Augustin",
                "start": 10,
                "entityID": 0,
                "end": 15,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is the birthplace of Ludovic Boi which is also the residence of Fernando Augustin?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (NP (DT the) (NN birthplace)) (PP (IN of) (NP (NP (NNP Ludovic) (NNP Boi)) (SBAR (WHNP (WDT which)) (S (VP (VBZ is) (ADVP (RB also)) (NP (NP (DT the) (NN residence)) (PP (IN of) (NP (NNP Fernando) (NNP Augustin))))))))))) (. ?)))",
        "id": 682
    },
    {
        "taggedQuestion": "Who is the producer of album, which has the song Eclipse ?",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "who",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the producer of #entity1",
                "containsRefer": true,
                "originStr": "is the producer of #entity1",
                "start": 1,
                "entityID": 0,
                "end": 12,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "has the song Eclipse",
                "containsRefer": false,
                "originStr": "has the song Eclipse",
                "start": 8,
                "entityID": 1,
                "end": 12,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "album",
                "containsRefer": false,
                "originStr": "album",
                "start": 5,
                "entityID": 1,
                "end": 6,
                "nodeType": 4,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Who is the producer of album, which has the song Eclipse ?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 5,
                "from": 2,
                "end": 12,
                "to": 3
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP Who)) (SQ (VBZ is) (NP (NP (DT the) (NN producer)) (PP (IN of) (NP (NP (NN album)) (, ,) (SBAR (WHNP (WDT which)) (S (VP (VBZ has) (NP (DT the) (NN song) (NN Eclipse))))))))) (. ?)))",
        "id": 683
    },
    {
        "taggedQuestion": "Which parties have their members live in the PM House, Colombo?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "Which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "have their members",
                "containsRefer": false,
                "originStr": "have their members",
                "start": 1,
                "entityID": 0,
                "end": 4,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "parties",
                "containsRefer": false,
                "originStr": "parties",
                "start": 0,
                "entityID": 0,
                "end": 1,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which parties have their members live in the PM House, Colombo?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (FRAG (SINV (SBAR (WHNP (WDT Which)) (S (NP (NNS parties)) (VP (VBP have) (NP (PRP$ their) (NNS members))))) (VP (VBP live) (PP (IN in) (NP (DT the) (NN PM)))) (NP (NNP House))) (, ,) (NP (NNP Colombo)) (. ?)))",
        "id": 684
    },
    {
        "taggedQuestion": "Which awards have been given to scientists that graduated from NKU athens?",
        "entityMap": {},
        "nodeNum": 7,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "have been given to #entity1",
                "containsRefer": true,
                "originStr": "have been given to #entity1",
                "start": 2,
                "entityID": 0,
                "end": 12,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "awards",
                "containsRefer": false,
                "originStr": "awards",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "scientists",
                "containsRefer": false,
                "originStr": "scientists",
                "start": 6,
                "entityID": 1,
                "end": 7,
                "nodeType": 4,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            },
            {
                "str": "graduated from NKU athens",
                "containsRefer": false,
                "originStr": "graduated from NKU athens",
                "start": 8,
                "entityID": 1,
                "end": 12,
                "nodeType": 3,
                "nodeID": 6,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which awards have been given to scientists that graduated from NKU athens?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 6,
                "from": 2,
                "end": 12,
                "to": 4
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 5
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 6
            }
        ],
        "syntaxTreeText": "(ROOT (SBAR (WHNP (WDT Which)) (S (NP (NNS awards)) (VP (VBP have) (VP (VBN been) (VP (VBN given) (PP (IN to) (NP (NP (NNS scientists)) (SBAR (WHNP (WDT that)) (S (VP (VBD graduated) (PP (IN from) (NP (NNP NKU) (NNS athens)))))))))))) (. ?)))",
        "id": 685
    },
    {
        "taggedQuestion": "Ricky Gervais is the executive producer of the series having how many fictional characters?",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "how many",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "fictional characters",
                "containsRefer": false,
                "originStr": "fictional characters",
                "start": 11,
                "entityID": 0,
                "end": 15,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Ricky Gervais is #entity1",
                "containsRefer": true,
                "originStr": "Ricky Gervais is #entity1",
                "start": 0,
                "entityID": 0,
                "end": 10,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the executive producer of the series having",
                "containsRefer": false,
                "originStr": "the executive producer of the series having",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 4,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Ricky Gervais is the executive producer of the series having how many fictional characters?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (S (NP (NNP Ricky) (NNP Gervais)) (VP (VBZ is) (NP (NP (DT the) (JJ executive) (NN producer)) (PP (IN of) (NP (NP (DT the) (NN series)) (VP (VBG having) (NP (ADJP (WRB how) (JJ many)) (JJ fictional) (NNS characters))))))) (. ?)))",
        "id": 686
    },
    {
        "taggedQuestion": "Did Jerry Rice study in Oktoc Mississippi?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "did",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "JUDGE"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Did Jerry",
                "containsRefer": false,
                "originStr": "Did Jerry",
                "start": 0,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "in Oktoc Mississippi",
                "containsRefer": false,
                "originStr": "in Oktoc Mississippi",
                "start": 0,
                "entityID": 0,
                "end": 6,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Did Jerry Rice study in Oktoc Mississippi?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": true,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (FRAG (VP (VBD Did) (S (NP (NNP Jerry) (NNP Rice))) (NP (NP (NN study)) (PP (IN in) (NP (NNP Oktoc) (NNP Mississippi))))) (. ?)))",
        "id": 687
    },
    {
        "taggedQuestion": "Cable stayed bridges have been used to cross over how many things?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "how many",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "things",
                "containsRefer": false,
                "originStr": "things",
                "start": 10,
                "entityID": 0,
                "end": 13,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Cable stayed bridges have been used to cross over",
                "containsRefer": false,
                "originStr": "Cable stayed bridges have been used to cross over",
                "start": 0,
                "entityID": 0,
                "end": 9,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Cable stayed bridges have been used to cross over how many things?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (S (NP (NNP Cable)) (VP (VBD stayed) (SBAR (S (NP (NNS bridges)) (VP (VBP have) (VP (VBN been) (VP (VBN used) (S (VP (TO to) (VP (VB cross) (PP (IN over) (WHNP (WHADJP (WRB how) (JJ many)) (NNS things)))))))))))) (. ?)))",
        "id": 688
    },
    {
        "taggedQuestion": "Is <e0> have an islamic government?",
        "entityMap": {"<e0>": "north caucasian emirate"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "is",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "JUDGE"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "north caucasian emirate",
                "containsRefer": false,
                "originStr": "north caucasian emirate",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "have an islamic government",
                "containsRefer": false,
                "originStr": "have an islamic government",
                "start": 2,
                "entityID": 0,
                "end": 6,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Is north caucasian emirate have an islamic government?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SQ (SQ (VBZ Is) (S (NP (ADD <e0>)) (VP (VBP have) (NP (DT an) (JJ islamic) (NN government))))) (. ?)))",
        "id": 689
    },
    {
        "taggedQuestion": "What are the <e0> whose starting music is composed by Ron Grainer?",
        "entityMap": {"<e0>": "television shows"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the television shows",
                "containsRefer": false,
                "originStr": "the television shows",
                "start": 2,
                "entityID": 0,
                "end": 4,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "whose starting music is composed by Ron Grainer",
                "containsRefer": false,
                "originStr": "whose starting music is composed by Ron Grainer",
                "start": 7,
                "entityID": 0,
                "end": 12,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What are the television shows whose starting music is composed by Ron Grainer?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3,
                "info": "whose starting music"
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBP are) (NP (NP (DT the) (NN <e0>)) (SBAR (WHNP (WP$ whose) (NML (S (VP (VBG starting)))) (NN music)) (S (VP (VBZ is) (VP (VBN composed) (PP (IN by) (NP (NNP Ron) (NNP Grainer))))))))) (. ?)))",
        "id": 690
    },
    {
        "taggedQuestion": "Who influenced the author of <e0> ?",
        "entityMap": {"<e0>": "The Shooting of Dan McGrew"},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "who",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "influenced #entity1",
                "containsRefer": true,
                "originStr": "influenced #entity1",
                "start": 1,
                "entityID": 0,
                "end": 6,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the author of The Shooting of Dan McGrew",
                "containsRefer": false,
                "originStr": "the author of The Shooting of Dan McGrew",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Who influenced the author of The Shooting of Dan McGrew ?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": -1,
                "from": 2,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP Who)) (SQ (VP (VBD influenced) (NP (NP (DT the) (NN author)) (PP (IN of) (NP (NN <e0>)))))) (. ?)))",
        "id": 691
    },
    {
        "taggedQuestion": "Raymond Johansen is the mayor of what city?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "city",
                "containsRefer": false,
                "originStr": "city",
                "start": 0,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Raymond Johansen is the mayor of",
                "containsRefer": false,
                "originStr": "Raymond Johansen is the mayor of",
                "start": 0,
                "entityID": 0,
                "end": 6,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Raymond Johansen is the mayor of what city?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SQ (NP (NNP Raymond) (NNP Johansen)) (VBZ is) (NP (DT the) (NN mayor)) (PP (IN of) (WHNP (WP what) (NN city))) (. ?)))",
        "id": 692
    },
    {
        "taggedQuestion": "What region was Gloria Schaffer born in, which also contains Newington?",
        "entityMap": {},
        "nodeNum": 8,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "region",
                "containsRefer": false,
                "originStr": "region",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "was Glori #entity1",
                "containsRefer": true,
                "originStr": "was Glori #entity1",
                "start": 2,
                "entityID": 0,
                "end": 12,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "also contains Newington",
                "containsRefer": false,
                "originStr": "also contains Newington",
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Schaffer born in",
                "containsRefer": false,
                "originStr": "Schaffer born in",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 4,
                "nodeID": 6,
                "questionType": "UNKNOWN"
            },
            {
                "str": "also contains Newington",
                "containsRefer": false,
                "originStr": "also contains Newington",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 3,
                "nodeID": 7,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What region was Gloria Schaffer born in, which also contains Newington?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 5,
                "end": -1,
                "to": 6
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 5,
                "end": -1,
                "to": 7
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT What) (NN region)) (SQ (VBD was) (NP (NNP Gloria) (NNP Schaffer)) (VP (VBN born) (PP (IN in)) (, ,) (SBAR (WHNP (WDT which)) (S (ADVP (RB also)) (VP (VBZ contains) (NP (NNP Newington))))))) (. ?)))",
        "id": 693
    },
    {
        "taggedQuestion": "List some teams for which someone who has played as a defender, now plays?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "list",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "some teams",
                "containsRefer": false,
                "originStr": "some teams",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "someone who has played as a defender , now plays",
                "containsRefer": false,
                "originStr": "someone who has played as a defender , now plays",
                "start": 5,
                "entityID": 0,
                "end": 14,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "List some teams for which someone who has played as a defender, now plays?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SQ (VP (VB List) (NP (NP (DT some) (NNS teams)) (SBAR (WHPP (IN for) (WHNP (WDT which))) (S (NP (NP (NN someone)) (SBAR (WHNP (WP who)) (S (VP (VBZ has) (VP (VBN played) (PP (IN as) (NP (DT a) (NN defender))) (, ,) (ADVP (RB now))))))) (VP (VBZ plays)))))) (. ?)))",
        "id": 694
    },
    {
        "taggedQuestion": "Which rivers start from the Provinces of Zambia?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "start from the Provinces of Zambia",
                "containsRefer": false,
                "originStr": "start from the Provinces of Zambia",
                "start": 2,
                "entityID": 0,
                "end": 8,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "rivers",
                "containsRefer": false,
                "originStr": "rivers",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which rivers start from the Provinces of Zambia?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBAR (WHNP (WDT Which)) (S (NP (NNS rivers)) (VP (VBP start) (PP (IN from) (NP (NP (DT the) (NNS Provinces)) (PP (IN of) (NP (NNP Zambia))))))) (. ?)))",
        "id": 695
    },
    {
        "taggedQuestion": "Who are the scientists known for the Manhattan Project?",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "who",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are the scientists known for the Manhattan Project",
                "containsRefer": false,
                "originStr": "are the scientists known for the Manhattan Project",
                "start": 1,
                "entityID": 0,
                "end": 9,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Who are the scientists known for the Manhattan Project?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP Who)) (SQ (VBP are) (NP (DT the) (NNS scientists)) (VP (VBN known) (PP (IN for) (NP (DT the) (NNP Manhattan) (NNP Project))))) (. ?)))",
        "id": 696
    },
    {
        "taggedQuestion": "What are some dishes from the family of dishes which primarily use flour?",
        "entityMap": {},
        "nodeNum": 8,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are some dishes from #entity1",
                "containsRefer": true,
                "originStr": "are some dishes from #entity1",
                "start": 1,
                "entityID": 0,
                "end": 13,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the family of #entity2",
                "containsRefer": true,
                "originStr": "the family of #entity2",
                "start": 5,
                "entityID": 1,
                "end": 13,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 2,
                "end": -1,
                "nodeType": 2,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            },
            {
                "str": "dishes",
                "containsRefer": false,
                "originStr": "dishes",
                "start": 8,
                "entityID": 2,
                "end": 9,
                "nodeType": 4,
                "nodeID": 6,
                "questionType": "UNKNOWN"
            },
            {
                "str": "primarily use flour",
                "containsRefer": false,
                "originStr": "primarily use flour",
                "start": 10,
                "entityID": 2,
                "end": 13,
                "nodeType": 3,
                "nodeID": 7,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What are some dishes from the family of dishes which primarily use flour?",
        "entityNum": 3,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 5,
                "from": 2,
                "end": 13,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 8,
                "from": 4,
                "end": 13,
                "to": 5
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 5,
                "end": -1,
                "to": 6
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 5,
                "end": -1,
                "to": 7
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBP are) (NP (NP (DT some) (NNS dishes)) (PP (IN from) (NP (NP (DT the) (NN family)) (PP (IN of) (NP (NP (NNS dishes)) (SBAR (WHNP (WDT which)) (S (ADVP (RB primarily)) (VP (VBP use) (NP (NN flour))))))))))) (. ?)))",
        "id": 697
    },
    {
        "taggedQuestion": "Which religion do the people follow, whose constituency is Jadavpur?",
        "entityMap": {},
        "nodeNum": 7,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "religion do #entity1",
                "containsRefer": true,
                "originStr": "religion do #entity1",
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "constituency is Jadavpur",
                "containsRefer": false,
                "originStr": "constituency is Jadavpur",
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "people follow",
                "containsRefer": false,
                "originStr": "people follow",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 4,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            },
            {
                "str": "constituency is Jadavpur",
                "containsRefer": false,
                "originStr": "constituency is Jadavpur",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 3,
                "nodeID": 6,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which religion do the people follow, whose constituency is Jadavpur?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": -1,
                "from": 2,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 5
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 6
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (SBARQ (WHNP (WDT Which) (NN religion)) (SQ (VBP do) (NP (DT the) (NNS people)) (VP (VBP follow)))) (, ,) (SBARQ (WHNP (WP$ whose) (NN constituency)) (SQ (VBZ is) (NP (NNP Jadavpur)))) (. ?)))",
        "id": 698
    },
    {
        "taggedQuestion": "Which region is the rival school of Somerset, Massachusetts located?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "region",
                "containsRefer": false,
                "originStr": "region",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the rival school of Somerset , Massachusetts located",
                "containsRefer": false,
                "originStr": "is the rival school of Somerset , Massachusetts located",
                "start": 2,
                "entityID": 0,
                "end": 11,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which region is the rival school of Somerset, Massachusetts located?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NN region)) (SQ (VBZ is) (NP (NP (DT the) (JJ rival) (NN school)) (PP (IN of) (NP (NNP Somerset) (, ,) (NNP Massachusetts)))) (VP (VBN located))) (. ?)))",
        "id": 699
    },
    {
        "taggedQuestion": "Which key person of Clinton Foundation is also the president of Jim Sasser ?",
        "entityMap": {},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "key person of Clinton Foundation",
                "containsRefer": false,
                "originStr": "key person of Clinton Foundation",
                "start": 1,
                "entityID": 0,
                "end": 6,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the president of Jim Sasser",
                "containsRefer": false,
                "originStr": "the president of Jim Sasser",
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "",
                "containsRefer": false,
                "originStr": "",
                "start": 6,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which key person of Clinton Foundation is also the president of Jim Sasser ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NP (NP (JJ key) (NN person)) (PP (IN of) (NP (NNP Clinton) (NNP Foundation))))) (SQ (VBZ is) (ADVP (RB also)) (NP (NP (DT the) (NN president)) (PP (IN of) (NP (NNP Jim) (NNP Sasser))))) (. ?)))",
        "id": 700
    },
    {
        "taggedQuestion": "Where did the athlete start his career, who did his highschool in <e0>?",
        "entityMap": {"<e0>": "Red Lion Area School District"},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "Where",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "did the athlete start #entity1",
                "containsRefer": true,
                "originStr": "did the athlete start #entity1",
                "start": 1,
                "entityID": 0,
                "end": 14,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "did his highschool in Red Lion Area School District",
                "containsRefer": false,
                "originStr": "did his highschool in Red Lion Area School District",
                "start": 9,
                "entityID": 1,
                "end": 14,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "his career",
                "containsRefer": false,
                "originStr": "his career",
                "start": 5,
                "entityID": 1,
                "end": 7,
                "nodeType": 4,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Where did the athlete start his career, who did his highschool in Red Lion Area School District?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 5,
                "from": 2,
                "end": 14,
                "to": 3
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHADVP (WRB Where)) (SQ (VBD did) (NP (DT the) (NN athlete)) (VP (VB start) (NP (NP (PRP$ his) (NN career)) (, ,) (SBAR (WHNP (WP who)) (S (VP (VBD did) (NP (PRP$ his) (NN highschool)) (PP (IN in) (NP (NN <e0>))))))))) (. ?)))",
        "id": 701
    },
    {
        "taggedQuestion": "Name a person who works in <e0> and has wife named <e1> .",
        "entityMap": {
            "<e1>": "Susan Weber Soros",
            "<e0>": "Open Society Foundation"
        },
        "nodeNum": 8,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "name",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "a person",
                "containsRefer": false,
                "originStr": "a person",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "works in Open Society Foundation",
                "containsRefer": false,
                "originStr": "works in Open Society Foundation",
                "start": 4,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "#entity1 Susan Weber Soros",
                "containsRefer": true,
                "originStr": "#entity1 Susan Weber Soros",
                "start": 8,
                "entityID": 0,
                "end": 12,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            },
            {
                "str": "wife",
                "containsRefer": false,
                "originStr": "wife",
                "start": 9,
                "entityID": 1,
                "end": 10,
                "nodeType": 4,
                "nodeID": 6,
                "questionType": "UNKNOWN"
            },
            {
                "str": "named Susan Weber Soros",
                "containsRefer": false,
                "originStr": "named Susan Weber Soros",
                "start": 10,
                "entityID": 1,
                "end": 12,
                "nodeType": 3,
                "nodeID": 7,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Name a person who works in Open Society Foundation and has wife named Susan Weber Soros .",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 9,
                "from": 4,
                "end": 12,
                "to": 5
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 5,
                "end": -1,
                "to": 6
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 5,
                "end": -1,
                "to": 7
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Name) (NP (NP (DT a) (NN person)) (SBAR (WHNP (WP who)) (S (VP (VP (VBZ works) (PP (IN in) (NP (ADD <e0>)))) (CC and) (VP (VBZ has) (NP (NP (NN wife)) (VP (VBN named) (NP (ADD <e1>)))))))))) (. .)))",
        "id": 702
    },
    {
        "taggedQuestion": "How many things are crossed over by bridges which can carry cars?",
        "entityMap": {},
        "nodeNum": 7,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "how many",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "things",
                "containsRefer": false,
                "originStr": "things",
                "start": 2,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are crossed over by #entity1",
                "containsRefer": true,
                "originStr": "are crossed over by #entity1",
                "start": 3,
                "entityID": 0,
                "end": 12,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "bridges",
                "containsRefer": false,
                "originStr": "bridges",
                "start": 7,
                "entityID": 1,
                "end": 8,
                "nodeType": 4,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            },
            {
                "str": "can carry cars",
                "containsRefer": false,
                "originStr": "can carry cars",
                "start": 9,
                "entityID": 1,
                "end": 12,
                "nodeType": 3,
                "nodeID": 6,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "How many things are crossed over by bridges which can carry cars?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 7,
                "from": 3,
                "end": 12,
                "to": 4
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 5
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 6
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WHADJP (WRB How) (JJ many)) (NNS things)) (SQ (VBP are) (VP (VBN crossed) (PRT (RP over)) (PP (IN by) (NP (NP (NNS bridges)) (SBAR (WHNP (WDT which)) (S (VP (MD can) (VP (VB carry) (NP (NNS cars)))))))))) (. ?)))",
        "id": 703
    },
    {
        "taggedQuestion": "Which fictional character sculpted by Josh Friedmann was portrayed in Terminator 3 ?",
        "entityMap": {},
        "nodeNum": 7,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "fictional character",
                "containsRefer": false,
                "originStr": "fictional character",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "sculpted by #entity1",
                "containsRefer": true,
                "originStr": "sculpted by #entity1",
                "start": 3,
                "entityID": 0,
                "end": 12,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Josh Friedmann",
                "containsRefer": false,
                "originStr": "Josh Friedmann",
                "start": 5,
                "entityID": 1,
                "end": 7,
                "nodeType": 4,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            },
            {
                "str": "was portrayed in Terminator 3",
                "containsRefer": false,
                "originStr": "was portrayed in Terminator 3",
                "start": 7,
                "entityID": 1,
                "end": 12,
                "nodeType": 3,
                "nodeID": 6,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which fictional character sculpted by Josh Friedmann was portrayed in Terminator 3 ?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 5,
                "from": 3,
                "end": 12,
                "to": 4
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 5
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 6
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (JJ fictional) (NN character)) (SQ (VP (VBN sculpted) (PP (IN by) (NP (NP (NNP Josh) (NNP Friedmann)) (SBAR (S (VP (VBD was) (VP (VBN portrayed) (PP (IN in) (NP (NNP Terminator) (CD 3))))))))))) (. ?)))",
        "id": 704
    },
    {
        "taggedQuestion": "Which team won the <e0>?",
        "entityMap": {"<e0>": "American Football League"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "team",
                "containsRefer": false,
                "originStr": "team",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "won the American Football League",
                "containsRefer": false,
                "originStr": "won the American Football League",
                "start": 2,
                "entityID": 0,
                "end": 5,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which team won the American Football League?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NN team)) (SQ (VP (VBD won) (NP (DT the) (NN <e0>)))) (. ?)))",
        "id": 705
    },
    {
        "taggedQuestion": "Which currency can I use both in Kerguelen islands and <e0>?",
        "entityMap": {"<e0>": "French southern and antarctic lands"},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "currency",
                "containsRefer": false,
                "originStr": "currency",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "can I use in Kerguelen islands",
                "containsRefer": false,
                "originStr": "can I use in Kerguelen islands",
                "start": 0,
                "entityID": 0,
                "end": 6,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "can I use in French southern and antarctic lands",
                "containsRefer": false,
                "originStr": "can I use in French southern and antarctic lands",
                "start": 7,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which currency can I use both in Kerguelen islands and French southern and antarctic lands?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NN currency)) (SQ (MD can) (NP (PRP I)) (VP (VB use) (PP (CC both) (IN in) (NP (NP (NNP Kerguelen) (NNS islands)) (CC and) (NP (NN <e0>)))))) (. ?)))",
        "id": 706
    },
    {
        "taggedQuestion": "Who is the founder of the trade union which <e1> of Iron and Steel Workers?",
        "entityMap": {
            "<e1>": "affiliates Amalgamated Association",
            "<e0>": "Iron Steel Workers"
        },
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "who",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the founder of the trade union which affiliates Amalgamated Association of Iron",
                "containsRefer": false,
                "originStr": "is the founder of the trade union which affiliates Amalgamated Association of Iron",
                "start": 1,
                "entityID": 0,
                "end": 12,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the founder of the trade union which affiliates Amalgamated Association of Steel Workers",
                "containsRefer": false,
                "originStr": "is the founder of the trade union which affiliates Amalgamated Association of Steel Workers",
                "start": 13,
                "entityID": 0,
                "end": 14,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Who is the founder of the trade union which affiliates Amalgamated Association of Iron and Steel Workers?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP Who)) (SQ (VBZ is) (NP (NP (DT the) (NN founder)) (PP (IN of) (NP (NP (NP (DT the) (NN trade) (NN union)) (SBAR (WHNP (WDT which)) (FRAG (NP (ADD <e1>))))) (PP (IN of) (NP (NML (NNP Iron) (CC and) (NNP Steel)) (NNPS Workers))))))) (. ?)))",
        "id": 707
    },
    {
        "taggedQuestion": "Which leader of <e0> was the appinter of ohn Drayton ?",
        "entityMap": {"<e0>": "United States House of Representatives"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "leader of United States House of Representatives",
                "containsRefer": false,
                "originStr": "leader of United States House of Representatives",
                "start": 1,
                "entityID": 0,
                "end": 4,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "was the appinter of ohn Drayton",
                "containsRefer": false,
                "originStr": "was the appinter of ohn Drayton",
                "start": 4,
                "entityID": 0,
                "end": 10,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which leader of United States House of Representatives was the appinter of ohn Drayton ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WHNP (WDT Which) (NN leader)) (PP (IN of) (NP (ADD <e0>)))) (SQ (VBD was) (NP (NP (DT the) (NN appinter)) (PP (IN of) (NP (NNP ohn) (NNP Drayton))))) (. ?)))",
        "id": 708
    },
    {
        "taggedQuestion": "Is fox belong to the phylum of Chordate?",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "is",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "JUDGE"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "fox",
                "containsRefer": false,
                "originStr": "fox",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "belong to #entity1",
                "containsRefer": true,
                "originStr": "belong to #entity1",
                "start": 2,
                "entityID": 0,
                "end": 8,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the phylum of Chordate",
                "containsRefer": false,
                "originStr": "the phylum of Chordate",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 4,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Is fox belong to the phylum of Chordate?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (SQ (SQ (VBZ Is) (S (NP (NN fox)) (VP (VB belong) (PP (IN to) (NP (NP (DT the) (NN phylum)) (PP (IN of) (NP (NN Chordate)))))))) (. ?)))",
        "id": 709
    },
    {
        "taggedQuestion": "Which researchers received fellowship from Royal Society?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "researchers",
                "containsRefer": false,
                "originStr": "researchers",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "received fellowship from Royal Society",
                "containsRefer": false,
                "originStr": "received fellowship from Royal Society",
                "start": 2,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which researchers received fellowship from Royal Society?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NNS researchers)) (SQ (VP (VBD received) (NP (NN fellowship)) (PP (IN from) (NP (NNP Royal) (NNP Society))))) (. ?)))",
        "id": 710
    },
    {
        "taggedQuestion": "Which president of United States had vice president as John Adams?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "president of United States",
                "containsRefer": false,
                "originStr": "president of United States",
                "start": 1,
                "entityID": 0,
                "end": 5,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "had vice president as John Adams",
                "containsRefer": false,
                "originStr": "had vice president as John Adams",
                "start": 5,
                "entityID": 0,
                "end": 11,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which president of United States had vice president as John Adams?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WHNP (WDT Which) (NN president)) (PP (IN of) (NP (NNP United) (NNP States)))) (SQ (VP (VBD had) (NP (NP (NN vice) (NN president)) (PP (IN as) (NP (NNP John) (NNP Adams)))))) (. ?)))",
        "id": 711
    },
    {
        "taggedQuestion": "Where was <e0> buried ?",
        "entityMap": {"<e0>": "James H. Fields"},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "Where",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "was James H. Fields buried",
                "containsRefer": false,
                "originStr": "was James H. Fields buried",
                "start": 1,
                "entityID": 0,
                "end": 4,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Where was James H. Fields buried ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHADVP (WRB Where)) (SQ (VBD was) (NP (NP (ADD <e0>)) (VP (VBN buried)))) (. ?)))",
        "id": 712
    },
    {
        "taggedQuestion": "Is Henry Knox a commander of <e0>?",
        "entityMap": {"<e0>": "Continental Artillery Regiment"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "is",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "JUDGE"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Henry Knox",
                "containsRefer": false,
                "originStr": "Henry Knox",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "a commander of Continental Artillery Regiment",
                "containsRefer": false,
                "originStr": "a commander of Continental Artillery Regiment",
                "start": 3,
                "entityID": 0,
                "end": 7,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Is Henry Knox a commander of Continental Artillery Regiment?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SQ (VBZ Is) (NP (NNP Henry) (NNP Knox)) (NP (NP (DT a) (NN commander)) (PP (IN of) (NP (NN <e0>)))) (. ?)))",
        "id": 713
    },
    {
        "taggedQuestion": "What is the commander of <e0> ?",
        "entityMap": {"<e0>": "Battle of Brownstown"},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the commander of Battle of Brownstown",
                "containsRefer": false,
                "originStr": "is the commander of Battle of Brownstown",
                "start": 1,
                "entityID": 0,
                "end": 6,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is the commander of Battle of Brownstown ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (NP (DT the) (NN commander)) (PP (IN of) (NP (NN <e0>))))) (. ?)))",
        "id": 714
    },
    {
        "taggedQuestion": "Is Baker<e0> in the coffee industry?",
        "entityMap": {"<e0>": "'s Dozen Donuts"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "is",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "JUDGE"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Baker",
                "containsRefer": false,
                "originStr": "Baker",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "'s Dozen Donuts in the coffee industry",
                "containsRefer": false,
                "originStr": "'s Dozen Donuts in the coffee industry",
                "start": 2,
                "entityID": 0,
                "end": 7,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Is Baker's Dozen Donuts in the coffee industry?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SQ (VBZ Is) (NP (NNP Baker)) (NP (NP (ADD <e0>)) (PP (IN in) (NP (DT the) (NN coffee) (NN industry)))) (. ?)))",
        "id": 715
    },
    {
        "taggedQuestion": "What is Jon Speelman famous for?",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is Jon Speelman famous for",
                "containsRefer": false,
                "originStr": "is Jon Speelman famous for",
                "start": 1,
                "entityID": 0,
                "end": 6,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is Jon Speelman famous for?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (NNP Jon) (NNP Speelman)) (ADJP (JJ famous) (PP (IN for)))) (. ?)))",
        "id": 716
    },
    {
        "taggedQuestion": "Who is the fictional character whose family member is Padme Amidala?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "who",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the fictional character",
                "containsRefer": false,
                "originStr": "the fictional character",
                "start": 2,
                "entityID": 0,
                "end": 5,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "whose family member is Padme Amidala",
                "containsRefer": false,
                "originStr": "whose family member is Padme Amidala",
                "start": 8,
                "entityID": 0,
                "end": 11,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Who is the fictional character whose family member is Padme Amidala?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3,
                "info": "whose family member"
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP Who)) (SQ (VBZ is) (NP (NP (DT the) (JJ fictional) (NN character)) (SBAR (WHNP (WP$ whose) (NN family) (NN member)) (S (VP (VBZ is) (NP (NNP Padme) (NNP Amidala))))))) (. ?)))",
        "id": 717
    },
    {
        "taggedQuestion": "What company is the one which wrote the <e0> and PlayN?",
        "entityMap": {"<e0>": "google web toolkit"},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "company",
                "containsRefer": false,
                "originStr": "company",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the one",
                "containsRefer": false,
                "originStr": "the one",
                "start": 3,
                "entityID": 0,
                "end": 5,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "wrote the google web toolkit",
                "containsRefer": false,
                "originStr": "wrote the google web toolkit",
                "start": 6,
                "entityID": 0,
                "end": 9,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "wrote PlayN",
                "containsRefer": false,
                "originStr": "wrote PlayN",
                "start": 10,
                "entityID": 0,
                "end": 10,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What company is the one which wrote the google web toolkit and PlayN?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT What) (NN company)) (SQ (VBZ is) (NP (NP (DT the) (CD one)) (SBAR (WHNP (WDT which)) (S (VP (VBD wrote) (NP (DT the) (NN <e0>) (CC and) (NN PlayN))))))) (. ?)))",
        "id": 718
    },
    {
        "taggedQuestion": "How many different songwriters have had their songs recorded in London?",
        "entityMap": {},
        "nodeNum": 7,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "How many",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "have had #entity1",
                "containsRefer": true,
                "originStr": "have had #entity1",
                "start": 4,
                "entityID": 0,
                "end": 11,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "different songwriters",
                "containsRefer": false,
                "originStr": "different songwriters",
                "start": 2,
                "entityID": 0,
                "end": 4,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "their songs",
                "containsRefer": false,
                "originStr": "their songs",
                "start": 6,
                "entityID": 1,
                "end": 8,
                "nodeType": 4,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            },
            {
                "str": "recorded in London",
                "containsRefer": false,
                "originStr": "recorded in London",
                "start": 8,
                "entityID": 1,
                "end": 11,
                "nodeType": 3,
                "nodeID": 6,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "How many different songwriters have had their songs recorded in London?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 6,
                "from": 2,
                "end": 11,
                "to": 4
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 5
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 6
            }
        ],
        "syntaxTreeText": "(ROOT (SBAR (WHADJP (WRB How) (JJ many)) (S (NP (JJ different) (NNS songwriters)) (VP (VBP have) (VP (VBN had) (NP (NP (PRP$ their) (NNS songs)) (VP (VBN recorded) (PP (IN in) (NP (NNP London)))))))) (. ?)))",
        "id": 719
    },
    {
        "taggedQuestion": "Which are the  automobile platform whose one of the automobile platform is Dodge ?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "automobile platform",
                "containsRefer": false,
                "originStr": "automobile platform",
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "one of the automobile platform is Dodge",
                "containsRefer": false,
                "originStr": "one of the automobile platform is Dodge",
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which are the  automobile platform whose one of the automobile platform is Dodge ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (SBAR (WHNP (WDT Which)) (S (VP (VBP are) (NP (DT the) (NN automobile) (NN platform))))) (WHNP (WHNP (WP$ whose) (NN one)) (PP (IN of) (NP (DT the) (NN automobile) (NN platform)))) (SQ (VBZ is) (NP (NNP Dodge))) (. ?)))",
        "id": 720
    },
    {
        "taggedQuestion": "What is the total number of other combatant of the military conflicts whose combatant is Choctaw?",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what is the number of",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "other combatant of #entity1",
                "containsRefer": true,
                "originStr": "other combatant of #entity1",
                "start": 0,
                "entityID": 0,
                "end": 10,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the military conflicts",
                "containsRefer": false,
                "originStr": "the military conflicts",
                "start": 3,
                "entityID": 1,
                "end": 6,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "whose combatant is Choctaw",
                "containsRefer": false,
                "originStr": "whose combatant is Choctaw",
                "start": 8,
                "entityID": 1,
                "end": 10,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is the total number of other combatant of the military conflicts whose combatant is Choctaw?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 3,
                "from": 2,
                "end": 10,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5,
                "info": "whose combatant"
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (NP (DT the) (JJ total) (NN number)) (PP (IN of) (NP (NP (JJ other) (NN combatant)) (PP (IN of) (NP (NP (DT the) (JJ military) (NNS conflicts)) (SBAR (WHNP (WP$ whose) (NML (NN combatant))) (S (VP (VBZ is) (NP (NNP Choctaw))))))))))) (. ?)))",
        "id": 721
    },
    {
        "taggedQuestion": "List some pupils of <e0> winning scientists?",
        "entityMap": {"<e0>": "National Science Medal"},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "list",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "some pupils of National Science Medal winning scientists",
                "containsRefer": false,
                "originStr": "some pupils of National Science Medal winning scientists",
                "start": 1,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "List some pupils of National Science Medal winning scientists?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB List) (S (NP (NP (DT some) (NNS pupils)) (PP (IN of) (NP (NN <e0>)))) (VP (VBG winning) (NP (NNS scientists))))) (. ?)))",
        "id": 722
    },
    {
        "taggedQuestion": "Relatives of Moses used to follow which religions?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "religions",
                "containsRefer": false,
                "originStr": "religions",
                "start": 7,
                "entityID": 0,
                "end": 9,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Relatives of Moses used to follow",
                "containsRefer": false,
                "originStr": "Relatives of Moses used to follow",
                "start": 0,
                "entityID": 0,
                "end": 6,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Relatives of Moses used to follow which religions?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (S (NP (NP (NNS Relatives)) (PP (IN of) (NP (NNP Moses)))) (VP (VBD used) (S (VP (TO to) (VP (VB follow) (SBAR (WHNP (WDT which))) (NP (NNS religions)))))) (. ?)))",
        "id": 723
    },
    {
        "taggedQuestion": "Where was <e0>, Nina first aired ?",
        "entityMap": {"<e0>": "Ne daj se"},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "Where",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "was Ne daj se , Nina first aired",
                "containsRefer": false,
                "originStr": "was Ne daj se , Nina first aired",
                "start": 1,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Where was Ne daj se, Nina first aired ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHADVP (WRB Where)) (SQ (VBD was) (NP (NP (ADD <e0>)) (, ,) (NP (NNP Nina))) (VP (ADVP (RB first)) (VBN aired))) (. ?)))",
        "id": 724
    },
    {
        "taggedQuestion": "Where did the <e0> take place?",
        "entityMap": {"<e0>": "2015 MLS All-Star Game"},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "Where",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "did the 2015 MLS All-Star Game take place",
                "containsRefer": false,
                "originStr": "did the 2015 MLS All-Star Game take place",
                "start": 1,
                "entityID": 0,
                "end": 6,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Where did the 2015 MLS All-Star Game take place?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHADVP (WRB Where)) (SQ (VBD did) (NP (DT the) (NN <e0>)) (VP (VB take) (NP (NN place)))) (. ?)))",
        "id": 725
    },
    {
        "taggedQuestion": "Is Nikolai Morozov the former coach of Stanislav Morozov?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "is",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "JUDGE"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Nikolai Morozov",
                "containsRefer": false,
                "originStr": "Nikolai Morozov",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the former coach of Stanislav Morozov",
                "containsRefer": false,
                "originStr": "the former coach of Stanislav Morozov",
                "start": 3,
                "entityID": 0,
                "end": 9,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Is Nikolai Morozov the former coach of Stanislav Morozov?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SQ (VBZ Is) (NP (NNP Nikolai) (NNP Morozov)) (NP (NP (DT the) (JJ former) (NN coach)) (PP (IN of) (NP (NNP Stanislav) (NNP Morozov)))) (. ?)))",
        "id": 726
    },
    {
        "taggedQuestion": "Did Alexandre Tichonov study at the Moscow university?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "did",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "JUDGE"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Did Alexandre",
                "containsRefer": false,
                "originStr": "Did Alexandre",
                "start": 0,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "at the Moscow university",
                "containsRefer": false,
                "originStr": "at the Moscow university",
                "start": 0,
                "entityID": 0,
                "end": 7,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Did Alexandre Tichonov study at the Moscow university?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": true,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (FRAG (VP (VBD Did) (S (NP (NNP Alexandre) (NNP Tichonov))) (NP (NP (NN study)) (PP (IN at) (NP (DT the) (NNP Moscow) (NN university))))) (. ?)))",
        "id": 727
    },
    {
        "taggedQuestion": "What is the name of the homeground of football team Panionios G.S.S.?",
        "entityMap": {"<e0>": "Panionios G.S. S."},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the homeground of football team Panionios G.S.S",
                "containsRefer": false,
                "originStr": "the homeground of football team Panionios G.S.S",
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is the name of the homeground of football team Panionios G.S.S.?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (NP (DT the) (NN name)) (PP (IN of) (NP (NP (DT the) (NN homeground)) (PP (IN of) (NP (NML (NN football) (NN team)) (NNP Panionios) (NNP G.S.S.))))))) (. ?)))",
        "id": 728
    },
    {
        "taggedQuestion": "List presidents of the school whose one of the president is Charles. Prince of Wales ?",
        "entityMap": {"<e0>": "Charles . Prince"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "whose",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "one of the president is Charles",
                "containsRefer": false,
                "originStr": "one of the president is Charles",
                "start": 0,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "presidents of the school",
                "containsRefer": false,
                "originStr": "presidents of the school",
                "start": 0,
                "entityID": 0,
                "end": 5,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "List presidents of the school whose one of the president is Charles. Prince of Wales ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (NP (NP (NN List) (NNS presidents)) (PP (IN of) (NP (NP (DT the) (NN school)) (SBAR (WHNP (WHNP (WP$ whose) (NN one)) (PP (IN of) (NP (DT the) (NN president)))) (S (VP (VBZ is) (NP (NNP Charles))))))) (. .)))(ROOT (NP (NP (NNP Prince)) (PP (IN of) (NP (NNP Wales))) (. ?)))",
        "id": 729
    },
    {
        "taggedQuestion": "Does Timothy Morton study Buddhism?",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "does",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "JUDGE"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Timothy Morton study Buddhism",
                "containsRefer": false,
                "originStr": "Timothy Morton study Buddhism",
                "start": 1,
                "entityID": 0,
                "end": 5,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Does Timothy Morton study Buddhism?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SQ (VBZ Does) (NP (NNP Timothy) (NNP Morton) (NN study) (NNP Buddhism)) (. ?)))",
        "id": 730
    },
    {
        "taggedQuestion": "Brian Moriarty designed video games written by whom?",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "whom",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Brian Moriarty designed video games written by",
                "containsRefer": false,
                "originStr": "Brian Moriarty designed video games written by",
                "start": 0,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Brian Moriarty designed video games written by whom?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (S (NP (NNP Brian) (NNP Moriarty)) (VP (VBD designed) (NP (NP (NN video) (NNS games)) (VP (VBN written) (PP (IN by) (NP (WP whom)))))) (. ?)))",
        "id": 731
    },
    {
        "taggedQuestion": "What are some movies whose distributors are led by Kevin Tsujihara?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "some movies",
                "containsRefer": false,
                "originStr": "some movies",
                "start": 2,
                "entityID": 0,
                "end": 4,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "whose distributors are led by Kevin Tsujihara",
                "containsRefer": false,
                "originStr": "whose distributors are led by Kevin Tsujihara",
                "start": 6,
                "entityID": 0,
                "end": 11,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What are some movies whose distributors are led by Kevin Tsujihara?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3,
                "info": "whose distributors"
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBP are) (NP (NP (DT some) (NNS movies)) (SBAR (WHNP (WP$ whose) (NML (NNS distributors))) (S (VP (VBP are) (VP (VBN led) (PP (IN by) (NP (NNP Kevin) (NNP Tsujihara))))))))) (. ?)))",
        "id": 732
    },
    {
        "taggedQuestion": "Name the common associate band of Blayse and Teddy Riley .",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "name",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the common associate band of Blayse",
                "containsRefer": false,
                "originStr": "the common associate band of Blayse",
                "start": 1,
                "entityID": 0,
                "end": 7,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the common associate band of Teddy Riley",
                "containsRefer": false,
                "originStr": "the common associate band of Teddy Riley",
                "start": 8,
                "entityID": 0,
                "end": 9,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Name the common associate band of Blayse and Teddy Riley .",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Name) (NP (NP (DT the) (JJ common) (NN associate) (NN band)) (PP (IN of) (NP (NP (NNP Blayse)) (CC and) (NP (NNP Teddy) (NNP Riley)))))) (. .)))",
        "id": 733
    },
    {
        "taggedQuestion": "What did <e0>'s father die from?",
        "entityMap": {"<e0>": "Steven T Mason"},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "did Steven T Mason's father die from",
                "containsRefer": false,
                "originStr": "did Steven T Mason's father die from",
                "start": 1,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What did Steven T Mason's father die from?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD did) (NP (NP (NP (ADD <e0>)) (POS 's)) (NN father)) (VP (VB die) (PP (IN from)))) (. ?)))",
        "id": 734
    },
    {
        "taggedQuestion": "Whose military units are VMF-218 and VMF-155?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "whose",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are VMF-218",
                "containsRefer": false,
                "originStr": "are VMF-218",
                "start": 3,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are VMF-155",
                "containsRefer": false,
                "originStr": "are VMF-155",
                "start": 8,
                "entityID": 0,
                "end": 10,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Whose military units are VMF-218 and VMF-155?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBAR (WHNP (WP$ Whose) (NML (JJ military) (NNS units))) (S (VP (VBP are) (NP (NP (NNP VMF) (HYPH -) (CD 218)) (CC and) (NP (NN VMF) (HYPH -) (CD 155))))) (. ?)))",
        "id": 735
    },
    {
        "taggedQuestion": "What automobile engine's successor is BMW M40?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "automobile engine",
                "containsRefer": false,
                "originStr": "automobile engine",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "successor is BMW M40",
                "containsRefer": false,
                "originStr": "successor is BMW M40",
                "start": 4,
                "entityID": 0,
                "end": 8,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What automobile engine's successor is BMW M40?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT What) (NN automobile)) (SQ (NP (NP (NN engine) (POS 's)) (NN successor)) (VP (VBZ is) (NP (NNP BMW) (NN M40)))) (. ?)))",
        "id": 736
    },
    {
        "taggedQuestion": "Name the company which produces both  <e0>/<e1> .",
        "entityMap": {
            "<e1>": "F Hornet nad CH-46 Chinook",
            "<e0>": "Boeing F/A-18 E"
        },
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "name",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the company",
                "containsRefer": false,
                "originStr": "the company",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "produces both Boeing F/A-18 E / F Hornet nad CH-46 Chinook",
                "containsRefer": false,
                "originStr": "produces both Boeing F/A-18 E / F Hornet nad CH-46 Chinook",
                "start": 4,
                "entityID": 0,
                "end": 9,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Name the company which produces both  Boeing F/A-18 E/F Hornet nad CH-46 Chinook .",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Name) (NP (NP (DT the) (NN company)) (SBAR (WHNP (WDT which)) (S (VP (VBZ produces) (NP (DT both) (NN <e0>) (HYPH /) (NN <e1>))))))) (. .)))",
        "id": 737
    },
    {
        "taggedQuestion": "What is the district of <e0> ?",
        "entityMap": {"<e0>": "Methodist Central Hall Westminster"},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the district of Methodist Central Hall Westminster",
                "containsRefer": false,
                "originStr": "is the district of Methodist Central Hall Westminster",
                "start": 1,
                "entityID": 0,
                "end": 6,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is the district of Methodist Central Hall Westminster ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (NP (DT the) (NN district)) (PP (IN of) (NP (NN <e0>))))) (. ?)))",
        "id": 738
    },
    {
        "taggedQuestion": "Who develops the computation platform of <e0> ?",
        "entityMap": {"<e0>": "Microsoft Expression Encoder"},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "who",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "develops #entity1",
                "containsRefer": true,
                "originStr": "develops #entity1",
                "start": 1,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the computation platform of Microsoft Expression Encoder",
                "containsRefer": false,
                "originStr": "the computation platform of Microsoft Expression Encoder",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Who develops the computation platform of Microsoft Expression Encoder ?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": -1,
                "from": 2,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP Who)) (SQ (VP (VBZ develops) (NP (NP (DT the) (JJ computation) (NN platform)) (PP (IN of) (NP (NN <e0>)))))) (. ?)))",
        "id": 739
    },
    {
        "taggedQuestion": "What is the official language of Ladonia, which is the target area of Probus Journal?",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the official language of #entity1",
                "containsRefer": true,
                "originStr": "is the official language of #entity1",
                "start": 1,
                "entityID": 0,
                "end": 16,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the target area of Probus Journal",
                "containsRefer": false,
                "originStr": "is the target area of Probus Journal",
                "start": 9,
                "entityID": 1,
                "end": 16,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Ladonia",
                "containsRefer": false,
                "originStr": "Ladonia",
                "start": 6,
                "entityID": 1,
                "end": 7,
                "nodeType": 4,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is the official language of Ladonia, which is the target area of Probus Journal?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 6,
                "from": 2,
                "end": 16,
                "to": 3
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (NP (DT the) (JJ official) (NN language)) (PP (IN of) (NP (NP (NNP Ladonia)) (, ,) (SBAR (WHNP (WDT which)) (S (VP (VBZ is) (NP (NP (DT the) (NN target) (NN area)) (PP (IN of) (NP (NNP Probus) (NNP Journal))))))))))) (. ?)))",
        "id": 740
    },
    {
        "taggedQuestion": "Where did the conflict take place where <e0> I'Isle was a commander?",
        "entityMap": {"<e0>": "Louis Briere de"},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "Where",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "did the conflict take #entity1",
                "containsRefer": true,
                "originStr": "did the conflict take #entity1",
                "start": 1,
                "entityID": 0,
                "end": 14,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "place",
                "containsRefer": false,
                "originStr": "place",
                "start": 5,
                "entityID": 1,
                "end": 6,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Louis Briere de I ' Isle was a commander",
                "containsRefer": false,
                "originStr": "Louis Briere de I ' Isle was a commander",
                "start": 7,
                "entityID": 1,
                "end": 14,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Where did the conflict take place where Louis Briere de I'Isle was a commander?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 5,
                "from": 2,
                "end": 14,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHADVP (WRB Where)) (SQ (VBD did) (NP (DT the) (NN conflict)) (VP (VB take) (NP (NN place)) (SBAR (WHADVP (WRB where)) (S (NP (NP (ADD <e0>)) (NP (NP (PRP I)) (`` ') (NP (NNP Isle)))) (VP (VBD was) (NP (DT a) (NN commander))))))) (. ?)))",
        "id": 741
    },
    {
        "taggedQuestion": "Which team was the person drafted who has studied at the Worcester college, Oxford?",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "team",
                "containsRefer": false,
                "originStr": "team",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "was the person drafted #entity1",
                "containsRefer": true,
                "originStr": "was the person drafted #entity1",
                "start": 2,
                "entityID": 0,
                "end": 15,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "has studied at the Worcester college , Oxford",
                "containsRefer": false,
                "originStr": "has studied at the Worcester college , Oxford",
                "start": 7,
                "entityID": 1,
                "end": 15,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which team was the person drafted who has studied at the Worcester college, Oxford?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 6,
                "from": 3,
                "end": 15,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NN team)) (SQ (VBD was) (NP (DT the) (NN person)) (VP (VBN drafted) (SBAR (WHNP (WP who)) (S (VP (VBZ has) (VP (VBN studied) (PP (IN at) (NP (NP (DT the) (NNP Worcester) (NN college)) (, ,) (NP (NNP Oxford)))))))))) (. ?)))",
        "id": 742
    },
    {
        "taggedQuestion": "How many people hold important positions alongwith Donna Shalala?",
        "entityMap": {},
        "nodeNum": 7,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "how many",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "people",
                "containsRefer": false,
                "originStr": "people",
                "start": 2,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "hold #entity1",
                "containsRefer": true,
                "originStr": "hold #entity1",
                "start": 3,
                "entityID": 0,
                "end": 9,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "important positions",
                "containsRefer": false,
                "originStr": "important positions",
                "start": 4,
                "entityID": 1,
                "end": 6,
                "nodeType": 4,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            },
            {
                "str": "alongwith Donna Shalala",
                "containsRefer": false,
                "originStr": "alongwith Donna Shalala",
                "start": 6,
                "entityID": 1,
                "end": 9,
                "nodeType": 3,
                "nodeID": 6,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "How many people hold important positions alongwith Donna Shalala?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 4,
                "from": 3,
                "end": 9,
                "to": 4
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 5
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 6
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WHADJP (WRB How) (JJ many)) (NNS people)) (SQ (VP (VBP hold) (NP (JJ important) (NNS positions)) (S (ADJP (JJ alongwith) (NP (NNP Donna) (NNP Shalala)))))) (. ?)))",
        "id": 743
    },
    {
        "taggedQuestion": "What other things are provided by the producer of Office 365?",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "other things",
                "containsRefer": false,
                "originStr": "other things",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are provided by #entity1",
                "containsRefer": true,
                "originStr": "are provided by #entity1",
                "start": 3,
                "entityID": 0,
                "end": 11,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the producer of Office 365",
                "containsRefer": false,
                "originStr": "the producer of Office 365",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 4,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What other things are provided by the producer of Office 365?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT What) (JJ other) (NNS things)) (SQ (VBP are) (VP (VBN provided) (PP (IN by) (NP (NP (DT the) (NN producer)) (PP (IN of) (NP (NNP Office) (CD 365))))))) (. ?)))",
        "id": 744
    },
    {
        "taggedQuestion": "Who owns the company that made the Edsel Villager?",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "who",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "owns #entity1",
                "containsRefer": true,
                "originStr": "owns #entity1",
                "start": 1,
                "entityID": 0,
                "end": 9,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the company",
                "containsRefer": false,
                "originStr": "the company",
                "start": 2,
                "entityID": 1,
                "end": 4,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "made the Edsel Villager",
                "containsRefer": false,
                "originStr": "made the Edsel Villager",
                "start": 5,
                "entityID": 1,
                "end": 9,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Who owns the company that made the Edsel Villager?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 2,
                "from": 2,
                "end": 9,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP Who)) (SQ (VP (VBZ owns) (NP (NP (DT the) (NN company)) (SBAR (WHNP (WDT that)) (S (VP (VBD made) (NP (DT the) (NNP Edsel) (NN Villager)))))))) (. ?)))",
        "id": 745
    },
    {
        "taggedQuestion": "Which collaborator of <e0> wrote Same Song ?",
        "entityMap": {"<e0>": "Nice and Smooth"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "collaborator of Nice and Smooth",
                "containsRefer": false,
                "originStr": "collaborator of Nice and Smooth",
                "start": 1,
                "entityID": 0,
                "end": 4,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "wrote Same Song",
                "containsRefer": false,
                "originStr": "wrote Same Song",
                "start": 4,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which collaborator of Nice and Smooth wrote Same Song ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NP (NN collaborator) (PP (IN of) (NP (NN <e0>))))) (SQ (VP (VBD wrote) (NP (JJ Same) (NN Song)))) (. ?)))",
        "id": 746
    },
    {
        "taggedQuestion": "Who fought in the battle at Tupelo Mississippi?",
        "entityMap": {},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "who",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "fought in #entity1",
                "containsRefer": true,
                "originStr": "fought in #entity1",
                "start": 1,
                "entityID": 0,
                "end": 8,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the battle at Tupelo Mississippi",
                "containsRefer": false,
                "originStr": "the battle at Tupelo Mississippi",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Who fought in the battle at Tupelo Mississippi?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": -1,
                "from": 2,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP Who)) (SQ (VP (VBD fought) (PP (IN in) (NP (NP (DT the) (NN battle)) (PP (IN at) (NP (NNP Tupelo) (NNP Mississippi))))))) (. ?)))",
        "id": 747
    },
    {
        "taggedQuestion": "List the movies whose cast member were born in Scotland.",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "list",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the movies",
                "containsRefer": false,
                "originStr": "the movies",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "whose cast member were born in Scotland",
                "containsRefer": false,
                "originStr": "whose cast member were born in Scotland",
                "start": 6,
                "entityID": 0,
                "end": 10,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "List the movies whose cast member were born in Scotland.",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3,
                "info": "whose cast member"
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB List) (NP (NP (DT the) (NNS movies)) (SBAR (WHNP (WP$ whose) (NML (NN cast)) (NN member)) (S (VP (VBD were) (VP (VBN born) (PP (IN in) (NP (NNP Scotland))))))))) (. .)))",
        "id": 748
    },
    {
        "taggedQuestion": "List the other nicknames of city which has one of the nickname as <e0> ?",
        "entityMap": {"<e0>": "City of Angels"},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "list",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the other nicknames of #entity1",
                "containsRefer": true,
                "originStr": "the other nicknames of #entity1",
                "start": 1,
                "entityID": 0,
                "end": 14,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "city",
                "containsRefer": false,
                "originStr": "city",
                "start": 5,
                "entityID": 1,
                "end": 6,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "has one of the nickname as City of Angels",
                "containsRefer": false,
                "originStr": "has one of the nickname as City of Angels",
                "start": 7,
                "entityID": 1,
                "end": 14,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "List the other nicknames of city which has one of the nickname as City of Angels ?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 5,
                "from": 2,
                "end": 14,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (SQ (VP (VB List) (NP (NP (DT the) (JJ other) (NNS nicknames)) (PP (IN of) (NP (NP (NN city)) (SBAR (WHNP (WDT which)) (S (VP (VBZ has) (NP (NP (CD one)) (PP (IN of) (NP (NP (DT the) (NN nickname)) (PP (IN as) (NP (NN <e0>))))))))))))) (. ?)))",
        "id": 749
    },
    {
        "taggedQuestion": "Count the writers whose work has been played in NY.",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "count",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the writers",
                "containsRefer": false,
                "originStr": "the writers",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "whose work has been played in NY",
                "containsRefer": false,
                "originStr": "whose work has been played in NY",
                "start": 5,
                "entityID": 0,
                "end": 10,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Count the writers whose work has been played in NY.",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3,
                "info": "whose work"
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Count) (NP (NP (DT the) (NNS writers)) (SBAR (WHNP (WP$ whose) (NN work)) (S (VP (VBZ has) (VP (VBN been) (VP (VBN played) (PP (IN in) (NP (NNP NY)))))))))) (. .)))",
        "id": 750
    },
    {
        "taggedQuestion": "Where did the graduates of Memphis, Tenessee continue their education?",
        "entityMap": {},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "where",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Where did #entity1",
                "containsRefer": true,
                "originStr": "Where did #entity1",
                "start": 0,
                "entityID": 0,
                "end": 12,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the graduates of Memphis , Tenessee continue their education",
                "containsRefer": false,
                "originStr": "the graduates of Memphis , Tenessee continue their education",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Where did the graduates of Memphis, Tenessee continue their education?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": -1,
                "from": 2,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (S (SBAR (WHADVP (WRB Where)) (S (VP (VBD did) (NP (NP (DT the) (NNS graduates)) (PP (IN of) (NP (NNP Memphis))))))) (, ,) (NP (NNP Tenessee)) (VP (VBP continue) (NP (PRP$ their) (NN education))) (. ?)))",
        "id": 751
    },
    {
        "taggedQuestion": "What subsequent work of Moondog Matinee has the composer of Motorpsycho Nitemare ?",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "subsequent work of Moondog Matinee",
                "containsRefer": false,
                "originStr": "subsequent work of Moondog Matinee",
                "start": 1,
                "entityID": 0,
                "end": 6,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "has #entity1",
                "containsRefer": true,
                "originStr": "has #entity1",
                "start": 6,
                "entityID": 0,
                "end": 12,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the composer of Motorpsycho Nitemare",
                "containsRefer": false,
                "originStr": "the composer of Motorpsycho Nitemare",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 4,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What subsequent work of Moondog Matinee has the composer of Motorpsycho Nitemare ?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT What) (NP (NP (JJ subsequent) (NN work)) (PP (IN of) (NP (NNP Moondog) (NNP Matinee))))) (SQ (VP (VBZ has) (NP (NP (DT the) (NN composer)) (PP (IN of) (NP (NNP Motorpsycho) (NNP Nitemare)))))) (. ?)))",
        "id": 752
    },
    {
        "taggedQuestion": "What was the language of the single which came before To Know Him Is to Love Him?",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "was the language of #entity1",
                "containsRefer": true,
                "originStr": "was the language of #entity1",
                "start": 1,
                "entityID": 0,
                "end": 17,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the single",
                "containsRefer": false,
                "originStr": "the single",
                "start": 5,
                "entityID": 1,
                "end": 7,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "came before To Know Him Is to Love Him",
                "containsRefer": false,
                "originStr": "came before To Know Him Is to Love Him",
                "start": 8,
                "entityID": 1,
                "end": 17,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What was the language of the single which came before To Know Him Is to Love Him?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 5,
                "from": 2,
                "end": 17,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD was) (NP (NP (DT the) (NN language)) (PP (IN of) (NP (NP (DT the) (JJ single)) (SBAR (WHNP (WDT which)) (S (VP (VBD came) (ADVP (RB before)) (S (VP (TO To) (VP (VB Know) (SBAR (S (NP (PRP Him)) (VP (VBZ Is) (S (VP (TO to) (VP (VB Love) (NP (PRP Him)))))))))))))))))) (. ?)))",
        "id": 753
    },
    {
        "taggedQuestion": "What are the <e0> whose company is owned by Viacom?",
        "entityMap": {"<e0>": "television shows"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the television shows",
                "containsRefer": false,
                "originStr": "the television shows",
                "start": 2,
                "entityID": 0,
                "end": 4,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "whose company is owned by Viacom",
                "containsRefer": false,
                "originStr": "whose company is owned by Viacom",
                "start": 6,
                "entityID": 0,
                "end": 10,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What are the television shows whose company is owned by Viacom?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3,
                "info": "whose company"
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBP are) (NP (NP (DT the) (NN <e0>)) (SBAR (WHNP (WP$ whose) (NN company)) (S (VP (VBZ is) (VP (VBN owned) (PP (IN by) (NP (NNP Viacom))))))))) (. ?)))",
        "id": 754
    },
    {
        "taggedQuestion": "How many people used to play in the youthclub of FC Barcelona?",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "how many",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "people",
                "containsRefer": false,
                "originStr": "people",
                "start": 2,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "used to play in #entity1",
                "containsRefer": true,
                "originStr": "used to play in #entity1",
                "start": 3,
                "entityID": 0,
                "end": 12,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the youthclub of FC Barcelona",
                "containsRefer": false,
                "originStr": "the youthclub of FC Barcelona",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 4,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "How many people used to play in the youthclub of FC Barcelona?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WHADJP (WRB How) (JJ many)) (NNS people)) (SQ (VP (VBN used) (S (VP (TO to) (VP (VB play) (PP (IN in) (NP (NP (DT the) (NNP youthclub)) (PP (IN of) (NP (NNP FC) (NNP Barcelona)))))))))) (. ?)))",
        "id": 755
    },
    {
        "taggedQuestion": "Quebec born ice hockey players have stopped playing for which teams?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "teams",
                "containsRefer": false,
                "originStr": "teams",
                "start": 10,
                "entityID": 0,
                "end": 12,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Quebec born ice hockey players have stopped playing for",
                "containsRefer": false,
                "originStr": "Quebec born ice hockey players have stopped playing for",
                "start": 0,
                "entityID": 0,
                "end": 9,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Quebec born ice hockey players have stopped playing for which teams?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (S (NP (NP (NNP Quebec)) (VP (VBN born) (NP (NML (NN ice) (NN hockey)) (NNS players)))) (VP (VBP have) (VP (VBN stopped) (S (VP (VBG playing) (WHPP (IN for) (WHNP (WDT which) (NNS teams))))))) (. ?)))",
        "id": 756
    },
    {
        "taggedQuestion": "Who is the chancellor of Falmouth University ?",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "who",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the chancellor of Falmouth University",
                "containsRefer": false,
                "originStr": "is the chancellor of Falmouth University",
                "start": 1,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Who is the chancellor of Falmouth University ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP Who)) (SQ (VBZ is) (NP (NP (DT the) (NN chancellor)) (PP (IN of) (NP (NNP Falmouth) (NNP University))))) (. ?)))",
        "id": 757
    },
    {
        "taggedQuestion": "What things play on WBIG FM?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "things",
                "containsRefer": false,
                "originStr": "things",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "play on WBIG FM",
                "containsRefer": false,
                "originStr": "play on WBIG FM",
                "start": 2,
                "entityID": 0,
                "end": 6,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What things play on WBIG FM?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT What) (NNS things)) (SQ (VP (VBP play) (PP (IN on) (NP (NNP WBIG) (NNP FM))))) (. ?)))",
        "id": 758
    },
    {
        "taggedQuestion": "Name the are where <e0> operate and has place of birth as <e1> .",
        "entityMap": {
            "<e1>": "Arthur A. Ross",
            "<e0>": "South side Elevated Railroad"
        },
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "name",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the are #entity1",
                "containsRefer": true,
                "originStr": "the are #entity1",
                "start": 1,
                "entityID": 0,
                "end": 13,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "operate",
                "containsRefer": false,
                "originStr": "operate",
                "start": 5,
                "entityID": 1,
                "end": 6,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "has place of birth as Arthur A. Ross",
                "containsRefer": false,
                "originStr": "has place of birth as Arthur A. Ross",
                "start": 7,
                "entityID": 1,
                "end": 13,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Name the are where South side Elevated Railroad operate and has place of birth as Arthur A. Ross .",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 3,
                "from": 2,
                "end": 13,
                "to": 3
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Name) (S (NP (DT the)) (VP (VBP are) (SBAR (WHADVP (WRB where)) (S (NP (ADD <e0>)) (VP (VP (VBP operate)) (CC and) (VP (VBZ has) (NP (NP (NN place)) (PP (IN of) (NP (NP (NN birth)) (PP (IN as) (NP (ADD <e1>))))))))))))) (. .)))",
        "id": 759
    },
    {
        "taggedQuestion": "Which fields are the graduates of Worcester College, Oxford working?",
        "entityMap": {},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "Which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "fields are #entity1",
                "containsRefer": true,
                "originStr": "fields are #entity1",
                "start": 0,
                "entityID": 0,
                "end": 11,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the graduates of Worcester College , Oxford working",
                "containsRefer": false,
                "originStr": "the graduates of Worcester College , Oxford working",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which fields are the graduates of Worcester College, Oxford working?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": -1,
                "from": 2,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (FRAG (SBAR (WHNP (WDT Which)) (S (NP (NNS fields)) (VP (VBP are) (NP (NP (DT the) (NNS graduates)) (PP (IN of) (NP (NNP Worcester) (NNP College))))))) (, ,) (NP (NNP Oxford)) (VP (VBG working)) (. ?)))",
        "id": 760
    },
    {
        "taggedQuestion": "List the places where the relatives of Mark Donaldson died ?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "list",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the places",
                "containsRefer": false,
                "originStr": "the places",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the relatives of Mark Donaldson died",
                "containsRefer": false,
                "originStr": "the relatives of Mark Donaldson died",
                "start": 3,
                "entityID": 0,
                "end": 10,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "List the places where the relatives of Mark Donaldson died ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB List) (NP (DT the) (NNS places)) (SBAR (WHADVP (WRB where)) (S (NP (NP (DT the) (NNS relatives)) (PP (IN of) (NP (NNP Mark) (NNP Donaldson)))) (VP (VBD died))))) (. ?)))",
        "id": 761
    },
    {
        "taggedQuestion": "What famous politician died in the Petersen House?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "famous politician",
                "containsRefer": false,
                "originStr": "famous politician",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "died in the Petersen House",
                "containsRefer": false,
                "originStr": "died in the Petersen House",
                "start": 3,
                "entityID": 0,
                "end": 8,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What famous politician died in the Petersen House?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT What) (JJ famous) (NN politician)) (SQ (VP (VBD died) (PP (IN in) (NP (DT the) (NNP Petersen) (NNP House))))) (. ?)))",
        "id": 762
    },
    {
        "taggedQuestion": "What are some artists on the show whose opening theme is <e0>?",
        "entityMap": {"<e0>": "Send It On"},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are some artists on #entity1",
                "containsRefer": true,
                "originStr": "are some artists on #entity1",
                "start": 1,
                "entityID": 0,
                "end": 12,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the show",
                "containsRefer": false,
                "originStr": "the show",
                "start": 5,
                "entityID": 1,
                "end": 7,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "whose opening theme is Send It On",
                "containsRefer": false,
                "originStr": "whose opening theme is Send It On",
                "start": 10,
                "entityID": 1,
                "end": 12,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What are some artists on the show whose opening theme is Send It On?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 5,
                "from": 2,
                "end": 12,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5,
                "info": "whose opening theme"
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBP are) (NP (NP (DT some) (NNS artists)) (PP (IN on) (NP (NP (DT the) (NN show)) (SBAR (WHNP (WP$ whose) (NML (NN opening) (NN theme))) (S (VP (VBZ is) (NP (ADD <e0>))))))))) (. ?)))",
        "id": 763
    },
    {
        "taggedQuestion": "What is the citizenship of Saima Chowdhury?",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the citizenship of Saima Chowdhury",
                "containsRefer": false,
                "originStr": "is the citizenship of Saima Chowdhury",
                "start": 1,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is the citizenship of Saima Chowdhury?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (NP (DT the) (NN citizenship)) (PP (IN of) (NP (NNP Saima) (NNP Chowdhury))))) (. ?)))",
        "id": 764
    },
    {
        "taggedQuestion": "What are the musical performances whose label is Celluloid Records?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the musical performances",
                "containsRefer": false,
                "originStr": "the musical performances",
                "start": 2,
                "entityID": 0,
                "end": 5,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "whose label is Celluloid Records",
                "containsRefer": false,
                "originStr": "whose label is Celluloid Records",
                "start": 7,
                "entityID": 0,
                "end": 10,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What are the musical performances whose label is Celluloid Records?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3,
                "info": "whose label"
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBP are) (NP (NP (DT the) (JJ musical) (NNS performances)) (SBAR (WHNP (WP$ whose) (NN label)) (S (VP (VBZ is) (NP (JJ Celluloid) (NNPS Records))))))) (. ?)))",
        "id": 765
    },
    {
        "taggedQuestion": "What is the craft of the Ralph Flanders which is also the profession of  Claiborne Pell ?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the craft of the Ralph Flanders which",
                "containsRefer": false,
                "originStr": "is the craft of the Ralph Flanders which",
                "start": 1,
                "entityID": 0,
                "end": 9,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the profession of Claiborne Pell",
                "containsRefer": false,
                "originStr": "the profession of Claiborne Pell",
                "start": 11,
                "entityID": 0,
                "end": 16,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is the craft of the Ralph Flanders which is also the profession of  Claiborne Pell ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (NP (DT the) (NN craft)) (PP (IN of) (NP (NP (DT the) (NNP Ralph) (NNP Flanders)) (SBAR (WHNP (WDT which)) (S (VP (VBZ is) (ADVP (RB also)) (NP (NP (DT the) (NN profession)) (PP (IN of) (NP (NNP Claiborne) (NNP Pell))))))))))) (. ?)))",
        "id": 766
    },
    {
        "taggedQuestion": "How many people have fought wars where <e0> was a commander?",
        "entityMap": {"<e0>": "Arthur St. Clair"},
        "nodeNum": 7,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "how many",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "people",
                "containsRefer": false,
                "originStr": "people",
                "start": 2,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "have fought #entity1",
                "containsRefer": true,
                "originStr": "have fought #entity1",
                "start": 3,
                "entityID": 0,
                "end": 11,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "wars",
                "containsRefer": false,
                "originStr": "wars",
                "start": 5,
                "entityID": 1,
                "end": 6,
                "nodeType": 4,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Arthur St. Clair was a commander",
                "containsRefer": false,
                "originStr": "Arthur St. Clair was a commander",
                "start": 7,
                "entityID": 1,
                "end": 11,
                "nodeType": 3,
                "nodeID": 6,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "How many people have fought wars where Arthur St. Clair was a commander?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 5,
                "from": 3,
                "end": 11,
                "to": 4
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 5
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 6
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WHADJP (WRB How) (JJ many)) (NNS people)) (SQ (VP (VBP have) (VP (VBN fought) (NP (NNS wars)) (SBAR (WHADVP (WRB where)) (S (NP (ADD <e0>)) (VP (VBD was) (NP (DT a) (NN commander)))))))) (. ?)))",
        "id": 767
    },
    {
        "taggedQuestion": "Does Chicago own the Monroe Station?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "does",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "JUDGE"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Chicago",
                "containsRefer": false,
                "originStr": "Chicago",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "own the Monroe Station",
                "containsRefer": false,
                "originStr": "own the Monroe Station",
                "start": 2,
                "entityID": 0,
                "end": 6,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Does Chicago own the Monroe Station?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SQ (VBZ Does) (NP (NNP Chicago)) (VP (VB own) (NP (DT the) (NNP Monroe) (NNP Station))) (. ?)))",
        "id": 768
    },
    {
        "taggedQuestion": "Which team has had both Martin prochzka and garry unger as its players ?",
        "entityMap": {},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "team",
                "containsRefer": false,
                "originStr": "team",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "has had Martin prochzka",
                "containsRefer": false,
                "originStr": "has had Martin prochzka",
                "start": 0,
                "entityID": 0,
                "end": 4,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "garry unger as its players",
                "containsRefer": false,
                "originStr": "garry unger as its players",
                "start": 5,
                "entityID": 0,
                "end": 9,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which team has had both Martin prochzka and garry unger as its players ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NN team)) (SQ (VP (VBZ has) (VP (VBN had) (NP (NP (DT both) (NNP Martin) (NML (NN prochzka) (CC and) (NN garry)) (NN unger)) (PP (IN as) (NP (PRP$ its) (NNS players))))))) (. ?)))",
        "id": 769
    },
    {
        "taggedQuestion": "What are the awards received by spouse of Ellen Lundstrom?",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are the awards received by spouse of Ellen Lundstrom",
                "containsRefer": false,
                "originStr": "are the awards received by spouse of Ellen Lundstrom",
                "start": 1,
                "entityID": 0,
                "end": 10,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What are the awards received by spouse of Ellen Lundstrom?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBP are) (NP (DT the) (NNS awards)) (VP (VBN received) (PP (IN by) (NP (NP (NN spouse)) (PP (IN of) (NP (NNP Ellen) (NNP Lundstrom))))))) (. ?)))",
        "id": 770
    },
    {
        "taggedQuestion": "Who all have succeeded the kings buried in Rome?",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "who",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "have succeeded #entity1",
                "containsRefer": true,
                "originStr": "have succeeded #entity1",
                "start": 2,
                "entityID": 0,
                "end": 9,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the kings",
                "containsRefer": false,
                "originStr": "the kings",
                "start": 4,
                "entityID": 1,
                "end": 6,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "buried in Rome",
                "containsRefer": false,
                "originStr": "buried in Rome",
                "start": 6,
                "entityID": 1,
                "end": 9,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Who all have succeeded the kings buried in Rome?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 4,
                "from": 2,
                "end": 9,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP Who)) (SQ (NP (DT all)) (VP (VBP have) (VP (VBN succeeded) (NP (NP (DT the) (NNS kings)) (VP (VBN buried) (PP (IN in) (NP (NNP Rome)))))))) (. ?)))",
        "id": 771
    },
    {
        "taggedQuestion": "Which states do the rivers flow which join in the republican river from the left?",
        "entityMap": {},
        "nodeNum": 7,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "states",
                "containsRefer": false,
                "originStr": "states",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "do #entity1 flow",
                "containsRefer": true,
                "originStr": "do #entity1 flow",
                "start": 2,
                "entityID": 0,
                "end": 15,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "rivers",
                "containsRefer": false,
                "originStr": "rivers",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 4,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            },
            {
                "str": "join in the republican river from the left",
                "containsRefer": false,
                "originStr": "join in the republican river from the left",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 3,
                "nodeID": 6,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which states do the rivers flow which join in the republican river from the left?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 5
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 6
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NNS states)) (SQ (VBP do) (NP (NP (DT the) (NNS rivers) (NN flow)) (SBAR (WHNP (WDT which)) (S (VP (VBP join) (PP (IN in) (NP (NP (DT the) (JJ republican) (NN river)) (PP (IN from) (NP (NP (DT the)) (VP (VBN left))))))))))) (. ?)))",
        "id": 772
    },
    {
        "taggedQuestion": "Give me the home town of all musical artists who uses Guitar as instrument .",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "give me",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the home town of #entity1",
                "containsRefer": true,
                "originStr": "the home town of #entity1",
                "start": 2,
                "entityID": 0,
                "end": 14,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "all musical artists",
                "containsRefer": false,
                "originStr": "all musical artists",
                "start": 6,
                "entityID": 1,
                "end": 9,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "uses Guitar as instrument",
                "containsRefer": false,
                "originStr": "uses Guitar as instrument",
                "start": 10,
                "entityID": 1,
                "end": 14,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Give me the home town of all musical artists who uses Guitar as instrument .",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 6,
                "from": 2,
                "end": 14,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Give) (NP (PRP me)) (NP (NP (DT the) (NN home) (NN town)) (PP (IN of) (NP (NP (DT all) (JJ musical) (NNS artists)) (SBAR (WHNP (WP who)) (S (VP (VBZ uses) (NP (NP (NNP Guitar)) (PP (IN as) (NP (NN instrument))))))))))) (. .)))",
        "id": 773
    },
    {
        "taggedQuestion": "How many religions are followed amongst the people who've worked in the Korean army?",
        "entityMap": {},
        "nodeNum": 7,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "how many",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "religions",
                "containsRefer": false,
                "originStr": "religions",
                "start": 2,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are followed amongst #entity1",
                "containsRefer": true,
                "originStr": "are followed amongst #entity1",
                "start": 3,
                "entityID": 0,
                "end": 15,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the people",
                "containsRefer": false,
                "originStr": "the people",
                "start": 6,
                "entityID": 1,
                "end": 8,
                "nodeType": 4,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            },
            {
                "str": "'ve worked in the Korean army",
                "containsRefer": false,
                "originStr": "'ve worked in the Korean army",
                "start": 9,
                "entityID": 1,
                "end": 15,
                "nodeType": 3,
                "nodeID": 6,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "How many religions are followed amongst the people who've worked in the Korean army?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 6,
                "from": 3,
                "end": 15,
                "to": 4
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 5
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 6
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WHADJP (WRB How) (JJ many)) (NNS religions)) (SQ (VBP are) (VP (VBN followed) (PP (IN amongst) (NP (NP (DT the) (NNS people)) (SBAR (WHNP (WP who)) (S (VP (VBP 've) (VP (VBN worked) (PP (IN in) (NP (DT the) (JJ Korean) (NN army))))))))))) (. ?)))",
        "id": 774
    },
    {
        "taggedQuestion": "Was andy warhol a part of <e0>?",
        "entityMap": {"<e0>": "Pop Art movement"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "was",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "JUDGE"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "andy",
                "containsRefer": false,
                "originStr": "andy",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "a part of Pop Art movement",
                "containsRefer": false,
                "originStr": "a part of Pop Art movement",
                "start": 3,
                "entityID": 0,
                "end": 7,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Was andy warhol a part of Pop Art movement?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SQ (VBD Was) (NP (JJ andy)) (PP (IN warhol) (NP (NP (DT a) (NN part)) (PP (IN of) (NP (NN <e0>))))) (. ?)))",
        "id": 775
    },
    {
        "taggedQuestion": "Count the musical work which were sold by Sony Music.",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "count",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the musical work",
                "containsRefer": false,
                "originStr": "the musical work",
                "start": 1,
                "entityID": 0,
                "end": 4,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "were sold by Sony Music",
                "containsRefer": false,
                "originStr": "were sold by Sony Music",
                "start": 5,
                "entityID": 0,
                "end": 10,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Count the musical work which were sold by Sony Music.",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Count) (NP (NP (DT the) (JJ musical) (NN work)) (SBAR (WHNP (WDT which)) (S (VP (VBD were) (VP (VBN sold) (PP (IN by) (NP (NNP Sony) (NNP Music))))))))) (. .)))",
        "id": 776
    },
    {
        "taggedQuestion": "Who is the person whose home town is Fairmount, Indiana?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "who",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the person",
                "containsRefer": false,
                "originStr": "the person",
                "start": 2,
                "entityID": 0,
                "end": 4,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "whose home town is Fairmount , Indiana",
                "containsRefer": false,
                "originStr": "whose home town is Fairmount , Indiana",
                "start": 7,
                "entityID": 0,
                "end": 11,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Who is the person whose home town is Fairmount, Indiana?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3,
                "info": "whose home town"
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP Who)) (SQ (VBZ is) (NP (NP (DT the) (NN person)) (SBAR (WHNP (WP$ whose) (NN home) (NN town)) (S (VP (VBZ is) (NP (NNP Fairmount) (, ,) (NNP Indiana))))))) (. ?)))",
        "id": 777
    },
    {
        "taggedQuestion": "Name the movies directed by Stanley Kubrick and edited by Anthony Harvey.",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "name",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "directed by Stanley Kubrick",
                "containsRefer": false,
                "originStr": "directed by Stanley Kubrick",
                "start": 3,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "edited by Anthony Harvey",
                "containsRefer": false,
                "originStr": "edited by Anthony Harvey",
                "start": 8,
                "entityID": 0,
                "end": 12,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Name the movies directed by Stanley Kubrick and edited by Anthony Harvey.",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Name) (S (NP (DT the) (NNS movies)) (VP (VP (VBN directed) (PP (IN by) (NP (NNP Stanley) (NNP Kubrick)))) (CC and) (VP (VBN edited) (PP (IN by) (NP (NNP Anthony) (NNP Harvey))))))) (. .)))",
        "id": 778
    },
    {
        "taggedQuestion": "List all binomial authority of the insects whose one of the  binomial authority is douard Mntries?",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "list",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "all binomial authority of #entity1",
                "containsRefer": true,
                "originStr": "all binomial authority of #entity1",
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "insects",
                "containsRefer": false,
                "originStr": "insects",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "one of the binomial authority is douard Mntries",
                "containsRefer": false,
                "originStr": "one of the binomial authority is douard Mntries",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "List all binomial authority of the insects whose one of the  binomial authority is douard Mntries?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": -1,
                "from": 2,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (FRAG (NP (NN List)) (NP (NP (NP (DT all) (JJ binomial) (NN authority)) (PP (IN of) (NP (DT the) (NNS insects)))) (SBAR (WHNP (WP$ whose) (NP (NP (CD one)) (PP (IN of) (NP (DT the) (JJ binomial) (NN authority))))) (S (VP (VBZ is) (NP (JJ douard) (NNPS Mntries)))))) (. ?)))",
        "id": 779
    },
    {
        "taggedQuestion": "Who is the military general buried in St Mary's Church, Battersea?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "who",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the military general",
                "containsRefer": false,
                "originStr": "the military general",
                "start": 2,
                "entityID": 0,
                "end": 5,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "buried in St Mary's Church , Battersea",
                "containsRefer": false,
                "originStr": "buried in St Mary's Church , Battersea",
                "start": 5,
                "entityID": 0,
                "end": 13,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Who is the military general buried in St Mary's Church, Battersea?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP Who)) (SQ (VBZ is) (NP (NP (DT the) (JJ military) (JJ general)) (VP (VBN buried) (PP (IN in) (NP (NP (NNP St) (NNP Mary) (POS 's)) (NNP Church) (, ,) (NNP Battersea)))))) (. ?)))",
        "id": 780
    },
    {
        "taggedQuestion": "What is the military unit whose command structures are <e0> and <e1>?",
        "entityMap": {
            "<e1>": "United States Department of Defense",
            "<e0>": "United States Department of the Navy"
        },
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "What",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the military unit whose command structures are United States Department of the Navy",
                "containsRefer": false,
                "originStr": "is the military unit whose command structures are United States Department of the Navy",
                "start": 0,
                "entityID": 0,
                "end": 9,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the military unit whose command structures are United States Department of Defense",
                "containsRefer": false,
                "originStr": "is the military unit whose command structures are United States Department of Defense",
                "start": 10,
                "entityID": 0,
                "end": 10,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is the military unit whose command structures are United States Department of the Navy and United States Department of Defense?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (FRAG (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (NP (DT the) (JJ military) (NN unit)) (SBAR (WHNP (WP$ whose) (NN command) (NNS structures)) (S (VP (VBP are))))))) (NP (ADD <e0>) (CC and) (ADD <e1>)) (. ?)))",
        "id": 781
    },
    {
        "taggedQuestion": "What are some other things developed by the company who made the <e0>?",
        "entityMap": {"<e0>": "remote desktop protocol"},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are some other things developed by #entity1",
                "containsRefer": true,
                "originStr": "are some other things developed by #entity1",
                "start": 1,
                "entityID": 0,
                "end": 13,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the company",
                "containsRefer": false,
                "originStr": "the company",
                "start": 7,
                "entityID": 1,
                "end": 9,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "made the remote desktop protocol",
                "containsRefer": false,
                "originStr": "made the remote desktop protocol",
                "start": 10,
                "entityID": 1,
                "end": 13,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What are some other things developed by the company who made the remote desktop protocol?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 7,
                "from": 2,
                "end": 13,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBP are) (NP (DT some) (JJ other) (NNS things)) (VP (VBN developed) (PP (IN by) (NP (NP (DT the) (NN company)) (SBAR (WHNP (WP who)) (S (VP (VBD made) (NP (DT the) (NN <e0>))))))))) (. ?)))",
        "id": 782
    },
    {
        "taggedQuestion": "Where was Al-Muzaffar Umar buried ?",
        "entityMap": {"<e0>": "Al- Muzaffar Umar"},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "Where",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "was Al-Muzaffar Umar buried",
                "containsRefer": false,
                "originStr": "was Al-Muzaffar Umar buried",
                "start": 1,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Where was Al-Muzaffar Umar buried ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHADVP (WRB Where)) (SQ (VBD was) (NP (NNP Al) (HYPH -) (NNP Muzaffar) (NNP Umar)) (VP (VBN buried))) (. ?)))",
        "id": 783
    },
    {
        "taggedQuestion": "List the guests of On Broadway ?",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "list",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the guests of On Broadway",
                "containsRefer": false,
                "originStr": "the guests of On Broadway",
                "start": 1,
                "entityID": 0,
                "end": 6,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "List the guests of On Broadway ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SQ (VP (VB List) (NP (NP (DT the) (NNS guests)) (PP (IN of) (PP (IN On) (NP (NNP Broadway)))))) (. ?)))",
        "id": 784
    },
    {
        "taggedQuestion": "How many universities are there whose country's capital is Oslo?",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "how many",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "country is #entity1",
                "containsRefer": true,
                "originStr": "country is #entity1",
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "capital is Oslo",
                "containsRefer": false,
                "originStr": "capital is Oslo",
                "start": -4,
                "entityID": 1,
                "end": -1,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "universities are there",
                "containsRefer": false,
                "originStr": "universities are there",
                "start": -1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "How many universities are there whose country's capital is Oslo?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 5
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": -4,
                "from": 2,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (SBAR (WHADJP (WRB How) (JJ many)) (S (NP (NNS universities)) (VP (VBP are) (NP (EX there))))) (WHNP (WHNP (WP$ whose) (NN country) (POS 's)) (NN capital)) (SQ (VBZ is) (NP (NNP Oslo))) (. ?)))",
        "id": 785
    },
    {
        "taggedQuestion": "Did Bob Dylan write the lyrics of the times they are a changin'?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "did",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "JUDGE"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Bob Dylan",
                "containsRefer": false,
                "originStr": "Bob Dylan",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "write the lyrics of the times they are a changin '",
                "containsRefer": false,
                "originStr": "write the lyrics of the times they are a changin '",
                "start": 3,
                "entityID": 0,
                "end": 14,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Did Bob Dylan write the lyrics of the times they are a changin'?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SQ (VBD Did) (NP (NNP Bob) (NNP Dylan)) (VP (VB write) (NP (NP (DT the) (NNS lyrics)) (PP (IN of) (NP (NP (DT the) (NNS times)) (SBAR (S (NP (PRP they)) (VP (VBP are) (NP (DT a) (NN changin))))))) ('' '))) (. ?)))",
        "id": 786
    },
    {
        "taggedQuestion": "What is the religion of the ones in the Kampuchean <e0>?",
        "entityMap": {"<e0>": "Union of Salvation"},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the religion of #entity1",
                "containsRefer": true,
                "originStr": "is the religion of #entity1",
                "start": 1,
                "entityID": 0,
                "end": 11,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the ones in the Kampuchean Union of Salvation",
                "containsRefer": false,
                "originStr": "the ones in the Kampuchean Union of Salvation",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is the religion of the ones in the Kampuchean Union of Salvation?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": -1,
                "from": 2,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (NP (DT the) (NN religion)) (PP (IN of) (NP (NP (DT the) (NNS ones)) (PP (IN in) (NP (NP (DT the) (NNP Kampuchean)) (NP (ADD <e0>)))))))) (. ?)))",
        "id": 787
    },
    {
        "taggedQuestion": "Where did the members of <e0>?",
        "entityMap": {"<e0>": "judge advocate general corps study"},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "Where",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "did #entity1 judge advocate general corps study",
                "containsRefer": true,
                "originStr": "did #entity1 judge advocate general corps study",
                "start": 1,
                "entityID": 0,
                "end": 6,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the members of",
                "containsRefer": false,
                "originStr": "the members of",
                "start": 2,
                "entityID": 1,
                "end": 5,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Where did the members of judge advocate general corps study?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 2,
                "from": 2,
                "end": 5,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHADVP (WRB Where)) (SQ (VP (VBD did) (NP (NP (DT the) (NNS members)) (PP (IN of) (NP (NN <e0>)))))) (. ?)))",
        "id": 788
    },
    {
        "taggedQuestion": "Name the airlines which have a hub in airport in SF.",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "name",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the airlines",
                "containsRefer": false,
                "originStr": "the airlines",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "have a hub in airport in SF",
                "containsRefer": false,
                "originStr": "have a hub in airport in SF",
                "start": 4,
                "entityID": 0,
                "end": 11,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Name the airlines which have a hub in airport in SF.",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Name) (NP (NP (DT the) (NNS airlines)) (SBAR (WHNP (WDT which)) (S (VP (VBP have) (NP (NP (DT a) (NN hub)) (PP (IN in) (NP (NP (NN airport)) (PP (IN in) (NP (NNP SF))))))))))) (. .)))",
        "id": 789
    },
    {
        "taggedQuestion": "Which executive producer of <e0> is also an important person at Trump Productions?",
        "entityMap": {"<e0>": "the ultimate merger"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "executive producer of the ultimate merger",
                "containsRefer": false,
                "originStr": "executive producer of the ultimate merger",
                "start": 1,
                "entityID": 0,
                "end": 5,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "an important person at Trump Productions",
                "containsRefer": false,
                "originStr": "an important person at Trump Productions",
                "start": 5,
                "entityID": 0,
                "end": 13,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which executive producer of the ultimate merger is also an important person at Trump Productions?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NP (NP (JJ executive) (NN producer)) (PP (IN of) (NP (NN <e0>))))) (SQ (VBZ is) (ADVP (RB also)) (NP (NP (DT an) (JJ important) (NN person)) (PP (IN at) (NP (NNP Trump) (NNPS Productions))))) (. ?)))",
        "id": 790
    },
    {
        "taggedQuestion": "What is the official name of Colorado wine ?",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the official name of Colorado wine",
                "containsRefer": false,
                "originStr": "is the official name of Colorado wine",
                "start": 1,
                "entityID": 0,
                "end": 8,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is the official name of Colorado wine ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (NP (DT the) (JJ official) (NN name)) (PP (IN of) (NP (NNP Colorado) (NN wine))))) (. ?)))",
        "id": 791
    },
    {
        "taggedQuestion": "How many states can one find <e0> of bridges?",
        "entityMap": {"<e0>": "Burr Tuss kind"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "how many",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "states",
                "containsRefer": false,
                "originStr": "states",
                "start": 2,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "can one find Burr Tuss kind of bridges",
                "containsRefer": false,
                "originStr": "can one find Burr Tuss kind of bridges",
                "start": 3,
                "entityID": 0,
                "end": 9,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "How many states can one find Burr Tuss kind of bridges?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WHADJP (WRB How) (JJ many)) (NNS states)) (SQ (MD can) (NP (PRP one)) (VP (VB find) (NP (NP (NN <e0>)) (PP (IN of) (NP (NNS bridges)))))) (. ?)))",
        "id": 792
    },
    {
        "taggedQuestion": "Who developed google videos?",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "who",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "developed google videos",
                "containsRefer": false,
                "originStr": "developed google videos",
                "start": 1,
                "entityID": 0,
                "end": 4,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Who developed google videos?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP Who)) (SQ (VP (VBD developed) (NP (NNP google) (NNS videos)))) (. ?)))",
        "id": 793
    },
    {
        "taggedQuestion": "Who is the child of John Tyler, Sr.?",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "who",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the child of John Tyler , Sr",
                "containsRefer": false,
                "originStr": "is the child of John Tyler , Sr",
                "start": 1,
                "entityID": 0,
                "end": 9,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Who is the child of John Tyler, Sr.?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP Who)) (SQ (VBZ is) (NP (NP (DT the) (NN child)) (PP (IN of) (NP (NP (NNP John) (NNP Tyler)) (, ,) (NP (NNP Sr.)))))) (. .)))(ROOT (. ?))",
        "id": 794
    },
    {
        "taggedQuestion": "Is Brazilian jiu-jitsu the trainer of Nick Diaz?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "is",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "JUDGE"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Brazilian",
                "containsRefer": false,
                "originStr": "Brazilian",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "jiu-jitsu the trainer of Nick Diaz",
                "containsRefer": false,
                "originStr": "jiu-jitsu the trainer of Nick Diaz",
                "start": 2,
                "entityID": 0,
                "end": 10,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Is Brazilian jiu-jitsu the trainer of Nick Diaz?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SQ (VBZ Is) (NP (JJ Brazilian)) (NP (NP (NML (NN jiu) (HYPH -) (NN jitsu)) (DT the) (NN trainer)) (PP (IN of) (NP (NNP Nick) (NNP Diaz)))) (. ?)))",
        "id": 795
    },
    {
        "taggedQuestion": "Who is the owner of  Latvian Wikipedia and Wiktionary ?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "who",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the owner of Latvian Wikipedia",
                "containsRefer": false,
                "originStr": "is the owner of Latvian Wikipedia",
                "start": 1,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the owner of Wiktionary",
                "containsRefer": false,
                "originStr": "is the owner of Wiktionary",
                "start": 8,
                "entityID": 0,
                "end": 8,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Who is the owner of  Latvian Wikipedia and Wiktionary ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP Who)) (SQ (VBZ is) (NP (NP (DT the) (NN owner)) (PP (IN of) (NP (JJ Latvian) (NNP Wikipedia) (CC and) (NNP Wiktionary))))) (. ?)))",
        "id": 796
    },
    {
        "taggedQuestion": "Name all those buried in a place governed by a city council.",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "name",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "all those buried in #entity1",
                "containsRefer": true,
                "originStr": "all those buried in #entity1",
                "start": 1,
                "entityID": 0,
                "end": 12,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "a place",
                "containsRefer": false,
                "originStr": "a place",
                "start": 5,
                "entityID": 1,
                "end": 7,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "governed by a city council",
                "containsRefer": false,
                "originStr": "governed by a city council",
                "start": 7,
                "entityID": 1,
                "end": 12,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Name all those buried in a place governed by a city council.",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 5,
                "from": 2,
                "end": 12,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Name) (S (NP (PDT all) (DT those)) (VP (VBN buried) (PP (IN in) (NP (NP (DT a) (NN place)) (VP (VBN governed) (PP (IN by) (NP (DT a) (NN city) (NN council))))))))) (. .)))",
        "id": 797
    },
    {
        "taggedQuestion": "What royalties's sepulchre is <e0>?",
        "entityMap": {"<e0>": "Mausoleum of Augustus"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "royalties",
                "containsRefer": false,
                "originStr": "royalties",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "sepulchre is Mausoleum of Augustus",
                "containsRefer": false,
                "originStr": "sepulchre is Mausoleum of Augustus",
                "start": 3,
                "entityID": 0,
                "end": 8,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What royalties's sepulchre is Mausoleum of Augustus?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBAR (WHNP (WDT What)) (S (NP (NP (NNS royalties) (POS 's)) (NN sepulchre)) (VP (VBZ is) (NP (ADD <e0>)))) (. ?)))",
        "id": 798
    },
    {
        "taggedQuestion": "Name the common university of the Cardinal and Jim Wylie.",
        "entityMap": {"<e0>": "Cardinal Jim Wylie"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "name",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the common university of the Cardinal",
                "containsRefer": false,
                "originStr": "the common university of the Cardinal",
                "start": 1,
                "entityID": 0,
                "end": 7,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the common university of Jim Wylie",
                "containsRefer": false,
                "originStr": "the common university of Jim Wylie",
                "start": 8,
                "entityID": 0,
                "end": 9,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Name the common university of the Cardinal and Jim Wylie.",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Name) (NP (NP (DT the) (JJ common) (NN university)) (PP (IN of) (NP (NP (DT the) (NNP Cardinal)) (CC and) (NP (NNP Jim) (NNP Wylie)))))) (. .)))",
        "id": 799
    },
    {
        "taggedQuestion": "What is the automobile platform of Chiva bus ?",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the automobile platform of Chiva bus",
                "containsRefer": false,
                "originStr": "is the automobile platform of Chiva bus",
                "start": 1,
                "entityID": 0,
                "end": 8,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is the automobile platform of Chiva bus ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (NP (DT the) (NN automobile) (NN platform)) (PP (IN of) (NP (NNP Chiva) (NN bus))))) (. ?)))",
        "id": 800
    },
    {
        "taggedQuestion": "Who are the animator of <e0>?",
        "entityMap": {"<e0>": "The Skeleton Dance"},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "who",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are the animator of The Skeleton Dance",
                "containsRefer": false,
                "originStr": "are the animator of The Skeleton Dance",
                "start": 1,
                "entityID": 0,
                "end": 6,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Who are the animator of The Skeleton Dance?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP Who)) (SQ (VBP are) (NP (NP (DT the) (NN animator)) (PP (IN of) (NP (NN <e0>))))) (. ?)))",
        "id": 801
    },
    {
        "taggedQuestion": "How many movies have a screenplay located in the States?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "how many",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "movies",
                "containsRefer": false,
                "originStr": "movies",
                "start": 2,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "have a screenplay located in the States",
                "containsRefer": false,
                "originStr": "have a screenplay located in the States",
                "start": 3,
                "entityID": 0,
                "end": 10,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "How many movies have a screenplay located in the States?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WHADJP (WRB How) (JJ many)) (NML (NNS movies))) (SQ (VBP have) (NP (DT a) (NN screenplay)) (VP (VBN located) (PP (IN in) (NP (DT the) (NNPS States))))) (. ?)))",
        "id": 802
    },
    {
        "taggedQuestion": "Which ceremonial County of the East Tilbury is also the local authority of the Trinity School, Brentwood?",
        "entityMap": {},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "ceremonial County",
                "containsRefer": false,
                "originStr": "ceremonial County",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the local authority of the Trinity School , Brentwood",
                "containsRefer": false,
                "originStr": "the local authority of the Trinity School , Brentwood",
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "",
                "containsRefer": false,
                "originStr": "",
                "start": 7,
                "entityID": 0,
                "end": 8,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which ceremonial County of the East Tilbury is also the local authority of the Trinity School, Brentwood?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WHNP (WDT Which) (JJ ceremonial) (NN County)) (PP (IN of) (NP (DT the) (NNP East) (NNP Tilbury)))) (SQ (VBZ is) (ADVP (RB also)) (NP (NP (DT the) (JJ local) (NN authority)) (PP (IN of) (NP (DT the) (NML (NNP Trinity) (NNP School)) (, ,) (NNP Brentwood))))) (. ?)))",
        "id": 803
    },
    {
        "taggedQuestion": "What system is both a platform where Nord runs and also distributed <e0>?",
        "entityMap": {"<e0>": "The beauty inside"},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "system",
                "containsRefer": false,
                "originStr": "system",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is a platform where Nord runs",
                "containsRefer": false,
                "originStr": "is a platform where Nord runs",
                "start": 0,
                "entityID": 0,
                "end": 6,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "distributed The beauty inside",
                "containsRefer": false,
                "originStr": "distributed The beauty inside",
                "start": 7,
                "entityID": 0,
                "end": 9,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What system is both a platform where Nord runs and also distributed The beauty inside?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT What) (NN system)) (SQ (VP (VBZ is) (ADVP (CC both)) (NP (NP (DT a) (NN platform)) (SBAR (WHADVP (WRB where)) (S (NP (NNP Nord)) (VP (VP (VBZ runs)) (CC and) (ADVP (RB also)) (VP (VBN distributed) (NP (NN <e0>))))))))) (. ?)))",
        "id": 804
    },
    {
        "taggedQuestion": "Name the country whose leader's deputy is Piotr Glinski.",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "name",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the country",
                "containsRefer": false,
                "originStr": "the country",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "leader is #entity1",
                "containsRefer": true,
                "originStr": "leader is #entity1",
                "start": 3,
                "entityID": 0,
                "end": 10,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "deputy is Piotr Glinski",
                "containsRefer": false,
                "originStr": "deputy is Piotr Glinski",
                "start": 6,
                "entityID": 1,
                "end": 10,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Name the country whose leader's deputy is Piotr Glinski.",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 6,
                "from": 3,
                "end": 10,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Name) (NP (DT the) (NN country)) (SBARQ (WHNP (WHNP (WP$ whose) (NN leader) (POS 's)) (NP (NN deputy))) (SQ (VBZ is) (NP (NNP Piotr) (NNP Glinski))))) (. .)))",
        "id": 805
    },
    {
        "taggedQuestion": "Is Cologny a neighbouring city of Geneva?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "is",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "JUDGE"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Cologny",
                "containsRefer": false,
                "originStr": "Cologny",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "a neighbouring city of Geneva",
                "containsRefer": false,
                "originStr": "a neighbouring city of Geneva",
                "start": 2,
                "entityID": 0,
                "end": 7,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Is Cologny a neighbouring city of Geneva?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SQ (VBZ Is) (NP (NNP Cologny)) (NP (NP (DT a) (VBG neighbouring) (NN city)) (PP (IN of) (NP (NNP Geneva)))) (. ?)))",
        "id": 806
    },
    {
        "taggedQuestion": "Whose creators are Jerry Seinfeld and Larry David?",
        "entityMap": {},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "whose",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "creators",
                "containsRefer": false,
                "originStr": "creators",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are Jerry Seinfeld",
                "containsRefer": false,
                "originStr": "are Jerry Seinfeld",
                "start": 2,
                "entityID": 0,
                "end": 5,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are Larry David",
                "containsRefer": false,
                "originStr": "are Larry David",
                "start": 6,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Whose creators are Jerry Seinfeld and Larry David?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WHNP (WP$ Whose)) (NP (NNS creators))) (SQ (VBP are) (NP (NP (NNP Jerry) (NNP Seinfeld)) (CC and) (NP (NNP Larry) (NNP David)))) (. ?)))",
        "id": 807
    },
    {
        "taggedQuestion": "Which TV show is related to <e0> and theme music is composed by  Ron Grainer?",
        "entityMap": {"<e0>": "The Sarah Jane Adventures"},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "TV show",
                "containsRefer": false,
                "originStr": "TV show",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is related to The Sarah Jane Adventures",
                "containsRefer": false,
                "originStr": "is related to The Sarah Jane Adventures",
                "start": 3,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "theme music is composed by Ron Grainer",
                "containsRefer": false,
                "originStr": "theme music is composed by Ron Grainer",
                "start": 8,
                "entityID": 0,
                "end": 14,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which TV show is related to The Sarah Jane Adventures and theme music is composed by  Ron Grainer?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NN TV) (NN show)) (SQ (VBZ is) (VP (VBN related) (PP (IN to) (NP (NP (ADD <e0>)) (CC and) (NP (NP (NN theme) (NN music)) (SBAR (S (VP (VBZ is) (VP (VBN composed) (PP (IN by) (NP (NNP Ron) (NNP Grainer)))))))))))) (. ?)))",
        "id": 808
    },
    {
        "taggedQuestion": "Name the parent company of  <e0> .",
        "entityMap": {"<e0>": "Ford Air Transport Service"},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "name",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the parent company of Ford Air Transport Service",
                "containsRefer": false,
                "originStr": "the parent company of Ford Air Transport Service",
                "start": 1,
                "entityID": 0,
                "end": 6,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Name the parent company of  Ford Air Transport Service .",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Name) (NP (NP (DT the) (NN parent) (NN company)) (PP (IN of) (NP (ADD <e0>))))) (. .)))",
        "id": 809
    },
    {
        "taggedQuestion": "Who  has these major shrines  : Emmitsburg, Maryland and Shrine of St. <e0>?",
        "entityMap": {"<e0>": "Elizabeth Ann Bayley Seton"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "who",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "has these major shrines : Emmitsburg , Maryland",
                "containsRefer": false,
                "originStr": "has these major shrines : Emmitsburg , Maryland",
                "start": 1,
                "entityID": 0,
                "end": 9,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Shrine of St. Elizabeth Ann Bayley Seton",
                "containsRefer": false,
                "originStr": "Shrine of St. Elizabeth Ann Bayley Seton",
                "start": 10,
                "entityID": 0,
                "end": 13,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Who  has these major shrines  : Emmitsburg, Maryland and Shrine of St. Elizabeth Ann Bayley Seton?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP Who)) (SQ (VP (VBZ has) (NP (NP (DT these) (JJ major) (NNS shrines)) (: :) (NP (NP (NNP Emmitsburg) (, ,) (NNP Maryland) (CC and) (NNP Shrine)) (PP (IN of) (NP (NNP St.) (CD <e0>))))))) (. ?)))",
        "id": 810
    },
    {
        "taggedQuestion": "Which region of Bannock is the origin od Spaghetti squash ?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "region of Bannock",
                "containsRefer": false,
                "originStr": "region of Bannock",
                "start": 1,
                "entityID": 0,
                "end": 4,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the origin od Spaghetti squash",
                "containsRefer": false,
                "originStr": "is the origin od Spaghetti squash",
                "start": 4,
                "entityID": 0,
                "end": 10,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which region of Bannock is the origin od Spaghetti squash ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WHNP (WDT Which) (NN region)) (PP (IN of) (NP (NNP Bannock)))) (SQ (VBZ is) (NP (DT the) (NN origin) (NN od) (NN Spaghetti) (NN squash))) (. ?)))",
        "id": 811
    },
    {
        "taggedQuestion": "Where in the us military did <e0> and edwin f hunter work?",
        "entityMap": {"<e0>": "pierre r graham"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "Where",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "in the us military did pierre r graham",
                "containsRefer": false,
                "originStr": "in the us military did pierre r graham",
                "start": 1,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "in the us military did edwin f hunter work",
                "containsRefer": false,
                "originStr": "in the us military did edwin f hunter work",
                "start": 8,
                "entityID": 0,
                "end": 11,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Where in the us military did pierre r graham and edwin f hunter work?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHADVP (WRB Where)) (SQ (VP (PP (IN in) (NP (DT the) (ADJP (NP (PRP us)) (JJ military)))) (VBD did) (NP (NP (ADD <e0>)) (CC and) (NP (NML (NN edwin) (NN f)) (NN hunter) (NN work))))) (. ?)))",
        "id": 812
    },
    {
        "taggedQuestion": "Count everyone who lives in a place where Indian English is an official language .",
        "entityMap": {},
        "nodeNum": 7,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "count",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "everyone",
                "containsRefer": false,
                "originStr": "everyone",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "lives #entity1 language",
                "containsRefer": true,
                "originStr": "lives #entity1 language",
                "start": 3,
                "entityID": 0,
                "end": 14,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "a place",
                "containsRefer": false,
                "originStr": "a place",
                "start": 5,
                "entityID": 1,
                "end": 7,
                "nodeType": 4,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Indian English is an official language",
                "containsRefer": false,
                "originStr": "Indian English is an official language",
                "start": 8,
                "entityID": 1,
                "end": 14,
                "nodeType": 3,
                "nodeID": 6,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Count everyone who lives in a place where Indian English is an official language .",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 5,
                "from": 3,
                "end": 14,
                "to": 4
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 5
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 6
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Count) (NP (NP (NN everyone)) (SBAR (WHNP (WP who)) (S (VP (VBZ lives) (PP (IN in) (NP (NP (DT a) (NN place)) (SBAR (WHADVP (WRB where)) (S (NP (JJ Indian) (NNP English)) (VP (VBZ is) (NP (DT an) (JJ official) (NN language)))))))))))) (. .)))",
        "id": 813
    },
    {
        "taggedQuestion": "Did Raymond Picard take birth in Paris?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "did",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "JUDGE"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Raymond Picard",
                "containsRefer": false,
                "originStr": "Raymond Picard",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "take birth in Paris",
                "containsRefer": false,
                "originStr": "take birth in Paris",
                "start": 3,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Did Raymond Picard take birth in Paris?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SQ (VBD Did) (NP (NNP Raymond) (NNP Picard)) (VP (VB take) (NP (NN birth)) (PP (IN in) (NP (NNP Paris)))) (. ?)))",
        "id": 814
    },
    {
        "taggedQuestion": "How many religions are practiced by diplomats?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "how many",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "religions",
                "containsRefer": false,
                "originStr": "religions",
                "start": 2,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are practiced by diplomats",
                "containsRefer": false,
                "originStr": "are practiced by diplomats",
                "start": 3,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "How many religions are practiced by diplomats?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WHADJP (WRB How) (JJ many)) (NNS religions)) (SQ (VBP are) (VP (VBN practiced) (PP (IN by) (NP (NNS diplomats))))) (. ?)))",
        "id": 815
    },
    {
        "taggedQuestion": "Was Elton John a chairman of a <e0>?",
        "entityMap": {"<e0>": "Watford FC Season"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "was",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "JUDGE"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Elton John",
                "containsRefer": false,
                "originStr": "Elton John",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "a chairman of a Watford FC Season",
                "containsRefer": false,
                "originStr": "a chairman of a Watford FC Season",
                "start": 3,
                "entityID": 0,
                "end": 8,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Was Elton John a chairman of a Watford FC Season?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SQ (VBD Was) (NP (NNP Elton) (NNP John)) (NP (NP (DT a) (NN chairman)) (PP (IN of) (NP (DT a) (NN <e0>)))) (. ?)))",
        "id": 816
    },
    {
        "taggedQuestion": "Which publisher of Lucifer's hammer is also known for Jo Garcia ?",
        "entityMap": {},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "publisher of Lucifer",
                "containsRefer": false,
                "originStr": "publisher of Lucifer",
                "start": 1,
                "entityID": 0,
                "end": 4,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "hammer",
                "containsRefer": false,
                "originStr": "hammer",
                "start": 5,
                "entityID": 0,
                "end": 6,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "known for Jo Garcia",
                "containsRefer": false,
                "originStr": "known for Jo Garcia",
                "start": 8,
                "entityID": 0,
                "end": 12,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which publisher of Lucifer's hammer is also known for Jo Garcia ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NP (NN publisher) (PP (IN of) (NP (NP (NNP Lucifer) (POS 's)) (NN hammer))))) (SQ (VBZ is) (ADVP (RB also)) (VP (VBN known) (PP (IN for) (NP (NNP Jo) (NNP Garcia))))) (. ?)))",
        "id": 817
    },
    {
        "taggedQuestion": "Whom was Tessa Dahl born to?",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "whom",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "was Tessa Dahl born to",
                "containsRefer": false,
                "originStr": "was Tessa Dahl born to",
                "start": 1,
                "entityID": 0,
                "end": 6,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Whom was Tessa Dahl born to?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP Whom)) (SQ (VBD was) (NP (NNP Tessa) (NNP Dahl)) (VP (VBN born) (S (VP (TO to))))) (. ?)))",
        "id": 818
    },
    {
        "taggedQuestion": "Which sport at <e0> is the field of Jon speelman ?",
        "entityMap": {"<e0>": "Polytechnic University of the Philippines Taguig"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "sport at Polytechnic University of the Philippines Taguig",
                "containsRefer": false,
                "originStr": "sport at Polytechnic University of the Philippines Taguig",
                "start": 1,
                "entityID": 0,
                "end": 4,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the field of Jon speelman",
                "containsRefer": false,
                "originStr": "is the field of Jon speelman",
                "start": 4,
                "entityID": 0,
                "end": 10,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which sport at Polytechnic University of the Philippines Taguig is the field of Jon speelman ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WHNP (WDT Which) (NN sport)) (PP (IN at) (NP (NN <e0>)))) (SQ (VBZ is) (NP (NP (DT the) (NN field)) (PP (IN of) (NP (NNP Jon) (NNP speelman))))) (. ?)))",
        "id": 819
    },
    {
        "taggedQuestion": "Count the things people who know linguistics are known for .",
        "entityMap": {},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "count",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the things people",
                "containsRefer": false,
                "originStr": "the things people",
                "start": 1,
                "entityID": 0,
                "end": 4,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are known for",
                "containsRefer": false,
                "originStr": "are known for",
                "start": 7,
                "entityID": 0,
                "end": 10,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "linguistics",
                "containsRefer": false,
                "originStr": "linguistics",
                "start": 6,
                "entityID": 0,
                "end": 7,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Count the things people who know linguistics are known for .",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Count) (NP (NP (DT the) (NNS things) (NNS people)) (SBAR (WHNP (WP who)) (S (VP (VBP know) (SBAR (S (NP (NNS linguistics)) (VP (VBP are) (VP (VBN known) (PP (IN for))))))))))) (. .)))",
        "id": 820
    },
    {
        "taggedQuestion": "Where were <e0> and <e1> born?",
        "entityMap": {
            "<e1>": "havard vad petersson",
            "<e0>": "sverre krogh sundbo"
        },
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "Where",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "sverre krogh sundbo born",
                "containsRefer": false,
                "originStr": "sverre krogh sundbo born",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "havard vad petersson born",
                "containsRefer": false,
                "originStr": "havard vad petersson born",
                "start": 4,
                "entityID": 0,
                "end": 5,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Where were sverre krogh sundbo and havard vad petersson born?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHADVP (WRB Where)) (SQ (VBD were) (NP (NP (ADD <e0>)) (CC and) (NP (ADD <e1>))) (VP (VBN born))) (. ?)))",
        "id": 821
    },
    {
        "taggedQuestion": "Was Cliff Burton in Metallica?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "was",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "JUDGE"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Cliff Burton",
                "containsRefer": false,
                "originStr": "Cliff Burton",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Metallica",
                "containsRefer": false,
                "originStr": "Metallica",
                "start": 4,
                "entityID": 0,
                "end": 5,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Was Cliff Burton in Metallica?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SQ (VBD Was) (NP (NNP Cliff) (NNP Burton)) (PP (IN in) (NP (NNP Metallica))) (. ?)))",
        "id": 822
    },
    {
        "taggedQuestion": "How many religions are followed by organizations which are internationally known as the muslim brotherhood?",
        "entityMap": {},
        "nodeNum": 7,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "how many",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "religions",
                "containsRefer": false,
                "originStr": "religions",
                "start": 2,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are followed by #entity1",
                "containsRefer": true,
                "originStr": "are followed by #entity1",
                "start": 3,
                "entityID": 0,
                "end": 15,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "organizations",
                "containsRefer": false,
                "originStr": "organizations",
                "start": 6,
                "entityID": 1,
                "end": 7,
                "nodeType": 4,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are internationally known as the muslim brotherhood",
                "containsRefer": false,
                "originStr": "are internationally known as the muslim brotherhood",
                "start": 8,
                "entityID": 1,
                "end": 15,
                "nodeType": 3,
                "nodeID": 6,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "How many religions are followed by organizations which are internationally known as the muslim brotherhood?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 6,
                "from": 3,
                "end": 15,
                "to": 4
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 5
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 6
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WHADJP (WRB How) (JJ many)) (NNS religions)) (SQ (VBP are) (VP (VBN followed) (PP (IN by) (NP (NP (NNS organizations)) (SBAR (WHNP (WDT which)) (S (VP (VBP are) (ADVP (RB internationally)) (VP (VBN known) (PP (IN as) (NP (DT the) (JJ muslim) (NN brotherhood))))))))))) (. ?)))",
        "id": 823
    },
    {
        "taggedQuestion": "What are some people born in NY known for?",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are some people born in #entity1",
                "containsRefer": true,
                "originStr": "are some people born in #entity1",
                "start": 1,
                "entityID": 0,
                "end": 9,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "NY",
                "containsRefer": false,
                "originStr": "NY",
                "start": 6,
                "entityID": 1,
                "end": 7,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "known for",
                "containsRefer": false,
                "originStr": "known for",
                "start": 7,
                "entityID": 1,
                "end": 9,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What are some people born in NY known for?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 6,
                "from": 2,
                "end": 9,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBP are) (NP (DT some) (NNS people)) (VP (VBN born) (PP (IN in) (NP (NP (NNP NY)) (VP (VBN known) (PP (IN for))))))) (. ?)))",
        "id": 824
    },
    {
        "taggedQuestion": "Who is the developer of the software which is produced by Claris ?",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "who",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the developer of #entity1",
                "containsRefer": true,
                "originStr": "is the developer of #entity1",
                "start": 1,
                "entityID": 0,
                "end": 12,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the software",
                "containsRefer": false,
                "originStr": "the software",
                "start": 5,
                "entityID": 1,
                "end": 7,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is produced by Claris",
                "containsRefer": false,
                "originStr": "is produced by Claris",
                "start": 8,
                "entityID": 1,
                "end": 12,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Who is the developer of the software which is produced by Claris ?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 5,
                "from": 2,
                "end": 12,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP Who)) (SQ (VBZ is) (NP (NP (DT the) (NN developer)) (PP (IN of) (NP (NP (DT the) (NN software)) (SBAR (WHNP (WDT which)) (S (VP (VBZ is) (VP (VBN produced) (PP (IN by) (NP (NNP Claris))))))))))) (. ?)))",
        "id": 825
    },
    {
        "taggedQuestion": "What is the river whose source is Cowombat  Flat and has its mouth located in Murray Mouth?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the river whose source is Cowombat Flat",
                "containsRefer": false,
                "originStr": "is the river whose source is Cowombat Flat",
                "start": 1,
                "entityID": 0,
                "end": 9,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "has its mouth located in Murray Mouth",
                "containsRefer": false,
                "originStr": "has its mouth located in Murray Mouth",
                "start": 10,
                "entityID": 0,
                "end": 16,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is the river whose source is Cowombat  Flat and has its mouth located in Murray Mouth?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (SQ (VBZ is) (NP (NP (DT the) (NN river)) (SBAR (WHNP (WP$ whose) (NML (NN source))) (S (VP (VBZ is) (ADJP (JJ Cowombat)))))) (ADJP (JJ Flat))) (CC and) (SQ (VBZ has) (NP (PRP$ its) (NN mouth)) (VP (VBN located) (PP (IN in) (NP (NNP Murray) (NNP Mouth)))))) (. ?)))",
        "id": 826
    },
    {
        "taggedQuestion": "Where does the river flow into which begins in Lebrsnik?",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "Where",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "does #entity1 flow into",
                "containsRefer": true,
                "originStr": "does #entity1 flow into",
                "start": 1,
                "entityID": 0,
                "end": 10,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "river",
                "containsRefer": false,
                "originStr": "river",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "begins in Lebrsnik",
                "containsRefer": false,
                "originStr": "begins in Lebrsnik",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Where does the river flow into which begins in Lebrsnik?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": -1,
                "from": 2,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHADVP (WRB Where)) (SQ (VP (VBZ does) (NP (DT the) (NN river) (NN flow)) (PP (IN into) (SBAR (WHNP (WDT which)) (S (VP (VBZ begins) (PP (IN in) (NP (NNP Lebrsnik))))))))) (. ?)))",
        "id": 827
    },
    {
        "taggedQuestion": "What is the government type of Ancient Rome ?",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the government type of Ancient Rome",
                "containsRefer": false,
                "originStr": "is the government type of Ancient Rome",
                "start": 1,
                "entityID": 0,
                "end": 8,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is the government type of Ancient Rome ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (NP (DT the) (NN government) (NN type)) (PP (IN of) (NP (JJ Ancient) (NNP Rome))))) (. ?)))",
        "id": 828
    },
    {
        "taggedQuestion": "Which director of <e0> also released Mojo Priest ?",
        "entityMap": {"<e0>": "On deadly Ground"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "director of On deadly Ground",
                "containsRefer": false,
                "originStr": "director of On deadly Ground",
                "start": 1,
                "entityID": 0,
                "end": 4,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "also released Mojo Priest",
                "containsRefer": false,
                "originStr": "also released Mojo Priest",
                "start": 4,
                "entityID": 0,
                "end": 8,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which director of On deadly Ground also released Mojo Priest ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NP (NN director) (PP (IN of) (NP (NN <e0>))))) (SQ (VP (ADVP (RB also)) (VBD released) (NP (NNP Mojo) (NNP Priest)))) (. ?)))",
        "id": 829
    },
    {
        "taggedQuestion": "What is the <e0> whose channel's parent organisation is Fox Sports?",
        "entityMap": {"<e0>": "television show"},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the television show",
                "containsRefer": false,
                "originStr": "the television show",
                "start": 2,
                "entityID": 0,
                "end": 4,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "channel is #entity1",
                "containsRefer": true,
                "originStr": "channel is #entity1",
                "start": 9,
                "entityID": 0,
                "end": 12,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "parent organisation is Fox Sports",
                "containsRefer": false,
                "originStr": "parent organisation is Fox Sports",
                "start": 7,
                "entityID": 1,
                "end": 12,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is the television show whose channel's parent organisation is Fox Sports?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3,
                "info": "whose channel 's parent organisation"
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 7,
                "from": 3,
                "end": 12,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (NP (DT the) (NN <e0>)) (SBAR (WHNP (WP$ whose) (NP (NML (NP (NN channel) (POS 's))) (NN parent) (NN organisation))) (S (VP (VBZ is) (NP (NNP Fox) (NNPS Sports))))))) (. ?)))",
        "id": 830
    },
    {
        "taggedQuestion": "Who commanded the <e0> and made <e1>'d famous?",
        "entityMap": {
            "<e1>": "Fatima bint Sa",
            "<e0>": "invasion of Buwat"
        },
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "who",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "commanded the invasion of Buwat",
                "containsRefer": false,
                "originStr": "commanded the invasion of Buwat",
                "start": 1,
                "entityID": 0,
                "end": 4,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "'d famous",
                "containsRefer": false,
                "originStr": "'d famous",
                "start": 7,
                "entityID": 0,
                "end": 9,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Fatima bint Sa",
                "containsRefer": false,
                "originStr": "Fatima bint Sa",
                "start": 6,
                "entityID": 0,
                "end": 7,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Who commanded the invasion of Buwat and made Fatima bint Sa'd famous?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP Who)) (SQ (VP (VP (VBD commanded) (NP (DT the) (NN <e0>))) (CC and) (VP (VBN made) (SBAR (S (NP (NN <e1>)) (VP (VBD 'd) (S (ADJP (JJ famous))))))))) (. ?)))",
        "id": 831
    },
    {
        "taggedQuestion": "What is the home ground of the clubs managed by Ciao Zanardi?",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the home ground of #entity1",
                "containsRefer": true,
                "originStr": "is the home ground of #entity1",
                "start": 1,
                "entityID": 0,
                "end": 12,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the clubs",
                "containsRefer": false,
                "originStr": "the clubs",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "managed by Ciao Zanardi",
                "containsRefer": false,
                "originStr": "managed by Ciao Zanardi",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is the home ground of the clubs managed by Ciao Zanardi?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": -1,
                "from": 2,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (NP (DT the) (NN home) (NN ground)) (PP (IN of) (NP (DT the) (NNS clubs)))) (VP (VBN managed) (PP (IN by) (NP (NNP Ciao) (NNP Zanardi))))) (. ?)))",
        "id": 832
    },
    {
        "taggedQuestion": "What is the country with native language as Languages of Ethiopia?",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the country with native language as Languages of Ethiopia",
                "containsRefer": false,
                "originStr": "is the country with native language as Languages of Ethiopia",
                "start": 1,
                "entityID": 0,
                "end": 11,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is the country with native language as Languages of Ethiopia?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (NP (DT the) (NN country)) (PP (IN with) (NP (NP (JJ native) (NN language)) (PP (IN as) (NP (NP (NNPS Languages)) (PP (IN of) (NP (NNP Ethiopia))))))))) (. ?)))",
        "id": 833
    },
    {
        "taggedQuestion": "What is the band with previous members  Kevin Jonas and Joe Jonas?",
        "entityMap": {},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the band",
                "containsRefer": false,
                "originStr": "is the band",
                "start": 1,
                "entityID": 0,
                "end": 12,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "previous members Kevin Jonas",
                "containsRefer": false,
                "originStr": "previous members Kevin Jonas",
                "start": 0,
                "entityID": 0,
                "end": 4,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "previous members Joe Jonas",
                "containsRefer": false,
                "originStr": "previous members Joe Jonas",
                "start": 5,
                "entityID": 0,
                "end": 6,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is the band with previous members  Kevin Jonas and Joe Jonas?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (NP (DT the) (NN band)) (PP (IN with) (NP (NP (NP (JJ previous) (NNS members)) (NP (NNP Kevin) (NNP Jonas))) (CC and) (NP (NNP Joe) (NNP Jonas)))))) (. ?)))",
        "id": 834
    },
    {
        "taggedQuestion": "List the people with Scientology as their religious belief?",
        "entityMap": {},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "list",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the people",
                "containsRefer": false,
                "originStr": "the people",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Scientology",
                "containsRefer": false,
                "originStr": "Scientology",
                "start": 4,
                "entityID": 0,
                "end": 5,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "their religious belief",
                "containsRefer": false,
                "originStr": "their religious belief",
                "start": 6,
                "entityID": 0,
                "end": 9,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "List the people with Scientology as their religious belief?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SQ (VP (VB List) (NP (DT the) (NNS people)) (PP (IN with) (NP (NNP Scientology))) (PP (IN as) (NP (PRP$ their) (JJ religious) (NN belief)))) (. ?)))",
        "id": 835
    },
    {
        "taggedQuestion": "How many fictional characters were humans?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "how many",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "fictional characters",
                "containsRefer": false,
                "originStr": "fictional characters",
                "start": 2,
                "entityID": 0,
                "end": 4,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "were humans",
                "containsRefer": false,
                "originStr": "were humans",
                "start": 4,
                "entityID": 0,
                "end": 6,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "How many fictional characters were humans?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WHADJP (WRB How) (JJ many)) (JJ fictional) (NNS characters)) (SQ (VBD were) (NP (NNS humans))) (. ?)))",
        "id": 836
    },
    {
        "taggedQuestion": "Where was Girls (The Prodigy song)  recorded ?",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "Where",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "was Girls(The Prodigy song) recorded",
                "containsRefer": false,
                "originStr": "was Girls(The Prodigy song) recorded",
                "start": 1,
                "entityID": 0,
                "end": 9,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Where was Girls (The Prodigy song)  recorded ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHADVP (WRB Where)) (SQ (VBD was) (NP (NP (NP (NNS Girls)) (-LRB- -LRB-) (NP (DT The) (NNP Prodigy) (NN song)) (-RRB- -RRB-)) (VP (VBN recorded)))) (. ?)))",
        "id": 837
    },
    {
        "taggedQuestion": "How many TV shows' networks are headquarterd in NY?",
        "entityMap": {},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "how many",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "TV",
                "containsRefer": false,
                "originStr": "TV",
                "start": 2,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are headquarterd in NY",
                "containsRefer": false,
                "originStr": "are headquarterd in NY",
                "start": 6,
                "entityID": 0,
                "end": 10,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "shows ' networks",
                "containsRefer": false,
                "originStr": "shows ' networks",
                "start": 3,
                "entityID": 0,
                "end": 6,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "How many TV shows' networks are headquarterd in NY?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WHADJP (WRB How) (JJ many)) (NN TV)) (SQ (NP (NP (NNS shows) (POS ')) (NNS networks)) (VP (VBP are) (ADJP (JJ headquarterd) (PP (IN in) (NP (NNP NY)))))) (. ?)))",
        "id": 838
    },
    {
        "taggedQuestion": "Does StandBy records distribute via Sony?",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "does standby",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "JUDGE"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "records distribute via Sony",
                "containsRefer": false,
                "originStr": "records distribute via Sony",
                "start": 2,
                "entityID": 0,
                "end": 6,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Does StandBy records distribute via Sony?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SQ (SQ (VBZ Does) (NP (NN StandBy))) (S (NP (NNS records)) (VP (VBP distribute) (PP (IN via) (NP (NNP Sony))))) (. ?)))",
        "id": 839
    },
    {
        "taggedQuestion": "Give me some shows owned by BBC one and BBC hd.",
        "entityMap": {},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "give me",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "some shows",
                "containsRefer": false,
                "originStr": "some shows",
                "start": 2,
                "entityID": 0,
                "end": 4,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "owned by BBC one",
                "containsRefer": false,
                "originStr": "owned by BBC one",
                "start": 4,
                "entityID": 0,
                "end": 8,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "owned by BBC hd",
                "containsRefer": false,
                "originStr": "owned by BBC hd",
                "start": 9,
                "entityID": 0,
                "end": 10,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Give me some shows owned by BBC one and BBC hd.",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Give) (NP (PRP me)) (NP (NP (DT some) (NNS shows)) (VP (VBN owned) (PP (IN by) (NP (NP (NNP BBC) (CD one)) (CC and) (NP (NNP BBC) (NNP hd))))))) (. .)))",
        "id": 840
    },
    {
        "taggedQuestion": "How many teams have rented stadiums in Canada?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "how many",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "teams",
                "containsRefer": false,
                "originStr": "teams",
                "start": 2,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "have rented stadiums in Canada",
                "containsRefer": false,
                "originStr": "have rented stadiums in Canada",
                "start": 3,
                "entityID": 0,
                "end": 8,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "How many teams have rented stadiums in Canada?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WHADJP (WRB How) (JJ many)) (NNS teams)) (SQ (VP (VBP have) (NP (VBN rented) (NNS stadiums)) (PP (IN in) (NP (NNP Canada))))) (. ?)))",
        "id": 841
    },
    {
        "taggedQuestion": "List the awards won by the film director of Chicken Run?",
        "entityMap": {},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "list",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the awards won by #entity1",
                "containsRefer": true,
                "originStr": "the awards won by #entity1",
                "start": 1,
                "entityID": 0,
                "end": 11,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the film director of Chicken Run",
                "containsRefer": false,
                "originStr": "the film director of Chicken Run",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "List the awards won by the film director of Chicken Run?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": -1,
                "from": 2,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB List) (S (NP (DT the) (NNS awards)) (VP (VBN won) (PP (IN by) (NP (NP (DT the) (NN film) (NN director)) (PP (IN of) (NP (NNP Chicken) (NNP Run)))))))) (. ?)))",
        "id": 842
    },
    {
        "taggedQuestion": "What territory of <e0> was the battle of Raoul Magrin-Vernerey fought ?",
        "entityMap": {
            "<e1>": "Raoul Magrin - Vernerey",
            "<e0>": "Sino French War"
        },
        "nodeNum": 7,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "territory of Sino French War",
                "containsRefer": false,
                "originStr": "territory of Sino French War",
                "start": 1,
                "entityID": 0,
                "end": 4,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "was the battle of #entity1",
                "containsRefer": true,
                "originStr": "was the battle of #entity1",
                "start": 4,
                "entityID": 0,
                "end": 13,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Raoul Magrin-Vernerey",
                "containsRefer": false,
                "originStr": "Raoul Magrin-Vernerey",
                "start": 8,
                "entityID": 1,
                "end": 12,
                "nodeType": 4,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            },
            {
                "str": "fought",
                "containsRefer": false,
                "originStr": "fought",
                "start": 12,
                "entityID": 1,
                "end": 13,
                "nodeType": 3,
                "nodeID": 6,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What territory of Sino French War was the battle of Raoul Magrin-Vernerey fought ?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 8,
                "from": 3,
                "end": 13,
                "to": 4
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 5
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 6
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT What) (NP (NN territory) (PP (IN of) (NP (ADD <e0>))))) (SQ (VBD was) (NP (NP (DT the) (NN battle)) (PP (IN of) (NP (NP (NNP Raoul) (NNP Magrin) (HYPH -) (NNP Vernerey)) (SBAR (S (VP (VBD fought)))))))) (. ?)))",
        "id": 843
    },
    {
        "taggedQuestion": "List the  outflow of Lake Uniamsi?",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "list",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the outflow of Lake Uniamsi",
                "containsRefer": false,
                "originStr": "the outflow of Lake Uniamsi",
                "start": 1,
                "entityID": 0,
                "end": 6,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "List the  outflow of Lake Uniamsi?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SQ (VP (VB List) (NP (NP (DT the) (NN outflow)) (PP (IN of) (NP (NNP Lake) (NNP Uniamsi))))) (. ?)))",
        "id": 844
    },
    {
        "taggedQuestion": "Did John Byrne create Emma Frost?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "did",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "JUDGE"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "John Byrne",
                "containsRefer": false,
                "originStr": "John Byrne",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "create Emma Frost",
                "containsRefer": false,
                "originStr": "create Emma Frost",
                "start": 3,
                "entityID": 0,
                "end": 6,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Did John Byrne create Emma Frost?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SQ (VBD Did) (NP (NNP John) (NNP Byrne)) (VP (VB create) (NP (NNP Emma) (NNP Frost))) (. ?)))",
        "id": 845
    },
    {
        "taggedQuestion": "Was Heinrich Himmler ever a commanders of <e0>?",
        "entityMap": {"<e0>": "Army Group Oberrhein"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "was",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "JUDGE"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Heinrich Himmler",
                "containsRefer": false,
                "originStr": "Heinrich Himmler",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "ever a commanders of Army Group Oberrhein",
                "containsRefer": false,
                "originStr": "ever a commanders of Army Group Oberrhein",
                "start": 3,
                "entityID": 0,
                "end": 8,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Was Heinrich Himmler ever a commanders of Army Group Oberrhein?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SQ (VBD Was) (NP (NNP Heinrich) (NNP Himmler)) (NP (NP (RB ever) (DT a) (NNS commanders)) (PP (IN of) (NP (NN <e0>)))) (. ?)))",
        "id": 846
    },
    {
        "taggedQuestion": "List the universities from a country where Norwegian language is officially accepted.",
        "entityMap": {},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "list",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the universities",
                "containsRefer": false,
                "originStr": "the universities",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "a country",
                "containsRefer": false,
                "originStr": "a country",
                "start": 4,
                "entityID": 0,
                "end": 6,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Norwegian language is officially accepted",
                "containsRefer": false,
                "originStr": "Norwegian language is officially accepted",
                "start": 6,
                "entityID": 0,
                "end": 12,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "List the universities from a country where Norwegian language is officially accepted.",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB List) (NP (DT the) (NNS universities)) (PP (IN from) (NP (DT a) (NN country))) (SBAR (WHADVP (WRB where)) (S (NP (JJ Norwegian) (NN language)) (VP (VBZ is) (ADVP (RB officially)) (VP (VBN accepted)))))) (. .)))",
        "id": 847
    },
    {
        "taggedQuestion": "Name the incumbent of Linda Jenness .",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "name",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the incumbent of Linda Jenness",
                "containsRefer": false,
                "originStr": "the incumbent of Linda Jenness",
                "start": 1,
                "entityID": 0,
                "end": 6,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Name the incumbent of Linda Jenness .",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Name) (NP (NP (DT the) (NN incumbent)) (PP (IN of) (NP (NNP Linda) (NNP Jenness))))) (. .)))",
        "id": 848
    },
    {
        "taggedQuestion": "Which companies makes cars assembled in Karachi, Pakistan?",
        "entityMap": {},
        "nodeNum": 7,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "makes #entity1",
                "containsRefer": true,
                "originStr": "makes #entity1",
                "start": 2,
                "entityID": 0,
                "end": 9,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "companies",
                "containsRefer": false,
                "originStr": "companies",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "cars",
                "containsRefer": false,
                "originStr": "cars",
                "start": 3,
                "entityID": 1,
                "end": 4,
                "nodeType": 4,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            },
            {
                "str": "assembled in Karachi , Pakistan",
                "containsRefer": false,
                "originStr": "assembled in Karachi , Pakistan",
                "start": 4,
                "entityID": 1,
                "end": 9,
                "nodeType": 3,
                "nodeID": 6,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which companies makes cars assembled in Karachi, Pakistan?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 3,
                "from": 2,
                "end": 9,
                "to": 4
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 5
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 6
            }
        ],
        "syntaxTreeText": "(ROOT (SBAR (WHNP (WDT Which)) (S (NP (NNS companies)) (VP (VBZ makes) (NP (NP (NNS cars)) (VP (VBN assembled) (PP (IN in) (NP (NNP Karachi) (, ,) (NNP Pakistan))))))) (. ?)))",
        "id": 849
    },
    {
        "taggedQuestion": "Which company founded by Fusajiro Yamauchi also provides services of Nintendo eShop ?",
        "entityMap": {},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "company",
                "containsRefer": false,
                "originStr": "company",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "founded by Fusajiro Yamauchi",
                "containsRefer": false,
                "originStr": "founded by Fusajiro Yamauchi",
                "start": 2,
                "entityID": 0,
                "end": 6,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "also provides services of Nintendo eShop",
                "containsRefer": false,
                "originStr": "also provides services of Nintendo eShop",
                "start": 6,
                "entityID": 0,
                "end": 12,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which company founded by Fusajiro Yamauchi also provides services of Nintendo eShop ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WHNP (WDT Which) (NN company)) (SBAR (S (VP (VBN founded) (PP (IN by) (NP (NNP Fusajiro) (NNP Yamauchi))))))) (SQ (VP (ADVP (RB also)) (VBZ provides) (NP (NP (NNS services)) (PP (IN of) (NP (NNP Nintendo) (NNP eShop)))))) (. ?)))",
        "id": 850
    },
    {
        "taggedQuestion": "Which countries does the sea lie on whose shore is the city of Cumana?",
        "entityMap": {},
        "nodeNum": 7,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "countries",
                "containsRefer": false,
                "originStr": "countries",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "does the se #entity1",
                "containsRefer": true,
                "originStr": "does the se #entity1",
                "start": 2,
                "entityID": 0,
                "end": 14,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "lie on",
                "containsRefer": false,
                "originStr": "lie on",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 4,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            },
            {
                "str": "shore is the city of Cumana",
                "containsRefer": false,
                "originStr": "shore is the city of Cumana",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 3,
                "nodeID": 6,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which countries does the sea lie on whose shore is the city of Cumana?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 5
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 6
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NNS countries)) (SQ (VP (VBZ does) (NP (DT the) (NN sea) (NN lie)) (PP (IN on) (SBAR (WHNP (WP$ whose) (NML (NN shore))) (S (VP (VBZ is) (NP (NP (DT the) (NN city)) (PP (IN of) (NP (NNP Cumana)))))))))) (. ?)))",
        "id": 851
    },
    {
        "taggedQuestion": "Tirana is the largest city of which country?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "country",
                "containsRefer": false,
                "originStr": "country",
                "start": 7,
                "entityID": 0,
                "end": 9,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Tirana is the largest city of",
                "containsRefer": false,
                "originStr": "Tirana is the largest city of",
                "start": 0,
                "entityID": 0,
                "end": 6,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Tirana is the largest city of which country?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (S (NP (NNP Tirana)) (VP (VBZ is) (NP (NP (DT the) (JJS largest) (NN city)) (WHPP (IN of) (WHNP (WDT which) (NN country))))) (. ?)))",
        "id": 852
    },
    {
        "taggedQuestion": "Which countries are the people from who are an academic authority of the <e0> species?",
        "entityMap": {"<e0>": "Western pygmy blue"},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "countries",
                "containsRefer": false,
                "originStr": "countries",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are the people from #entity1",
                "containsRefer": true,
                "originStr": "are the people from #entity1",
                "start": 2,
                "entityID": 0,
                "end": 15,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are an academic authority of the Western pygmy blue species",
                "containsRefer": false,
                "originStr": "are an academic authority of the Western pygmy blue species",
                "start": 7,
                "entityID": 1,
                "end": 15,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which countries are the people from who are an academic authority of the Western pygmy blue species?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 6,
                "from": 3,
                "end": 15,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NNS countries)) (SQ (VBP are) (NP (NP (DT the) (NNS people)) (PP (IN from) (SBAR (WHNP (WP who)) (S (VP (VBP are) (NP (NP (DT an) (JJ academic) (NN authority)) (PP (IN of) (NP (DT the) (NN <e0>) (NNS species)))))))))) (. ?)))",
        "id": 853
    },
    {
        "taggedQuestion": "Where is the headquarters of Sigma TV?",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "Where",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the headquarters of Sigma TV",
                "containsRefer": false,
                "originStr": "is the headquarters of Sigma TV",
                "start": 1,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Where is the headquarters of Sigma TV?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHADVP (WRB Where)) (SQ (VBZ is) (NP (NP (DT the) (NN headquarters)) (PP (IN of) (NP (NNP Sigma) (NNP TV))))) (. ?)))",
        "id": 854
    },
    {
        "taggedQuestion": "Which scientist was advised by <e0>?",
        "entityMap": {"<e0>": "John Robert Woodyard"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "scientist",
                "containsRefer": false,
                "originStr": "scientist",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "was advised by John Robert Woodyard",
                "containsRefer": false,
                "originStr": "was advised by John Robert Woodyard",
                "start": 2,
                "entityID": 0,
                "end": 6,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which scientist was advised by John Robert Woodyard?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NN scientist)) (SQ (VBD was) (VP (VBN advised) (PP (IN by) (NP (NN <e0>))))) (. ?)))",
        "id": 855
    },
    {
        "taggedQuestion": "What is the launch site of the Juno I which was also the ground of 2016 <e0> season ?",
        "entityMap": {"<e0>": "Fort Lauderdale Strikers"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the launch site of the Juno I which",
                "containsRefer": false,
                "originStr": "is the launch site of the Juno I which",
                "start": -1,
                "entityID": 0,
                "end": 8,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the ground of 2016 Fort Lauderdale Strikers season",
                "containsRefer": false,
                "originStr": "the ground of 2016 Fort Lauderdale Strikers season",
                "start": -7,
                "entityID": 0,
                "end": -1,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is the launch site of the Juno I which was also the ground of 2016 Fort Lauderdale Strikers season ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VP (VBZ is) (NP (NP (DT the) (NN launch) (NN site)) (PP (IN of) (NP (DT the) (NNP Juno))))) (NP (PRP I)) (SBAR (WHNP (WDT which)) (S (VP (VBD was) (ADVP (RB also)) (NP (NP (DT the) (NN ground)) (PP (IN of) (NP (CD 2016)))))))) (FRAG (NP (ADD <e0>)) (NP (NN season))) (. ?)))",
        "id": 856
    },
    {
        "taggedQuestion": "Who has been married to both Penny Lancaster and Alana Stewart?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "who",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "has been married to Penny Lancaster",
                "containsRefer": false,
                "originStr": "has been married to Penny Lancaster",
                "start": 0,
                "entityID": 0,
                "end": 6,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "has been married to Penny Alana Stewart",
                "containsRefer": false,
                "originStr": "has been married to Penny Alana Stewart",
                "start": 7,
                "entityID": 0,
                "end": 8,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Who has been married to both Penny Lancaster and Alana Stewart?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP Who)) (SQ (VP (VBZ has) (VP (VBN been) (VP (VBN married) (PP (IN to) (NP (DT both) (NN Penny) (NNP Lancaster) (CC and) (NNP Alana) (NNP Stewart))))))) (. ?)))",
        "id": 857
    },
    {
        "taggedQuestion": "Count the affiliations of <e0>.",
        "entityMap": {"<e0>": "International Union of Anarchists"},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "count",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the affiliations of International Union of Anarchists",
                "containsRefer": false,
                "originStr": "the affiliations of International Union of Anarchists",
                "start": 1,
                "entityID": 0,
                "end": 5,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Count the affiliations of International Union of Anarchists.",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Count) (NP (NP (DT the) (NNS affiliations)) (PP (IN of) (NP (ADD <e0>))))) (. .)))",
        "id": 858
    },
    {
        "taggedQuestion": "What is the alma mater of the scientist  whose PhD advisor is Jean-Claude Latombe ?",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the alma mater of #entity1",
                "containsRefer": true,
                "originStr": "is the alma mater of #entity1",
                "start": 1,
                "entityID": 0,
                "end": 16,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the scientist",
                "containsRefer": false,
                "originStr": "the scientist",
                "start": 6,
                "entityID": 1,
                "end": 8,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "whose phd advisor is Jean-Claude Latombe",
                "containsRefer": false,
                "originStr": "whose phd advisor is Jean-Claude Latombe",
                "start": 10,
                "entityID": 1,
                "end": 16,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is the alma mater of the scientist  whose PhD advisor is Jean-Claude Latombe ?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 6,
                "from": 2,
                "end": 16,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5,
                "info": "whose phd"
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (NP (DT the) (NN alma) (NN mater)) (PP (IN of) (NP (NP (DT the) (NN scientist)) (SBAR (WHNP (WP$ whose) (NN PhD)) (S (NP (NN advisor)) (VP (VBZ is) (NP (NNP Jean) (HYPH -) (NNP Claude) (NNP Latombe))))))))) (. ?)))",
        "id": 859
    },
    {
        "taggedQuestion": "List the people residing in Wilton, Connecticut?",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "list",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the people residing in Wilton , Connecticut",
                "containsRefer": false,
                "originStr": "the people residing in Wilton , Connecticut",
                "start": 1,
                "entityID": 0,
                "end": 8,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "List the people residing in Wilton, Connecticut?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB List) (S (NP (DT the) (NNS people)) (VP (VBG residing) (PP (IN in) (NP (NNP Wilton) (, ,) (NNP Connecticut)))))) (. ?)))",
        "id": 860
    },
    {
        "taggedQuestion": "What is the Location of the <e1> which is also the state of <e0> ?",
        "entityMap": {
            "<e1>": "Peetz Table Wind Energy Center",
            "<e0>": "Ben Nighthorse Campbell"
        },
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the Location of the Peetz Table Wind Energy Center which",
                "containsRefer": false,
                "originStr": "is the Location of the Peetz Table Wind Energy Center which",
                "start": 1,
                "entityID": 0,
                "end": 8,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the state of Ben Nighthorse Campbell",
                "containsRefer": false,
                "originStr": "the state of Ben Nighthorse Campbell",
                "start": 10,
                "entityID": 0,
                "end": 14,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is the Location of the Peetz Table Wind Energy Center which is also the state of Ben Nighthorse Campbell ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (NP (DT the) (NN Location)) (PP (IN of) (NP (NP (DT the) (NN <e1>)) (SBAR (WHNP (WDT which)) (S (VP (VBZ is) (ADVP (RB also)) (NP (NP (DT the) (NN state)) (PP (IN of) (NP (NN <e0>))))))))))) (. ?)))",
        "id": 861
    },
    {
        "taggedQuestion": "Count the water bodies that flow into the North Sea.",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "count",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the water bodies",
                "containsRefer": false,
                "originStr": "the water bodies",
                "start": 1,
                "entityID": 0,
                "end": 4,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "flow into the North Sea",
                "containsRefer": false,
                "originStr": "flow into the North Sea",
                "start": 5,
                "entityID": 0,
                "end": 10,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Count the water bodies that flow into the North Sea.",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Count) (NP (NP (DT the) (NN water) (NNS bodies)) (SBAR (WHNP (WDT that)) (S (VP (VBP flow) (PP (IN into) (NP (DT the) (NNP North) (NNP Sea)))))))) (. .)))",
        "id": 862
    },
    {
        "taggedQuestion": "Who was the First Driver of <e0> ?",
        "entityMap": {"<e0>": "1999 San Marino Grand Prix"},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "who",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "was the First Driver of 1999 San Marino Grand Prix",
                "containsRefer": false,
                "originStr": "was the First Driver of 1999 San Marino Grand Prix",
                "start": 1,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Who was the First Driver of 1999 San Marino Grand Prix ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP Who)) (SQ (VBD was) (NP (NP (DT the) (JJ First) (NN Driver)) (PP (IN of) (NP (NN <e0>))))) (. ?)))",
        "id": 863
    },
    {
        "taggedQuestion": "Bantam Spectra is the publisher of which series?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "series",
                "containsRefer": false,
                "originStr": "series",
                "start": 7,
                "entityID": 0,
                "end": 9,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Bantam Spectra is the publisher of",
                "containsRefer": false,
                "originStr": "Bantam Spectra is the publisher of",
                "start": 0,
                "entityID": 0,
                "end": 6,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Bantam Spectra is the publisher of which series?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (S (NP (NNP Bantam) (NNP Spectra)) (VP (VBZ is) (NP (NP (DT the) (NN publisher)) (PP (IN of) (NP (WDT which) (NN series))))) (. ?)))",
        "id": 864
    },
    {
        "taggedQuestion": "Where is the sister station of <e0> located?",
        "entityMap": {"<e0>": "Al Arabiya 99"},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "Where",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is #entity1 located",
                "containsRefer": true,
                "originStr": "is #entity1 located",
                "start": 1,
                "entityID": 0,
                "end": 8,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the sister station of Al Arabiya 99",
                "containsRefer": false,
                "originStr": "the sister station of Al Arabiya 99",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Where is the sister station of Al Arabiya 99 located?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": -1,
                "from": 2,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHADVP (WRB Where)) (SQ (VBZ is) (NP (NP (DT the) (NN sister) (NN station)) (PP (IN of) (NP (NN <e0>)))) (VP (VBN located))) (. ?)))",
        "id": 865
    },
    {
        "taggedQuestion": "Which common prime minister did Graham Richardson and Bon McMullan serve ?",
        "entityMap": {},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "common prime minister",
                "containsRefer": false,
                "originStr": "common prime minister",
                "start": 1,
                "entityID": 0,
                "end": 4,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Graham Richardson serve",
                "containsRefer": false,
                "originStr": "Graham Richardson serve",
                "start": 4,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Bon McMullan serve",
                "containsRefer": false,
                "originStr": "Bon McMullan serve",
                "start": 8,
                "entityID": 0,
                "end": 10,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which common prime minister did Graham Richardson and Bon McMullan serve ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NP (NP (JJ common)) (NP (JJ prime) (NN minister)))) (SQ (VBD did) (NP (NP (NNP Graham) (NNP Richardson)) (CC and) (NP (NNP Bon) (NNP McMullan))) (VP (VB serve))) (. ?)))",
        "id": 866
    },
    {
        "taggedQuestion": "How many things are produced by companies located in Tehran?",
        "entityMap": {},
        "nodeNum": 7,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "how many",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "things",
                "containsRefer": false,
                "originStr": "things",
                "start": 2,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are produced by #entity1",
                "containsRefer": true,
                "originStr": "are produced by #entity1",
                "start": 3,
                "entityID": 0,
                "end": 10,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "companies",
                "containsRefer": false,
                "originStr": "companies",
                "start": 6,
                "entityID": 1,
                "end": 7,
                "nodeType": 4,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            },
            {
                "str": "located in Tehran",
                "containsRefer": false,
                "originStr": "located in Tehran",
                "start": 7,
                "entityID": 1,
                "end": 10,
                "nodeType": 3,
                "nodeID": 6,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "How many things are produced by companies located in Tehran?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 6,
                "from": 3,
                "end": 10,
                "to": 4
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 5
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 6
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WHADJP (WRB How) (JJ many)) (NNS things)) (SQ (VBP are) (VP (VBN produced) (PP (IN by) (NP (NP (NNS companies)) (VP (VBN located) (PP (IN in) (NP (NNP Tehran)))))))) (. ?)))",
        "id": 867
    },
    {
        "taggedQuestion": "Which is the common past team of the Charlie Justice (American football player) and Bobby Hoppe ?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the common past team of the Charlie Justice (American football player)",
                "containsRefer": false,
                "originStr": "is the common past team of the Charlie Justice (American football player)",
                "start": 1,
                "entityID": 0,
                "end": 15,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the common past team of Bobby Hoppe",
                "containsRefer": false,
                "originStr": "is the common past team of Bobby Hoppe",
                "start": 16,
                "entityID": 0,
                "end": 17,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which is the common past team of the Charlie Justice (American football player) and Bobby Hoppe ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which)) (SQ (VBZ is) (NP (NP (DT the) (JJ common) (JJ past) (NN team)) (PP (IN of) (NP (NP (NP (DT the) (NNP Charlie) (NNP Justice)) (-LRB- -LRB-) (NP (JJ American) (NN football) (NN player)) (-RRB- -RRB-)) (CC and) (NP (NNP Bobby) (NNP Hoppe)))))) (. ?)))",
        "id": 868
    },
    {
        "taggedQuestion": "Name the officeholder who hasa child named Augustus and has an associate named Marcus Bibulus .",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "name",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "hasa child d Augustus",
                "containsRefer": false,
                "originStr": "hasa child d Augustus",
                "start": 0,
                "entityID": 0,
                "end": 7,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "has an associate d Marcus Bibulus",
                "containsRefer": false,
                "originStr": "has an associate d Marcus Bibulus",
                "start": 8,
                "entityID": 0,
                "end": 13,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Name the officeholder who hasa child named Augustus and has an associate named Marcus Bibulus .",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SINV (SINV (VP (VB Name) (NP (NP (DT the) (NN officeholder)) (SBAR (WHNP (WP who)) (S (VP (VBP hasa) (NP (NP (NN child)) (VP (VBN named)))))))) (NP (NNP Augustus))) (CC and) (SINV (VBZ has) (NP (DT an) (NN associate)) (VP (VBN named) (NP (NNP Marcus) (NNP Bibulus)))) (. .)))",
        "id": 869
    },
    {
        "taggedQuestion": "Which party won both the general electoin and the andhra pradesh election in 2004?",
        "entityMap": {},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "party",
                "containsRefer": false,
                "originStr": "party",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the andhra pradesh election in 2004",
                "containsRefer": false,
                "originStr": "the andhra pradesh election in 2004",
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "won both the general electoin",
                "containsRefer": false,
                "originStr": "won both the general electoin",
                "start": 2,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which party won both the general electoin and the andhra pradesh election in 2004?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NN party)) (SQ (VP (VBD won) (NP (CC both) (NP (DT the) (JJ general) (NN electoin)) (CC and) (NP (DT the) (NN andhra) (NN pradesh) (NN election))) (PP (IN in) (NP (CD 2004))))) (. ?)))",
        "id": 870
    },
    {
        "taggedQuestion": "Give me someone on the board of trinity house.",
        "entityMap": {},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "give me",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "someone on #entity1",
                "containsRefer": true,
                "originStr": "someone on #entity1",
                "start": 2,
                "entityID": 0,
                "end": 9,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the board of trinity house",
                "containsRefer": false,
                "originStr": "the board of trinity house",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Give me someone on the board of trinity house.",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": -1,
                "from": 2,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Give) (NP (PRP me)) (NP (NP (NN someone)) (PP (IN on) (NP (NP (DT the) (NN board)) (PP (IN of) (NP (NN trinity) (NN house))))))) (. .)))",
        "id": 871
    },
    {
        "taggedQuestion": "Whose leaders are Willem-Alexander and Fredis Refunjol?",
        "entityMap": {},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "whose",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "leaders",
                "containsRefer": false,
                "originStr": "leaders",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are Willem-Alexander",
                "containsRefer": false,
                "originStr": "are Willem-Alexander",
                "start": 2,
                "entityID": 0,
                "end": 6,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are Fredis Refunjol",
                "containsRefer": false,
                "originStr": "are Fredis Refunjol",
                "start": 7,
                "entityID": 0,
                "end": 8,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Whose leaders are Willem-Alexander and Fredis Refunjol?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WHNP (WP$ Whose)) (NP (NNS leaders))) (SQ (VBP are) (NP (NP (NNP Willem) (HYPH -) (NNP Alexander)) (CC and) (NP (NNP Fredis) (NNP Refunjol)))) (. ?)))",
        "id": 872
    },
    {
        "taggedQuestion": "Horses grandsired by Sundridge  have won which awards?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "awards",
                "containsRefer": false,
                "originStr": "awards",
                "start": 7,
                "entityID": 0,
                "end": 9,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Horses grandsired by Sundridge have won",
                "containsRefer": false,
                "originStr": "Horses grandsired by Sundridge have won",
                "start": 0,
                "entityID": 0,
                "end": 6,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Horses grandsired by Sundridge  have won which awards?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (S (NP (NP (NNS Horses)) (VP (VBN grandsired) (PP (IN by) (NP (NNP Sundridge))))) (VP (VBP have) (VP (VBN won) (SBAR (WHNP (WDT which)) (S (NP (NNS awards)))))) (. ?)))",
        "id": 873
    },
    {
        "taggedQuestion": "What is the river whose source region is North-Western Province, Zambia and river mouth is Indian Ocean?",
        "entityMap": {},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the river",
                "containsRefer": false,
                "originStr": "the river",
                "start": 2,
                "entityID": 0,
                "end": 4,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is North-Western Province , Zambia",
                "containsRefer": false,
                "originStr": "is North-Western Province , Zambia",
                "start": 7,
                "entityID": 0,
                "end": 14,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "river mouth is Indian Ocean",
                "containsRefer": false,
                "originStr": "river mouth is Indian Ocean",
                "start": 15,
                "entityID": 0,
                "end": 19,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is the river whose source region is North-Western Province, Zambia and river mouth is Indian Ocean?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3,
                "info": "whose source region"
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (NP (DT the) (NN river)) (SBAR (WHNP (WP$ whose) (NML (NN source)) (NN region)) (S (VP (VBZ is) (ADJP (ADJP (JJ North) (HYPH -) (JJ Western)) (SBAR (S (NP (NP (NNP Province)) (, ,) (NP (NNP Zambia)) (CC and) (NP (NN river) (NN mouth))) (VP (VBZ is) (NP (NNP Indian) (NNP Ocean))))))))))) (. ?)))",
        "id": 874
    },
    {
        "taggedQuestion": "Who was on the first team in the GPs that were held at Watkins Glen, NY?",
        "entityMap": {},
        "nodeNum": 8,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "who",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "was on #entity2",
                "containsRefer": true,
                "originStr": "was on #entity2",
                "start": 1,
                "entityID": 0,
                "end": 17,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the GPs",
                "containsRefer": false,
                "originStr": "the GPs",
                "start": 7,
                "entityID": 1,
                "end": 9,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "were held at Watkins Glen , NY",
                "containsRefer": false,
                "originStr": "were held at Watkins Glen , NY",
                "start": 10,
                "entityID": 1,
                "end": 17,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 2,
                "end": -1,
                "nodeType": 2,
                "nodeID": 6,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the first team in #entity1",
                "containsRefer": false,
                "originStr": "the first team in #entity1",
                "start": -1,
                "entityID": 2,
                "end": -1,
                "nodeType": 4,
                "nodeID": 7,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Who was on the first team in the GPs that were held at Watkins Glen, NY?",
        "entityNum": 3,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 7,
                "from": 2,
                "end": 17,
                "to": 3
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": -1,
                "from": 2,
                "end": -1,
                "to": 6
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 6,
                "end": -1,
                "to": 7
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP Who)) (SQ (VP (VBD was) (PP (IN on) (NP (DT the) (JJ first) (NN team))) (PP (IN in) (NP (NP (DT the) (NNS GPs)) (SBAR (WHNP (WDT that)) (S (VP (VBD were) (VP (VBN held) (PP (IN at) (NP (NP (NNP Watkins) (NNP Glen)) (, ,) (NP (NNP NY)))))))))))) (. ?)))",
        "id": 875
    },
    {
        "taggedQuestion": "Name the movie whose screenplay is by Akiva Goldsman and directed by Joel Schumacher .",
        "entityMap": {},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "name",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the movie",
                "containsRefer": false,
                "originStr": "the movie",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "by Akiva Goldsman",
                "containsRefer": false,
                "originStr": "by Akiva Goldsman",
                "start": 5,
                "entityID": 0,
                "end": 9,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "directed by Joel Schumacher",
                "containsRefer": false,
                "originStr": "directed by Joel Schumacher",
                "start": 10,
                "entityID": 0,
                "end": 13,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Name the movie whose screenplay is by Akiva Goldsman and directed by Joel Schumacher .",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3,
                "info": "whose screenplay"
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Name) (NP (NP (DT the) (NN movie)) (SBAR (WHNP (WP$ whose) (NN screenplay)) (S (VP (VBZ is) (UCP (PP (IN by) (NP (NNP Akiva) (NNP Goldsman))) (CC and) (VP (VBN directed) (PP (IN by) (NP (NNP Joel) (NNP Schumacher)))))))))) (. .)))",
        "id": 876
    },
    {
        "taggedQuestion": "What ethinicity of Linda Hogan is also the <e0> of Holmes Colbert ?",
        "entityMap": {"<e0>": "state of origin"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "ethinicity of Linda Hogan",
                "containsRefer": false,
                "originStr": "ethinicity of Linda Hogan",
                "start": 1,
                "entityID": 0,
                "end": 5,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the state of origin of Holmes Colbert",
                "containsRefer": false,
                "originStr": "the state of origin of Holmes Colbert",
                "start": 5,
                "entityID": 0,
                "end": 12,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What ethinicity of Linda Hogan is also the state of origin of Holmes Colbert ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT What) (NP (NN ethinicity) (PP (IN of) (NP (NNP Linda) (NNP Hogan))))) (SQ (VBZ is) (ADVP (RB also)) (NP (NP (DT the) (NN <e0>)) (PP (IN of) (NP (NNP Holmes) (NNP Colbert))))) (. ?)))",
        "id": 877
    },
    {
        "taggedQuestion": "What are the track and field events of <e0>?",
        "entityMap": {
            "<e1>": "track field events",
            "<e0>": "Jamiatu Muslim Mindanao"
        },
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are the track",
                "containsRefer": false,
                "originStr": "are the track",
                "start": 1,
                "entityID": 0,
                "end": 4,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "field events of Jamiatu Muslim Mindanao",
                "containsRefer": false,
                "originStr": "field events of Jamiatu Muslim Mindanao",
                "start": 5,
                "entityID": 0,
                "end": 8,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What are the track and field events of Jamiatu Muslim Mindanao?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBP are) (NP (NP (DT the) (NML (NN track) (CC and) (NN field)) (NNS events)) (PP (IN of) (NP (NN <e0>))))) (. ?)))",
        "id": 878
    },
    {
        "taggedQuestion": "How many cities are close to Lake Victoria?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "how many",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "cities",
                "containsRefer": false,
                "originStr": "cities",
                "start": 2,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are close to Lake Victoria",
                "containsRefer": false,
                "originStr": "are close to Lake Victoria",
                "start": 3,
                "entityID": 0,
                "end": 8,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "How many cities are close to Lake Victoria?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WHADJP (WRB How) (JJ many)) (NNS cities)) (SQ (VP (VBP are) (ADJP (JJ close) (PP (IN to) (NP (NNP Lake) (NNP Victoria)))))) (. ?)))",
        "id": 879
    },
    {
        "taggedQuestion": "Is greasy pop recording the distributor of festival records?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "is",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "JUDGE"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "greasy pop",
                "containsRefer": false,
                "originStr": "greasy pop",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "recording the distributor of festival records",
                "containsRefer": false,
                "originStr": "recording the distributor of festival records",
                "start": 3,
                "entityID": 0,
                "end": 9,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Is greasy pop recording the distributor of festival records?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SQ (VBZ Is) (NP (JJ greasy) (NN pop)) (VP (VBG recording) (NP (NP (DT the) (NN distributor)) (PP (IN of) (NP (NN festival) (NNS records))))) (. ?)))",
        "id": 880
    },
    {
        "taggedQuestion": "What is the baseball team whose club manager's debut team is Houston Astros?",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the baseball team",
                "containsRefer": false,
                "originStr": "the baseball team",
                "start": 2,
                "entityID": 0,
                "end": 5,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "club manager is #entity1",
                "containsRefer": true,
                "originStr": "club manager is #entity1",
                "start": 7,
                "entityID": 0,
                "end": 14,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "debut team is Houston Astros",
                "containsRefer": false,
                "originStr": "debut team is Houston Astros",
                "start": 9,
                "entityID": 1,
                "end": 14,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is the baseball team whose club manager's debut team is Houston Astros?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3,
                "info": "whose club"
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 9,
                "from": 3,
                "end": 14,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (NP (DT the) (NN baseball) (NN team)) (SBAR (WHNP (WP$ whose) (NML (NN club))) (S (NP (NP (NN manager) (POS 's)) (NN debut) (NN team)) (VP (VBZ is) (NP (NNP Houston) (NNPS Astros))))))) (. ?)))",
        "id": 881
    },
    {
        "taggedQuestion": "What cities are near to Nihoa which is also known as Bird Island ?",
        "entityMap": {},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "cities",
                "containsRefer": false,
                "originStr": "cities",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are near to Nihoa which",
                "containsRefer": false,
                "originStr": "are near to Nihoa which",
                "start": 2,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "known as Bird Island",
                "containsRefer": false,
                "originStr": "known as Bird Island",
                "start": 9,
                "entityID": 0,
                "end": 13,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What cities are near to Nihoa which is also known as Bird Island ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT What) (NNS cities)) (SQ (VP (VBP are) (PP (IN near) (IN to) (NP (NP (NNP Nihoa)) (SBAR (WHNP (WDT which)) (S (VP (VBZ is) (ADVP (RB also)) (VP (VBN known) (PP (IN as) (NP (NNP Bird) (NNP Island))))))))))) (. ?)))",
        "id": 882
    },
    {
        "taggedQuestion": "Is Sloth in the Chordate phylum?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "is",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "JUDGE"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Sloth",
                "containsRefer": false,
                "originStr": "Sloth",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the Chordate phylum",
                "containsRefer": false,
                "originStr": "the Chordate phylum",
                "start": 3,
                "entityID": 0,
                "end": 6,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Is Sloth in the Chordate phylum?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SQ (VBZ Is) (NP (NNP Sloth)) (PP (IN in) (NP (DT the) (NN Chordate) (NN phylum))) (. ?)))",
        "id": 883
    },
    {
        "taggedQuestion": "Which shareholder of <e0> is also the operator of <e1> ?",
        "entityMap": {
            "<e1>": "New Sanno Hotel",
            "<e0>": "Naval Air facility Adak"
        },
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "shareholder of Naval Air facility Adak",
                "containsRefer": false,
                "originStr": "shareholder of Naval Air facility Adak",
                "start": 1,
                "entityID": 0,
                "end": 4,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the operator of New Sanno Hotel",
                "containsRefer": false,
                "originStr": "the operator of New Sanno Hotel",
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "",
                "containsRefer": false,
                "originStr": "",
                "start": 4,
                "entityID": 0,
                "end": 5,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which shareholder of Naval Air facility Adak is also the operator of New Sanno Hotel ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NP (NN shareholder) (PP (IN of) (NP (NN <e0>))))) (SQ (VBZ is) (ADVP (RB also)) (NP (NP (DT the) (NN operator)) (PP (IN of) (NP (NN <e1>))))) (. ?)))",
        "id": 884
    },
    {
        "taggedQuestion": "What other awards have been given to <e0>?",
        "entityMap": {"<e0>": "Golden Globe winners"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "have been given to Golden Globe winners",
                "containsRefer": false,
                "originStr": "have been given to Golden Globe winners",
                "start": 3,
                "entityID": 0,
                "end": 8,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "other awards",
                "containsRefer": false,
                "originStr": "other awards",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What other awards have been given to Golden Globe winners?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBAR (WHNP (WDT What)) (S (NP (JJ other) (NNS awards)) (VP (VBP have) (VP (VBN been) (VP (VBN given) (PP (IN to) (NP (ADD <e0>))))))) (. ?)))",
        "id": 885
    },
    {
        "taggedQuestion": "Which allegiance of the John Kotelawala is also the  sovereign state of the Sanath Weerakoon ?",
        "entityMap": {},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "allegiance of the John Kotelawala",
                "containsRefer": false,
                "originStr": "allegiance of the John Kotelawala",
                "start": 1,
                "entityID": 0,
                "end": 6,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the sovereign state of the Sanath Weerakoon",
                "containsRefer": false,
                "originStr": "the sovereign state of the Sanath Weerakoon",
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "",
                "containsRefer": false,
                "originStr": "",
                "start": 6,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which allegiance of the John Kotelawala is also the  sovereign state of the Sanath Weerakoon ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NP (NN allegiance) (PP (IN of) (NP (DT the) (NNP John) (NNP Kotelawala))))) (SQ (VBZ is) (ADVP (RB also)) (NP (NP (DT the) (JJ sovereign) (NN state)) (PP (IN of) (NP (DT the) (NNP Sanath) (NNP Weerakoon))))) (. ?)))",
        "id": 886
    },
    {
        "taggedQuestion": "List the <e0> whose network's sister names is N-tv.",
        "entityMap": {"<e0>": "television shows"},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "list",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the television shows",
                "containsRefer": false,
                "originStr": "the television shows",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "network is #entity1",
                "containsRefer": true,
                "originStr": "network is #entity1",
                "start": 8,
                "entityID": 0,
                "end": 12,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "sister names is N-tv",
                "containsRefer": false,
                "originStr": "sister names is N-tv",
                "start": 6,
                "entityID": 1,
                "end": 12,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "List the television shows whose network's sister names is N-tv.",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3,
                "info": "whose network 's sister names"
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 6,
                "from": 3,
                "end": 12,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB List) (NP (NP (DT the) (NN <e0>)) (SBAR (WHNP (WP$ whose) (NML (NML (NN network) (POS 's)) (NN sister)) (NNS names)) (S (VP (VBZ is) (NP (NN N) (HYPH -) (NN tv))))))) (. .)))",
        "id": 887
    },
    {
        "taggedQuestion": "<e0> is the national anthem of which country?",
        "entityMap": {"<e0>": "God Defend New Zealand"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "country",
                "containsRefer": false,
                "originStr": "country",
                "start": 7,
                "entityID": 0,
                "end": 9,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "God Defend New Zealand is the national anthem of",
                "containsRefer": false,
                "originStr": "God Defend New Zealand is the national anthem of",
                "start": 0,
                "entityID": 0,
                "end": 6,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "God Defend New Zealand is the national anthem of which country?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (S (NP (ADD <e0>)) (VP (VBZ is) (NP (NP (DT the) (JJ national) (NN anthem)) (WHPP (IN of) (WHNP (WDT which) (NN country))))) (. ?)))",
        "id": 888
    },
    {
        "taggedQuestion": "Where do the rivers starting from Zambia end?",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "Where",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "do the rivers starting from Zambia end",
                "containsRefer": false,
                "originStr": "do the rivers starting from Zambia end",
                "start": 1,
                "entityID": 0,
                "end": 8,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Where do the rivers starting from Zambia end?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHADVP (WRB Where)) (SQ (VBP do) (NP (NP (DT the) (NNS rivers)) (VP (VBG starting) (PP (IN from) (NP (NNP Zambia) (NN end)))))) (. ?)))",
        "id": 889
    },
    {
        "taggedQuestion": "Which political party of kumta had affiliation with <e0>, 2004 (Andhra Pradesh) ?",
        "entityMap": {"<e0>": "Indian general election"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "political party",
                "containsRefer": false,
                "originStr": "political party",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "had affiliation with Indian general election , 2004(Andhra Pradesh)",
                "containsRefer": false,
                "originStr": "had affiliation with Indian general election , 2004(Andhra Pradesh)",
                "start": 5,
                "entityID": 0,
                "end": 15,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which political party of kumta had affiliation with Indian general election, 2004 (Andhra Pradesh) ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WHNP (WDT Which) (JJ political) (NN party)) (PP (IN of) (NP (NN kumta)))) (SQ (VP (VBD had) (NP (NN affiliation)) (PP (IN with) (NP (NP (NN <e0>)) (, ,) (NP (CD 2004)))) (PRN (-LRB- -LRB-) (NP (NNP Andhra) (NNP Pradesh)) (-RRB- -RRB-)))) (. ?)))",
        "id": 890
    },
    {
        "taggedQuestion": "Who was member of boards at Royal Society and Trinity House?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "who",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "was member of boards at Royal Society",
                "containsRefer": false,
                "originStr": "was member of boards at Royal Society",
                "start": 1,
                "entityID": 0,
                "end": 8,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "was member of boards at Trinity House",
                "containsRefer": false,
                "originStr": "was member of boards at Trinity House",
                "start": 9,
                "entityID": 0,
                "end": 10,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Who was member of boards at Royal Society and Trinity House?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP Who)) (SQ (VBD was) (NP (NP (NN member)) (PP (IN of) (NP (NP (NNS boards)) (PP (IN at) (NP (NP (NNP Royal) (NNP Society)) (CC and) (NP (NNP Trinity) (NNP House)))))))) (. ?)))",
        "id": 891
    },
    {
        "taggedQuestion": "Where is the king buried whose predecessor was Iyasu II?",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "Where",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the king",
                "containsRefer": false,
                "originStr": "the king",
                "start": 2,
                "entityID": 0,
                "end": 4,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "buried #entity1",
                "containsRefer": true,
                "originStr": "buried #entity1",
                "start": 4,
                "entityID": 0,
                "end": 10,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "whose predecessor was Iyasu II",
                "containsRefer": false,
                "originStr": "whose predecessor was Iyasu II",
                "start": 7,
                "entityID": 1,
                "end": 10,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Where is the king buried whose predecessor was Iyasu II?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 5,
                "from": 3,
                "end": 10,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 5,
                "info": "whose predecessor"
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHADVP (WRB Where)) (SQ (VBZ is) (NP (NP (DT the) (NN king)) (SBAR (S (VP (VBD buried) (SBAR (WHNP (WP$ whose) (NN predecessor)) (S (VP (VBD was) (NP (NNP Iyasu) (NNP II)))))))))) (. ?)))",
        "id": 892
    },
    {
        "taggedQuestion": "How many different places have people beatified by <e0> died?",
        "entityMap": {"<e0>": "Pope Pius X"},
        "nodeNum": 7,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "how many",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "different places",
                "containsRefer": false,
                "originStr": "different places",
                "start": 2,
                "entityID": 0,
                "end": 4,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "have people beatified by #entity1",
                "containsRefer": true,
                "originStr": "have people beatified by #entity1",
                "start": 4,
                "entityID": 0,
                "end": 10,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Pope Pius X",
                "containsRefer": false,
                "originStr": "Pope Pius X",
                "start": 8,
                "entityID": 1,
                "end": 9,
                "nodeType": 4,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            },
            {
                "str": "died",
                "containsRefer": false,
                "originStr": "died",
                "start": 9,
                "entityID": 1,
                "end": 10,
                "nodeType": 3,
                "nodeID": 6,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "How many different places have people beatified by Pope Pius X died?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 8,
                "from": 3,
                "end": 10,
                "to": 4
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 5
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 6
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WHADJP (WRB How) (JJ many)) (JJ different) (NML (NNS places))) (SQ (VBP have) (NP (NNS people)) (VP (VBN beatified) (PP (IN by) (NP (NP (ADD <e0>)) (SBAR (S (VP (VBD died)))))))) (. ?)))",
        "id": 893
    },
    {
        "taggedQuestion": "What faiths are followed by the relatives of Meadow Soprano?",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "faiths",
                "containsRefer": false,
                "originStr": "faiths",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are followed by #entity1",
                "containsRefer": true,
                "originStr": "are followed by #entity1",
                "start": 2,
                "entityID": 0,
                "end": 10,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the relatives of Meadow Soprano",
                "containsRefer": false,
                "originStr": "the relatives of Meadow Soprano",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 4,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What faiths are followed by the relatives of Meadow Soprano?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT What) (NNS faiths)) (SQ (VBP are) (VP (VBN followed) (PP (IN by) (NP (NP (DT the) (NNS relatives)) (PP (IN of) (NP (NNP Meadow) (NNP Soprano))))))) (. ?)))",
        "id": 894
    },
    {
        "taggedQuestion": "Where is the headquarters of the public transit system which owns Target Field, a Metro Transit Station  ?",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "Where",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the headquarters of #entity1",
                "containsRefer": true,
                "originStr": "is the headquarters of #entity1",
                "start": 1,
                "entityID": 0,
                "end": 18,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the public transit system",
                "containsRefer": false,
                "originStr": "the public transit system",
                "start": 5,
                "entityID": 1,
                "end": 9,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "owns Target Field , a Metro Transit Station",
                "containsRefer": false,
                "originStr": "owns Target Field , a Metro Transit Station",
                "start": 10,
                "entityID": 1,
                "end": 18,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Where is the headquarters of the public transit system which owns Target Field, a Metro Transit Station  ?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 5,
                "from": 2,
                "end": 18,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHADVP (WRB Where)) (SQ (VBZ is) (NP (NP (DT the) (NN headquarters)) (PP (IN of) (NP (NP (DT the) (NML (JJ public) (NN transit)) (NN system)) (SBAR (WHNP (WDT which)) (S (VP (VBZ owns) (NP (NP (NNP Target) (NNP Field)) (, ,) (NP (DT a) (NML (NNP Metro) (NNP Transit)) (NNP Station)))))))))) (. ?)))",
        "id": 895
    },
    {
        "taggedQuestion": "What is the nationality of Aishath Saffa ?",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the nationality of Aishath Saffa",
                "containsRefer": false,
                "originStr": "is the nationality of Aishath Saffa",
                "start": 1,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is the nationality of Aishath Saffa ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (NP (DT the) (NN nationality)) (PP (IN of) (NP (NNP Aishath) (NNP Saffa))))) (. ?)))",
        "id": 896
    },
    {
        "taggedQuestion": "Who was the president under whom winston bryant served as a lieutenant?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "who",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the president",
                "containsRefer": false,
                "originStr": "the president",
                "start": 2,
                "entityID": 0,
                "end": 4,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "winston bryant served as a lieutenant",
                "containsRefer": false,
                "originStr": "winston bryant served as a lieutenant",
                "start": 6,
                "entityID": 0,
                "end": 11,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Who was the president under whom winston bryant served as a lieutenant?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP Who)) (SQ (VBD was) (NP (NP (DT the) (NN president)) (SBAR (WHPP (IN under) (WHNP (WP whom))) (S (NP (NNP winston) (NNP bryant)) (VP (VBD served) (PP (IN as) (NP (DT a) (NN lieutenant)))))))) (. ?)))",
        "id": 897
    },
    {
        "taggedQuestion": "What are the bands associated with the artists of <e0>  ?",
        "entityMap": {"<e0>": "My Favorite Girl"},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are the bands associated with #entity1",
                "containsRefer": true,
                "originStr": "are the bands associated with #entity1",
                "start": 1,
                "entityID": 0,
                "end": 10,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the artists of My Favorite Girl",
                "containsRefer": false,
                "originStr": "the artists of My Favorite Girl",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What are the bands associated with the artists of My Favorite Girl  ?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": -1,
                "from": 2,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBP are) (NP (DT the) (NNS bands)) (VP (VBN associated) (PP (IN with) (NP (NP (DT the) (NNS artists)) (PP (IN of) (NP (NN <e0>))))))) (. ?)))",
        "id": 898
    },
    {
        "taggedQuestion": "What subjects was Broca's Brain written?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "subjects",
                "containsRefer": false,
                "originStr": "subjects",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "was Broca's Brain written",
                "containsRefer": false,
                "originStr": "was Broca's Brain written",
                "start": 2,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What subjects was Broca's Brain written?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT What) (NP (NNS subjects))) (SQ (VBD was) (NP (NP (NNP Broca) (POS 's)) (NNP Brain)) (VP (VBN written))) (. ?)))",
        "id": 899
    },
    {
        "taggedQuestion": "Which parent organization of GetTV is also the label of next thing ?",
        "entityMap": {},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "parent organization of GetTV",
                "containsRefer": false,
                "originStr": "parent organization of GetTV",
                "start": 1,
                "entityID": 0,
                "end": 5,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the label of next thing",
                "containsRefer": false,
                "originStr": "the label of next thing",
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "",
                "containsRefer": false,
                "originStr": "",
                "start": 5,
                "entityID": 0,
                "end": 6,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which parent organization of GetTV is also the label of next thing ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NP (NP (NN parent) (NN organization)) (PP (IN of) (NP (NNP GetTV))))) (SQ (VBZ is) (ADVP (RB also)) (NP (NP (DT the) (NN label)) (PP (IN of) (NP (JJ next) (NN thing))))) (. ?)))",
        "id": 900
    },
    {
        "taggedQuestion": "Which teams have used the stadium whose architect was Populous ?",
        "entityMap": {},
        "nodeNum": 7,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "teams",
                "containsRefer": false,
                "originStr": "teams",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "have used #entity1",
                "containsRefer": true,
                "originStr": "have used #entity1",
                "start": 2,
                "entityID": 0,
                "end": 10,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the stadium",
                "containsRefer": false,
                "originStr": "the stadium",
                "start": 4,
                "entityID": 1,
                "end": 6,
                "nodeType": 4,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            },
            {
                "str": "whose architect was Populous",
                "containsRefer": false,
                "originStr": "whose architect was Populous",
                "start": 8,
                "entityID": 1,
                "end": 10,
                "nodeType": 3,
                "nodeID": 6,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which teams have used the stadium whose architect was Populous ?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 4,
                "from": 3,
                "end": 10,
                "to": 4
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 5
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 6,
                "info": "whose architect"
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NNS teams)) (SQ (VP (VBP have) (VP (VBN used) (NP (NP (DT the) (NN stadium)) (SBAR (WHNP (WP$ whose) (NML (NN architect))) (S (VP (VBD was) (ADJP (JJ Populous))))))))) (. ?)))",
        "id": 901
    },
    {
        "taggedQuestion": "Name the route end of the <e1> and <e0>.",
        "entityMap": {
            "<e1>": "North-South Transport Corridor",
            "<e0>": "Mumbai Vadodara Expressway"
        },
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "name",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the route end of the North-South Transport Corridor",
                "containsRefer": false,
                "originStr": "the route end of the North-South Transport Corridor",
                "start": 1,
                "entityID": 0,
                "end": 7,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the route end of Mumbai Vadodara Expressway",
                "containsRefer": false,
                "originStr": "the route end of Mumbai Vadodara Expressway",
                "start": 8,
                "entityID": 0,
                "end": 8,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Name the route end of the North-South Transport Corridor and Mumbai Vadodara Expressway.",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Name) (NP (NP (DT the) (NN route) (NN end)) (PP (IN of) (NP (NP (DT the) (NN <e1>)) (CC and) (NP (ADD <e0>)))))) (. .)))",
        "id": 902
    },
    {
        "taggedQuestion": "Is <e0> buried in Colorado?",
        "entityMap": {"<e0>": "Albert P Clark"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "is",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "JUDGE"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Albert P Clark",
                "containsRefer": false,
                "originStr": "Albert P Clark",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "buried in Colorado",
                "containsRefer": false,
                "originStr": "buried in Colorado",
                "start": 2,
                "entityID": 0,
                "end": 5,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Is Albert P Clark buried in Colorado?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SQ (VBZ Is) (NP (NN <e0>)) (VP (VBN buried) (PP (IN in) (NP (NNP Colorado)))) (. ?)))",
        "id": 903
    },
    {
        "taggedQuestion": "Which hockey team is head coached by Bill Peters?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "hockey team",
                "containsRefer": false,
                "originStr": "hockey team",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is head coached by Bill Peters",
                "containsRefer": false,
                "originStr": "is head coached by Bill Peters",
                "start": 3,
                "entityID": 0,
                "end": 9,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which hockey team is head coached by Bill Peters?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NN hockey) (NN team)) (SQ (VBZ is) (NP (NN head)) (VP (VBN coached) (PP (IN by) (NP (NNP Bill) (NNP Peters))))) (. ?)))",
        "id": 904
    },
    {
        "taggedQuestion": "Count the religions followed by the alumini of Ananda College.",
        "entityMap": {},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "count",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the religions followed by #entity1",
                "containsRefer": true,
                "originStr": "the religions followed by #entity1",
                "start": 1,
                "entityID": 0,
                "end": 10,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the alumini of Ananda College",
                "containsRefer": false,
                "originStr": "the alumini of Ananda College",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Count the religions followed by the alumini of Ananda College.",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": -1,
                "from": 2,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Count) (S (NP (DT the) (NNS religions)) (VP (VBN followed) (PP (IN by) (NP (NP (DT the) (NN alumini)) (PP (IN of) (NP (NNP Ananda) (NNP College)))))))) (. .)))",
        "id": 905
    },
    {
        "taggedQuestion": "Which team did Wilfred McDonalds and Cam Plante play for?",
        "entityMap": {},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "team",
                "containsRefer": false,
                "originStr": "team",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Wilfred McDonalds play for",
                "containsRefer": false,
                "originStr": "Wilfred McDonalds play for",
                "start": 2,
                "entityID": 0,
                "end": 5,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Cam Plante play for",
                "containsRefer": false,
                "originStr": "Cam Plante play for",
                "start": 6,
                "entityID": 0,
                "end": 9,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which team did Wilfred McDonalds and Cam Plante play for?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NN team)) (SQ (VBD did) (NP (NP (NNP Wilfred) (NNP McDonalds)) (CC and) (NP (NNP Cam) (NNP Plante))) (VP (VB play) (PP (IN for)))) (. ?)))",
        "id": 906
    },
    {
        "taggedQuestion": "What are the <e0> whose network's stockholder is <e1>?",
        "entityMap": {
            "<e1>": "Warner Bros. Television",
            "<e0>": "television shows"
        },
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the television shows",
                "containsRefer": false,
                "originStr": "the television shows",
                "start": 2,
                "entityID": 0,
                "end": 4,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "network is #entity1",
                "containsRefer": true,
                "originStr": "network is #entity1",
                "start": 8,
                "entityID": 0,
                "end": 10,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "stockholder is Warner Bros. Television",
                "containsRefer": false,
                "originStr": "stockholder is Warner Bros. Television",
                "start": 7,
                "entityID": 1,
                "end": 10,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What are the television shows whose network's stockholder is Warner Bros. Television?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3,
                "info": "whose network 's stockholder"
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 7,
                "from": 3,
                "end": 10,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBP are) (NP (NP (DT the) (NN <e0>)) (SBAR (WHNP (WP$ whose) (NP (NN network) (POS 's)) (NN stockholder)) (S (VP (VBZ is) (NP (ADD <e1>))))))) (. ?)))",
        "id": 907
    },
    {
        "taggedQuestion": "Name the <e0> judged by Rand Jackson .",
        "entityMap": {"<e0>": "Fox TV show"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "name",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the Fox TV show",
                "containsRefer": false,
                "originStr": "the Fox TV show",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "judged by Rand Jackson",
                "containsRefer": false,
                "originStr": "judged by Rand Jackson",
                "start": 3,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Name the Fox TV show judged by Rand Jackson .",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Name) (NP (NP (DT the) (NN <e0>)) (VP (VBN judged) (PP (IN by) (NP (NNP Rand) (NNP Jackson)))))) (. .)))",
        "id": 908
    },
    {
        "taggedQuestion": "What is the total number of software whose programming language is C++ and operating system is Microsoft Windows?",
        "entityMap": {},
        "nodeNum": 7,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what is the number of",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "#entity1 is Microsoft Windows",
                "containsRefer": true,
                "originStr": "#entity1 is Microsoft Windows",
                "start": 0,
                "entityID": 0,
                "end": 12,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "software",
                "containsRefer": false,
                "originStr": "software",
                "start": 0,
                "entityID": 1,
                "end": 1,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "whose programming language is C++",
                "containsRefer": false,
                "originStr": "whose programming language is C++",
                "start": 0,
                "entityID": 1,
                "end": 5,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            },
            {
                "str": "operating system",
                "containsRefer": false,
                "originStr": "operating system",
                "start": 6,
                "entityID": 1,
                "end": 7,
                "nodeType": 4,
                "nodeID": 6,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is the total number of software whose programming language is C++ and operating system is Microsoft Windows?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 0,
                "from": 2,
                "end": 9,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5,
                "info": "whose programming language"
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 6
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (NP (DT the) (JJ total) (NN number)) (PP (IN of) (NP (NP (NN software)) (SBAR (WHNP (WP$ whose) (NML (NN programming)) (NN language)) (S (VP (VBZ is) (SBAR (S (NP (NP (NNP C++)) (CC and) (NP (VBG operating) (NN system))) (VP (VBZ is) (NP (NNP Microsoft) (NNP Windows)))))))))))) (. ?)))",
        "id": 909
    },
    {
        "taggedQuestion": "Name the city of Phil-Ellena .",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "name",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the city of Phil-Ellena",
                "containsRefer": false,
                "originStr": "the city of Phil-Ellena",
                "start": 1,
                "entityID": 0,
                "end": 7,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Name the city of Phil-Ellena .",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Name) (NP (NP (DT the) (NN city)) (PP (IN of) (NP (NNP Phil) (HYPH -) (NNP Ellena))))) (. .)))",
        "id": 910
    },
    {
        "taggedQuestion": "How many companies are located in a <e0>?",
        "entityMap": {"<e0>": "spanish speaking region"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "How many",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are located in a spanish speaking region",
                "containsRefer": false,
                "originStr": "are located in a spanish speaking region",
                "start": 3,
                "entityID": 0,
                "end": 8,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "companies",
                "containsRefer": false,
                "originStr": "companies",
                "start": 2,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "How many companies are located in a spanish speaking region?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBAR (WHADJP (WRB How) (JJ many)) (S (NP (NNS companies)) (VP (VBP are) (VP (VBN located) (PP (IN in) (NP (DT a) (NN <e0>)))))) (. ?)))",
        "id": 911
    },
    {
        "taggedQuestion": "What is the combatant of the <e0> and also the ethnic group of the Linda Hogan ?",
        "entityMap": {"<e0>": "Northwest Indian War"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the combatant of the Northwest Indian War",
                "containsRefer": false,
                "originStr": "is the combatant of the Northwest Indian War",
                "start": 1,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the ethnic group of the Linda Hogan",
                "containsRefer": false,
                "originStr": "the ethnic group of the Linda Hogan",
                "start": 8,
                "entityID": 0,
                "end": 15,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is the combatant of the Northwest Indian War and also the ethnic group of the Linda Hogan ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (NP (DT the) (NN combatant)) (PP (IN of) (NP (NP (DT the) (NN <e0>)) (CC and) (NP (ADVP (RB also)) (NP (DT the) (JJ ethnic) (NN group)) (PP (IN of) (NP (DT the) (NNP Linda) (NNP Hogan)))))))) (. ?)))",
        "id": 912
    },
    {
        "taggedQuestion": "Which airlines fly to <e0>?",
        "entityMap": {"<e0>": "Gimhae International Airport"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "fly to Gimhae International Airport",
                "containsRefer": false,
                "originStr": "fly to Gimhae International Airport",
                "start": 2,
                "entityID": 0,
                "end": 5,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "airlines",
                "containsRefer": false,
                "originStr": "airlines",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which airlines fly to Gimhae International Airport?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBAR (WHNP (WDT Which)) (S (NP (NNS airlines)) (VP (VBP fly) (PP (IN to) (NP (ADD <e0>))))) (. ?)))",
        "id": 913
    },
    {
        "taggedQuestion": "GetTV is owned by which organisation?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "organisation",
                "containsRefer": false,
                "originStr": "organisation",
                "start": 5,
                "entityID": 0,
                "end": 7,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "GetTV is owned by",
                "containsRefer": false,
                "originStr": "GetTV is owned by",
                "start": 0,
                "entityID": 0,
                "end": 4,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "GetTV is owned by which organisation?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (S (NP (NNP GetTV)) (VP (VBZ is) (VP (VBN owned) (WHPP (IN by) (WHNP (WDT which) (NN organisation))))) (. ?)))",
        "id": 914
    },
    {
        "taggedQuestion": "Name the islands that belong to the archipelago whose largest city is Papeete.",
        "entityMap": {},
        "nodeNum": 7,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "name",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the islands",
                "containsRefer": false,
                "originStr": "the islands",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "belong to #entity1",
                "containsRefer": true,
                "originStr": "belong to #entity1",
                "start": 4,
                "entityID": 0,
                "end": 13,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the archipelago",
                "containsRefer": false,
                "originStr": "the archipelago",
                "start": 6,
                "entityID": 1,
                "end": 8,
                "nodeType": 4,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            },
            {
                "str": "whose largest city is Papeete",
                "containsRefer": false,
                "originStr": "whose largest city is Papeete",
                "start": 11,
                "entityID": 1,
                "end": 13,
                "nodeType": 3,
                "nodeID": 6,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Name the islands that belong to the archipelago whose largest city is Papeete.",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 6,
                "from": 3,
                "end": 13,
                "to": 4
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 5
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 6,
                "info": "whose largest city"
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Name) (NP (NP (DT the) (NNS islands)) (SBAR (WHNP (WDT that)) (S (VP (VBP belong) (PP (IN to) (NP (NP (DT the) (NN archipelago)) (SBAR (WHNP (WP$ whose) (JJS largest) (NN city)) (S (VP (VBZ is) (NP (NNP Papeete)))))))))))) (. .)))",
        "id": 915
    },
    {
        "taggedQuestion": "Which team did Dave Bing and Ron Reed started their basketball career?",
        "entityMap": {},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "team",
                "containsRefer": false,
                "originStr": "team",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Dave Bing started their basketball career",
                "containsRefer": false,
                "originStr": "Dave Bing started their basketball career",
                "start": 2,
                "entityID": 0,
                "end": 5,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Ron Reed started their basketball career",
                "containsRefer": false,
                "originStr": "Ron Reed started their basketball career",
                "start": 6,
                "entityID": 0,
                "end": 11,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which team did Dave Bing and Ron Reed started their basketball career?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NN team)) (SQ (VP (VBD did) (SBAR (S (NP (NP (NNP Dave) (NNP Bing)) (CC and) (NP (NNP Ron) (NNP Reed))) (VP (VBD started) (NP (PRP$ their) (NN basketball) (NN career))))))) (. ?)))",
        "id": 916
    },
    {
        "taggedQuestion": "List the settlements area whose province is Metropolitan City of Venice ?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "list",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the settlements area",
                "containsRefer": false,
                "originStr": "the settlements area",
                "start": 1,
                "entityID": 0,
                "end": 4,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "whose province is Metropolitan City of Venice",
                "containsRefer": false,
                "originStr": "whose province is Metropolitan City of Venice",
                "start": 6,
                "entityID": 0,
                "end": 11,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "List the settlements area whose province is Metropolitan City of Venice ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3,
                "info": "whose province"
            }
        ],
        "syntaxTreeText": "(ROOT (SQ (VP (VB List) (NP (NP (DT the) (NNS settlements) (NN area)) (SBAR (WHNP (WP$ whose) (NN province)) (S (VP (VBZ is) (NP (NP (NNP Metropolitan) (NNP City)) (PP (IN of) (NP (NNP Venice))))))))) (. ?)))",
        "id": 917
    },
    {
        "taggedQuestion": "What was recorded by Live in Detroit, MI and also place of birth of the Bodhin Kjolhede?",
        "entityMap": {"<e0>": "Detroit , MI place"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Live in Detroit , MI",
                "containsRefer": false,
                "originStr": "Live in Detroit , MI",
                "start": 1,
                "entityID": 0,
                "end": 9,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "place of birth of the Bodhin Kjolhede",
                "containsRefer": false,
                "originStr": "place of birth of the Bodhin Kjolhede",
                "start": 10,
                "entityID": 0,
                "end": 17,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What was recorded by Live in Detroit, MI and also place of birth of the Bodhin Kjolhede?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD was) (VP (VBN recorded) (PP (IN by) (NP (NP (UCP (ADJP (JJ Live) (PP (IN in) (NP (NNP Detroit) (, ,) (NNP MI)))) (CC and) (ADVP (RB also))) (NN place)) (PP (IN of) (NP (NP (NN birth)) (PP (IN of) (NP (DT the) (NNP Bodhin) (NNP Kjolhede))))))))) (. ?)))",
        "id": 918
    },
    {
        "taggedQuestion": "How many different institutes have the members of <e0>'s Corps graduated?",
        "entityMap": {"<e0>": "Judge Advocate General"},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "How many",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "different institutes have #entity1",
                "containsRefer": true,
                "originStr": "different institutes have #entity1",
                "start": 2,
                "entityID": 0,
                "end": 11,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the members of Judge Advocate General's Corps graduated",
                "containsRefer": false,
                "originStr": "the members of Judge Advocate General's Corps graduated",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "How many different institutes have the members of Judge Advocate General's Corps graduated?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": -1,
                "from": 2,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (SBAR (WHADJP (WRB How) (JJ many)) (S (NP (JJ different) (NNS institutes)) (VP (VBP have) (NP (NP (DT the) (NNS members)) (PP (IN of) (NP (NP (NN <e0>) (POS 's)) (NNP Corps))))))) (VP (VBD graduated)) (. ?)))",
        "id": 919
    },
    {
        "taggedQuestion": "Who isa famous relative of anne spielberg?",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "Who",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "isa famous relative of anne spielberg",
                "containsRefer": false,
                "originStr": "isa famous relative of anne spielberg",
                "start": 0,
                "entityID": 0,
                "end": 7,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Who isa famous relative of anne spielberg?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (FRAG (FRAG (WHNP (WP Who)) (NP (NNP isa))) (NP (NP (JJ famous) (NN relative)) (PP (IN of) (NP (NN anne) (NNP spielberg)))) (. ?)))",
        "id": 920
    },
    {
        "taggedQuestion": "Which city does Northeast Library belong?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "city",
                "containsRefer": false,
                "originStr": "city",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "does Northeast Library belong",
                "containsRefer": false,
                "originStr": "does Northeast Library belong",
                "start": 2,
                "entityID": 0,
                "end": 6,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which city does Northeast Library belong?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NN city)) (SQ (VBZ does) (NP (NNP Northeast) (NNP Library)) (VP (VB belong))) (. ?)))",
        "id": 921
    },
    {
        "taggedQuestion": "What are the airline hubs of Cascade Airways?",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are the airline hubs of Cascade Airways",
                "containsRefer": false,
                "originStr": "are the airline hubs of Cascade Airways",
                "start": 1,
                "entityID": 0,
                "end": 8,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What are the airline hubs of Cascade Airways?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBP are) (NP (NP (DT the) (NN airline) (NNS hubs)) (PP (IN of) (NP (NNP Cascade) (NNPS Airways))))) (. ?)))",
        "id": 922
    },
    {
        "taggedQuestion": "Who has manufactured vehicles designed originally by NASA?",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "who",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "has manufactured #entity1",
                "containsRefer": true,
                "originStr": "has manufactured #entity1",
                "start": 1,
                "entityID": 0,
                "end": 8,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "vehicles",
                "containsRefer": false,
                "originStr": "vehicles",
                "start": 3,
                "entityID": 1,
                "end": 4,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "designed originally by NASA",
                "containsRefer": false,
                "originStr": "designed originally by NASA",
                "start": 4,
                "entityID": 1,
                "end": 8,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Who has manufactured vehicles designed originally by NASA?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 3,
                "from": 2,
                "end": 8,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP Who)) (SQ (VP (VBZ has) (VP (VBN manufactured) (NP (NP (NNS vehicles)) (VP (VBN designed) (ADVP (RB originally)) (PP (IN by) (NP (NNP NASA)))))))) (. ?)))",
        "id": 923
    },
    {
        "taggedQuestion": "What is the order of the Henry Clay and profession of the <e0>?",
        "entityMap": {"<e0>": "William Luther Hill"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the order of the Henry Clay",
                "containsRefer": false,
                "originStr": "the order of the Henry Clay",
                "start": 1,
                "entityID": 0,
                "end": 8,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "profession of the William Luther Hill",
                "containsRefer": false,
                "originStr": "profession of the William Luther Hill",
                "start": 9,
                "entityID": 0,
                "end": 12,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is the order of the Henry Clay and profession of the William Luther Hill?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (NP (NP (DT the) (NN order)) (PP (IN of) (NP (DT the) (NNP Henry) (NNP Clay)))) (CC and) (NP (NP (NN profession)) (PP (IN of) (NP (DT the) (NN <e0>)))))) (. ?)))",
        "id": 924
    },
    {
        "taggedQuestion": "What show  has theme music composer as Ron Grainer and at the same time  related to Class (<e0>)?",
        "entityMap": {"<e0>": "2016 TV series"},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "show",
                "containsRefer": false,
                "originStr": "show",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "as Ron Grainer",
                "containsRefer": false,
                "originStr": "as Ron Grainer",
                "start": 2,
                "entityID": 0,
                "end": 9,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "at the same time related to Class (2016 TV series)",
                "containsRefer": false,
                "originStr": "at the same time related to Class (2016 TV series)",
                "start": 10,
                "entityID": 0,
                "end": 19,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What show  has theme music composer as Ron Grainer and at the same time  related to Class (2016 TV series)?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT What) (NN show)) (SQ (VBZ has) (NP (NP (NN theme) (NN music) (NN composer)) (PP (PP (IN as) (NP (NNP Ron) (NNP Grainer))) (CC and) (PP (IN at) (NP (DT the) (JJ same) (NN time))))) (VP (VBN related) (PP (IN to) (NP (NN Class))) (PRN (-LRB- -LRB-) (NP (NN <e0>)) (-RRB- -RRB-)))) (. ?)))",
        "id": 925
    },
    {
        "taggedQuestion": "What is the life stance of the ethnic groups related to Micronesia ?",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the life stance of the ethnic groups related to Micronesia",
                "containsRefer": false,
                "originStr": "is the life stance of the ethnic groups related to Micronesia",
                "start": 1,
                "entityID": 0,
                "end": 12,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is the life stance of the ethnic groups related to Micronesia ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (NP (DT the) (NN life) (NN stance)) (PP (IN of) (NP (DT the) (JJ ethnic) (NNS groups)))) (VP (VBN related) (PP (IN to) (NP (NNP Micronesia))))) (. ?)))",
        "id": 926
    },
    {
        "taggedQuestion": "Name the river whose mouth mountain is Southend-on-Sea and mouth place is Essex.",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "name",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the river",
                "containsRefer": false,
                "originStr": "the river",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "whose mouth mountain is southend-on-sea and mouth place is Essex",
                "containsRefer": false,
                "originStr": "whose mouth mountain is southend-on-sea and mouth place is Essex",
                "start": 15,
                "entityID": 0,
                "end": 17,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Name the river whose mouth mountain is Southend-on-Sea and mouth place is Essex.",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3,
                "info": "whose mouth mountain is southend - on - sea and mouth place"
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Name) (NP (NP (DT the) (NN river)) (SBAR (WHNP (WHNP (WP$ whose) (NML (NN mouth)) (NN mountain)) (S (VBZ is) (NP (NML (NML (NNP Southend)) (HYPH -) (PP (IN on) (HYPH -) (NP (NN Sea) (CC and) (NN mouth)))) (NN place)))) (S (VP (VBZ is) (NP (NNP Essex))))))) (. .)))",
        "id": 927
    },
    {
        "taggedQuestion": "Which venue of indy PopCon is also the death place of <e0> ?",
        "entityMap": {"<e0>": "Louis Le Cocqq"},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "venue of indy PopCon",
                "containsRefer": false,
                "originStr": "venue of indy PopCon",
                "start": 1,
                "entityID": 0,
                "end": 5,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the death place of Louis Le Cocqq",
                "containsRefer": false,
                "originStr": "the death place of Louis Le Cocqq",
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "",
                "containsRefer": false,
                "originStr": "",
                "start": 5,
                "entityID": 0,
                "end": 6,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which venue of indy PopCon is also the death place of Louis Le Cocqq ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NP (NN venue) (PP (IN of) (NP (JJ indy) (NNP PopCon))))) (SQ (VBZ is) (ADVP (RB also)) (NP (NP (DT the) (NN death) (NN place)) (PP (IN of) (NP (NN <e0>))))) (. ?)))",
        "id": 928
    },
    {
        "taggedQuestion": "What genre's softwares are released with a <e0>?",
        "entityMap": {"<e0>": "GNU GPL license"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "genre",
                "containsRefer": false,
                "originStr": "genre",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "softwares are released with a GNU GPL license",
                "containsRefer": false,
                "originStr": "softwares are released with a GNU GPL license",
                "start": 3,
                "entityID": 0,
                "end": 11,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What genre's softwares are released with a GNU GPL license?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBAR (WHNP (WDT What)) (S (NP (NP (NN genre) (POS 's)) (NNS softwares)) (VP (VBP are) (VP (VBN released) (PP (IN with) (NP (DT a) (NN <e0>)))))) (. ?)))",
        "id": 929
    },
    {
        "taggedQuestion": "Is Christchurch the largest city of South Island?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "is",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "JUDGE"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Christchurch",
                "containsRefer": false,
                "originStr": "Christchurch",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the largest city of South Island",
                "containsRefer": false,
                "originStr": "the largest city of South Island",
                "start": 2,
                "entityID": 0,
                "end": 8,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Is Christchurch the largest city of South Island?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SQ (VBZ Is) (NP (NNP Christchurch)) (NP (NP (DT the) (JJS largest) (NN city)) (PP (IN of) (NP (NNP South) (NNP Island)))) (. ?)))",
        "id": 930
    },
    {
        "taggedQuestion": "Who is the leader of Allgemeine SS ?",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "who",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the leader of Allgemeine SS",
                "containsRefer": false,
                "originStr": "is the leader of Allgemeine SS",
                "start": 1,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Who is the leader of Allgemeine SS ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP Who)) (SQ (VBZ is) (NP (NP (DT the) (NN leader)) (PP (IN of) (NP (NNP Allgemeine) (NNP SS))))) (. ?)))",
        "id": 931
    },
    {
        "taggedQuestion": "Giorgos Kaminis is the mayor of what?",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Giorgos Kaminis is the mayor of",
                "containsRefer": false,
                "originStr": "Giorgos Kaminis is the mayor of",
                "start": 0,
                "entityID": 0,
                "end": 6,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Giorgos Kaminis is the mayor of what?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (S (NP (NNP Giorgos) (NNP Kaminis)) (VP (VBZ is) (NP (NP (DT the) (NN mayor)) (PP (IN of) (NP (WP what))))) (. ?)))",
        "id": 932
    },
    {
        "taggedQuestion": "Where is the headquarters of Metro Transit (Minnesota) ?",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "Where",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the headquarters of Metro Transit(Minnesota)",
                "containsRefer": false,
                "originStr": "is the headquarters of Metro Transit(Minnesota)",
                "start": 1,
                "entityID": 0,
                "end": 10,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Where is the headquarters of Metro Transit (Minnesota) ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHADVP (WRB Where)) (SQ (VBZ is) (NP (NP (DT the) (NN headquarters)) (PP (IN of) (NP (NNP Metro) (NNP Transit) (-LRB- -LRB-) (NNP Minnesota) (-RRB- -RRB-))))) (. ?)))",
        "id": 933
    },
    {
        "taggedQuestion": "Give me the count of all the names of characters created by Frank Miller",
        "entityMap": {},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "give me",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "all the names",
                "containsRefer": false,
                "originStr": "all the names",
                "start": 0,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "characters",
                "containsRefer": false,
                "originStr": "characters",
                "start": 4,
                "entityID": 0,
                "end": 5,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "created by Frank Miller",
                "containsRefer": false,
                "originStr": "created by Frank Miller",
                "start": 5,
                "entityID": 0,
                "end": 9,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Give me the count of all the names of characters created by Frank Miller",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Give) (NP (PRP me)) (NP (NP (DT the) (NN count)) (PP (IN of) (NP (NP (PDT all) (DT the) (NNS names)) (PP (IN of) (NP (NP (NNS characters)) (VP (VBN created) (PP (IN by) (NP (NNP Frank) (NNP Miller))))))))))))",
        "id": 934
    },
    {
        "taggedQuestion": "Which fictional character portrayed in Terminator 2: Judgment Day is painted by Josh Friedman?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "fictional character",
                "containsRefer": false,
                "originStr": "fictional character",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "portrayed in Terminator 2 : Judgment Day is painted by Josh Friedman",
                "containsRefer": false,
                "originStr": "portrayed in Terminator 2 : Judgment Day is painted by Josh Friedman",
                "start": 3,
                "entityID": 0,
                "end": 15,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which fictional character portrayed in Terminator 2: Judgment Day is painted by Josh Friedman?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (JJ fictional) (NN character)) (SQ (VP (VBN portrayed) (PP (IN in) (NP (NNP Terminator) (CD 2))) (: :) (S (NP (NNP Judgment) (NNP Day)) (VP (VBZ is) (VP (VBN painted) (PP (IN by) (NP (NNP Josh) (NNP Friedman)))))))) (. ?)))",
        "id": 935
    },
    {
        "taggedQuestion": "Where was the narrator of Spain on the Road Again born?",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "Where",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "was the narrator of Spain on the Road Again born",
                "containsRefer": false,
                "originStr": "was the narrator of Spain on the Road Again born",
                "start": 1,
                "entityID": 0,
                "end": 11,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Where was the narrator of Spain on the Road Again born?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHADVP (WRB Where)) (SQ (VBD was) (NP (NP (DT the) (NN narrator)) (PP (IN of) (NP (NP (NNP Spain)) (PP (IN on) (NP (DT the) (NNP Road) (NNP Again)))))) (VP (VBN born))) (. ?)))",
        "id": 936
    },
    {
        "taggedQuestion": "Does AMC Gremlin have the Volkswagen engine?",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "does amc",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "JUDGE"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Gremlin have the Volkswagen engine",
                "containsRefer": false,
                "originStr": "Gremlin have the Volkswagen engine",
                "start": 2,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Does AMC Gremlin have the Volkswagen engine?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SQ (SQ (VBZ Does) (NP (NNP AMC))) (S (NP (NNP Gremlin)) (VP (VBP have) (NP (DT the) (NNP Volkswagen) (NN engine)))) (. ?)))",
        "id": 937
    },
    {
        "taggedQuestion": "Name the movie with narrator as Trevor Peacock and music composer  as Christophe Beck.",
        "entityMap": {},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "name",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the movie",
                "containsRefer": false,
                "originStr": "the movie",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "narrator as Trevor Peacock",
                "containsRefer": false,
                "originStr": "narrator as Trevor Peacock",
                "start": 4,
                "entityID": 0,
                "end": 8,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "music composer as Christophe Beck",
                "containsRefer": false,
                "originStr": "music composer as Christophe Beck",
                "start": 9,
                "entityID": 0,
                "end": 13,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Name the movie with narrator as Trevor Peacock and music composer  as Christophe Beck.",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Name) (NP (DT the) (NN movie)) (PP (IN with) (NP (NP (NP (NN narrator)) (PP (IN as) (NP (NNP Trevor) (NN Peacock)))) (CC and) (NP (NP (NN music) (NN composer)) (PP (IN as) (NP (NNP Christophe) (NNP Beck))))))) (. .)))",
        "id": 938
    },
    {
        "taggedQuestion": "Where did the scientist study whose doctoral thesis was supervised by Leonard Lerman?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "Where",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "scientist study",
                "containsRefer": false,
                "originStr": "scientist study",
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "doctoral thesis was supervised by Leonard Lerman",
                "containsRefer": false,
                "originStr": "doctoral thesis was supervised by Leonard Lerman",
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Where did the scientist study whose doctoral thesis was supervised by Leonard Lerman?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHADVP (WRB Where)) (SQ (VP (VBD did) (NP (DT the) (NN scientist) (NN study)) (SBAR (WHNP (WP$ whose)) (S (NP (JJ doctoral) (NN thesis)) (VP (VBD was) (VP (VBN supervised) (PP (IN by) (NP (NNP Leonard) (NNP Lerman))))))))) (. ?)))",
        "id": 939
    },
    {
        "taggedQuestion": "Where can one find some quick bread in the world?",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "Where",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "can one find some quick bread in the world",
                "containsRefer": false,
                "originStr": "can one find some quick bread in the world",
                "start": 1,
                "entityID": 0,
                "end": 10,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Where can one find some quick bread in the world?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHADVP (WRB Where)) (SQ (MD can) (NP (PRP one)) (VP (VB find) (NP (DT some) (JJ quick) (NN bread)) (PP (IN in) (NP (DT the) (NN world))))) (. ?)))",
        "id": 940
    },
    {
        "taggedQuestion": "What is the sea whose cities are Gdask and Oulu?",
        "entityMap": {},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the sea",
                "containsRefer": false,
                "originStr": "the sea",
                "start": 2,
                "entityID": 0,
                "end": 4,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "whose cities are Gdask",
                "containsRefer": false,
                "originStr": "whose cities are Gdask",
                "start": 6,
                "entityID": 0,
                "end": 8,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "whose cities are Oulu",
                "containsRefer": false,
                "originStr": "whose cities are Oulu",
                "start": 9,
                "entityID": 0,
                "end": 9,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is the sea whose cities are Gdask and Oulu?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3,
                "info": "whose cities"
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (NP (DT the) (NN sea)) (SBAR (WHNP (WP$ whose) (NNS cities)) (S (VP (VBP are) (NP (NNP Gdask) (CC and) (NNP Oulu))))))) (. ?)))",
        "id": 941
    },
    {
        "taggedQuestion": "What rivers originate from Australian Alps?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "rivers",
                "containsRefer": false,
                "originStr": "rivers",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "originate from Australian Alps",
                "containsRefer": false,
                "originStr": "originate from Australian Alps",
                "start": 2,
                "entityID": 0,
                "end": 6,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What rivers originate from Australian Alps?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT What) (NP (NNS rivers))) (SQ (VP (VB originate) (PP (IN from) (NP (NNP Australian) (NNP Alps))))) (. ?)))",
        "id": 942
    },
    {
        "taggedQuestion": "Which venues are located at places governed by John Roberts?",
        "entityMap": {},
        "nodeNum": 7,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "venues",
                "containsRefer": false,
                "originStr": "venues",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are located at #entity1",
                "containsRefer": true,
                "originStr": "are located at #entity1",
                "start": 2,
                "entityID": 0,
                "end": 10,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "places",
                "containsRefer": false,
                "originStr": "places",
                "start": 5,
                "entityID": 1,
                "end": 6,
                "nodeType": 4,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            },
            {
                "str": "governed by John Roberts",
                "containsRefer": false,
                "originStr": "governed by John Roberts",
                "start": 6,
                "entityID": 1,
                "end": 10,
                "nodeType": 3,
                "nodeID": 6,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which venues are located at places governed by John Roberts?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 5,
                "from": 3,
                "end": 10,
                "to": 4
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 5
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 6
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NNS venues)) (SQ (VBP are) (VP (VBN located) (PP (IN at) (NP (NP (NNS places)) (VP (VBN governed) (PP (IN by) (NP (NNP John) (NNP Roberts)))))))) (. ?)))",
        "id": 943
    },
    {
        "taggedQuestion": "What is the venue of <e0>-Con International ?",
        "entityMap": {"<e0>": "San Diego Comic"},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is #entity1-Con International",
                "containsRefer": true,
                "originStr": "is #entity1-Con International",
                "start": 1,
                "entityID": 0,
                "end": 9,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the venue of San Diego Comic",
                "containsRefer": false,
                "originStr": "the venue of San Diego Comic",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is the venue of San Diego Comic-Con International ?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": -1,
                "from": 2,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (NP (DT the) (NN venue)) (PP (IN of) (NP (NML (NN <e0>) (HYPH -) (NN Con)) (NNP International))))) (. ?)))",
        "id": 944
    },
    {
        "taggedQuestion": "Which office holder owes its allegiance to a state whose capital town is Jamestown, Virginia?",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "office holder owes its allegiance to #entity1",
                "containsRefer": true,
                "originStr": "office holder owes its allegiance to #entity1",
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "state",
                "containsRefer": false,
                "originStr": "state",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "capital town is Jamestown , Virginia",
                "containsRefer": false,
                "originStr": "capital town is Jamestown , Virginia",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which office holder owes its allegiance to a state whose capital town is Jamestown, Virginia?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": -1,
                "from": 2,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (SBAR (WHNP (WDT Which)) (S (NP (NN office) (NN holder)) (VP (VBZ owes) (NP (PRP$ its) (NN allegiance)) (PP (IN to) (NP (DT a) (NN state)))))) (WHNP (WP$ whose) (NN capital) (NN town)) (SQ (VBZ is) (NP (NNP Jamestown) (, ,) (NNP Virginia))) (. ?)))",
        "id": 945
    },
    {
        "taggedQuestion": "Which professional fighter, who is also a politician and was elected to House of Representatives of the Philippines?",
        "entityMap": {},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "professional fighter",
                "containsRefer": false,
                "originStr": "professional fighter",
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is a politician",
                "containsRefer": false,
                "originStr": "is a politician",
                "start": 0,
                "entityID": 0,
                "end": 4,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "was elected to House of Representatives of the Philippines",
                "containsRefer": false,
                "originStr": "was elected to House of Representatives of the Philippines",
                "start": 5,
                "entityID": 0,
                "end": 13,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which professional fighter, who is also a politician and was elected to House of Representatives of the Philippines?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (SBAR (WHNP (WDT Which)) (S (NP (JJ professional) (NN fighter)))) (, ,) (WHNP (WP who)) (SQ (VP (VP (VBZ is) (ADVP (RB also)) (NP (DT a) (NN politician))) (CC and) (VP (VBD was) (VP (VBN elected) (PP (IN to) (NP (NP (NNP House)) (PP (IN of) (NP (NP (NNPS Representatives)) (PP (IN of) (NP (DT the) (NNPS Philippines))))))))))) (. ?)))",
        "id": 946
    },
    {
        "taggedQuestion": "List the comic characters created by Joe Shuster ?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "list",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the comic characters",
                "containsRefer": false,
                "originStr": "the comic characters",
                "start": 1,
                "entityID": 0,
                "end": 4,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "created by Joe Shuster",
                "containsRefer": false,
                "originStr": "created by Joe Shuster",
                "start": 4,
                "entityID": 0,
                "end": 8,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "List the comic characters created by Joe Shuster ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SQ (VP (VB List) (NP (NP (DT the) (JJ comic) (NNS characters)) (VP (VBN created) (PP (IN by) (NP (NNP Joe) (NNP Shuster)))))) (. ?)))",
        "id": 947
    },
    {
        "taggedQuestion": "What conventions are held in Rosemont, Illinois?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are held in Rosemont , Illinois",
                "containsRefer": false,
                "originStr": "are held in Rosemont , Illinois",
                "start": 2,
                "entityID": 0,
                "end": 8,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "conventions",
                "containsRefer": false,
                "originStr": "conventions",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What conventions are held in Rosemont, Illinois?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBAR (WHNP (WDT What)) (S (NP (NNS conventions)) (VP (VBP are) (VP (VBN held) (PP (IN in) (NP (NNP Rosemont) (, ,) (NNP Illinois)))))) (. ?)))",
        "id": 948
    },
    {
        "taggedQuestion": "What city is located on the mouth of Duwamish River?",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "city",
                "containsRefer": false,
                "originStr": "city",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is located on #entity1",
                "containsRefer": true,
                "originStr": "is located on #entity1",
                "start": 2,
                "entityID": 0,
                "end": 10,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the mouth of Duwamish River",
                "containsRefer": false,
                "originStr": "the mouth of Duwamish River",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 4,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What city is located on the mouth of Duwamish River?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT What) (NN city)) (SQ (VBZ is) (VP (VBN located) (PP (IN on) (NP (NP (DT the) (NN mouth)) (PP (IN of) (NP (NNP Duwamish) (NNP River))))))) (. ?)))",
        "id": 949
    },
    {
        "taggedQuestion": "Which governer of Winston Bryant is the president of Joseph Stiglitz ?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "governer of Winston Bryant",
                "containsRefer": false,
                "originStr": "governer of Winston Bryant",
                "start": 1,
                "entityID": 0,
                "end": 5,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the president of Joseph Stiglitz",
                "containsRefer": false,
                "originStr": "is the president of Joseph Stiglitz",
                "start": 5,
                "entityID": 0,
                "end": 11,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which governer of Winston Bryant is the president of Joseph Stiglitz ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NP (NN governer) (PP (IN of) (NP (NNP Winston) (NNP Bryant))))) (SQ (VBZ is) (NP (NP (DT the) (NN president)) (PP (IN of) (NP (NNP Joseph) (NNP Stiglitz))))) (. ?)))",
        "id": 950
    },
    {
        "taggedQuestion": "How many people have led agencies in <e0>?",
        "entityMap": {"<e0>": "German occupied Europe"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "how many",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "people",
                "containsRefer": false,
                "originStr": "people",
                "start": 2,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "have led agencies in German occupied Europe",
                "containsRefer": false,
                "originStr": "have led agencies in German occupied Europe",
                "start": 3,
                "entityID": 0,
                "end": 8,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "How many people have led agencies in German occupied Europe?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WHADJP (WRB How) (JJ many)) (NNS people)) (SQ (VP (VBP have) (VP (VBN led) (NP (NNS agencies)) (PP (IN in) (NP (NN <e0>)))))) (. ?)))",
        "id": 951
    },
    {
        "taggedQuestion": "Where did the plays written by Robert Schenkkan take place?",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "Where",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "did #entity1 take place",
                "containsRefer": true,
                "originStr": "did #entity1 take place",
                "start": 1,
                "entityID": 0,
                "end": 10,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the plays",
                "containsRefer": false,
                "originStr": "the plays",
                "start": 2,
                "entityID": 1,
                "end": 4,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "written by Robert Schenkkan",
                "containsRefer": false,
                "originStr": "written by Robert Schenkkan",
                "start": 4,
                "entityID": 1,
                "end": 8,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Where did the plays written by Robert Schenkkan take place?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 2,
                "from": 2,
                "end": 8,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHADVP (WRB Where)) (SQ (VBD did) (NP (NP (DT the) (NNS plays)) (VP (VBN written) (PP (IN by) (NP (NNP Robert) (NNP Schenkkan))))) (VP (VB take) (NP (NN place)))) (. ?)))",
        "id": 952
    },
    {
        "taggedQuestion": "Which president did the predecessor of <e0>?",
        "entityMap": {"<e0>": "Simon Ferro work"},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "president",
                "containsRefer": false,
                "originStr": "president",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "did #entity1 Simon Ferro work",
                "containsRefer": true,
                "originStr": "did #entity1 Simon Ferro work",
                "start": 2,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the predecessor of",
                "containsRefer": false,
                "originStr": "the predecessor of",
                "start": 3,
                "entityID": 1,
                "end": 6,
                "nodeType": 4,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which president did the predecessor of Simon Ferro work?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 3,
                "from": 3,
                "end": 6,
                "to": 4
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NN president)) (SQ (VP (VBD did) (NP (NP (DT the) (NN predecessor)) (PP (IN of) (NP (NN <e0>)))))) (. ?)))",
        "id": 953
    },
    {
        "taggedQuestion": "Name  some ww1 veterans.",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "name",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "some ww1 veterans",
                "containsRefer": false,
                "originStr": "some ww1 veterans",
                "start": 1,
                "entityID": 0,
                "end": 4,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Name  some ww1 veterans.",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Name) (NP (DT some) (NN ww1) (NNS veterans))) (. .)))",
        "id": 954
    },
    {
        "taggedQuestion": "Who appointed both John Drayton and William Clark to their respective offices?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "who",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "appointed John Drayton",
                "containsRefer": false,
                "originStr": "appointed John Drayton",
                "start": 0,
                "entityID": 0,
                "end": 3,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "William Clark to their respective offices",
                "containsRefer": false,
                "originStr": "William Clark to their respective offices",
                "start": 4,
                "entityID": 0,
                "end": 9,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Who appointed both John Drayton and William Clark to their respective offices?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP Who)) (SQ (VP (VBD appointed) (NP (CC both) (NP (NNP John) (NNP Drayton)) (CC and) (NP (NNP William) (NNP Clark))) (PP (IN to) (NP (PRP$ their) (JJ respective) (NNS offices))))) (. ?)))",
        "id": 955
    },
    {
        "taggedQuestion": "Which operator of <e1> is also the  governing body of the <e0> ?",
        "entityMap": {
            "<e1>": "New Sanno Hotel",
            "<e0>": "Oahu Railway and Land Company"
        },
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "operator of New Sanno Hotel",
                "containsRefer": false,
                "originStr": "operator of New Sanno Hotel",
                "start": 1,
                "entityID": 0,
                "end": 4,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the governing body of the Oahu Railway and Land Company",
                "containsRefer": false,
                "originStr": "the governing body of the Oahu Railway and Land Company",
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "",
                "containsRefer": false,
                "originStr": "",
                "start": 4,
                "entityID": 0,
                "end": 5,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which operator of New Sanno Hotel is also the  governing body of the Oahu Railway and Land Company ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NP (NN operator) (PP (IN of) (NP (NN <e1>))))) (SQ (VP (VBZ is) (ADVP (RB also)) (NP (NP (DT the) (VBG governing) (NN body)) (PP (IN of) (NP (DT the) (NN <e0>)))))) (. ?)))",
        "id": 956
    },
    {
        "taggedQuestion": "Which predecessor of Alexander Downer was deputy to Neil Brown ?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "predecessor of Alexander Downer",
                "containsRefer": false,
                "originStr": "predecessor of Alexander Downer",
                "start": 1,
                "entityID": 0,
                "end": 5,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "was deputy to Neil Brown",
                "containsRefer": false,
                "originStr": "was deputy to Neil Brown",
                "start": 5,
                "entityID": 0,
                "end": 10,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which predecessor of Alexander Downer was deputy to Neil Brown ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NP (NN predecessor) (PP (IN of) (NP (NNP Alexander) (NNP Downer))))) (SQ (VBD was) (NP (NP (NN deputy)) (PP (IN to) (NP (NNP Neil) (NNP Brown))))) (. ?)))",
        "id": 957
    },
    {
        "taggedQuestion": "Which are the predecessor of Chevrolet Caprice?",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are the predecessor of Chevrolet Caprice",
                "containsRefer": false,
                "originStr": "are the predecessor of Chevrolet Caprice",
                "start": 1,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which are the predecessor of Chevrolet Caprice?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which)) (SQ (VBP are) (NP (NP (DT the) (NN predecessor)) (PP (IN of) (NP (NNP Chevrolet) (NNP Caprice))))) (. ?)))",
        "id": 958
    },
    {
        "taggedQuestion": "Who wrote the album coming right before Dead Man's Chest's OST?",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "who",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "wrote #entity1",
                "containsRefer": true,
                "originStr": "wrote #entity1",
                "start": 1,
                "entityID": 0,
                "end": 13,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the album",
                "containsRefer": false,
                "originStr": "the album",
                "start": 2,
                "entityID": 1,
                "end": 4,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "coming right before Dead Man's Chest's OST",
                "containsRefer": false,
                "originStr": "coming right before Dead Man's Chest's OST",
                "start": 4,
                "entityID": 1,
                "end": 13,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Who wrote the album coming right before Dead Man's Chest's OST?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 2,
                "from": 2,
                "end": 13,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP Who)) (SQ (VP (VBD wrote) (NP (DT the) (NN album)) (S (VP (VBG coming) (ADVP (RB right)) (PP (IN before) (NP (NP (NP (NNP Dead) (NNP Man) (POS 's)) (NN Chest) (POS 's)) (NN OST))))))) (. ?)))",
        "id": 959
    },
    {
        "taggedQuestion": "What is the series of the book which is a subsequent work of <e0>: The Edge of Human ?",
        "entityMap": {"<e0>": "Blade Runner 2"},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the series of #entity1",
                "containsRefer": true,
                "originStr": "is the series of #entity1",
                "start": 1,
                "entityID": 0,
                "end": 19,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the book",
                "containsRefer": false,
                "originStr": "the book",
                "start": 5,
                "entityID": 1,
                "end": 7,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is a subsequent work of Blade Runner 2 : The Edge of Human",
                "containsRefer": false,
                "originStr": "is a subsequent work of Blade Runner 2 : The Edge of Human",
                "start": 8,
                "entityID": 1,
                "end": 19,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What is the series of the book which is a subsequent work of Blade Runner 2: The Edge of Human ?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 5,
                "from": 2,
                "end": 19,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (NP (DT the) (NN series)) (PP (IN of) (NP (NP (DT the) (NN book)) (SBAR (WHNP (WDT which)) (S (VP (VBZ is) (NP (NP (NP (DT a) (JJ subsequent) (NN work)) (PP (IN of) (NP (NN <e0>)))) (: :) (NP (NP (DT The) (NNP Edge)) (PP (IN of) (NP (NNP Human)))))))))))) (. ?)))",
        "id": 960
    },
    {
        "taggedQuestion": "How many cities's teams did David Bowens play?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "how many",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "cities's teams",
                "containsRefer": false,
                "originStr": "cities's teams",
                "start": 2,
                "entityID": 0,
                "end": 5,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "did David Bowens play",
                "containsRefer": false,
                "originStr": "did David Bowens play",
                "start": 5,
                "entityID": 0,
                "end": 9,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "How many cities's teams did David Bowens play?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WHADJP (WRB How) (JJ many)) (NP (NNS cities) (POS 's)) (NNS teams)) (SQ (VBD did) (NP (NNP David) (NNP Bowens)) (VP (VB play))) (. ?)))",
        "id": 961
    },
    {
        "taggedQuestion": "Is Anne Hidalgo the mayor of Paris?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "is",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "JUDGE"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Anne Hidalgo",
                "containsRefer": false,
                "originStr": "Anne Hidalgo",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the mayor of Paris",
                "containsRefer": false,
                "originStr": "the mayor of Paris",
                "start": 3,
                "entityID": 0,
                "end": 7,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Is Anne Hidalgo the mayor of Paris?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SQ (VBZ Is) (NP (NNP Anne) (NNP Hidalgo)) (NP (NP (DT the) (NN mayor)) (PP (IN of) (NP (NNP Paris)))) (. ?)))",
        "id": 962
    },
    {
        "taggedQuestion": "Which countries have models hanged themselves?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "countries",
                "containsRefer": false,
                "originStr": "countries",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "have models hanged themselves",
                "containsRefer": false,
                "originStr": "have models hanged themselves",
                "start": 2,
                "entityID": 0,
                "end": 6,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which countries have models hanged themselves?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NNS countries)) (SQ (VBP have) (NP (NNS models)) (VP (VBN hanged) (NP (PRP themselves)))) (. ?)))",
        "id": 963
    },
    {
        "taggedQuestion": "Is the Vadodara railway junction onwed by <e0>?",
        "entityMap": {"<e0>": "Indian Railway Ministry"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "is",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "JUDGE"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the Vadodara railway junction",
                "containsRefer": false,
                "originStr": "the Vadodara railway junction",
                "start": 1,
                "entityID": 0,
                "end": 5,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "onwed by Indian Railway Ministry",
                "containsRefer": false,
                "originStr": "onwed by Indian Railway Ministry",
                "start": 5,
                "entityID": 0,
                "end": 8,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Is the Vadodara railway junction onwed by Indian Railway Ministry?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SQ (VBZ Is) (NP (DT the) (NNP Vadodara) (NN railway) (NN junction)) (VP (VBN onwed) (PP (IN by) (NP (NN <e0>)))) (. ?)))",
        "id": 964
    },
    {
        "taggedQuestion": "What city gave birth to Mishal Raheja and also houses New India Assurance?",
        "entityMap": {},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "city",
                "containsRefer": false,
                "originStr": "city",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "gave birth to Mishal Raheja",
                "containsRefer": false,
                "originStr": "gave birth to Mishal Raheja",
                "start": 2,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "houses New India Assurance",
                "containsRefer": false,
                "originStr": "houses New India Assurance",
                "start": 8,
                "entityID": 0,
                "end": 12,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What city gave birth to Mishal Raheja and also houses New India Assurance?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT What) (NN city)) (SQ (VP (VP (VBD gave) (NP (NN birth)) (PP (IN to) (NP (NNP Mishal) (NNP Raheja)))) (CC and) (ADVP (RB also)) (VP (VBZ houses) (NP (NNP New) (NNP India) (NNP Assurance))))) (. ?)))",
        "id": 965
    },
    {
        "taggedQuestion": "Which TV show whose theme is composed by someone signed up with ATO records?",
        "entityMap": {},
        "nodeNum": 7,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "TV",
                "containsRefer": false,
                "originStr": "TV",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "#entity1 signed up with ATO records",
                "containsRefer": true,
                "originStr": "#entity1 signed up with ATO records",
                "start": 2,
                "entityID": 0,
                "end": 14,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "show",
                "containsRefer": false,
                "originStr": "show",
                "start": 2,
                "entityID": 1,
                "end": 3,
                "nodeType": 4,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            },
            {
                "str": "whose theme is composed by someone",
                "containsRefer": false,
                "originStr": "whose theme is composed by someone",
                "start": 5,
                "entityID": 1,
                "end": 9,
                "nodeType": 3,
                "nodeID": 6,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which TV show whose theme is composed by someone signed up with ATO records?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 2,
                "from": 3,
                "end": 9,
                "to": 4
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 5
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 6,
                "info": "whose theme"
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NN TV)) (SQ (NP (NP (NN show)) (SBAR (WHNP (WP$ whose) (NML (NN theme))) (S (VP (VBZ is) (VP (VBN composed) (PP (IN by) (NP (NN someone)))))))) (VP (VBD signed) (PRT (RP up)) (PP (IN with) (NP (NN ATO) (NNS records))))) (. ?)))",
        "id": 966
    },
    {
        "taggedQuestion": "Which models were featured in <e0>?",
        "entityMap": {"<e0>": "Playboy Playmates 1954"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "were featured in Playboy Playmates 1954",
                "containsRefer": false,
                "originStr": "were featured in Playboy Playmates 1954",
                "start": 2,
                "entityID": 0,
                "end": 6,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "models",
                "containsRefer": false,
                "originStr": "models",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which models were featured in Playboy Playmates 1954?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBAR (WHNP (WDT Which)) (S (NP (NNS models)) (VP (VBD were) (VP (VBN featured) (PP (IN in) (NP (NN <e0>)))))) (. ?)))",
        "id": 967
    },
    {
        "taggedQuestion": "What currencies have been prevalent in the country whose national anthem is La Marseillaise?",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "currencies have been prevalent in #entity1",
                "containsRefer": true,
                "originStr": "currencies have been prevalent in #entity1",
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "country",
                "containsRefer": false,
                "originStr": "country",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "national anthem is La Marseillaise",
                "containsRefer": false,
                "originStr": "national anthem is La Marseillaise",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What currencies have been prevalent in the country whose national anthem is La Marseillaise?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": -1,
                "from": 2,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (SBAR (WHNP (WDT What)) (S (NP (NNS currencies)) (VP (VBP have) (VP (VBN been) (ADJP (JJ prevalent)) (PP (IN in) (NP (DT the) (NN country))))))) (WHNP (WP$ whose) (JJ national) (NN anthem)) (SQ (VBZ is) (NP (NNP La) (NNP Marseillaise))) (. ?)))",
        "id": 968
    },
    {
        "taggedQuestion": "Who is the relative of Jim Farley (businessman) ?",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "who",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the relative of Jim Farley(businessman)",
                "containsRefer": false,
                "originStr": "is the relative of Jim Farley(businessman)",
                "start": 1,
                "entityID": 0,
                "end": 10,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Who is the relative of Jim Farley (businessman) ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP Who)) (SQ (VBZ is) (NP (NP (DT the) (JJ relative)) (PP (IN of) (NP (NNP Jim) (NNP Farley) (PRN (-LRB- -LRB-) (NP (NN businessman)) (-RRB- -RRB-)))))) (. ?)))",
        "id": 969
    },
    {
        "taggedQuestion": "Is Latin the official language of <e0>?",
        "entityMap": {
            "<e1>": "Latin official language",
            "<e0>": "Sovereign Military Order of Malta"
        },
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "is",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "JUDGE"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Latin",
                "containsRefer": false,
                "originStr": "Latin",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the official language of Sovereign Military Order of Malta",
                "containsRefer": false,
                "originStr": "the official language of Sovereign Military Order of Malta",
                "start": 2,
                "entityID": 0,
                "end": 7,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Is Latin the official language of Sovereign Military Order of Malta?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SQ (VBZ Is) (NP (NNP Latin)) (NP (NP (DT the) (JJ official) (NN language)) (PP (IN of) (NP (NN <e0>)))) (. ?)))",
        "id": 970
    },
    {
        "taggedQuestion": "Where do the politicians, Blanche Bruce and <e0> work?",
        "entityMap": {"<e0>": "John Franklin Miller"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "Where",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "do work the politicians , Blanche Bruce",
                "containsRefer": false,
                "originStr": "do work the politicians , Blanche Bruce",
                "start": 1,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "do work John Franklin Miller work",
                "containsRefer": false,
                "originStr": "do work John Franklin Miller work",
                "start": 8,
                "entityID": 0,
                "end": 9,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Where do the politicians, Blanche Bruce and John Franklin Miller work?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHADVP (WRB Where)) (SQ (VBP do) (NP (NP (DT the) (NNS politicians)) (, ,) (NP (NNP Blanche) (NNP Bruce)) (CC and) (NP (ADD <e0>))) (VP (VB work))) (. ?)))",
        "id": 971
    },
    {
        "taggedQuestion": "Name an American football player whose debuted in Chicago Bears and former team is <e0>",
        "entityMap": {"<e0>": "1998 Baltimore Ravens season."},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "name",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "an American football player",
                "containsRefer": false,
                "originStr": "an American football player",
                "start": 1,
                "entityID": 0,
                "end": 5,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "whose debuted in chicago bears and former team is 1998 Baltimore Ravens season",
                "containsRefer": false,
                "originStr": "whose debuted in chicago bears and former team is 1998 Baltimore Ravens season",
                "start": 13,
                "entityID": 0,
                "end": 15,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Name an American football player whose debuted in Chicago Bears and former team is 1998 Baltimore Ravens season.",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3,
                "info": "whose debuted in chicago bears and former team"
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Name) (NP (NP (DT an) (JJ American) (NN football) (NN player)) (SBAR (WHNP (WP$ whose) (NML (S (VP (VBN debuted) (PP (IN in) (NP (NP (NNP Chicago) (NNPS Bears)) (CC and) (NP (JJ former))))))) (NN team)) (S (VP (VBZ is) (NP (ADD <e0>)))))))))",
        "id": 972
    },
    {
        "taggedQuestion": "Name a  river with source country as Zambia and source location as Ikelenge  District.",
        "entityMap": {},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "name",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "a river",
                "containsRefer": false,
                "originStr": "a river",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "source country as Zambia",
                "containsRefer": false,
                "originStr": "source country as Zambia",
                "start": 4,
                "entityID": 0,
                "end": 8,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "source location as Ikelenge District",
                "containsRefer": false,
                "originStr": "source location as Ikelenge District",
                "start": 9,
                "entityID": 0,
                "end": 13,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Name a  river with source country as Zambia and source location as Ikelenge  District.",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Name) (NP (DT a) (NN river)) (PP (IN with) (NP (NP (NP (NN source) (NN country)) (PP (IN as) (NP (NNP Zambia)))) (CC and) (NP (NP (NN source) (NN location)) (PP (IN as) (NP (NNP Ikelenge) (NNP District))))))) (. .)))",
        "id": 973
    },
    {
        "taggedQuestion": "Does Ford own the <e0>?",
        "entityMap": {"<e0>": "Ford Kansas Assembly plant"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "does",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "JUDGE"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Ford",
                "containsRefer": false,
                "originStr": "Ford",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "own the Ford Kansas Assembly plant",
                "containsRefer": false,
                "originStr": "own the Ford Kansas Assembly plant",
                "start": 2,
                "entityID": 0,
                "end": 5,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Does Ford own the Ford Kansas Assembly plant?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SQ (VBZ Does) (NP (NNP Ford)) (VP (VB own) (NP (DT the) (NN <e0>))) (. ?)))",
        "id": 974
    },
    {
        "taggedQuestion": "Which fields of the Paul Demiville is also the faith of <e0> ?",
        "entityMap": {"<e0>": "Koay Teng Hai"},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "fields of the Paul Demiville",
                "containsRefer": false,
                "originStr": "fields of the Paul Demiville",
                "start": 1,
                "entityID": 0,
                "end": 6,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the faith of Koay Teng Hai",
                "containsRefer": false,
                "originStr": "the faith of Koay Teng Hai",
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "",
                "containsRefer": false,
                "originStr": "",
                "start": 6,
                "entityID": 0,
                "end": 7,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which fields of the Paul Demiville is also the faith of Koay Teng Hai ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NP (NP (NNS fields)) (PP (IN of) (NP (DT the) (NNP Paul) (NNP Demiville))))) (SQ (VBZ is) (ADVP (RB also)) (NP (NP (DT the) (NN faith)) (PP (IN of) (NP (NN <e0>))))) (. ?)))",
        "id": 975
    },
    {
        "taggedQuestion": "Name the institute of Alton Ochsner .",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "name",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the institute of Alton Ochsner",
                "containsRefer": false,
                "originStr": "the institute of Alton Ochsner",
                "start": 1,
                "entityID": 0,
                "end": 6,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Name the institute of Alton Ochsner .",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Name) (NP (NP (DT the) (NN institute)) (PP (IN of) (NP (NNP Alton) (NNP Ochsner))))) (. .)))",
        "id": 976
    },
    {
        "taggedQuestion": "What movies have been written by authors of Monty Python ?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "have been written by authors of Monty Python",
                "containsRefer": false,
                "originStr": "have been written by authors of Monty Python",
                "start": 2,
                "entityID": 0,
                "end": 10,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "movies",
                "containsRefer": false,
                "originStr": "movies",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What movies have been written by authors of Monty Python ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBAR (WHNP (WDT What)) (S (NP (NNS movies)) (VP (VBP have) (VP (VBN been) (VP (VBN written) (PP (IN by) (NP (NP (NNS authors)) (PP (IN of) (NP (NNP Monty) (NNP Python))))))))) (. ?)))",
        "id": 977
    },
    {
        "taggedQuestion": "Who was the cover artist of The Adventure of Tom Sawyer also wrote <e0> ?",
        "entityMap": {"<e0>": "mark Twain Tonight"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "who",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "was the cover artist of The Adventure of Tom Sawyer",
                "containsRefer": false,
                "originStr": "was the cover artist of The Adventure of Tom Sawyer",
                "start": 1,
                "entityID": 0,
                "end": 11,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "wrote mark Twain Tonight",
                "containsRefer": false,
                "originStr": "wrote mark Twain Tonight",
                "start": 12,
                "entityID": 0,
                "end": 14,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Who was the cover artist of The Adventure of Tom Sawyer also wrote mark Twain Tonight ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP Who)) (SQ (VBD was) (NP (NP (DT the) (NN cover)) (SBAR (S (NP (NP (NN artist)) (PP (IN of) (NP (NP (DT The) (NN Adventure)) (PP (IN of) (NP (NNP Tom) (NNP Sawyer)))))) (ADVP (RB also)) (VP (VBD wrote) (NP (ADD <e0>))))))) (. ?)))",
        "id": 978
    },
    {
        "taggedQuestion": "Name the scientist whose academic advisor is <e0> and supervisor is Georg Meissner.",
        "entityMap": {"<e0>": "Karl Ewald Hasse"},
        "nodeNum": 9,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "name",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Name #entity1",
                "containsRefer": true,
                "originStr": "Name #entity1",
                "start": 0,
                "entityID": 0,
                "end": 10,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the scientist",
                "containsRefer": false,
                "originStr": "the scientist",
                "start": 1,
                "entityID": 1,
                "end": 3,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "whose academic advisor is Karl Ewald Hasse",
                "containsRefer": false,
                "originStr": "whose academic advisor is Karl Ewald Hasse",
                "start": 6,
                "entityID": 1,
                "end": 8,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is Georg Meissner",
                "containsRefer": false,
                "originStr": "is Georg Meissner",
                "start": 10,
                "entityID": 0,
                "end": 13,
                "nodeType": 3,
                "nodeID": 6,
                "questionType": "UNKNOWN"
            },
            {
                "str": "",
                "containsRefer": false,
                "originStr": "",
                "start": 13,
                "entityID": 0,
                "end": 14,
                "nodeType": 4,
                "nodeID": 7,
                "questionType": "UNKNOWN"
            },
            {
                "str": "whose academic advisor is supervisor",
                "containsRefer": false,
                "originStr": "whose academic advisor is supervisor",
                "start": 9,
                "entityID": 1,
                "end": 9,
                "nodeType": 4,
                "nodeID": 8,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Name the scientist whose academic advisor is Karl Ewald Hasse and supervisor is Georg Meissner.",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 6
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 7
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 1,
                "from": 2,
                "end": 10,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5,
                "info": "whose academic advisor"
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 8
            }
        ],
        "syntaxTreeText": "(ROOT (S (S (VP (VB Name) (NP (NP (DT the) (NN scientist)) (SBAR (WHNP (WP$ whose) (JJ academic) (NN advisor)) (S (VP (VBZ is) (NP (NP (ADD <e0>)) (CC and) (NP (NN supervisor))))))))) (VP (VBZ is) (NP (NNP Georg) (NNP Meissner))) (. .)))",
        "id": 979
    },
    {
        "taggedQuestion": "Where do <e0> live?",
        "entityMap": {"<e0>": "current famous NatGeo photographers"},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "Where",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "do current famous NatGeo photographers live",
                "containsRefer": false,
                "originStr": "do current famous NatGeo photographers live",
                "start": 1,
                "entityID": 0,
                "end": 4,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Where do current famous NatGeo photographers live?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHADVP (WRB Where)) (SQ (VBP do) (NP (NP (ADD <e0>)) (S (VP (VB live))))) (. ?)))",
        "id": 980
    },
    {
        "taggedQuestion": "Georg Meissner was doctoral supervisor of which scientist ?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "scientist",
                "containsRefer": false,
                "originStr": "scientist",
                "start": 7,
                "entityID": 0,
                "end": 9,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Georg Meissner was doctoral supervisor of",
                "containsRefer": false,
                "originStr": "Georg Meissner was doctoral supervisor of",
                "start": 0,
                "entityID": 0,
                "end": 6,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Georg Meissner was doctoral supervisor of which scientist ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (S (NP (NNP Georg) (NNP Meissner)) (VP (VBD was) (NP (NP (JJ doctoral) (NN supervisor)) (PP (IN of) (NP (WDT which) (NN scientist))))) (. ?)))",
        "id": 981
    },
    {
        "taggedQuestion": "Did Stanlee write the <e0>?",
        "entityMap": {"<e0>": "Tales of Suspense"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "did",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "JUDGE"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Stanlee",
                "containsRefer": false,
                "originStr": "Stanlee",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "write the Tales of Suspense",
                "containsRefer": false,
                "originStr": "write the Tales of Suspense",
                "start": 2,
                "entityID": 0,
                "end": 5,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Did Stanlee write the Tales of Suspense?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SQ (VBD Did) (NP (NNP Stanlee)) (VP (VB write) (NP (DT the) (NN <e0>))) (. ?)))",
        "id": 982
    },
    {
        "taggedQuestion": "Name the <e0> of the Trishna (yacht) and INS Viraat (R22).",
        "entityMap": {"<e0>": "common home port"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "name",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the common home port of the Trishna (yacht)",
                "containsRefer": false,
                "originStr": "the common home port of the Trishna (yacht)",
                "start": 1,
                "entityID": 0,
                "end": 9,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the common home port of INS Viraat (R22)",
                "containsRefer": false,
                "originStr": "the common home port of INS Viraat (R22)",
                "start": 10,
                "entityID": 0,
                "end": 14,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Name the common home port of the Trishna (yacht) and INS Viraat (R22).",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Name) (NP (NP (DT the) (NN <e0>)) (PP (IN of) (NP (NP (NP (DT the) (NNP Trishna)) (-LRB- -LRB-) (NP (NN yacht)) (-RRB- -RRB-)) (CC and) (NP (NNP INS) (NNP Viraat) (PRN (-LRB- -LRB-) (NP (NN R22)) (-RRB- -RRB-))))))) (. .)))",
        "id": 983
    },
    {
        "taggedQuestion": "Does the US navy have the structure of command of us department of defence?",
        "entityMap": {},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "does the us",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "JUDGE"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "navy have #entity1",
                "containsRefer": true,
                "originStr": "navy have #entity1",
                "start": 3,
                "entityID": 0,
                "end": 14,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the structure of command of us department of defence",
                "containsRefer": false,
                "originStr": "the structure of command of us department of defence",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Does the US navy have the structure of command of us department of defence?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": -1,
                "from": 2,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SQ (SQ (VBZ Does) (NP (DT the) (NNP US))) (S (NP (NN navy)) (VP (VBP have) (NP (NP (DT the) (NN structure)) (PP (IN of) (NP (NP (NN command)) (PP (IN of) (NP (NP (PRP us) (NN department)) (PP (IN of) (NP (NN defence)))))))))) (. ?)))",
        "id": 984
    },
    {
        "taggedQuestion": "Name books with publisher as Francisco de Robles and writer as <e0> .",
        "entityMap": {
            "<e1>": "Francisco de Robles writer",
            "<e0>": "Miguel de Cervantes"
        },
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "name",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "books",
                "containsRefer": false,
                "originStr": "books",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "publisher as Francisco de Robles",
                "containsRefer": false,
                "originStr": "publisher as Francisco de Robles",
                "start": 3,
                "entityID": 0,
                "end": 8,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "writer as Miguel de Cervantes",
                "containsRefer": false,
                "originStr": "writer as Miguel de Cervantes",
                "start": 9,
                "entityID": 0,
                "end": 11,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Name books with publisher as Francisco de Robles and writer as Miguel de Cervantes .",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Name) (NP (NNS books)) (PP (IN with) (NP (NP (NP (NN publisher)) (PP (IN as) (NP (NNP Francisco) (FW de) (NNP Robles)))) (CC and) (NP (NP (NN writer)) (PP (IN as) (NP (ADD <e0>))))))) (. .)))",
        "id": 985
    },
    {
        "taggedQuestion": "Who owns the schools which have a penguin as its mascot?",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "who",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "owns #entity1",
                "containsRefer": true,
                "originStr": "owns #entity1",
                "start": 1,
                "entityID": 0,
                "end": 11,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the schools",
                "containsRefer": false,
                "originStr": "the schools",
                "start": 2,
                "entityID": 1,
                "end": 4,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "have a penguin as its mascot",
                "containsRefer": false,
                "originStr": "have a penguin as its mascot",
                "start": 5,
                "entityID": 1,
                "end": 11,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Who owns the schools which have a penguin as its mascot?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 2,
                "from": 2,
                "end": 11,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP Who)) (SQ (VP (VBZ owns) (NP (NP (DT the) (NNS schools)) (SBAR (WHNP (WDT which)) (S (VP (VBP have) (NP (NP (DT a) (NN penguin)) (PP (IN as) (NP (PRP$ its) (NN mascot)))))))))) (. ?)))",
        "id": 986
    },
    {
        "taggedQuestion": "River which flows into the <e0> pass through which states?",
        "entityMap": {"<e0>": "eugene mahoney state park"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "states",
                "containsRefer": false,
                "originStr": "states",
                "start": 9,
                "entityID": 0,
                "end": 11,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "River which flows into the eugene mahoney state park pass through",
                "containsRefer": false,
                "originStr": "River which flows into the eugene mahoney state park pass through",
                "start": 0,
                "entityID": 0,
                "end": 8,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "River which flows into the eugene mahoney state park pass through which states?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (S (NP (NP (NN River)) (SBAR (WHNP (WDT which)) (S (VP (VBZ flows) (PP (IN into) (NP (DT the) (NN <e0>))))))) (VP (VB pass) (FRAG (WHPP (IN through) (WHNP (WDT which) (NNS states))))) (. ?)))",
        "id": 987
    },
    {
        "taggedQuestion": "What nation is Hornito located in, where Jamie Bateman Cayn died too?",
        "entityMap": {},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "nation",
                "containsRefer": false,
                "originStr": "nation",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is Hornito located in",
                "containsRefer": false,
                "originStr": "is Hornito located in",
                "start": 2,
                "entityID": 0,
                "end": 13,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Jamie Bateman Cayn died too",
                "containsRefer": false,
                "originStr": "Jamie Bateman Cayn died too",
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What nation is Hornito located in, where Jamie Bateman Cayn died too?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT What) (NN nation)) (SQ (VBZ is) (NP (NNP Hornito)) (VP (VBN located) (PP (IN in)) (, ,) (SBAR (WHADVP (WRB where)) (S (NP (NNP Jamie) (NNP Bateman) (NNP Cayn)) (VP (VBD died) (ADVP (RB too))))))) (. ?)))",
        "id": 988
    },
    {
        "taggedQuestion": "Which TV show had a judge named Harry Connick, Jr. and was presented by Ryan Seacrest?",
        "entityMap": {},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "TV show",
                "containsRefer": false,
                "originStr": "TV show",
                "start": 1,
                "entityID": 0,
                "end": 3,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "named Harry Connick , Jr",
                "containsRefer": false,
                "originStr": "named Harry Connick , Jr",
                "start": 6,
                "entityID": 0,
                "end": 11,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "was presented by Ryan Seacrest",
                "containsRefer": false,
                "originStr": "was presented by Ryan Seacrest",
                "start": 12,
                "entityID": 0,
                "end": 17,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which TV show had a judge named Harry Connick, Jr. and was presented by Ryan Seacrest?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NN TV) (NN show)) (SQ (VBD had) (NP (DT a) (NN judge)) (VP (VP (VBN named) (NP (NP (NNP Harry) (NNP Connick)) (, ,) (NP (NNP Jr.)))) (CC and) (VP (VBD was) (VP (VBN presented) (PP (IN by) (NP (NNP Ryan) (NNP Seacrest))))))) (. ?)))",
        "id": 989
    },
    {
        "taggedQuestion": "Name the resting place of <e0> .",
        "entityMap": {"<e0>": "Fazlur Rahman Khan"},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "name",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the resting place of Fazlur Rahman Khan",
                "containsRefer": false,
                "originStr": "the resting place of Fazlur Rahman Khan",
                "start": 1,
                "entityID": 0,
                "end": 6,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Name the resting place of Fazlur Rahman Khan .",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Name) (NP (NP (DT the) (JJ resting) (NN place)) (PP (IN of) (NP (ADD <e0>))))) (. .)))",
        "id": 990
    },
    {
        "taggedQuestion": "Which arena of <e0> is death location of Tigran Petrosian >?",
        "entityMap": {"<e0>": "WPC Dynamo Moscow"},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "arena of WPC Dynamo Moscow",
                "containsRefer": false,
                "originStr": "arena of WPC Dynamo Moscow",
                "start": 1,
                "entityID": 0,
                "end": 4,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is death location of Tigran Petrosian >",
                "containsRefer": false,
                "originStr": "is death location of Tigran Petrosian >",
                "start": 4,
                "entityID": 0,
                "end": 11,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which arena of WPC Dynamo Moscow is death location of Tigran Petrosian >?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT Which) (NP (NN arena) (PP (IN of) (NP (NN <e0>))))) (SQ (VBZ is) (NP (NP (NN death) (NN location)) (PP (IN of) (NP (NNP Tigran) (NNP Petrosian) (SYM >))))) (. ?)))",
        "id": 991
    },
    {
        "taggedQuestion": "What cities are close by LoDaisKa ?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "what",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "cities",
                "containsRefer": false,
                "originStr": "cities",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "are close by LoDaisKa",
                "containsRefer": false,
                "originStr": "are close by LoDaisKa",
                "start": 2,
                "entityID": 0,
                "end": 6,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "What cities are close by LoDaisKa ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WDT What) (NNS cities)) (SQ (VP (VBP are) (ADJP (JJ close) (PP (IN by) (NP (NNP LoDaisKa)))))) (. ?)))",
        "id": 992
    },
    {
        "taggedQuestion": "Which wars were fought when the commanders involved served under PM Choi Tu Son?",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "which",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "were fought #entity1",
                "containsRefer": true,
                "originStr": "were fought #entity1",
                "start": 2,
                "entityID": 0,
                "end": 14,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "wars",
                "containsRefer": false,
                "originStr": "wars",
                "start": 1,
                "entityID": 0,
                "end": 2,
                "nodeType": 4,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "when the commanders involved served under PM Choi Tu Son",
                "containsRefer": false,
                "originStr": "when the commanders involved served under PM Choi Tu Son",
                "start": 5,
                "entityID": 1,
                "end": 14,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Which wars were fought when the commanders involved served under PM Choi Tu Son?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": 4,
                "from": 2,
                "end": 14,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 4,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (SBAR (WHNP (WDT Which)) (S (NP (NNS wars)) (VP (VBD were) (VP (VBN fought) (SBAR (WHADVP (WRB when)) (S (NP (NP (DT the) (NNS commanders)) (VP (VBN involved))) (VP (VBD served) (PP (IN under) (NP (NN PM) (NNP Choi) (NNP Tu) (NNP Son))))))))) (. ?)))",
        "id": 993
    },
    {
        "taggedQuestion": "Who is the meaning of Isa  ?",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "who",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is the meaning of Isa",
                "containsRefer": false,
                "originStr": "is the meaning of Isa",
                "start": 1,
                "entityID": 0,
                "end": 6,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Who is the meaning of Isa  ?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP Who)) (SQ (VBZ is) (NP (NP (DT the) (NN meaning)) (PP (IN of) (NP (NNP Isa))))) (. ?)))",
        "id": 994
    },
    {
        "taggedQuestion": "Who is  venerated in  Judaism and Islam?",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "who",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COMMON"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is venerated in Judaism",
                "containsRefer": false,
                "originStr": "is venerated in Judaism",
                "start": 1,
                "entityID": 0,
                "end": 5,
                "nodeType": 3,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "is venerated in Islam",
                "containsRefer": false,
                "originStr": "is venerated in Islam",
                "start": 6,
                "entityID": 0,
                "end": 6,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Who is  venerated in  Judaism and Islam?",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (SBARQ (WHNP (WP Who)) (SQ (VBZ is) (VP (VBN venerated) (PP (IN in) (NP (NNP Judaism) (CC and) (NNP Islam))))) (. ?)))",
        "id": 995
    },
    {
        "taggedQuestion": "Count the number teams which have  former ice hockey players which also included <e0> .",
        "entityMap": {"<e0>": "American Hockey League"},
        "nodeNum": 5,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "count",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "COUNT"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the number teams",
                "containsRefer": false,
                "originStr": "the number teams",
                "start": 1,
                "entityID": 0,
                "end": 4,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "have former ice hockey players which",
                "containsRefer": false,
                "originStr": "have former ice hockey players which",
                "start": 5,
                "entityID": 0,
                "end": 11,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "included American Hockey League",
                "containsRefer": false,
                "originStr": "included American Hockey League",
                "start": 12,
                "entityID": 0,
                "end": 14,
                "nodeType": 3,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Count the number teams which have  former ice hockey players which also included American Hockey League .",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 4
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Count) (NP (NP (DT the) (NN number) (NNS teams)) (SBAR (WHNP (WDT which)) (S (VP (VBP have) (NP (NP (JJ former) (NML (NN ice) (NN hockey)) (NNS players)) (SBAR (WHNP (WDT which)) (S (ADVP (RB also)) (VP (VBD included) (NP (ADD <e0>))))))))))) (. .)))",
        "id": 996
    },
    {
        "taggedQuestion": "Name the common editor of Easy Street (film) and Work (film).",
        "entityMap": {},
        "nodeNum": 4,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "name",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the common editor of Easy Street (film)",
                "containsRefer": false,
                "originStr": "the common editor of Easy Street (film)",
                "start": 1,
                "entityID": 0,
                "end": 10,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "str": "Work (film)",
                "containsRefer": false,
                "originStr": "Work (film)",
                "start": 11,
                "entityID": 0,
                "end": 14,
                "nodeType": 3,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Name the common editor of Easy Street (film) and Work (film).",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 3
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Name) (NP (NP (DT the) (JJ common) (NN editor)) (PP (IN of) (NP (NP (NNP Easy) (NNP Street) (PRN (-LRB- -LRB-) (NP (NN film)) (-RRB- -RRB-))) (CC and) (NP (NN Work) (PRN (-LRB- -LRB-) (NP (NN film)) (-RRB- -RRB-))))))) (. .)))",
        "id": 997
    },
    {
        "taggedQuestion": "List all the schools of the rugby player whose went to school named Pietermaritzburg ?",
        "entityMap": {},
        "nodeNum": 6,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "list",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "all the schools of #entity1",
                "containsRefer": true,
                "originStr": "all the schools of #entity1",
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 2,
                "nodeID": 3,
                "questionType": "UNKNOWN"
            },
            {
                "str": "rugby player",
                "containsRefer": false,
                "originStr": "rugby player",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 4,
                "nodeID": 4,
                "questionType": "UNKNOWN"
            },
            {
                "str": "went to school named Pietermaritzburg",
                "containsRefer": false,
                "originStr": "went to school named Pietermaritzburg",
                "start": -1,
                "entityID": 1,
                "end": -1,
                "nodeType": 3,
                "nodeID": 5,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "List all the schools of the rugby player whose went to school named Pietermaritzburg ?",
        "entityNum": 2,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            },
            {
                "edgeType": 2,
                "isEqual": false,
                "start": -1,
                "from": 2,
                "end": -1,
                "to": 3
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 4
            },
            {
                "edgeType": 3,
                "isEqual": false,
                "start": -1,
                "from": 3,
                "end": -1,
                "to": 5
            }
        ],
        "syntaxTreeText": "(ROOT (FRAG (NP (NN List)) (NP (NP (NP (PDT all) (DT the) (NNS schools)) (PP (IN of) (NP (DT the) (JJ rugby) (NN player)))) (SBAR (WHNP (WP$ whose)) (S (VP (VBD went) (PP (IN to) (NP (NP (NN school)) (VP (VBN named) (NP (NNP Pietermaritzburg))))))))) (. ?)))",
        "id": 998
    },
    {
        "taggedQuestion": "Name the office of Richard Coke .",
        "entityMap": {},
        "nodeNum": 3,
        "nodes": [
            {
                "containsRefer": false,
                "start": -1,
                "entityID": -1,
                "end": -1,
                "trigger": "name",
                "nodeType": 1,
                "nodeID": 0,
                "questionType": "LIST"
            },
            {
                "containsRefer": false,
                "start": -1,
                "entityID": 0,
                "end": -1,
                "nodeType": 2,
                "nodeID": 1,
                "questionType": "UNKNOWN"
            },
            {
                "str": "the office of Richard Coke",
                "containsRefer": false,
                "originStr": "the office of Richard Coke",
                "start": 1,
                "entityID": 0,
                "end": 6,
                "nodeType": 4,
                "nodeID": 2,
                "questionType": "UNKNOWN"
            }
        ],
        "question": "Name the office of Richard Coke .",
        "entityNum": 1,
        "edges": [
            {
                "edgeType": 1,
                "isEqual": false,
                "start": -1,
                "from": 0,
                "end": -1,
                "to": 1
            },
            {
                "edgeType": 4,
                "isEqual": false,
                "start": -1,
                "from": 1,
                "end": -1,
                "to": 2
            }
        ],
        "syntaxTreeText": "(ROOT (S (VP (VB Name) (NP (NP (DT the) (NN office)) (PP (IN of) (NP (NNP Richard) (NNP Coke))))) (. .)))",
        "id": 999
    }
]
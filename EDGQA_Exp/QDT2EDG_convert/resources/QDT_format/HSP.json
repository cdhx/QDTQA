[
    {
        "ID": "1701",
        "question": "Which architect of Marine Corps Air Station Kaneohe Bay was also tenant of New Sanno hotel /'",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Marine_Corps_Air_Station_Kaneohe_Bay> <http://dbpedia.org/property/architect> ?uri. <http://dbpedia.org/resource/New_Sanno_Hotel> <http://dbpedia.org/ontology/tenant> ?uri} ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which architect of marine bay air kaneohe bay",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "was also the tenant of new sanno hotel /'",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which architect of marine bay air kaneohe bay [DES] was also the tenant of new sanno hotel /'",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "which architect of marine bay air kaneohe bay",
            "was also the tenant of new sanno hotel /'"
        ],
        "subq2": []
    },
    {
        "ID": "3293",
        "question": "Which sects people are part of local political parties which fall under the International Muslim Brotherhood",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/international> <http://dbpedia.org/resource/Muslim_Brotherhood> . ?x <http://dbpedia.org/ontology/religion> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "which sects people are part of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "political parties which fall under the international parties",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "which sects people are part of [INQL] political parties which fall under the international parties [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "which sects people are part of [ENT]"
        ],
        "subq2": [
            "political parties which fall under the international parties"
        ]
    },
    {
        "ID": "2161",
        "question": "List common systems are developed by of the Google Videos and written by of the Google Web Toolkit",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Google_Videos> <http://dbpedia.org/property/developer> ?uri. <http://dbpedia.org/resource/Google_Web_Toolkit> <http://dbpedia.org/ontology/author> ?uri} ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "list common systems are developed by google web toolkit",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "and written by google web toolkit",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "list common systems are developed by google web toolkit [DES] and written by google web toolkit",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "list common systems are developed by google web toolkit",
            "and written by google web toolkit"
        ],
        "subq2": []
    },
    {
        "ID": "1136",
        "question": "For which games are Sam Loyd and Eric Schiller both famous",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Sam_Loyd> <http://dbpedia.org/ontology/knownFor> ?uri. <http://dbpedia.org/resource/Eric_Schiller> <http://dbpedia.org/ontology/knownFor> ?uri . }",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "for which games",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "are eric schiller both sam loyd and eric schiller famous",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "for which games [DES] are eric schiller both sam loyd and eric schiller famous",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "for which games",
            "are eric schiller both sam loyd and eric schiller famous"
        ],
        "subq2": []
    },
    {
        "ID": "987",
        "question": "Is Peter Piper Pizza in the pizza industry",
        "sparql": "ASK WHERE { <http://dbpedia.org/resource/Peter_Piper_Pizza> <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Pizza> }",
        "intent": "ASK",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "peter piper is the industry",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "in the industry pizza",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "peter piper is the industry [DES] in the industry pizza",
        "compositionality_type_golden": "simple",
        "intent_golden": "ASK",
        "subq1": [
            "peter piper is the industry",
            "in the industry pizza"
        ],
        "subq2": []
    },
    {
        "ID": "2549",
        "question": "Name the artist who made Dream Dancing and is often associated with Joe Pass",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Joe_Pass> <http://dbpedia.org/ontology/associatedBand> ?uri. <http://dbpedia.org/resource/Dream_Dancing_(album)> <http://dbpedia.org/property/artist> ?uri . }",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "name the artist who made dancing",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "and is often associated with joe pass",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "name the artist who made dancing [DES] and is often associated with joe pass",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "name the artist who made dancing",
            "and is often associated with joe pass"
        ],
        "subq2": []
    },
    {
        "ID": "193",
        "question": "Who is the office holder with deputies as Neil Brown and Andrew Peacock",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/deputy> <http://dbpedia.org/resource/Neil_Brown_(Australian_politician)> . ?uri <http://dbpedia.org/property/deputy> <http://dbpedia.org/resource/Andrew_Peacock> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "who is the office holder with deputies as andrew peacock",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "and neil brown",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "who is the office holder with deputies as andrew peacock [DES] and neil brown",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "who is the office holder with deputies as andrew peacock",
            "and neil brown"
        ],
        "subq2": []
    },
    {
        "ID": "3057",
        "question": "Where did these popular aeroplanes - Focke Wulf 260 and Start+Flug H 101 originate",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Focke-Wulf_Fw_260> <http://dbpedia.org/property/nationalOrigin> ?uri. <http://dbpedia.org/resource/Start_+_Flug_H-101> <http://dbpedia.org/property/nationalOrigin> ?uri . }",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "where did these aeroplanes focke 260 and start+flug 260 originate - 101",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                }
            ]
        },
        "pred": "where did these aeroplanes focke 260 and start+flug 260 originate - 101",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "where did these aeroplanes focke 260 and start+flug 260 originate - 101"
        ],
        "subq2": []
    },
    {
        "ID": "3246",
        "question": "Which television show's producer is Stephen E. Ambrose and written by Erik Jendresen",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/producer> <http://dbpedia.org/resource/Stephen_E._Ambrose> . ?uri <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Erik_Jendresen>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which television show 's producer is stephen e. ambrose",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "and written by erik jendresen",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which television show 's producer is stephen e. ambrose [DES] and written by erik jendresen",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "which television show 's producer is stephen e. ambrose",
            "and written by erik jendresen"
        ],
        "subq2": []
    },
    {
        "ID": "1394",
        "question": "Who created the Women in the Garden and also the L'Enfant a la tasse",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Women_in_the_Garden> <http://dbpedia.org/property/artist> ?uri. <http://dbpedia.org/resource/L'Enfant_a_la_tasse> <http://dbpedia.org/property/artist> ?uri . }",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "who created the garden",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "and also the la tasse a la tasse",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "who created the garden [DES] and also the la tasse a la tasse",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "who created the garden",
            "and also the la tasse a la tasse"
        ],
        "subq2": []
    },
    {
        "ID": "2637",
        "question": "Which famous horserace has seen both Fergie sutherland and the illustrious War of Attrition",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/War_Of_Attrition_(horse)> <http://dbpedia.org/property/race> ?uri. <http://dbpedia.org/resource/Fergie_Sutherland> <http://dbpedia.org/property/race> ?uri . }",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which famous horserace",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "has both fergie sutherland and the illustrious sutherland war of attrition",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which famous horserace [DES] has both fergie sutherland and the illustrious sutherland war of attrition",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "which famous horserace",
            "has both fergie sutherland and the illustrious sutherland war of attrition"
        ],
        "subq2": []
    },
    {
        "ID": "768",
        "question": "Tell me the name of the Prime Time Entertainment Network's TV show whose Artist is Christopher Franke",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/artist> <http://dbpedia.org/resource/Christopher_Franke> . ?uri <http://dbpedia.org/ontology/network> <http://dbpedia.org/resource/Prime_Time_Entertainment_Network>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "me the name of the tv show",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "network time entertainment network 's artist is christopher franke",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "me the name of the tv show [DES] network time entertainment network 's artist is christopher franke",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "me the name of the tv show",
            "network time entertainment network 's artist is christopher franke"
        ],
        "subq2": []
    },
    {
        "ID": "4702",
        "question": "How many other battles have the military person fought whose one of the battles is World War II",
        "sparql": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/battles> <http://dbpedia.org/resource/World_War_II> . ?x <http://dbpedia.org/property/battles> ?uri }",
        "intent": "COUNT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "how many other battles have [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the military person whose one of the battles is ii",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "how many other battles have [INQL] the military person whose one of the battles is ii [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "COUNT",
        "subq1": [
            "how many other battles have [ENT]"
        ],
        "subq2": [
            "the military person whose one of the battles is ii"
        ]
    },
    {
        "ID": "3090",
        "question": "Whose network's parent organisation is Comcast",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/parentOrganisation> <http://dbpedia.org/resource/Comcast> . ?uri <http://dbpedia.org/ontology/network> ?x  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "whose parent organisation 's [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "network is comcast",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "whose parent organisation 's [INQL] network is comcast [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "whose parent organisation 's [ENT]"
        ],
        "subq2": [
            "network is comcast"
        ]
    },
    {
        "ID": "3495",
        "question": "Is William H Blanchard buried in Colorado",
        "sparql": "ASK WHERE { <http://dbpedia.org/resource/William_H._Blanchard> <http://dbpedia.org/property/placeofburial> <http://dbpedia.org/resource/Colorado> }",
        "intent": "ASK",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "is william colorado blanchard",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "buried in william h",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "is william colorado blanchard [DES] buried in william h",
        "compositionality_type_golden": "simple",
        "intent_golden": "ASK",
        "subq1": [
            "is william colorado blanchard",
            "buried in william h"
        ],
        "subq2": []
    },
    {
        "ID": "3215",
        "question": "Which sport of Vishwajyot High School is also the genre of Battle chess",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Battle_Chess> <http://dbpedia.org/property/genre> ?uri. <http://dbpedia.org/resource/Vishwajyot_High_School> <http://dbpedia.org/ontology/sport> ?uri} ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which sport of vishwajyot high school",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "is also the battle of battle chess",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which sport of vishwajyot high school [DES] is also the battle of battle chess",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "which sport of vishwajyot high school",
            "is also the battle of battle chess"
        ],
        "subq2": []
    },
    {
        "ID": "285",
        "question": "In which state is the Channel district",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Channel_District> <http://dbpedia.org/ontology/state> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "in which state is [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the channel district",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "in which state is [INQL] the channel district [INQR]",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "in which state is [ENT]"
        ],
        "subq2": [
            "the channel district"
        ]
    },
    {
        "ID": "4938",
        "question": "Who was in the missions of Apollo 11 and Gemini 8",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/mission> <http://dbpedia.org/resource/Apollo_11> . ?uri <http://dbpedia.org/property/mission> <http://dbpedia.org/resource/Gemini_8> . }",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "who was in the missions of gemini 8 and apollo 11",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                }
            ]
        },
        "pred": "who was in the missions of gemini 8 and apollo 11",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "who was in the missions of gemini 8 and apollo 11"
        ],
        "subq2": []
    },
    {
        "ID": "428",
        "question": "What is the total number of other tenant of the stadia whose one of the tenant is Raptors 905",
        "sparql": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/tenant> <http://dbpedia.org/resource/Raptors_905> . ?x <http://dbpedia.org/ontology/tenant> ?uri }",
        "intent": "COUNT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "what is the total number of other tenant of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the stadia whose one of the tenant is raptors 905",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "what is the total number of other tenant of [INQL] the stadia whose one of the tenant is raptors 905 [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "COUNT",
        "subq1": [
            "what is the total number of other tenant of [ENT]"
        ],
        "subq2": [
            "the stadia whose one of the tenant is raptors 905"
        ]
    },
    {
        "ID": "4448",
        "question": "Where can one find the Dzogchen Ponolop Rinpoche",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Dzogchen_Ponlop_Rinpoche> <http://dbpedia.org/property/location> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "where can one can find [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the dzogchen ponolop",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "where can one can find [INQL] the dzogchen ponolop [INQR]",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "where can one can find [ENT]"
        ],
        "subq2": [
            "the dzogchen ponolop"
        ]
    },
    {
        "ID": "2332",
        "question": "Who is the stockholder of the road tunnels operated by the Massachusetts Department of Transportation",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/operator> <http://dbpedia.org/resource/Massachusetts_Department_of_Transportation> . ?x <http://dbpedia.org/property/owner> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RoadTunnel>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "who is the stockholder of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the road operated by the massachusetts department of transportation",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "who is the stockholder of [INQL] the road operated by the massachusetts department of transportation [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "who is the stockholder of [ENT]"
        ],
        "subq2": [
            "the road operated by the massachusetts department of transportation"
        ]
    },
    {
        "ID": "2717",
        "question": "What are the awards won by the film director of Saraband",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Saraband> <http://dbpedia.org/ontology/director> ?x . ?x <http://dbpedia.org/property/awards> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "what are the awards won by [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the film director of saraband",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "what are the awards won by [INQL] the film director of saraband [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "what are the awards won by [ENT]"
        ],
        "subq2": [
            "the film director of saraband"
        ]
    },
    {
        "ID": "2079",
        "question": "What is the almamater of the president whose vice president was Enrique Jos Varona",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/vicePresident> <http://dbpedia.org/resource/Enrique_Jos\u00e9_Varona> . ?x <http://dbpedia.org/ontology/almaMater> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "what is the almamater of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the president whose vice president was jos enrique",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "what is the almamater of [INQL] the president whose vice president was jos enrique [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "what is the almamater of [ENT]"
        ],
        "subq2": [
            "the president whose vice president was jos enrique"
        ]
    },
    {
        "ID": "3389",
        "question": "What is the route end of Birmingham and Oxford Junction Railway",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Birmingham_and_Oxford_Junction_Railway> <http://dbpedia.org/ontology/routeEnd> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what is the route end of oxford",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "and route end oxford railway",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what is the route end of oxford [DES] and route end oxford railway",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "what is the route end of oxford",
            "and route end oxford railway"
        ],
        "subq2": []
    },
    {
        "ID": "722",
        "question": "Where did the Vitis Vinifera grapes originate",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/species> <http://dbpedia.org/resource/Vitis_vinifera> . ?x <http://dbpedia.org/ontology/origin> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Grape>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "where did the vitis vinifera grapes originate",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "where did vitis vinifera grapes",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "where did the vitis vinifera grapes originate [DES] where did vitis vinifera grapes",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "where did the vitis vinifera grapes originate",
            "where did vitis vinifera grapes"
        ],
        "subq2": []
    },
    {
        "ID": "951",
        "question": "How many people are there whose children died in Indiana",
        "sparql": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Indiana> . ?uri <http://dbpedia.org/ontology/child> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
        "intent": "COUNT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "how many people whose children are there [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "died in indiana",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "how many people whose children are there [INQL] died in indiana [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "COUNT",
        "subq1": [
            "how many people whose children are there [ENT]"
        ],
        "subq2": [
            "died in indiana"
        ]
    },
    {
        "ID": "4383",
        "question": "What is the military branch of the William French Smith which is also the branch of Pierre R. Graham",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/William_French_Smith> <http://dbpedia.org/ontology/militaryBranch> ?uri. <http://dbpedia.org/resource/Pierre_R._Graham> <http://dbpedia.org/property/branch> ?uri} ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what is the military branch of the william r. smith",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "which is also the branch of graham r. smith pierre",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what is the military branch of the william r. smith [DES] which is also the branch of graham r. smith pierre",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "what is the military branch of the william r. smith",
            "which is also the branch of graham r. smith pierre"
        ],
        "subq2": []
    },
    {
        "ID": "4366",
        "question": "What is the river whose source is Lake Ontario",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/source> <http://dbpedia.org/resource/Lake_Ontario>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what is the river",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "whose source is ontario lake",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what is the river [DES] whose source is ontario lake",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "what is the river",
            "whose source is ontario lake"
        ],
        "subq2": []
    },
    {
        "ID": "2262",
        "question": "Which location city of the Denver Broncos is the place of birth of Steven Clark Cunningham",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Denver_Broncos> <http://dbpedia.org/ontology/locationCity> ?uri. <http://dbpedia.org/resource/Steven_Clark_Cunningham> <http://dbpedia.org/ontology/birthPlace> ?uri} ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which location city of the denver broncos",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "is the place of birth of steven clark",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which location city of the denver broncos [DES] is the place of birth of steven clark",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "which location city of the denver broncos",
            "is the place of birth of steven clark"
        ],
        "subq2": []
    },
    {
        "ID": "989",
        "question": "What is the religion of the person who founded the Emel magazine",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Emel_(magazine)> <http://dbpedia.org/property/founder> ?x . ?x <http://dbpedia.org/ontology/religion> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "what is the religion of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the person who founded the emel magazine",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "what is the religion of [INQL] the person who founded the emel magazine [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "what is the religion of [ENT]"
        ],
        "subq2": [
            "the person who founded the emel magazine"
        ]
    },
    {
        "ID": "3212",
        "question": "Give the name of the managers of England national under-20 football team and England national under-21 football team",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/managerclubs> <http://dbpedia.org/resource/England_national_under-20_football_team> . ?uri <http://dbpedia.org/property/managerclubs> <http://dbpedia.org/resource/England_national_under-21_football_team> . }",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "give the name of the managers of national under-20 football team",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "and under-21 national under-20 football team",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "give the name of the managers of national under-20 football team [DES] and under-21 national under-20 football team",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "give the name of the managers of national under-20 football team",
            "and under-21 national under-20 football team"
        ],
        "subq2": []
    },
    {
        "ID": "1759",
        "question": "How many cities are around the sea in which the fig tree bay meets",
        "sparql": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Fig_Tree_Bay> <http://dbpedia.org/ontology/inflow> ?x . ?x <http://dbpedia.org/property/cities> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Sea>}",
        "intent": "COUNT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "how many cities are around [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the sea in which the fig tree meets",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "how many cities are around [INQL] the sea in which the fig tree meets [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "COUNT",
        "subq1": [
            "how many cities are around [ENT]"
        ],
        "subq2": [
            "the sea in which the fig tree meets"
        ]
    },
    {
        "ID": "4579",
        "question": "is blue lagoon island a part of the bahamas archipelago",
        "sparql": "ASK WHERE { <http://dbpedia.org/resource/Blue_Lagoon_Island> <http://dbpedia.org/ontology/archipelago> <http://dbpedia.org/resource/The_Bahamas> }",
        "intent": "ASK",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "is lagoon island of the archipelago",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "is bahamas island a part of the archipelago",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "is lagoon island of the archipelago [DES] is bahamas island a part of the archipelago",
        "compositionality_type_golden": "simple",
        "intent_golden": "ASK",
        "subq1": [
            "is lagoon island of the archipelago",
            "is bahamas island a part of the archipelago"
        ],
        "subq2": []
    },
    {
        "ID": "326",
        "question": "Name the movies distributed by RKO Pictures and has music composer as Bernard Herrmann",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/distributor> <http://dbpedia.org/resource/RKO_Pictures> . ?uri <http://dbpedia.org/ontology/musicComposer> <http://dbpedia.org/resource/Bernard_Herrmann>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "name the movies distributed by rko pictures",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "and has music composer as bernard herrmann",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "name the movies distributed by rko pictures [DES] and has music composer as bernard herrmann",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "name the movies distributed by rko pictures",
            "and has music composer as bernard herrmann"
        ],
        "subq2": []
    },
    {
        "ID": "2608",
        "question": "Did the New Way party merge in the One Israel party",
        "sparql": "ASK WHERE { <http://dbpedia.org/resource/New_Way_(Israel)> <http://dbpedia.org/ontology/mergedIntoParty> <http://dbpedia.org/resource/One_Israel> }",
        "intent": "ASK",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "the new party",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "did new israel one party in the one party",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "the new party [DES] did new israel one party in the one party",
        "compositionality_type_golden": "simple",
        "intent_golden": "ASK",
        "subq1": [
            "the new party",
            "did new israel one party in the one party"
        ],
        "subq2": []
    },
    {
        "ID": "1383",
        "question": "How many pole drivers have been there in grand prixes where first driver was Damon Hill",
        "sparql": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/firstDriver> <http://dbpedia.org/resource/Damon_Hill> . ?x <http://dbpedia.org/ontology/poleDriver> ?uri  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FormulaOneRacer>}",
        "intent": "COUNT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "how many pole drivers have been there in [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "grand prixes where first driver was damon hill",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "how many pole drivers have been there in [INQL] grand prixes where first driver was damon hill [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "COUNT",
        "subq1": [
            "how many pole drivers have been there in [ENT]"
        ],
        "subq2": [
            "grand prixes where first driver was damon hill"
        ]
    },
    {
        "ID": "1724",
        "question": "Where are jockeys in Dubai World Cup from",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/race> <http://dbpedia.org/resource/Dubai_World_Cup> . ?x <http://dbpedia.org/property/birthPlace> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Jockey>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "where are [ENT] from",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "jockeys in dubai world cup",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "where are [INQL] jockeys in dubai world cup [INQR] from",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "where are [ENT] from"
        ],
        "subq2": [
            "jockeys in dubai world cup"
        ]
    },
    {
        "ID": "1086",
        "question": "Who owns the newspaper which was founded by Nehru",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/founder> <http://dbpedia.org/resource/Jawaharlal_Nehru> . ?x <http://dbpedia.org/ontology/owner> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Newspaper>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "who owns [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the newspaper which was founded by nehru",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "who owns [INQL] the newspaper which was founded by nehru [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "who owns [ENT]"
        ],
        "subq2": [
            "the newspaper which was founded by nehru"
        ]
    },
    {
        "ID": "2523",
        "question": "To which places do the flights go by airlines headquartered in the UK",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/headquarters> <http://dbpedia.org/resource/United_Kingdom> . ?x <http://dbpedia.org/property/destinations> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Airline>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "to which places do [ENT] go by",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the flights headquartered in the uk",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "to which places do [INQL] the flights headquartered in the uk [INQR] go by",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "to which places do [ENT] go by"
        ],
        "subq2": [
            "the flights headquartered in the uk"
        ]
    },
    {
        "ID": "341",
        "question": "What is the magazine which have been founded by Ralph J. Gleason",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/founder> <http://dbpedia.org/resource/Ralph_J._Gleason>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Magazine>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what is the magazine",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "which have been founded by ralph j. gleason",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what is the magazine [DES] which have been founded by ralph j. gleason",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "what is the magazine",
            "which have been founded by ralph j. gleason"
        ],
        "subq2": []
    },
    {
        "ID": "3701",
        "question": "Is Seattle the Ship builder of USS Marmora (IX-189)",
        "sparql": "ASK WHERE { <http://dbpedia.org/resource/USS_Marmora_(IX-189)> <http://dbpedia.org/property/shipBuilder> <http://dbpedia.org/resource/Seattle> }",
        "intent": "ASK",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "is the builder of uss marmora",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "seattle marmora (ix-189)",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "is the builder of uss marmora [DES] seattle marmora (ix-189)",
        "compositionality_type_golden": "simple",
        "intent_golden": "ASK",
        "subq1": [
            "is the builder of uss marmora",
            "seattle marmora (ix-189)"
        ],
        "subq2": []
    },
    {
        "ID": "147",
        "question": "Is Tirana the largest city of Albania",
        "sparql": "ASK WHERE { <http://dbpedia.org/resource/Albania> <http://dbpedia.org/property/largestCity> <http://dbpedia.org/resource/Tirana> }",
        "intent": "ASK",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "is the largest city of albania",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "albania city",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "is the largest city of albania [DES] albania city",
        "compositionality_type_golden": "simple",
        "intent_golden": "ASK",
        "subq1": [
            "is the largest city of albania",
            "albania city"
        ],
        "subq2": []
    },
    {
        "ID": "688",
        "question": "In which cities can the beverage related to Barq's be found",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Barq's> <http://dbpedia.org/ontology/related> ?x . ?x <http://dbpedia.org/property/locationCity> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "in which cities can [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the beverage related to barq 's be found",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "in which cities can [INQL] the beverage related to barq 's be found [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "in which cities can [ENT]"
        ],
        "subq2": [
            "the beverage related to barq 's be found"
        ]
    },
    {
        "ID": "3432",
        "question": "What is the birth place of the astronaut whose mission was the Vostok programmer",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/mission> <http://dbpedia.org/resource/Vostok_programme> . ?x <http://dbpedia.org/ontology/birthPlace> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Astronaut>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "what is the birth place of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the astronaut whose mission was the vostok programmer",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "what is the birth place of [INQL] the astronaut whose mission was the vostok programmer [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "what is the birth place of [ENT]"
        ],
        "subq2": [
            "the astronaut whose mission was the vostok programmer"
        ]
    },
    {
        "ID": "1107",
        "question": "Count everyone who studied at an institute which are in Suburbs",
        "sparql": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/campus> <http://dbpedia.org/resource/Suburb> . ?uri <http://dbpedia.org/property/education> ?x  . }",
        "intent": "COUNT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "count everyone who studied at [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "which are studied in suburbs",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "count everyone who studied at [INQL] which are studied in suburbs [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "COUNT",
        "subq1": [
            "count everyone who studied at [ENT]"
        ],
        "subq2": [
            "which are studied in suburbs"
        ]
    },
    {
        "ID": "848",
        "question": "Where did Whitney Wistert debut",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Whitey_Wistert> <http://dbpedia.org/property/debutteam> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "where did whitney wistert debut",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "where did %composition wistert debut",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "where did whitney wistert debut [DES] where did %composition wistert debut",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "where did whitney wistert debut",
            "where did %composition wistert debut"
        ],
        "subq2": []
    },
    {
        "ID": "966",
        "question": "What is the major shrine of the monarchs whose successor is Dragimir of Travunia and Zachlumia",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Dragimir_of_Travunia_and_Zachlumia> . ?x <http://dbpedia.org/property/majorShrine> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Monarch>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "what is the major shrine of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the monarchs whose successor is dragimir travunia and zachlumia",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "what is the major shrine of [INQL] the monarchs whose successor is dragimir travunia and zachlumia [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "what is the major shrine of [ENT]"
        ],
        "subq2": [
            "the monarchs whose successor is dragimir travunia and zachlumia"
        ]
    },
    {
        "ID": "4727",
        "question": "How many television shows have Fox Broadcasting Company as their channel",
        "sparql": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/channel> <http://dbpedia.org/resource/Fox_Broadcasting_Company>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "intent": "COUNT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "how many television shows have fox broadcasting company",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "as their channel",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "how many television shows have fox broadcasting company [DES] as their channel",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "COUNT",
        "subq1": [
            "how many television shows have fox broadcasting company",
            "as their channel"
        ],
        "subq2": []
    },
    {
        "ID": "1492",
        "question": "What is the river whose mouth locations are Arctic Ocean and Laptev Sea",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/mouthLocation> <http://dbpedia.org/resource/Arctic_Ocean> . ?uri <http://dbpedia.org/property/mouthLocation> <http://dbpedia.org/resource/Laptev_Sea> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what is the locations",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "whose mouth are arctic ocean and laptev sea",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what is the locations [DES] whose mouth are arctic ocean and laptev sea",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "what is the locations",
            "whose mouth are arctic ocean and laptev sea"
        ],
        "subq2": []
    },
    {
        "ID": "3953",
        "question": "What are some wars fought when Chung Il Kwon as the country's prime minister",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/primeminister> <http://dbpedia.org/resource/Chung_Il-kwon> . ?uri <http://dbpedia.org/ontology/commander> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "what are some wars fought [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "when chung kwon as the country 's prime minister",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "what are some wars fought [INQL] when chung kwon as the country 's prime minister [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "what are some wars fought [ENT]"
        ],
        "subq2": [
            "when chung kwon as the country 's prime minister"
        ]
    },
    {
        "ID": "2203",
        "question": "Where was the person born who died in Bryn Mawr Hospital",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/placeOfDeath> <http://dbpedia.org/resource/Bryn_Mawr_Hospital> . ?x <http://dbpedia.org/property/placeOfBirth> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "where was the person born [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "who died in bryn mawr hospital",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "where was the person born [INQL] who died in bryn mawr hospital [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "where was the person born [ENT]"
        ],
        "subq2": [
            "who died in bryn mawr hospital"
        ]
    },
    {
        "ID": "2713",
        "question": "What is the faith of the Ajith Perera and religious affiliation of the Neungin High School",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ajith_Perera> <http://dbpedia.org/ontology/religion> ?uri. <http://dbpedia.org/resource/Neungin_High_School> <http://dbpedia.org/property/religiousAffiliation> ?uri} ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what is the faith of the ajith perera",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "and religious affiliation of the neungin high school",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what is the faith of the ajith perera [DES] and religious affiliation of the neungin high school",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "what is the faith of the ajith perera",
            "and religious affiliation of the neungin high school"
        ],
        "subq2": []
    },
    {
        "ID": "661",
        "question": "Who was in military unit which played the role of Air interdiction",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/role> <http://dbpedia.org/resource/Air_interdiction> . ?uri <http://dbpedia.org/ontology/militaryUnit> ?x  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "who was in military unit [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "which played the military unit of interdiction air",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "who was in military unit [INQL] which played the military unit of interdiction air [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "who was in military unit [ENT]"
        ],
        "subq2": [
            "which played the military unit of interdiction air"
        ]
    },
    {
        "ID": "1002",
        "question": "Who are the current members of Insects vs Robots",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Insects_vs_Robots> <http://dbpedia.org/property/currentMembers> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "who are the current members of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the current members of insects vs robots",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "who are the current members of [INQL] the current members of insects vs robots [INQR]",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "who are the current members of [ENT]"
        ],
        "subq2": [
            "the current members of insects vs robots"
        ]
    },
    {
        "ID": "62",
        "question": "Is Ombla originate in Croatia",
        "sparql": "ASK WHERE { <http://dbpedia.org/resource/Ombla> <http://dbpedia.org/ontology/sourceMountain> <http://dbpedia.org/resource/Croatia> }",
        "intent": "ASK",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "is ombla",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "originate in croatia",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "is ombla [DES] originate in croatia",
        "compositionality_type_golden": "simple",
        "intent_golden": "ASK",
        "subq1": [
            "is ombla",
            "originate in croatia"
        ],
        "subq2": []
    },
    {
        "ID": "284",
        "question": "Greater Napanee is the home town of what people",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/hometown> <http://dbpedia.org/resource/Greater_Napanee>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "napanee is the home town",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "what people greater town",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "napanee is the home town [DES] what people greater town",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "napanee is the home town",
            "what people greater town"
        ],
        "subq2": []
    },
    {
        "ID": "2224",
        "question": "What place did Edwin Adams die at, which gave birth to William A Purtell",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Edwin_Adams_(politician)> <http://dbpedia.org/property/placeOfDeath> ?uri. <http://dbpedia.org/resource/William_A._Purtell> <http://dbpedia.org/ontology/birthPlace> ?uri . }",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what place",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "did edwin adams die at birth , which william purtell die to a william purtell",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what place [DES] did edwin adams die at birth , which william purtell die to a william purtell",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "what place",
            "did edwin adams die at birth , which william purtell die to a william purtell"
        ],
        "subq2": []
    },
    {
        "ID": "4706",
        "question": "Name the nationalteam of Trn Vit Hng",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Tr\u1ea7n_Vi\u1ec7t_H\u01b0\u01a1ng> <http://dbpedia.org/property/nationalteam> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "name the nationalteam of trn vit",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "vit hng",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "name the nationalteam of trn vit [DES] vit hng",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "name the nationalteam of trn vit",
            "vit hng"
        ],
        "subq2": []
    },
    {
        "ID": "1879",
        "question": "Which designer of RENFE also owns Renaissance Center",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/RENFE_Class_333> <http://dbpedia.org/ontology/designer> ?uri. <http://dbpedia.org/resource/Renaissance_Center> <http://dbpedia.org/property/owner> ?uri} ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which designer of renfe",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "also owns renfe renaissance",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which designer of renfe [DES] also owns renfe renaissance",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "which designer of renfe",
            "also owns renfe renaissance"
        ],
        "subq2": []
    },
    {
        "ID": "3572",
        "question": "Which uni did Joshua A. Siegel attend",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Joshua_A._Siegel> <http://dbpedia.org/property/education> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which uni",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "did a. joshua siegel attend",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which uni [DES] did a. joshua siegel attend",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "which uni",
            "did a. joshua siegel attend"
        ],
        "subq2": []
    },
    {
        "ID": "4857",
        "question": "How many books are written by the author who is famous for Novelas Ejemplares",
        "sparql": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/notableWork> <http://dbpedia.org/resource/Novelas_ejemplares> . ?uri <http://dbpedia.org/ontology/author> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>}",
        "intent": "COUNT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "how many books are written by [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the author who is famous for novelas ejemplares",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "how many books are written by [INQL] the author who is famous for novelas ejemplares [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "COUNT",
        "subq1": [
            "how many books are written by [ENT]"
        ],
        "subq2": [
            "the author who is famous for novelas ejemplares"
        ]
    },
    {
        "ID": "1203",
        "question": "Name the rivers who originate from Essex",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/mouthPlace> <http://dbpedia.org/resource/Essex>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "name the rivers",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "who originate from essex",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "name the rivers [DES] who originate from essex",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "name the rivers",
            "who originate from essex"
        ],
        "subq2": []
    },
    {
        "ID": "1990",
        "question": "Companies founded in Taiwan have typically which divisions",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/foundationPlace> <http://dbpedia.org/resource/Taiwan> . ?x <http://dbpedia.org/ontology/division> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "[ENT] typically divisions have",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "companies which have divisions taiwan",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "[INQL] companies which have divisions taiwan [INQR] typically divisions have",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "[ENT] typically divisions have"
        ],
        "subq2": [
            "companies which have divisions taiwan"
        ]
    },
    {
        "ID": "24",
        "question": "Did Timm Gunn guest in Sunrise (HIMYM)",
        "sparql": "ASK WHERE { <http://dbpedia.org/resource/Sunrise_(How_I_Met_Your_Mother)> <http://dbpedia.org/property/guests> <http://dbpedia.org/resource/Tim_Gunn> }",
        "intent": "ASK",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "did timm gunn in guest",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "sunrise (himym)",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "did timm gunn in guest [DES] sunrise (himym)",
        "compositionality_type_golden": "simple",
        "intent_golden": "ASK",
        "subq1": [
            "did timm gunn in guest",
            "sunrise (himym)"
        ],
        "subq2": []
    },
    {
        "ID": "4852",
        "question": "to which university did both, the Stanford Cardinal and Gerald Reaven go",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Stanford_Cardinal> <http://dbpedia.org/ontology/university> ?uri. <http://dbpedia.org/resource/Gerald_Reaven> <http://dbpedia.org/ontology/institution> ?uri} ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "to which university",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "did both the stanford cardinal and gerald reaven go",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "to which university [DES] did both the stanford cardinal and gerald reaven go",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "to which university",
            "did both the stanford cardinal and gerald reaven go"
        ],
        "subq2": []
    },
    {
        "ID": "4102",
        "question": "Name the nearest city to David W. Brown House",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/David_W._Brown_House> <http://dbpedia.org/ontology/nearestCity> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "name the city",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "nearest to david w. brown house",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "name the city [DES] nearest to david w. brown house",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "name the city",
            "nearest to david w. brown house"
        ],
        "subq2": []
    },
    {
        "ID": "4167",
        "question": "where did Deion Sanders debut",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Deion_Sanders> <http://dbpedia.org/property/debutteam> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "where did deion sanders debut",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "debut deion sanders",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "where did deion sanders debut [DES] debut deion sanders",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "where did deion sanders debut",
            "debut deion sanders"
        ],
        "subq2": []
    },
    {
        "ID": "762",
        "question": "What cities are nearer to Fountain Lake Farm",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Fountain_Lake_Farm> <http://dbpedia.org/property/nearestCity> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what cities",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "are nearer to fountain farm farm",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what cities [DES] are nearer to fountain farm farm",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "what cities",
            "are nearer to fountain farm farm"
        ],
        "subq2": []
    },
    {
        "ID": "875",
        "question": "Who are the characters of Batman Live",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Batman_Live> <http://dbpedia.org/property/characters> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "who are the characters of live",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "who live batman",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "who are the characters of live [DES] who live batman",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "who are the characters of live",
            "who live batman"
        ],
        "subq2": []
    },
    {
        "ID": "4742",
        "question": "Which artists trained in San Francisco Art Institute",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/training> <http://dbpedia.org/resource/San_Francisco_Art_Institute>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which artists",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "trained in san francisco art institute",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which artists [DES] trained in san francisco art institute",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "which artists",
            "trained in san francisco art institute"
        ],
        "subq2": []
    },
    {
        "ID": "938",
        "question": "What is the owning organisation of the Ford Kansas City Assembly Plant and also the builder of the Ford Y-block engine",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ford_Kansas_City_Assembly_Plant> <http://dbpedia.org/ontology/owningOrganisation> ?uri. <http://dbpedia.org/resource/Ford_Y-block_engine> <http://dbpedia.org/ontology/manufacturer> ?uri} ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what is the owning city of the ford assembly city",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "and also the builder of the ford assembly of the ford assembly",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what is the owning city of the ford assembly city [DES] and also the builder of the ford assembly of the ford assembly",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "what is the owning city of the ford assembly city",
            "and also the builder of the ford assembly of the ford assembly"
        ],
        "subq2": []
    },
    {
        "ID": "2687",
        "question": "Name the country with currency as Aureus",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/currency> <http://dbpedia.org/resource/Aureus>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "name the country",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "with aureus as currency",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "name the country [DES] with aureus as currency",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "name the country",
            "with aureus as currency"
        ],
        "subq2": []
    },
    {
        "ID": "3600",
        "question": "what awards have been given to A. Peter Dewey",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/A._Peter_Dewey> <http://dbpedia.org/ontology/award> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "what awards have been given to [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "peter dewey",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "what awards have been given to [INQL] peter dewey [INQR]",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "what awards have been given to [ENT]"
        ],
        "subq2": [
            "peter dewey"
        ]
    },
    {
        "ID": "2394",
        "question": "How many shows belong to the network one of whose sister station is Cartoonite",
        "sparql": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/sisterStation> <http://dbpedia.org/resource/Cartoonito> . ?uri <http://dbpedia.org/property/network> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "intent": "COUNT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "how many shows belong to the network [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "one of whose sister station is cartoonite",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "how many shows belong to the network [INQL] one of whose sister station is cartoonite [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "COUNT",
        "subq1": [
            "how many shows belong to the network [ENT]"
        ],
        "subq2": [
            "one of whose sister station is cartoonite"
        ]
    },
    {
        "ID": "4567",
        "question": "what has been developed by John Fanning",
        "sparql": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/John_Fanning_(businessman)> } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what has been developed by john fanning",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "has been developed by john fanning",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what has been developed by john fanning [DES] has been developed by john fanning",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "what has been developed by john fanning",
            "has been developed by john fanning"
        ],
        "subq2": []
    },
    {
        "ID": "4980",
        "question": "Muhammad Yunus has won how many awards",
        "sparql": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Muhammad_Yunus> <http://dbpedia.org/ontology/award> ?uri  . }",
        "intent": "COUNT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "[ENT] has how many awards",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "muhammad yunus",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "[INQL] muhammad yunus [INQR] has how many awards",
        "compositionality_type_golden": "simple",
        "intent_golden": "COUNT",
        "subq1": [
            "[ENT] has how many awards"
        ],
        "subq2": [
            "muhammad yunus"
        ]
    },
    {
        "ID": "4124",
        "question": "List the associates of bands which have a label by Motown",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/recordLabel> <http://dbpedia.org/resource/Motown> . ?x <http://dbpedia.org/property/associatedActs> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "list the associates of which have [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "a label by motown",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "list the associates of which have [INQL] a label by motown [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "list the associates of which have [ENT]"
        ],
        "subq2": [
            "a label by motown"
        ]
    },
    {
        "ID": "4564",
        "question": "Who wrote the musical whose composer is Emil Dean Zoghby",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/musicBy> <http://dbpedia.org/resource/Emil_Dean_Zoghby> . ?x <http://dbpedia.org/ontology/author> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Musical>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "who wrote [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the musical composer whose composer is emil dean zoghby",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "who wrote [INQL] the musical composer whose composer is emil dean zoghby [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "who wrote [ENT]"
        ],
        "subq2": [
            "the musical composer whose composer is emil dean zoghby"
        ]
    },
    {
        "ID": "385",
        "question": "Count the units garrisoned at Arlington County, Virginia",
        "sparql": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/garrison> <http://dbpedia.org/resource/Arlington_County,_Virginia>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>}",
        "intent": "COUNT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "count the units garrisoned at arlington county , virginia",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "at arlington county , virginia",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "count the units garrisoned at arlington county , virginia [DES] at arlington county , virginia",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "COUNT",
        "subq1": [
            "count the units garrisoned at arlington county , virginia",
            "at arlington county , virginia"
        ],
        "subq2": []
    },
    {
        "ID": "3877",
        "question": "What is the faith of Kwai Chang Caine",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Kwai_Chang_Caine> <http://dbpedia.org/ontology/religion> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what is the faith of kwai chang",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "caine caine",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what is the faith of kwai chang [DES] caine caine",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "what is the faith of kwai chang",
            "caine caine"
        ],
        "subq2": []
    },
    {
        "ID": "4370",
        "question": "Who is related to Kelly Osbourne & Ozzy Osbourne",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/relatives> <http://dbpedia.org/resource/Kelly_Osbourne> . ?uri <http://dbpedia.org/property/relatives> <http://dbpedia.org/resource/Ozzy_Osbourne> . }",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "who is related to kelly osbourne & ozzy osbourne",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                }
            ]
        },
        "pred": "who is related to kelly osbourne & ozzy osbourne",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "who is related to kelly osbourne & ozzy osbourne"
        ],
        "subq2": []
    },
    {
        "ID": "4569",
        "question": "What are the houses of the legislature where the leader is called Pullaiahgaripalli",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Pullaiahgaripalli> <http://dbpedia.org/property/leaderTitle> ?x . ?x <http://dbpedia.org/property/houses> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Legislature>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "what are the houses of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the legislature where the leader is called pullaiahgaripalli",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "what are the houses of [INQL] the legislature where the leader is called pullaiahgaripalli [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "what are the houses of [ENT]"
        ],
        "subq2": [
            "the legislature where the leader is called pullaiahgaripalli"
        ]
    },
    {
        "ID": "536",
        "question": "Which serving railway line of the Daund Junction railway station was also the place where 99 (2009 film) was recorded",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Daund_Junction_railway_station> <http://dbpedia.org/ontology/servingRailwayLine> ?uri. <http://dbpedia.org/resource/99_(2009_film)> <http://dbpedia.org/property/recorded> ?uri} ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which serving railway line of the daund junction railway station",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "was also the place where 99 film) was recorded",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which serving railway line of the daund junction railway station [DES] was also the place where 99 film) was recorded",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "which serving railway line of the daund junction railway station",
            "was also the place where 99 film) was recorded"
        ],
        "subq2": []
    },
    {
        "ID": "2291",
        "question": "List the ethnicity of Riley Reid",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Riley_Reid> <http://dbpedia.org/property/ethnicity> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "list the ethnicity of riley reid",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "riley reid",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "list the ethnicity of riley reid [DES] riley reid",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "list the ethnicity of riley reid",
            "riley reid"
        ],
        "subq2": []
    },
    {
        "ID": "4665",
        "question": "Which shows are from a company whose subsidiary is Viacom Productions",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/subsidiary> <http://dbpedia.org/resource/Viacom_Productions> . ?uri <http://dbpedia.org/property/company> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "which shows are from [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "a company whose subsidiary is viacom productions",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "which shows are from [INQL] a company whose subsidiary is viacom productions [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "which shows are from [ENT]"
        ],
        "subq2": [
            "a company whose subsidiary is viacom productions"
        ]
    },
    {
        "ID": "3874",
        "question": "Giuseppe Bertello and Pietro Parolin are leaders of which place",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/leader> <http://dbpedia.org/resource/Giuseppe_Bertello> . ?uri <http://dbpedia.org/ontology/leader> <http://dbpedia.org/resource/Pietro_Parolin> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "giuseppe bertello and pietro are leaders of which place of",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "which place",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "giuseppe bertello and pietro are leaders of which place of [DES] which place",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "giuseppe bertello and pietro are leaders of which place of",
            "which place"
        ],
        "subq2": []
    },
    {
        "ID": "936",
        "question": "What is the university whose campus is Mount Moosilauke",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/campus> <http://dbpedia.org/resource/Mount_Moosilauke>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what is the university",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "whose campus is mount moosilauke",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what is the university [DES] whose campus is mount moosilauke",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "what is the university",
            "whose campus is mount moosilauke"
        ],
        "subq2": []
    },
    {
        "ID": "3737",
        "question": "How many religions are followed by the group whose architectural style can be seen on Sanggar Agung",
        "sparql": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Sanggar_Agung> <http://dbpedia.org/property/architecturalStyle> ?x . ?x <http://dbpedia.org/ontology/religion> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EthnicGroup>}",
        "intent": "COUNT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "how many religions are seen by [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the group whose architectural group can be seen on sanggar agung",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "how many religions are seen by [INQL] the group whose architectural group can be seen on sanggar agung [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "COUNT",
        "subq1": [
            "how many religions are seen by [ENT]"
        ],
        "subq2": [
            "the group whose architectural group can be seen on sanggar agung"
        ]
    },
    {
        "ID": "4728",
        "question": "How many things are written in C++",
        "sparql": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/programmingLanguage> <http://dbpedia.org/resource/C++>  . }",
        "intent": "COUNT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "how many things are written in c++",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "how many things",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "how many things are written in c++ [DES] how many things",
        "compositionality_type_golden": "simple",
        "intent_golden": "COUNT",
        "subq1": [
            "how many things are written in c++",
            "how many things"
        ],
        "subq2": []
    },
    {
        "ID": "2360",
        "question": "Name the garrison of the Western Naval Command and line of the Vadodara Junction railway station",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Western_Naval_Command> <http://dbpedia.org/property/garrison> ?uri. <http://dbpedia.org/resource/Vadodara_Junction_railway_station> <http://dbpedia.org/property/line> ?uri} ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "name the line of the naval command and command garrison of the vadodara junction railway station",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                }
            ]
        },
        "pred": "name the line of the naval command and command garrison of the vadodara junction railway station",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "name the line of the naval command and command garrison of the vadodara junction railway station"
        ],
        "subq2": []
    },
    {
        "ID": "3507",
        "question": "Who are the shareholder of the soccer club for whom Steve Holland plays",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Steve_Holland_(footballer)> <http://dbpedia.org/property/currentclub> ?x . ?x <http://dbpedia.org/property/owner> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "who are the shareholder of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the soccer club for whom steve holland plays",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "who are the shareholder of [INQL] the soccer club for whom steve holland plays [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "who are the shareholder of [ENT]"
        ],
        "subq2": [
            "the soccer club for whom steve holland plays"
        ]
    },
    {
        "ID": "201",
        "question": "Which city located on Mediterranean Sea is also the stadium of Panionios G.S.S. season",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/2014\u201315_Panionios_G.S.S._season> <http://dbpedia.org/property/stadium> ?uri. <http://dbpedia.org/resource/Mediterranean_Sea> <http://dbpedia.org/property/cities> ?uri} ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which city located on mediterranean sea",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "is also the stadium of panionios g.s.s. season",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which city located on mediterranean sea [DES] is also the stadium of panionios g.s.s. season",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "which city located on mediterranean sea",
            "is also the stadium of panionios g.s.s. season"
        ],
        "subq2": []
    },
    {
        "ID": "3208",
        "question": "Was Don't Bring Me Down recorded in West Germany",
        "sparql": "ASK WHERE { <http://dbpedia.org/resource/Don't_Bring_Me_Down> <http://dbpedia.org/property/recorded> <http://dbpedia.org/resource/West_Germany> }",
        "intent": "ASK",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "was don't germany",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "recorded in west down bring in west down",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "was don't germany [DES] recorded in west down bring in west down",
        "compositionality_type_golden": "simple",
        "intent_golden": "ASK",
        "subq1": [
            "was don't germany",
            "recorded in west down bring in west down"
        ],
        "subq2": []
    },
    {
        "ID": "1332",
        "question": "Through which cities do the rivers starting at the Montauk State Park flow",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/sourcePlace> <http://dbpedia.org/resource/Montauk_State_Park> . ?x <http://dbpedia.org/ontology/city> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "through which cities do [ENT] flow",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the rivers starting at the montauk park",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "through which cities do [INQL] the rivers starting at the montauk park [INQR] flow",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "through which cities do [ENT] flow"
        ],
        "subq2": [
            "the rivers starting at the montauk park"
        ]
    },
    {
        "ID": "3016",
        "question": "How many ideologies do the political party of Boonchu Rojanastien hold",
        "sparql": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Boonchu_Rojanastien> <http://dbpedia.org/property/party> ?x . ?x <http://dbpedia.org/ontology/ideology> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>}",
        "intent": "COUNT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "how many ideologies do [ENT] hold",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the political party of boonchu rojanastien",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "how many ideologies do [INQL] the political party of boonchu rojanastien [INQR] hold",
        "compositionality_type_golden": "composition",
        "intent_golden": "COUNT",
        "subq1": [
            "how many ideologies do [ENT] hold"
        ],
        "subq2": [
            "the political party of boonchu rojanastien"
        ]
    },
    {
        "ID": "3502",
        "question": "What are the hubs of PLUS Helicopter Services, a highway helicopter unit of PLUS Expressways",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/PLUS_Expressways> <http://dbpedia.org/property/hubs> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what are the hubs of plus <UNK>",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "a services helicopter of plus expressways",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what are the hubs of plus <UNK> [DES] a services helicopter of plus expressways",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "what are the hubs of plus <UNK>",
            "a services helicopter of plus expressways"
        ],
        "subq2": []
    },
    {
        "ID": "2708",
        "question": "Name the movies for which music was given by Geoffrey Burgon and distributed by Cinema International Corporation",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/music> <http://dbpedia.org/resource/Geoffrey_Burgon> . ?uri <http://dbpedia.org/property/distributor> <http://dbpedia.org/resource/Cinema_International_Corporation>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "name the movies for which music was given by geoffrey burgon",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "and distributed by cinema international corporation",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "name the movies for which music was given by geoffrey burgon [DES] and distributed by cinema international corporation",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "name the movies for which music was given by geoffrey burgon",
            "and distributed by cinema international corporation"
        ],
        "subq2": []
    },
    {
        "ID": "4021",
        "question": "Is Henry David Thoreau interested in Politics",
        "sparql": "ASK WHERE { <http://dbpedia.org/resource/Henry_David_Thoreau> <http://dbpedia.org/property/mainInterests> <http://dbpedia.org/resource/Politics> }",
        "intent": "ASK",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "is thoreau in henry",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "interested in david politics in",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "is thoreau in henry [DES] interested in david politics in",
        "compositionality_type_golden": "simple",
        "intent_golden": "ASK",
        "subq1": [
            "is thoreau in henry",
            "interested in david politics in"
        ],
        "subq2": []
    },
    {
        "ID": "1854",
        "question": "Among the companies who has product named Chinook who has a key person as Dennis Muilenburg",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/keyPeople> <http://dbpedia.org/resource/Dennis_Muilenburg> . ?uri <http://dbpedia.org/property/products> <http://dbpedia.org/resource/Boeing_CH-47_Chinook>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "among the companies",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "who has product named dennis muilenburg who has a key person as dennis muilenburg",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "among the companies [DES] who has product named dennis muilenburg who has a key person as dennis muilenburg",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "among the companies",
            "who has product named dennis muilenburg who has a key person as dennis muilenburg"
        ],
        "subq2": []
    },
    {
        "ID": "4469",
        "question": "Which country's leader is Giuseppe Bertello",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/leader> <http://dbpedia.org/resource/Giuseppe_Bertello>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which country's",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "leader is giuseppe bertello",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which country's [DES] leader is giuseppe bertello",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "which country's",
            "leader is giuseppe bertello"
        ],
        "subq2": []
    },
    {
        "ID": "2872",
        "question": "Who wrote the subsequent work of One Day at a Time (Em's Version)",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/One_Day_at_a_Time_(Em's_Version)> <http://dbpedia.org/ontology/subsequentWork> ?x . ?x <http://dbpedia.org/ontology/writer> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "who wrote the subsequent work of day at a (em 's version)",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "who wrote the subsequent work (em",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "who wrote the subsequent work of day at a (em 's version) [DES] who wrote the subsequent work (em",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "who wrote the subsequent work of day at a (em 's version)",
            "who wrote the subsequent work (em"
        ],
        "subq2": []
    },
    {
        "ID": "3030",
        "question": "Name the TV shows with network as NBC and company as Paramount Television",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/network> <http://dbpedia.org/resource/NBC> . ?uri <http://dbpedia.org/property/company> <http://dbpedia.org/resource/Paramount_Television>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "name the tv shows with network as paramount television",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "and company as nbc television",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "name the tv shows with network as paramount television [DES] and company as nbc television",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "name the tv shows with network as paramount television",
            "and company as nbc television"
        ],
        "subq2": []
    },
    {
        "ID": "1205",
        "question": "Name the fictional character whose voice's animator is Hardie Gramatky",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/animator> <http://dbpedia.org/resource/Hardie_Gramatky> . ?uri <http://dbpedia.org/ontology/voice> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "name the fictional character whose voice 's [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "animator is hardie gramatky",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "name the fictional character whose voice 's [INQL] animator is hardie gramatky [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "name the fictional character whose voice 's [ENT]"
        ],
        "subq2": [
            "animator is hardie gramatky"
        ]
    },
    {
        "ID": "1645",
        "question": "Which license provider of MSX basic is also the designer of Language Integrated Query",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Language_Integrated_Query> <http://dbpedia.org/ontology/designer> ?uri. <http://dbpedia.org/resource/MSX_BASIC> <http://dbpedia.org/property/license> ?uri} ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which license of provider basic",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "is also the language of msx integrated query",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which license of provider basic [DES] is also the language of msx integrated query",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "which license of provider basic",
            "is also the language of msx integrated query"
        ],
        "subq2": []
    },
    {
        "ID": "3417",
        "question": "Who are the architect of the stadium whose one of the architect is louis D. Astorino",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/architect> <http://dbpedia.org/resource/Louis_D._Astorino> . ?x <http://dbpedia.org/property/architect> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "who are the architect of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the stadium whose one of the architect is louis d. astorino",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "who are the architect of [INQL] the stadium whose one of the architect is louis d. astorino [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "who are the architect of [ENT]"
        ],
        "subq2": [
            "the stadium whose one of the architect is louis d. astorino"
        ]
    },
    {
        "ID": "3476",
        "question": "Who are the astronauts associated with NASA",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/type> <http://dbpedia.org/resource/NASA>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Astronaut>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "who are the astronauts associated with [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "nasa associated with nasa",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "who are the astronauts associated with [INQL] nasa associated with nasa [INQR]",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "who are the astronauts associated with [ENT]"
        ],
        "subq2": [
            "nasa associated with nasa"
        ]
    },
    {
        "ID": "2861",
        "question": "What is a common ingredient used in boyt Blodpalt and Kaszanka",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Blodpalt> <http://dbpedia.org/ontology/ingredient> ?uri. <http://dbpedia.org/resource/Kaszanka> <http://dbpedia.org/ontology/ingredient> ?uri . }",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what is a common ingredient used in boyt blodpalt and kaszanka",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                }
            ]
        },
        "pred": "what is a common ingredient used in boyt blodpalt and kaszanka",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "what is a common ingredient used in boyt blodpalt and kaszanka"
        ],
        "subq2": []
    },
    {
        "ID": "1792",
        "question": "Who is the partner of Rob Patterson",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/partner> <http://dbpedia.org/resource/Rob_Patterson>  . }",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "who is the partner of rob patterson",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "rob patterson",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "who is the partner of rob patterson [DES] rob patterson",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "who is the partner of rob patterson",
            "rob patterson"
        ],
        "subq2": []
    },
    {
        "ID": "3797",
        "question": "How many politicians are there from the city of Ganges",
        "sparql": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Ganges> <http://dbpedia.org/property/city> ?x . ?x <http://dbpedia.org/ontology/leaderName> ?uri  . }",
        "intent": "COUNT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "how many politicians are there from [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the city of ganges",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "how many politicians are there from [INQL] the city of ganges [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "COUNT",
        "subq1": [
            "how many politicians are there from [ENT]"
        ],
        "subq2": [
            "the city of ganges"
        ]
    },
    {
        "ID": "3368",
        "question": "To which american football teams does the Heinz Field serve as home stadium",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Heinz_Field> <http://dbpedia.org/property/tenants> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "to which american football teams",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "does the field heinz serve as home stadium",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "to which american football teams [DES] does the field heinz serve as home stadium",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "to which american football teams",
            "does the field heinz serve as home stadium"
        ],
        "subq2": []
    },
    {
        "ID": "3367",
        "question": "Which architect of the Marine Corps Air Station Kaneohe Bay is the branch of the Burnet R. Maybank",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Marine_Corps_Air_Station_Kaneohe_Bay> <http://dbpedia.org/property/architect> ?uri. <http://dbpedia.org/resource/Burnet_R._Maybank> <http://dbpedia.org/property/branch> ?uri} ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which architect of the marine bay air station",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "is the branch of the burnet r. maybank air",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which architect of the marine bay air station [DES] is the branch of the burnet r. maybank air",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "which architect of the marine bay air station",
            "is the branch of the burnet r. maybank air"
        ],
        "subq2": []
    },
    {
        "ID": "3533",
        "question": "Which movies' screenplay is written by Akiva Goldsman",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/screenplay> <http://dbpedia.org/resource/Akiva_Goldsman>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which movies",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "is written by akiva goldsman",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which movies [DES] is written by akiva goldsman",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "which movies",
            "is written by akiva goldsman"
        ],
        "subq2": []
    },
    {
        "ID": "3449",
        "question": "How many TV shows are similar to the ones belonging to fantasy genre",
        "sparql": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/genre> <http://dbpedia.org/resource/Fantasy_television> . ?uri <http://dbpedia.org/ontology/related> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "intent": "COUNT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "how many tv shows are similar to [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the ones belonging to fantasy",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "how many tv shows are similar to [INQL] the ones belonging to fantasy [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "COUNT",
        "subq1": [
            "how many tv shows are similar to [ENT]"
        ],
        "subq2": [
            "the ones belonging to fantasy"
        ]
    },
    {
        "ID": "603",
        "question": "Give me all commanders which had an important role in both, the Battle of Fort Stephenson and Battle of the Thames",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Battle_of_Fort_Stephenson> <http://dbpedia.org/ontology/commander> ?uri. <http://dbpedia.org/resource/Battle_of_the_Thames> <http://dbpedia.org/ontology/commander> ?uri . }",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "give me all commanders which had an important in both the battle of both fort stephenson",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "and the battle of the thames",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "give me all commanders which had an important in both the battle of both fort stephenson [DES] and the battle of the thames",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "give me all commanders which had an important in both the battle of both fort stephenson",
            "and the battle of the thames"
        ],
        "subq2": []
    },
    {
        "ID": "3056",
        "question": "How many developers were involved in creating games whose score is composed by Gerard Marino",
        "sparql": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/composer> <http://dbpedia.org/resource/Gerard_Marino> . ?x <http://dbpedia.org/ontology/developer> ?uri  . }",
        "intent": "COUNT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "how many developers were involved in [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "games whose score is composed by gerard marino",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "how many developers were involved in [INQL] games whose score is composed by gerard marino [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "COUNT",
        "subq1": [
            "how many developers were involved in [ENT]"
        ],
        "subq2": [
            "games whose score is composed by gerard marino"
        ]
    },
    {
        "ID": "4531",
        "question": "Which sea is surrounded by Rostock and Kaliningrad",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/cities> <http://dbpedia.org/resource/Rostock> . ?uri <http://dbpedia.org/property/cities> <http://dbpedia.org/resource/Kaliningrad> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Sea>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which sea",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "is surrounded by rostock and kaliningrad",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which sea [DES] is surrounded by rostock and kaliningrad",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "which sea",
            "is surrounded by rostock and kaliningrad"
        ],
        "subq2": []
    },
    {
        "ID": "126",
        "question": "Which television show's developer is Brian Graden and voices to the character is by Isaac Hayes",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/developer> <http://dbpedia.org/resource/Brian_Graden> . ?uri <http://dbpedia.org/property/voices> <http://dbpedia.org/resource/Isaac_Hayes>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which television show 's developer is brian graden",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "and voices to the character is by the character by isaac hayes",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which television show 's developer is brian graden [DES] and voices to the character is by the character by isaac hayes",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "which television show 's developer is brian graden",
            "and voices to the character is by the character by isaac hayes"
        ],
        "subq2": []
    },
    {
        "ID": "3876",
        "question": "How did the child of Stevens T. Mason die",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Stevens_Thomson_Mason_(Virginia)> <http://dbpedia.org/ontology/child> ?x . ?x <http://dbpedia.org/ontology/deathCause> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "how did [ENT] die",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the child of stevens mason",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "how did [INQL] the child of stevens mason [INQR] die",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "how did [ENT] die"
        ],
        "subq2": [
            "the child of stevens mason"
        ]
    },
    {
        "ID": "2935",
        "question": "Does the Ontario International Airport serve the Inland Empire",
        "sparql": "ASK WHERE { <http://dbpedia.org/resource/Ontario_International_Airport> <http://dbpedia.org/property/cityServed> <http://dbpedia.org/resource/Inland_Empire> }",
        "intent": "ASK",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "does the ontario international airport",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "serve the inland empire empire",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "does the ontario international airport [DES] serve the inland empire empire",
        "compositionality_type_golden": "simple",
        "intent_golden": "ASK",
        "subq1": [
            "does the ontario international airport",
            "serve the inland empire empire"
        ],
        "subq2": []
    },
    {
        "ID": "3531",
        "question": "Is semnani one of the languages spoken in Iran",
        "sparql": "ASK WHERE { <http://dbpedia.org/resource/Iran> <http://dbpedia.org/property/languages> <http://dbpedia.org/resource/Semnani_languages> }",
        "intent": "ASK",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "is semnani one of the languages",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "spoken in iran",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "is semnani one of the languages [DES] spoken in iran",
        "compositionality_type_golden": "simple",
        "intent_golden": "ASK",
        "subq1": [
            "is semnani one of the languages",
            "spoken in iran"
        ],
        "subq2": []
    },
    {
        "ID": "2730",
        "question": "What is the nickname of the home stadium of Angels Toru",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Angels_Toru\u0144> <http://dbpedia.org/ontology/homeStadium> ?x . ?x <http://dbpedia.org/property/nickname> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "what is the nickname of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the home stadium of toru angels",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "what is the nickname of [INQL] the home stadium of toru angels [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "what is the nickname of [ENT]"
        ],
        "subq2": [
            "the home stadium of toru angels"
        ]
    },
    {
        "ID": "827",
        "question": "What is the television show whose executive producer is Douglas Netter",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/executiveProducer> <http://dbpedia.org/resource/Douglas_Netter>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what is the television show",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "whose executive producer is douglas netter",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what is the television show [DES] whose executive producer is douglas netter",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "what is the television show",
            "whose executive producer is douglas netter"
        ],
        "subq2": []
    },
    {
        "ID": "1639",
        "question": "List out the people who are related to the relatives of Jared Kushner",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jared_Kushner> <http://dbpedia.org/ontology/relation> ?x . ?x <http://dbpedia.org/ontology/relation> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "out list the people who are related to [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the relatives of jared kushner",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "out list the people who are related to [INQL] the relatives of jared kushner [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "out list the people who are related to [ENT]"
        ],
        "subq2": [
            "the relatives of jared kushner"
        ]
    },
    {
        "ID": "984",
        "question": "List all the doctoral student of the scientist who has advised john Bowlby",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/doctoralStudents> <http://dbpedia.org/resource/John_Bowlby> . ?x <http://dbpedia.org/property/doctoralStudents> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "list all the doctoral student of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the scientist who has john advised",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "list all the doctoral student of [INQL] the scientist who has john advised [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "list all the doctoral student of [ENT]"
        ],
        "subq2": [
            "the scientist who has john advised"
        ]
    },
    {
        "ID": "3281",
        "question": "To which series does the book belong which came after the Blade Runner 2",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/previousWork> <http://dbpedia.org/resource/Blade_Runner_2:_The_Edge_of_Human> . ?x <http://dbpedia.org/ontology/series> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "to which series does the book belong [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "which came after the book runner runner",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "to which series does the book belong [INQL] which came after the book runner runner [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "to which series does the book belong [ENT]"
        ],
        "subq2": [
            "which came after the book runner runner"
        ]
    },
    {
        "ID": "4971",
        "question": "In which city did The Ultimate Fighter: Team Rousey vs. Team Tate take place",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Ultimate_Fighter:_Team_Rousey_vs._Team_Tate> <http://dbpedia.org/property/city> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "in which city",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "did the ultimate fighter : team rousey team vs. tate take place",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "in which city [DES] did the ultimate fighter : team rousey team vs. tate take place",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "in which city",
            "did the ultimate fighter : team rousey team vs. tate take place"
        ],
        "subq2": []
    },
    {
        "ID": "2188",
        "question": "Where was Sino-French War fought",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Sino-French_War> <http://dbpedia.org/ontology/territory> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "where was sino-french war",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "fought where was fought",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "where was sino-french war [DES] fought where was fought",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "where was sino-french war",
            "fought where was fought"
        ],
        "subq2": []
    },
    {
        "ID": "4612",
        "question": "Who did Daniel Gibson marry",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Daniel_Gibson>  . }",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "who did daniel gibson",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "marry",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "who did daniel gibson [DES] marry",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "who did daniel gibson",
            "marry"
        ],
        "subq2": []
    },
    {
        "ID": "2443",
        "question": "What is the political party of the daughter of Jawaharlal Nehru",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jawaharlal_Nehru> <http://dbpedia.org/ontology/child> ?x . ?x <http://dbpedia.org/ontology/party> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "what is the political party of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the daughter of jawaharlal nehru",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "what is the political party of [INQL] the daughter of jawaharlal nehru [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "what is the political party of [ENT]"
        ],
        "subq2": [
            "the daughter of jawaharlal nehru"
        ]
    },
    {
        "ID": "362",
        "question": "Name the river with source as Shannon Pot and its mouth is located in Limerick",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/source> <http://dbpedia.org/resource/Shannon_Pot> . ?uri <http://dbpedia.org/property/mouthLocation> <http://dbpedia.org/resource/Limerick>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "name the river with source as shannon pot",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "and mouth is located in its limerick",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "name the river with source as shannon pot [DES] and mouth is located in its limerick",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "name the river with source as shannon pot",
            "and mouth is located in its limerick"
        ],
        "subq2": []
    },
    {
        "ID": "2349",
        "question": "What is the organisation whose purposes are Environmentalism and Peace",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/purpose> <http://dbpedia.org/resource/Environmentalism> . ?uri <http://dbpedia.org/property/purpose> <http://dbpedia.org/resource/Peace> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what is the organisation",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "whose purposes are environmentalism and peace",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what is the organisation [DES] whose purposes are environmentalism and peace",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "what is the organisation",
            "whose purposes are environmentalism and peace"
        ],
        "subq2": []
    },
    {
        "ID": "345",
        "question": "Count the number of sports team members which have player named Matt Williams",
        "sparql": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/name> <http://dbpedia.org/resource/Matt_Williams_(New_Zealand_footballer)> . ?x <http://dbpedia.org/property/name> ?uri }",
        "intent": "COUNT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "count the number of sports team",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "which have player named matt williams",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "count the number of sports team [DES] which have player named matt williams",
        "compositionality_type_golden": "composition",
        "intent_golden": "COUNT",
        "subq1": [
            "count the number of sports team",
            "which have player named matt williams"
        ],
        "subq2": []
    },
    {
        "ID": "814",
        "question": "How many different people own the Timeform award winners",
        "sparql": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Timeform> . ?x <http://dbpedia.org/ontology/owner> ?uri  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
        "intent": "COUNT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "how many different people own [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the timeform award winners",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "how many different people own [INQL] the timeform award winners [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "COUNT",
        "subq1": [
            "how many different people own [ENT]"
        ],
        "subq2": [
            "the timeform award winners"
        ]
    },
    {
        "ID": "3205",
        "question": "What religions do diplomats typically follow",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Diplomacy> . ?x <http://dbpedia.org/property/religion> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what do typically diplomats",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "follow religions",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what do typically diplomats [DES] follow religions",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "what do typically diplomats",
            "follow religions"
        ],
        "subq2": []
    },
    {
        "ID": "4160",
        "question": "Guggenheim family is the cofounder of a company that invested stocks in which baseball teams",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/founder> <http://dbpedia.org/resource/Guggenheim_family> . ?uri <http://dbpedia.org/property/owner> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BaseballTeam>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "[ENT] which teams",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "guggenheim stocks in a company that invested stocks in baseball teams",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "[INQL] guggenheim stocks in a company that invested stocks in baseball teams [INQR] which teams",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "[ENT] which teams"
        ],
        "subq2": [
            "guggenheim stocks in a company that invested stocks in baseball teams"
        ]
    },
    {
        "ID": "4795",
        "question": "Was John muir one of the first to ascend a mountain on Mt hoffmann",
        "sparql": "ASK WHERE { <http://dbpedia.org/resource/Mount_Hoffmann> <http://dbpedia.org/ontology/firstAscentPerson> <http://dbpedia.org/resource/John_Muir> }",
        "intent": "ASK",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "was muir one of the first to ascend [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "a mountain on john ascend hoffmann",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "was muir one of the first to ascend [INQL] a mountain on john ascend hoffmann [INQR]",
        "compositionality_type_golden": "simple",
        "intent_golden": "ASK",
        "subq1": [
            "was muir one of the first to ascend [ENT]"
        ],
        "subq2": [
            "a mountain on john ascend hoffmann"
        ]
    },
    {
        "ID": "3325",
        "question": "Which city is known for the people working in the western penn hospital",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/workInstitutions> <http://dbpedia.org/resource/Western_Pennsylvania_Hospital> . ?x <http://dbpedia.org/ontology/knownFor> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "which city is known for [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the people working in the western penn hospital",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "which city is known for [INQL] the people working in the western penn hospital [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "which city is known for [ENT]"
        ],
        "subq2": [
            "the people working in the western penn hospital"
        ]
    },
    {
        "ID": "4106",
        "question": "In which country does the publishing house exist which was cofounded by Panos Loannides",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/founder> <http://dbpedia.org/resource/Panos_Ioannides> . ?x <http://dbpedia.org/property/country> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Publisher>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "in which country",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "does the publishing house which was cofounded by panos loannides",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "in which country [DES] does the publishing house which was cofounded by panos loannides",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "in which country",
            "does the publishing house which was cofounded by panos loannides"
        ],
        "subq2": []
    },
    {
        "ID": "2116",
        "question": "Name the team which is owned by Dafenham wind turbines and stood first in 1967 mexican Grand Prix",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/1967_Mexican_Grand_Prix> <http://dbpedia.org/property/firstTeam> ?uri. <http://dbpedia.org/resource/Dagenham_wind_turbines> <http://dbpedia.org/property/owner> ?uri} ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "name the team",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "which is owned by dafenham 1967 mexican turbines and stood in first grand prix",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "name the team [DES] which is owned by dafenham 1967 mexican turbines and stood in first grand prix",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "name the team",
            "which is owned by dafenham 1967 mexican turbines and stood in first grand prix"
        ],
        "subq2": []
    },
    {
        "ID": "1834",
        "question": "Which education center Sidney Catlin Partrodge attended which was also the alma mater of Lisa Brummel",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Sidney_Catlin_Partridge> <http://dbpedia.org/property/education> ?uri. <http://dbpedia.org/resource/Lisa_Brummel> <http://dbpedia.org/ontology/almaMater> ?uri} ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which education center sidney partrodge attended",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "which was also the alma mater of lisa brummel",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which education center sidney partrodge attended [DES] which was also the alma mater of lisa brummel",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "which education center sidney partrodge attended",
            "which was also the alma mater of lisa brummel"
        ],
        "subq2": []
    },
    {
        "ID": "793",
        "question": "What sports can be played in Kharghar's schools",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Kharghar> . ?x <http://dbpedia.org/ontology/sport> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/School>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "what sports can be played in [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "kharghar 's schools",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "what sports can be played in [INQL] kharghar 's schools [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "what sports can be played in [ENT]"
        ],
        "subq2": [
            "kharghar 's schools"
        ]
    },
    {
        "ID": "4946",
        "question": "Which ethnicity of Riley Reid is the state of origin of Holmes Colbert",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Riley_Reid> <http://dbpedia.org/property/ethnicity> ?uri. <http://dbpedia.org/resource/Holmes_Colbert> <http://dbpedia.org/ontology/stateOfOrigin> ?uri} ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which ethnicity of reid",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "is the state of origin of holmes colbert",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which ethnicity of reid [DES] is the state of origin of holmes colbert",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "which ethnicity of reid",
            "is the state of origin of holmes colbert"
        ],
        "subq2": []
    },
    {
        "ID": "2674",
        "question": "Was John Boehner the winner of the US House of Representatives elections in Ohio in 2010",
        "sparql": "ASK WHERE { <http://dbpedia.org/resource/United_States_House_of_Representatives_elections_in_Ohio,_2010> <http://dbpedia.org/property/incumbent> <http://dbpedia.org/resource/John_Boehner> }",
        "intent": "ASK",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "was john boehner the winner of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the winner of the us house of representatives elections in 2010",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "was john boehner the winner of [INQL] the winner of the us house of representatives elections in 2010 [INQR]",
        "compositionality_type_golden": "simple",
        "intent_golden": "ASK",
        "subq1": [
            "was john boehner the winner of [ENT]"
        ],
        "subq2": [
            "the winner of the us house of representatives elections in 2010"
        ]
    },
    {
        "ID": "94",
        "question": "Which american football team has stadium as O.co Coliseum",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/locationCity> <http://dbpedia.org/resource/O.co_Coliseum>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AmericanFootballTeam>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which american football team",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "has o.co coliseum stadium as o.co",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which american football team [DES] has o.co coliseum stadium as o.co",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "which american football team",
            "has o.co coliseum stadium as o.co"
        ],
        "subq2": []
    },
    {
        "ID": "3756",
        "question": "How many subjects are covered in the publications of Doubleday",
        "sparql": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/publisher> <http://dbpedia.org/resource/Doubleday_(publisher)> . ?x <http://dbpedia.org/ontology/nonFictionSubject> ?uri  . }",
        "intent": "COUNT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "how many subjects are covered in [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the publications of doubleday",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "how many subjects are covered in [INQL] the publications of doubleday [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "COUNT",
        "subq1": [
            "how many subjects are covered in [ENT]"
        ],
        "subq2": [
            "the publications of doubleday"
        ]
    },
    {
        "ID": "2891",
        "question": "In which city of Pittsburg Steelers was the Congress of Industrial Organization founded",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Congress_of_Industrial_Organizations> <http://dbpedia.org/property/founded> ?uri. <http://dbpedia.org/resource/Pittsburgh_Steelers> <http://dbpedia.org/property/city> ?uri} ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "in which city of pittsburg steelers",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "was the organization of congress founded industrial organization",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "in which city of pittsburg steelers [DES] was the organization of congress founded industrial organization",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "in which city of pittsburg steelers",
            "was the organization of congress founded industrial organization"
        ],
        "subq2": []
    },
    {
        "ID": "2371",
        "question": "What is the hometown of the residents of Martha's vineyards",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Martha's_Vineyard> . ?x <http://dbpedia.org/ontology/hometown> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "what is the hometown of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the residents of martha 's vineyards",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "what is the hometown of [INQL] the residents of martha 's vineyards [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "what is the hometown of [ENT]"
        ],
        "subq2": [
            "the residents of martha 's vineyards"
        ]
    },
    {
        "ID": "4149",
        "question": "Name the sea into which Danish Straits flows and has Kaliningrad as one of the cities on the shore",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/cities> <http://dbpedia.org/resource/Kaliningrad> . ?uri <http://dbpedia.org/property/outflow> <http://dbpedia.org/resource/Danish_straits>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Sea>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "name the sea into which flows",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "and has kaliningrad as one of the cities on the danish straits",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "name the sea into which flows [DES] and has kaliningrad as one of the cities on the danish straits",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "name the sea into which flows",
            "and has kaliningrad as one of the cities on the danish straits"
        ],
        "subq2": []
    },
    {
        "ID": "4432",
        "question": "Name the team manager of Middlebrough F.C season 2006-07",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/2006\u201307_Middlesbrough_F.C._season> <http://dbpedia.org/ontology/manager> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "name the manager",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "manager of middlebrough 2006-07 season 2006-07",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "name the manager [DES] manager of middlebrough 2006-07 season 2006-07",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "name the manager",
            "manager of middlebrough 2006-07 season 2006-07"
        ],
        "subq2": []
    },
    {
        "ID": "3228",
        "question": "What city has the football team in which Lee Robinson debuted",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lee_Robinson_(American_football)> <http://dbpedia.org/ontology/debutTeam> ?x . ?x <http://dbpedia.org/ontology/locationCity> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what city",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "has the football team in which lee robinson debuted in",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what city [DES] has the football team in which lee robinson debuted in",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "what city",
            "has the football team in which lee robinson debuted in"
        ],
        "subq2": []
    },
    {
        "ID": "2853",
        "question": "Who is the owner of the bank which owns Bloomberg Radio",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Bloomberg_Radio> <http://dbpedia.org/ontology/owner> ?x . ?x <http://dbpedia.org/property/owner> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bank>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "who is the owner of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the bank which owns bloomberg radio",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "who is the owner of [INQL] the bank which owns bloomberg radio [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "who is the owner of [ENT]"
        ],
        "subq2": [
            "the bank which owns bloomberg radio"
        ]
    },
    {
        "ID": "2912",
        "question": "Which companies were behind the renovation of McKechnie Field",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/McKechnie_Field> <http://dbpedia.org/property/architect> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "which companies were behind [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the field renovation of mckechnie",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "which companies were behind [INQL] the field renovation of mckechnie [INQR]",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "which companies were behind [ENT]"
        ],
        "subq2": [
            "the field renovation of mckechnie"
        ]
    },
    {
        "ID": "1865",
        "question": "Who was the coach of marquette Golden Eagles men's basketball team-2012,13 season",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/2012\u201313_Marquette_Golden_Eagles_men's_basketball_team> <http://dbpedia.org/ontology/coach> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "who was the coach of marquette golden eagles men 's basketball season men 's basketball season team-2012,13",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                }
            ]
        },
        "pred": "who was the coach of marquette golden eagles men 's basketball season men 's basketball season team-2012,13",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "who was the coach of marquette golden eagles men 's basketball season men 's basketball season team-2012,13"
        ],
        "subq2": []
    },
    {
        "ID": "1857",
        "question": "Miluk and Cayuse are still spoken in which part of the world",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Miluk_language> <http://dbpedia.org/property/region> ?uri. <http://dbpedia.org/resource/Cayuse_language> <http://dbpedia.org/property/region> ?uri . }",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "miluk and cayuse are spoken in which part of the world",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "the world",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "miluk and cayuse are spoken in which part of the world [DES] the world",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "miluk and cayuse are spoken in which part of the world",
            "the world"
        ],
        "subq2": []
    },
    {
        "ID": "2645",
        "question": "Which governor of Winston bryant is also the president of Carl Stokes",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Winston_Bryant> <http://dbpedia.org/property/governor> ?uri. <http://dbpedia.org/resource/Carl_Stokes> <http://dbpedia.org/property/president> ?uri} ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which governor of carl bryant",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "is also the president of winston stokes",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which governor of carl bryant [DES] is also the president of winston stokes",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "which governor of carl bryant",
            "is also the president of winston stokes"
        ],
        "subq2": []
    },
    {
        "ID": "2243",
        "question": "List the sports of PATTS College of Aeronautics which are of interest of Jon Speelman",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/PATTS_College_of_Aeronautics> <http://dbpedia.org/property/athletics> ?uri. <http://dbpedia.org/resource/Jon_Speelman> <http://dbpedia.org/ontology/field> ?uri} ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "list the sports of patts college of aeronautics",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "which are the interest of jon speelman",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "list the sports of patts college of aeronautics [DES] which are the interest of jon speelman",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "list the sports of patts college of aeronautics",
            "which are the interest of jon speelman"
        ],
        "subq2": []
    },
    {
        "ID": "2336",
        "question": "What is the home stadium of the club coached by Justine Omojong",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/coach> <http://dbpedia.org/resource/Justine_Omojong> . ?x <http://dbpedia.org/property/homeStadium> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "what is the home stadium of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the club coached by justine omojong",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "what is the home stadium of [INQL] the club coached by justine omojong [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "what is the home stadium of [ENT]"
        ],
        "subq2": [
            "the club coached by justine omojong"
        ]
    },
    {
        "ID": "950",
        "question": "Which are the predecessors of the cars which are similar to the Oldsmobile 88",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Oldsmobile_88> <http://dbpedia.org/property/related> ?x . ?x <http://dbpedia.org/ontology/predecessor> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "which are the predecessors of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the cars which are similar to the oldsmobile 88",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "which are the predecessors of [INQL] the cars which are similar to the oldsmobile 88 [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "which are the predecessors of [ENT]"
        ],
        "subq2": [
            "the cars which are similar to the oldsmobile 88"
        ]
    },
    {
        "ID": "3068",
        "question": "Name a queen whose parent is Ptolemy XII Auletes and consort is Ptolemy XIII Theos Philopator",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ptolemy_XII_Auletes> . ?uri <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Ptolemy_XIII_Theos_Philopator>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "name a parent whose parent is queen xii auletes",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "and consort is ptolemy xii theos philopator",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "name a parent whose parent is queen xii auletes [DES] and consort is ptolemy xii theos philopator",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "name a parent whose parent is queen xii auletes",
            "and consort is ptolemy xii theos philopator"
        ],
        "subq2": []
    },
    {
        "ID": "1120",
        "question": "Which show's theme music was composed by Primus and voiced by Isaac Hayes",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/themeMusicComposer> <http://dbpedia.org/resource/Primus_(band)> . ?uri <http://dbpedia.org/property/voices> <http://dbpedia.org/resource/Isaac_Hayes>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which show 's theme music was composed by isaac hayes",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "and voiced by primus",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which show 's theme music was composed by isaac hayes [DES] and voiced by primus",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "which show 's theme music was composed by isaac hayes",
            "and voiced by primus"
        ],
        "subq2": []
    },
    {
        "ID": "2597",
        "question": "Who is the chancellor of the university whose campus is in Woodlane, New Jersey",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/campus> <http://dbpedia.org/resource/Woodlane,_New_Jersey> . ?x <http://dbpedia.org/property/chancellor> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "who is the chancellor of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the university whose campus is in woodlane , new jersey",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "who is the chancellor of [INQL] the university whose campus is in woodlane , new jersey [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "who is the chancellor of [ENT]"
        ],
        "subq2": [
            "the university whose campus is in woodlane , new jersey"
        ]
    },
    {
        "ID": "2204",
        "question": "Name the mountain whose parent peak is located in Mexico",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/locatedInArea> <http://dbpedia.org/resource/State_of_Mexico> . ?uri <http://dbpedia.org/ontology/parentMountainPeak> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Mountain>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "name the mountain whose parent peak is located in mexico",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "whose parent peak is located in mexico",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "name the mountain whose parent peak is located in mexico [DES] whose parent peak is located in mexico",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "name the mountain whose parent peak is located in mexico",
            "whose parent peak is located in mexico"
        ],
        "subq2": []
    },
    {
        "ID": "419",
        "question": "List the ingredient of Blodpalt",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Blodpalt> <http://dbpedia.org/ontology/ingredient> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "list the ingredient of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "blodpalt",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "list the ingredient of [INQL] blodpalt [INQR]",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "list the ingredient of [ENT]"
        ],
        "subq2": [
            "blodpalt"
        ]
    },
    {
        "ID": "922",
        "question": "List the developers who has contributed to both GNOWSYS and GNU TeXmacs",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/GNOWSYS> <http://dbpedia.org/ontology/developer> ?uri. <http://dbpedia.org/resource/GNU_TeXmacs> <http://dbpedia.org/ontology/developer> ?uri . }",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "list the developers",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "who has contributed to both gnowsys and gnu texmacs",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "list the developers [DES] who has contributed to both gnowsys and gnu texmacs",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "list the developers",
            "who has contributed to both gnowsys and gnu texmacs"
        ],
        "subq2": []
    },
    {
        "ID": "1254",
        "question": "List the served region of the organisations of Trade association",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Trade_association> . ?x <http://dbpedia.org/ontology/regionServed> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "list the region of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the organisations of the trade organisations",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "list the region of [INQL] the organisations of the trade organisations [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "list the region of [ENT]"
        ],
        "subq2": [
            "the organisations of the trade organisations"
        ]
    },
    {
        "ID": "477",
        "question": "Is Hyundai Lavita assembled in Malaysia",
        "sparql": "ASK WHERE { <http://dbpedia.org/resource/Hyundai_Lavita> <http://dbpedia.org/ontology/assembly> <http://dbpedia.org/resource/Malaysia> }",
        "intent": "ASK",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "is hyundai",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "assembled in malaysia",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "is hyundai [DES] assembled in malaysia",
        "compositionality_type_golden": "simple",
        "intent_golden": "ASK",
        "subq1": [
            "is hyundai",
            "assembled in malaysia"
        ],
        "subq2": []
    },
    {
        "ID": "2035",
        "question": "Who composed the music for Tonight's the Night",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Tonight's_the_Night_(2003_musical)> <http://dbpedia.org/property/music> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "who composed the music for tonight 's the night",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "who composed %composition",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "who composed the music for tonight 's the night [DES] who composed %composition",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "who composed the music for tonight 's the night",
            "who composed %composition"
        ],
        "subq2": []
    },
    {
        "ID": "1202",
        "question": "How many things are made by companies who produce mass media articles",
        "sparql": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/products> <http://dbpedia.org/resource/Mass_media> . ?uri <http://dbpedia.org/ontology/manufacturer> ?x  . }",
        "intent": "COUNT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "how many things are made by [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "companies who mass articles media",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "how many things are made by [INQL] companies who mass articles media [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "COUNT",
        "subq1": [
            "how many things are made by [ENT]"
        ],
        "subq2": [
            "companies who mass articles media"
        ]
    },
    {
        "ID": "2626",
        "question": "What awards have been given to race horses bred by Bert Michell",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/trainer> <http://dbpedia.org/resource/Bert_S._Michell> . ?x <http://dbpedia.org/ontology/honours> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RaceHorse>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "what awards have been given to [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "race horses bred by bert michell",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "what awards have been given to [INQL] race horses bred by bert michell [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "what awards have been given to [ENT]"
        ],
        "subq2": [
            "race horses bred by bert michell"
        ]
    },
    {
        "ID": "4818",
        "question": "Whose mayors are affiliated with Christen-Democratisch en Vlaams",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/affiliation> <http://dbpedia.org/resource/Christen-Democratisch_en_Vlaams> . ?uri <http://dbpedia.org/ontology/leaderName> ?x  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "whose mayors [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "are affiliated with christen-democratisch en vlaams",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "whose mayors [INQL] are affiliated with christen-democratisch en vlaams [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "whose mayors [ENT]"
        ],
        "subq2": [
            "are affiliated with christen-democratisch en vlaams"
        ]
    },
    {
        "ID": "1970",
        "question": "What is the common nationality of Viveka Babajee and Ronny Vencatachellum",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Viveka_Babajee> <http://dbpedia.org/property/citizenship> ?uri. <http://dbpedia.org/resource/Ronny_Vencatachellum> <http://dbpedia.org/ontology/nationality> ?uri} ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what is the common nationality of viveka babajee and ronny vencatachellum",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                }
            ]
        },
        "pred": "what is the common nationality of viveka babajee and ronny vencatachellum",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "what is the common nationality of viveka babajee and ronny vencatachellum"
        ],
        "subq2": []
    },
    {
        "ID": "3110",
        "question": "Is the Hyundai Lavita assembled in Ulsan",
        "sparql": "ASK WHERE { <http://dbpedia.org/resource/Hyundai_Lavita> <http://dbpedia.org/property/assembly> <http://dbpedia.org/resource/Ulsan> }",
        "intent": "ASK",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "is the hyundai",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "assembled in ulsan ulsan",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "is the hyundai [DES] assembled in ulsan ulsan",
        "compositionality_type_golden": "simple",
        "intent_golden": "ASK",
        "subq1": [
            "is the hyundai",
            "assembled in ulsan ulsan"
        ],
        "subq2": []
    },
    {
        "ID": "4018",
        "question": "Which party won the elections when Y.S. Rajasekhara Reddy was in power",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Y._S._Rajasekhara_Reddy> . ?x <http://dbpedia.org/ontology/affiliation> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Election>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which party",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "won the power when y.s. rajasekhara reddy was in",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which party [DES] won the power when y.s. rajasekhara reddy was in",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "which party",
            "won the power when y.s. rajasekhara reddy was in"
        ],
        "subq2": []
    },
    {
        "ID": "2151",
        "question": "Where does the river begin whose left tributary is Krapanski Potok",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/leftTributary> <http://dbpedia.org/resource/Krapanski_Potok> . ?x <http://dbpedia.org/ontology/source> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "where does the river begin [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "whose tributary is krapanski potok",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "where does the river begin [INQL] whose tributary is krapanski potok [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "where does the river begin [ENT]"
        ],
        "subq2": [
            "whose tributary is krapanski potok"
        ]
    },
    {
        "ID": "3687",
        "question": "What are the notable commanders of the army whose one of the notable commanders is Paul Hausser",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/notableCommanders> <http://dbpedia.org/resource/Paul_Hausser> . ?x <http://dbpedia.org/property/notableCommanders> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "what are the notable commanders of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the army whose one of the notable commanders is paul hausser",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "what are the notable commanders of [INQL] the army whose one of the notable commanders is paul hausser [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "what are the notable commanders of [ENT]"
        ],
        "subq2": [
            "the army whose one of the notable commanders is paul hausser"
        ]
    },
    {
        "ID": "1997",
        "question": "Name the source of Raa",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ra\u0161a_(river)> <http://dbpedia.org/ontology/source> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "name the source of raa",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "name the source of raa",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "name the source of raa [DES] name the source of raa",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "name the source of raa",
            "name the source of raa"
        ],
        "subq2": []
    },
    {
        "ID": "4033",
        "question": "Does Fa'a' International Airport serve tahiti too",
        "sparql": "ASK WHERE { <http://dbpedia.org/resource/Fa'a'\u0101_International_Airport> <http://dbpedia.org/property/cityServed> <http://dbpedia.org/resource/Tahiti> }",
        "intent": "ASK",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "does [ENT] tahiti international airport too",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "fa'a international serve too",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "does [INQL] fa'a international serve too [INQR] tahiti international airport too",
        "compositionality_type_golden": "simple",
        "intent_golden": "ASK",
        "subq1": [
            "does [ENT] tahiti international airport too"
        ],
        "subq2": [
            "fa'a international serve too"
        ]
    },
    {
        "ID": "3054",
        "question": "Who is the producer of Frampton's Camel",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Frampton's_Camel> <http://dbpedia.org/property/producer> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "who is the producer of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "frampton 's camel",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "who is the producer of [INQL] frampton 's camel [INQR]",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "who is the producer of [ENT]"
        ],
        "subq2": [
            "frampton 's camel"
        ]
    },
    {
        "ID": "1248",
        "question": "Name the directors of Lennon Legend: The Very Best of John Lennon (DVD)",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lennon_Legend:_The_Very_Best_of_John_Lennon_(DVD)> <http://dbpedia.org/ontology/director> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "name the directors of lennon legend : the very of john lennon (dvd)",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                }
            ]
        },
        "pred": "name the directors of lennon legend : the very of john lennon (dvd)",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "name the directors of lennon legend : the very of john lennon (dvd)"
        ],
        "subq2": []
    },
    {
        "ID": "2192",
        "question": "What is the political party of Arun Chandra Guha and Indira Gandhi",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Arun_Chandra_Guha> <http://dbpedia.org/ontology/party> ?uri. <http://dbpedia.org/resource/Indira_Gandhi> <http://dbpedia.org/ontology/party> ?uri . }",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what is the political party of arun arun and chandra indira gandhi",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                }
            ]
        },
        "pred": "what is the political party of arun arun and chandra indira gandhi",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "what is the political party of arun arun and chandra indira gandhi"
        ],
        "subq2": []
    },
    {
        "ID": "2712",
        "question": "To which country is Svetlana Navasardyan from",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Svetlana_Navasardyan> <http://dbpedia.org/property/origin> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "to which country",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "is svetlana navasardyan from",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "to which country [DES] is svetlana navasardyan from",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "to which country",
            "is svetlana navasardyan from"
        ],
        "subq2": []
    },
    {
        "ID": "992",
        "question": "What is the alma mater of the scientist who is known for Rational analysis",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/knownFor> <http://dbpedia.org/resource/Rational_analysis> . ?x <http://dbpedia.org/ontology/almaMater> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "what is the alma mater of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the scientist who is known for rational analysis",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "what is the alma mater of [INQL] the scientist who is known for rational analysis [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "what is the alma mater of [ENT]"
        ],
        "subq2": [
            "the scientist who is known for rational analysis"
        ]
    },
    {
        "ID": "2190",
        "question": "Who is the owner of Chelsea F.C.",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Chelsea_F.C.> <http://dbpedia.org/property/owner> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "who is the owner of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "chelsea f.c.",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "who is the owner of [INQL] chelsea f.c. [INQR]",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "who is the owner of [ENT]"
        ],
        "subq2": [
            "chelsea f.c."
        ]
    },
    {
        "ID": "3762",
        "question": "In how many places has Don R. Berlin worked",
        "sparql": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Don_R._Berlin> <http://dbpedia.org/ontology/employer> ?uri  . }",
        "intent": "COUNT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "in how many places has [ENT] worked",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "has don r. worked",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "in how many places has [INQL] has don r. worked [INQR] worked",
        "compositionality_type_golden": "simple",
        "intent_golden": "COUNT",
        "subq1": [
            "in how many places has [ENT] worked"
        ],
        "subq2": [
            "has don r. worked"
        ]
    },
    {
        "ID": "3597",
        "question": "For how many movies are there whose musicians home town is in Volos",
        "sparql": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/hometown> <http://dbpedia.org/resource/Volos> . ?uri <http://dbpedia.org/property/music> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
        "intent": "COUNT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "for how many movies are there whose musicians [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "home town is in volos",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "for how many movies are there whose musicians [INQL] home town is in volos [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "COUNT",
        "subq1": [
            "for how many movies are there whose musicians [ENT]"
        ],
        "subq2": [
            "home town is in volos"
        ]
    },
    {
        "ID": "1318",
        "question": "In all the places with a stagecoach, where is a Peetz Table Wind Energy Center located too",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Stagecoach,_Colorado> <http://dbpedia.org/property/location> ?uri. <http://dbpedia.org/resource/Peetz_Table_Wind_Energy_Center> <http://dbpedia.org/property/location> ?uri . }",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "in all the places",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "with a stagecoach energy center , where is a peetz table center too located too",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "in all the places [DES] with a stagecoach energy center , where is a peetz table center too located too",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "in all the places",
            "with a stagecoach energy center , where is a peetz table center too located too"
        ],
        "subq2": []
    },
    {
        "ID": "1863",
        "question": "Name the fictional character whose relatives are Huey, Dewey, and Louie and is of species American Pekin duck",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/relatives> <http://dbpedia.org/resource/Huey,_Dewey,_and_Louie> . ?uri <http://dbpedia.org/ontology/species> <http://dbpedia.org/resource/American_Pekin_duck>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "name the fictional character whose relatives are huey , <UNK>",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "and louie is of american pekin duck",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "name the fictional character whose relatives are huey , <UNK> [DES] and louie is of american pekin duck",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "name the fictional character whose relatives are huey , <UNK>",
            "and louie is of american pekin duck"
        ],
        "subq2": []
    },
    {
        "ID": "2343",
        "question": "Who is the owner of the website which has the label Seed Eight",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Seed_Eight> <http://dbpedia.org/property/label> ?x . ?x <http://dbpedia.org/property/owner> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Website>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "who is the owner of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the website which has the label seed eight",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "who is the owner of [INQL] the website which has the label seed eight [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "who is the owner of [ENT]"
        ],
        "subq2": [
            "the website which has the label seed eight"
        ]
    },
    {
        "ID": "2449",
        "question": "In which country is Sierra del Merendin",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Sierra_del_Merend\u00f3n> <http://dbpedia.org/ontology/country> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "in which country",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "is sierra del merendin",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "in which country [DES] is sierra del merendin",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "in which country",
            "is sierra del merendin"
        ],
        "subq2": []
    },
    {
        "ID": "2136",
        "question": "What is on the border of the places which fall under crook county municipality, oregon",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/municipality> <http://dbpedia.org/resource/Crook_County,_Oregon> . ?x <http://dbpedia.org/ontology/border> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "what is on the border of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the places which fall under crook county , oregon",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "what is on the border of [INQL] the places which fall under crook county , oregon [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "what is on the border of [ENT]"
        ],
        "subq2": [
            "the places which fall under crook county , oregon"
        ]
    },
    {
        "ID": "1065",
        "question": "Which is the university of Vanderbilt Commodores",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Vanderbilt_Commodores> <http://dbpedia.org/ontology/university> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which is the university of vanderbilt commodores",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "which commodores",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which is the university of vanderbilt commodores [DES] which commodores",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "which is the university of vanderbilt commodores",
            "which commodores"
        ],
        "subq2": []
    },
    {
        "ID": "4960",
        "question": "Whose relatives are Clan McDuck and Huey, Dewey, and Louie",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/relatives> <http://dbpedia.org/resource/Clan_McDuck> . ?uri <http://dbpedia.org/property/relatives> <http://dbpedia.org/resource/Huey,_Dewey,_and_Louie> . }",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "whose relatives are clan mcduck and huey , <UNK> and louie",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                }
            ]
        },
        "pred": "whose relatives are clan mcduck and huey , <UNK> and louie",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "whose relatives are clan mcduck and huey , <UNK> and louie"
        ],
        "subq2": []
    },
    {
        "ID": "2621",
        "question": "What musicians are signed up with colpix records",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/label> <http://dbpedia.org/resource/Colpix_Records>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what musicians",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "are signed up with colpix records",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what musicians [DES] are signed up with colpix records",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "what musicians",
            "are signed up with colpix records"
        ],
        "subq2": []
    },
    {
        "ID": "77",
        "question": "Who is the person that first ascended the Cathedral Peak and Mount Hoffmann",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Cathedral_Peak_(California)> <http://dbpedia.org/ontology/firstAscentPerson> ?uri. <http://dbpedia.org/resource/Mount_Hoffmann> <http://dbpedia.org/ontology/firstAscentPerson> ?uri . }",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "who is the person",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "that ascended the first peak and mount hoffmann",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "who is the person [DES] that ascended the first peak and mount hoffmann",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "who is the person",
            "that ascended the first peak and mount hoffmann"
        ],
        "subq2": []
    },
    {
        "ID": "2898",
        "question": "What currencies are used in the country whose capital is Podgorica",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Podgorica> . ?x <http://dbpedia.org/property/currency> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "what currencies are used in [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the country whose capital is podgorica",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "what currencies are used in [INQL] the country whose capital is podgorica [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "what currencies are used in [ENT]"
        ],
        "subq2": [
            "the country whose capital is podgorica"
        ]
    },
    {
        "ID": "1314",
        "question": "How many other home stadium are there of the soccer club whose home stadium is Luzhniki Stadium",
        "sparql": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/homeStadium> <http://dbpedia.org/resource/Luzhniki_Stadium> . ?x <http://dbpedia.org/ontology/homeStadium> ?uri }",
        "intent": "COUNT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "how many other home stadium are there of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the soccer club whose home stadium is luzhniki stadium",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "how many other home stadium are there of [INQL] the soccer club whose home stadium is luzhniki stadium [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "COUNT",
        "subq1": [
            "how many other home stadium are there of [ENT]"
        ],
        "subq2": [
            "the soccer club whose home stadium is luzhniki stadium"
        ]
    },
    {
        "ID": "4372",
        "question": "Where was William Anthony trained",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/William_Anthony_(artist)> <http://dbpedia.org/ontology/training> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "where was william anthony trained",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "trained",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "where was william anthony trained [DES] trained",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "where was william anthony trained",
            "trained"
        ],
        "subq2": []
    },
    {
        "ID": "872",
        "question": "Which composer of Motorpsycho Nitemare has also composed The time are A-Changing",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Motorpsycho_Nitemare> <http://dbpedia.org/property/composer> ?uri. <http://dbpedia.org/resource/The_Times_They_Are_a-Changin'_(musical)> <http://dbpedia.org/ontology/musicBy> ?uri} ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which composer of motorpsycho nitemare",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "has also the time are composed the a-changing",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which composer of motorpsycho nitemare [DES] has also the time are composed the a-changing",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "which composer of motorpsycho nitemare",
            "has also the time are composed the a-changing"
        ],
        "subq2": []
    },
    {
        "ID": "3850",
        "question": "What river is it whose source is Dowra",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/sourceLocation> <http://dbpedia.org/resource/Dowra>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what river",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "is it whose source is dowra",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what river [DES] is it whose source is dowra",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "what river",
            "is it whose source is dowra"
        ],
        "subq2": []
    },
    {
        "ID": "4787",
        "question": "What is the religion of the president who won the Mongolian legislative election, 2004",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Mongolian_legislative_election,_2004> <http://dbpedia.org/property/leader> ?x . ?x <http://dbpedia.org/ontology/religion> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "what is the religion of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the president who won the mongolian legislative election , 2004",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "what is the religion of [INQL] the president who won the mongolian legislative election , 2004 [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "what is the religion of [ENT]"
        ],
        "subq2": [
            "the president who won the mongolian legislative election , 2004"
        ]
    },
    {
        "ID": "2965",
        "question": "Give me everything owned by networks which is lead by Steve Burke",
        "sparql": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/keyPerson> <http://dbpedia.org/resource/Steve_Burke_(businessman)> . ?uri <http://dbpedia.org/ontology/network> ?x  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "give me everything owned by [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "networks which is lead by steve burke",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "give me everything owned by [INQL] networks which is lead by steve burke [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "COUNT",
        "subq1": [
            "give me everything owned by [ENT]"
        ],
        "subq2": [
            "networks which is lead by steve burke"
        ]
    },
    {
        "ID": "3391",
        "question": "What is the municipality of Homestead Grays Bridge",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Homestead_Grays_Bridge> <http://dbpedia.org/ontology/municipality> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what is the municipality of homestead grays bridge",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                }
            ]
        },
        "pred": "what is the municipality of homestead grays bridge",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "what is the municipality of homestead grays bridge"
        ],
        "subq2": []
    },
    {
        "ID": "2560",
        "question": "What religion do the politicians follow, who graduated from the Yokohama National University",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/almaMater> <http://dbpedia.org/resource/Yokohama_National_University> . ?x <http://dbpedia.org/ontology/religion> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "what religion do the politicians follow , [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "who graduated from the yokohama university",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "what religion do the politicians follow , [INQL] who graduated from the yokohama university [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "what religion do the politicians follow , [ENT]"
        ],
        "subq2": [
            "who graduated from the yokohama university"
        ]
    },
    {
        "ID": "4896",
        "question": "Who is the narrator of The Incredible Hulk , 1982 TV series",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Incredible_Hulk_(1982_TV_series)> <http://dbpedia.org/property/narrated> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "who is the narrator of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the narrator , 1982 tv series",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "who is the narrator of [INQL] the narrator , 1982 tv series [INQR]",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "who is the narrator of [ENT]"
        ],
        "subq2": [
            "the narrator , 1982 tv series"
        ]
    },
    {
        "ID": "2635",
        "question": "What sports are played in schools where Swahili is the official language",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/language> <http://dbpedia.org/resource/Swahili_language> . ?x <http://dbpedia.org/ontology/sport> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "what sports are played in [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "schools where swahili is the official language",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "what sports are played in [INQL] schools where swahili is the official language [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "what sports are played in [ENT]"
        ],
        "subq2": [
            "schools where swahili is the official language"
        ]
    },
    {
        "ID": "3530",
        "question": "Which interest of Philip Novak is the religion of Vesak",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Philip_Novak> <http://dbpedia.org/property/mainInterests> ?uri. <http://dbpedia.org/resource/Vesak> <http://dbpedia.org/ontology/type> ?uri} ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which religion of philip novak",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "is the religion of vesak",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which religion of philip novak [DES] is the religion of vesak",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "which religion of philip novak",
            "is the religion of vesak"
        ],
        "subq2": []
    },
    {
        "ID": "375",
        "question": "Count all the ethinic group who speaks language which belongs to Anglo-Frisian language family",
        "sparql": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/languageFamily> <http://dbpedia.org/resource/Anglo-Frisian_languages> . ?uri <http://dbpedia.org/property/languages> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EthnicGroup>}",
        "intent": "COUNT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "count all the ethinic group",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "who speaks language family who belongs to anglo-frisian language family",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "count all the ethinic group [DES] who speaks language family who belongs to anglo-frisian language family",
        "compositionality_type_golden": "composition",
        "intent_golden": "COUNT",
        "subq1": [
            "count all the ethinic group",
            "who speaks language family who belongs to anglo-frisian language family"
        ],
        "subq2": []
    },
    {
        "ID": "1908",
        "question": "What is the area of the Tar Heel Sports Network which is official residence of the Michael Nichols (photographer)",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Tar_Heel_Sports_Network> <http://dbpedia.org/property/area> ?uri. <http://dbpedia.org/resource/Michael_Nichols_(photographer)> <http://dbpedia.org/ontology/residence> ?uri} ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what is the area of the tar heel sports",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "which is the official residence of the michael nichols (photographer)",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what is the area of the tar heel sports [DES] which is the official residence of the michael nichols (photographer)",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "what is the area of the tar heel sports",
            "which is the official residence of the michael nichols (photographer)"
        ],
        "subq2": []
    },
    {
        "ID": "4332",
        "question": "Cologny and Lancy are the neighboring municipalities of which place",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/neighboringMunicipalities> <http://dbpedia.org/resource/Cologny> . ?uri <http://dbpedia.org/property/neighboringMunicipalities> <http://dbpedia.org/resource/Lancy> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "cologny and lancy are the neighboring municipalities of",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "which place cologny",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "cologny and lancy are the neighboring municipalities of [DES] which place cologny",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "cologny and lancy are the neighboring municipalities of",
            "which place cologny"
        ],
        "subq2": []
    },
    {
        "ID": "4379",
        "question": "How many artists have their works in the Sao Paolo Museum of Art",
        "sparql": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/museum> <http://dbpedia.org/resource/S\u00e3o_Paulo_Museum_of_Art> . ?x <http://dbpedia.org/property/artist> ?uri  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>}",
        "intent": "COUNT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "how many artists [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "have their museum in the sao paolo museum of art",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "how many artists [INQL] have their museum in the sao paolo museum of art [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "COUNT",
        "subq1": [
            "how many artists [ENT]"
        ],
        "subq2": [
            "have their museum in the sao paolo museum of art"
        ]
    },
    {
        "ID": "4027",
        "question": "VP-8 and VP-10 shares which command structure",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/VP-8> <http://dbpedia.org/ontology/commandStructure> ?uri. <http://dbpedia.org/resource/VP-10> <http://dbpedia.org/ontology/commandStructure> ?uri . }",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "vp-8 and shares vp-10",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "which command structure which structure",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "vp-8 and shares vp-10 [DES] which command structure which structure",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "vp-8 and shares vp-10",
            "which command structure which structure"
        ],
        "subq2": []
    },
    {
        "ID": "1604",
        "question": "What is used as money for French Southern and Antarctic Lands is also the product of the Karafarin Bank",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/French_Southern_and_Antarctic_Lands> <http://dbpedia.org/ontology/currency> ?uri. <http://dbpedia.org/resource/Karafarin_Bank> <http://dbpedia.org/ontology/product> ?uri} ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what is used as french for",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "and antarctic lands is also the product of the karafarin",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what is used as french for [DES] and antarctic lands is also the product of the karafarin",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "what is used as french for",
            "and antarctic lands is also the product of the karafarin"
        ],
        "subq2": []
    },
    {
        "ID": "1118",
        "question": "Give me the total number of membership of the organisations which have members as Azerbaijan",
        "sparql": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/membership> <http://dbpedia.org/resource/Azerbaijan> . ?x <http://dbpedia.org/property/membership> ?uri }",
        "intent": "COUNT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "give me the total number of membership organisations of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the organisations which have members as azerbaijan",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "give me the total number of membership organisations of [INQL] the organisations which have members as azerbaijan [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "COUNT",
        "subq1": [
            "give me the total number of membership organisations of [ENT]"
        ],
        "subq2": [
            "the organisations which have members as azerbaijan"
        ]
    },
    {
        "ID": "3677",
        "question": "What is the content license of MSX BASIC",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/MSX_BASIC> <http://dbpedia.org/property/license> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what is the content license of msx basic",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "license",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what is the content license of msx basic [DES] license",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "what is the content license of msx basic",
            "license"
        ],
        "subq2": []
    },
    {
        "ID": "3490",
        "question": "What are the central characters in spy kids series",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/series> <http://dbpedia.org/resource/Spy_Kids_(franchise)>  . }",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what are the characters",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "in spy kids series kids",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what are the characters [DES] in spy kids series kids",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "what are the characters",
            "in spy kids series kids"
        ],
        "subq2": []
    },
    {
        "ID": "4864",
        "question": "Which comic characters were created by Paul Dini",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/creators> <http://dbpedia.org/resource/Paul_Dini>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which comic characters",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "were created by paul dini",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which comic characters [DES] were created by paul dini",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "which comic characters",
            "were created by paul dini"
        ],
        "subq2": []
    },
    {
        "ID": "2958",
        "question": "who owns the ship Victoria",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Victoria_(ship)> <http://dbpedia.org/ontology/owner> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "who owns [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the ship victoria",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "who owns [INQL] the ship victoria [INQR]",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "who owns [ENT]"
        ],
        "subq2": [
            "the ship victoria"
        ]
    },
    {
        "ID": "1994",
        "question": "Where was the predecessor of Sevan Ross born",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Sevan_Ross> . ?x <http://dbpedia.org/property/placeOfBirth> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "where was [ENT] born",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the predecessor of sevan ross",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "where was [INQL] the predecessor of sevan ross [INQR] born",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "where was [ENT] born"
        ],
        "subq2": [
            "the predecessor of sevan ross"
        ]
    },
    {
        "ID": "4955",
        "question": "Which city council owns the Ted Williams tunnel and Leonard Memorial ridge",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ted_Williams_Tunnel> <http://dbpedia.org/property/owner> ?uri. <http://dbpedia.org/resource/Leonard_P._Zakim_Bunker_Hill_Memorial_Bridge> <http://dbpedia.org/property/owner> ?uri . }",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which city",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "owns the ted williams council and ted williams ridge leonard",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which city [DES] owns the ted williams council and ted williams ridge leonard",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "which city",
            "owns the ted williams council and ted williams ridge leonard"
        ],
        "subq2": []
    },
    {
        "ID": "4355",
        "question": "Where is the school which is the rival of Somerset Berkley Regional High",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Somerset_Berkley_Regional_High_School> <http://dbpedia.org/ontology/rival> ?x . ?x <http://dbpedia.org/ontology/region> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/School>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "where is the school which is [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the school of somerset berkley regional high",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "where is the school which is [INQL] the school of somerset berkley regional high [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "where is the school which is [ENT]"
        ],
        "subq2": [
            "the school of somerset berkley regional high"
        ]
    },
    {
        "ID": "2376",
        "question": "How many soccer manager have been in the Spain nation football team",
        "sparql": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/nationalteam> <http://dbpedia.org/resource/Spain_national_football_team>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>}",
        "intent": "COUNT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "how many soccer team",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "have been in spain nation football team",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "how many soccer team [DES] have been in spain nation football team",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "COUNT",
        "subq1": [
            "how many soccer team",
            "have been in spain nation football team"
        ],
        "subq2": []
    },
    {
        "ID": "1342",
        "question": "Name the common alma mater of the Henry Morton Dexter and Jack McGregor",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Henry_Morton_Dexter> <http://dbpedia.org/ontology/education> ?uri. <http://dbpedia.org/resource/Jack_McGregor> <http://dbpedia.org/ontology/education> ?uri . }",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "name the common alma mater of the henry morton dexter and jack mcgregor",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                }
            ]
        },
        "pred": "name the common alma mater of the henry morton dexter and jack mcgregor",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "name the common alma mater of the henry morton dexter and jack mcgregor"
        ],
        "subq2": []
    },
    {
        "ID": "320",
        "question": "What are some companies which are founded in Dallas Jurisdiction",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/governingBody> <http://dbpedia.org/resource/Dallas> . ?uri <http://dbpedia.org/ontology/foundationPlace> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what are some companies",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "which are founded in dallas",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what are some companies [DES] which are founded in dallas",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "what are some companies",
            "which are founded in dallas"
        ],
        "subq2": []
    },
    {
        "ID": "1619",
        "question": "How many bands collaborated with artists who signed up with EMI",
        "sparql": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/recordLabel> <http://dbpedia.org/resource/EMI> . ?x <http://dbpedia.org/ontology/associatedMusicalArtist> ?uri  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>}",
        "intent": "COUNT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "how many bands collaborated with [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "artists who signed up with emi artists",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "how many bands collaborated with [INQL] artists who signed up with emi artists [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "COUNT",
        "subq1": [
            "how many bands collaborated with [ENT]"
        ],
        "subq2": [
            "artists who signed up with emi artists"
        ]
    },
    {
        "ID": "3713",
        "question": "What is the purpose of New Zealand Chess Federation",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/New_Zealand_Chess_Federation> <http://dbpedia.org/property/purpose> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what is the purpose of new zealand chess federation",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "is federation",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what is the purpose of new zealand chess federation [DES] is federation",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "what is the purpose of new zealand chess federation",
            "is federation"
        ],
        "subq2": []
    },
    {
        "ID": "2060",
        "question": "How many TV shows are of the company which are of company which is a subsidiary of Big Ticket Entertainment",
        "sparql": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/subsidiary> <http://dbpedia.org/resource/Big_Ticket_Entertainment> . ?uri <http://dbpedia.org/property/company> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "intent": "COUNT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "how many tv shows are of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the company which are a company subsidiary of big ticket",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "how many tv shows are of [INQL] the company which are a company subsidiary of big ticket [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "COUNT",
        "subq1": [
            "how many tv shows are of [ENT]"
        ],
        "subq2": [
            "the company which are a company subsidiary of big ticket"
        ]
    },
    {
        "ID": "2219",
        "question": "Who operates twin Cities 400",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Twin_Cities_400> <http://dbpedia.org/ontology/operatedBy> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "who operates twin cities 400",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "who operates 400",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "who operates twin cities 400 [DES] who operates 400",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "who operates twin cities 400",
            "who operates 400"
        ],
        "subq2": []
    },
    {
        "ID": "1673",
        "question": "What is the city of the Maine School of Science and Mathematics is also the resting place of Charles A. Boutelle",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Maine_School_of_Science_and_Mathematics> <http://dbpedia.org/ontology/authority> ?uri. <http://dbpedia.org/resource/Charles_A._Boutelle> <http://dbpedia.org/property/restingplace> ?uri} ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what is the city of the maine school of science a. mathematics",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "and is also the resting place of charles boutelle",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what is the city of the maine school of science a. mathematics [DES] and is also the resting place of charles boutelle",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "what is the city of the maine school of science a. mathematics",
            "and is also the resting place of charles boutelle"
        ],
        "subq2": []
    },
    {
        "ID": "260",
        "question": "Give me a count of royalties buried in Rome",
        "sparql": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/placeOfBurial> <http://dbpedia.org/resource/Rome>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>}",
        "intent": "COUNT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "give me a count of royalties",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "buried in rome",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "give me a count of royalties [DES] buried in rome",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "COUNT",
        "subq1": [
            "give me a count of royalties",
            "buried in rome"
        ],
        "subq2": []
    },
    {
        "ID": "4417",
        "question": "In how many places are Marjas found",
        "sparql": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/title> <http://dbpedia.org/resource/Marja'> . ?x <http://dbpedia.org/ontology/location> ?uri  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Location>}",
        "intent": "COUNT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "in how many places are [ENT] found",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "marjas",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "in how many places are [INQL] marjas [INQR] found",
        "compositionality_type_golden": "composition",
        "intent_golden": "COUNT",
        "subq1": [
            "in how many places are [ENT] found"
        ],
        "subq2": [
            "marjas"
        ]
    },
    {
        "ID": "2039",
        "question": "List the soccer players whose current team has the ground Stoke-on-Trent",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/ground> <http://dbpedia.org/resource/Stoke-on-Trent> . ?uri <http://dbpedia.org/property/currentclub> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "list the ground players whose current team [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "has the soccer players",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "list the ground players whose current team [INQL] has the soccer players [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "list the ground players whose current team [ENT]"
        ],
        "subq2": [
            "has the soccer players"
        ]
    },
    {
        "ID": "901",
        "question": "Which are the countries where Pioneer Corporation has flourished",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Pioneer_Corporation> <http://dbpedia.org/property/country> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which are the countries",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "where pioneer corporation has flourished corporation",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which are the countries [DES] where pioneer corporation has flourished corporation",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "which are the countries",
            "where pioneer corporation has flourished corporation"
        ],
        "subq2": []
    },
    {
        "ID": "3744",
        "question": "Who is the president of Carl Stokes and Wyche Fowler",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Carl_Stokes> <http://dbpedia.org/property/president> ?uri. <http://dbpedia.org/resource/Wyche_Fowler> <http://dbpedia.org/ontology/president> ?uri} ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "who is the president of carl stokes and wyche fowler",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                }
            ]
        },
        "pred": "who is the president of carl stokes and wyche fowler",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "who is the president of carl stokes and wyche fowler"
        ],
        "subq2": []
    },
    {
        "ID": "2026",
        "question": "Is God Save the Queen the national anthem of United Kingdom",
        "sparql": "ASK WHERE { <http://dbpedia.org/resource/United_Kingdom> <http://dbpedia.org/property/nationalAnthem> <http://dbpedia.org/resource/God_Save_the_Queen> }",
        "intent": "ASK",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "is god save [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the queen national anthem of united kingdom",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "is god save [INQL] the queen national anthem of united kingdom [INQR]",
        "compositionality_type_golden": "simple",
        "intent_golden": "ASK",
        "subq1": [
            "is god save [ENT]"
        ],
        "subq2": [
            "the queen national anthem of united kingdom"
        ]
    },
    {
        "ID": "1917",
        "question": "List few Swedish language movies",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/language> <http://dbpedia.org/resource/Swedish_language>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "list few language movies",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "swedish language",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "list few language movies [DES] swedish language",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "list few language movies",
            "swedish language"
        ],
        "subq2": []
    },
    {
        "ID": "1828",
        "question": "Was christina crawford trained by Booker T",
        "sparql": "ASK WHERE { <http://dbpedia.org/resource/Christina_Crawford_(wrestler)> <http://dbpedia.org/property/trainer> <http://dbpedia.org/resource/Booker_T_(wrestler)> }",
        "intent": "ASK",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "christina was crawford",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "trained by booker t",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "christina was crawford [DES] trained by booker t",
        "compositionality_type_golden": "simple",
        "intent_golden": "ASK",
        "subq1": [
            "christina was crawford",
            "trained by booker t"
        ],
        "subq2": []
    },
    {
        "ID": "1573",
        "question": "What is the currency of Kerguelen Islands",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Kerguelen_Islands> <http://dbpedia.org/ontology/currency> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what is the currency of kerguelen islands",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "what is the currency of kerguelen",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what is the currency of kerguelen islands [DES] what is the currency of kerguelen",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "what is the currency of kerguelen islands",
            "what is the currency of kerguelen"
        ],
        "subq2": []
    },
    {
        "ID": "4394",
        "question": "What are the musicals whose musicians worked under Sony Music Entertainment",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/label> <http://dbpedia.org/resource/Sony_Music_Entertainment> . ?uri <http://dbpedia.org/property/music> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Musical>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what are the musicals",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "whose musicians worked under sony music entertainment",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what are the musicals [DES] whose musicians worked under sony music entertainment",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "what are the musicals",
            "whose musicians worked under sony music entertainment"
        ],
        "subq2": []
    },
    {
        "ID": "4208",
        "question": "Whose shrines are in a place governed by Justin Trudeau",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/leaderName> <http://dbpedia.org/resource/Justin_Trudeau> . ?uri <http://dbpedia.org/ontology/majorShrine> ?x  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "whose shrines are in [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "a place governed by justin trudeau",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "whose shrines are in [INQL] a place governed by justin trudeau [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "whose shrines are in [ENT]"
        ],
        "subq2": [
            "a place governed by justin trudeau"
        ]
    },
    {
        "ID": "224",
        "question": "What are the academic interests of the past members of Senser",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Senser> <http://dbpedia.org/property/pastMembers> ?x . ?x <http://dbpedia.org/property/mainInterests> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "what are the academic members of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the members of senser",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "what are the academic members of [INQL] the members of senser [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "what are the academic members of [ENT]"
        ],
        "subq2": [
            "the members of senser"
        ]
    },
    {
        "ID": "723",
        "question": "Who is the leader of Hackweiser",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Hackweiser> <http://dbpedia.org/property/leaderName> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "who is the leader of hackweiser",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "who is the leader of hackweiser",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "who is the leader of hackweiser [DES] who is the leader of hackweiser",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "who is the leader of hackweiser",
            "who is the leader of hackweiser"
        ],
        "subq2": []
    },
    {
        "ID": "4485",
        "question": "In which city is the sister station of KTXY located",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/KTXY> <http://dbpedia.org/ontology/sisterStation> ?x . ?x <http://dbpedia.org/ontology/city> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "in which city is [ENT] located",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the sister station of ktxy",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "in which city is [INQL] the sister station of ktxy [INQR] located",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "in which city is [ENT] located"
        ],
        "subq2": [
            "the sister station of ktxy"
        ]
    },
    {
        "ID": "1141",
        "question": "Where was the successor of Hank Brown born",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Hank_Brown> <http://dbpedia.org/property/successor> ?x . ?x <http://dbpedia.org/ontology/birthPlace> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "where was [ENT] born",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the successor of hank brown",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "where was [INQL] the successor of hank brown [INQR] born",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "where was [ENT] born"
        ],
        "subq2": [
            "the successor of hank brown"
        ]
    },
    {
        "ID": "2762",
        "question": "Name the constituency of Jonas Gahr where Sverre Krogh was born",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jonas_Gahr_St\u00f8re> <http://dbpedia.org/property/constituency> ?uri. <http://dbpedia.org/resource/Sverre_Krogh_Sundb\u00f8> <http://dbpedia.org/property/birthPlace> ?uri} ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "name the constituency of gahr",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "where sverre krogh was born",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "name the constituency of gahr [DES] where sverre krogh was born",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "name the constituency of gahr",
            "where sverre krogh was born"
        ],
        "subq2": []
    },
    {
        "ID": "846",
        "question": "What is the common battle fought by Stephen Urban and Ali Habib Mahmud",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Stephen_Urban> <http://dbpedia.org/ontology/battle> ?uri. <http://dbpedia.org/resource/Ali_Habib_Mahmud> <http://dbpedia.org/property/battles> ?uri} ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what is the common battle fought by stephen urban and ali habib",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                }
            ]
        },
        "pred": "what is the common battle fought by stephen urban and ali habib",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "what is the common battle fought by stephen urban and ali habib"
        ],
        "subq2": []
    },
    {
        "ID": "2551",
        "question": "What is the relegious affiliations of Katyayana",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Katyayana_(Buddhist)> <http://dbpedia.org/property/religion> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what is the affiliations",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "relegious of katyayana",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what is the affiliations [DES] relegious of katyayana",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "what is the affiliations",
            "relegious of katyayana"
        ],
        "subq2": []
    },
    {
        "ID": "2928",
        "question": "Where was the engineer born who manufactured EP R.E.P. 1",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Esnault-Pelterie_R.E.P._1> <http://dbpedia.org/property/manufacturer> ?x . ?x <http://dbpedia.org/ontology/birthPlace> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "where was the engineer born [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "who manufactured ep born",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "where was the engineer born [INQL] who manufactured ep born [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "where was the engineer born [ENT]"
        ],
        "subq2": [
            "who manufactured ep born"
        ]
    },
    {
        "ID": "117",
        "question": "who all have been a manager of english under twenty one football team",
        "sparql": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/managerclubs> <http://dbpedia.org/resource/England_national_under-21_football_team> } ",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "who all have been a manager of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "english under twenty english team",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "who all have been a manager of [INQL] english under twenty english team [INQR]",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "who all have been a manager of [ENT]"
        ],
        "subq2": [
            "english under twenty english team"
        ]
    },
    {
        "ID": "645",
        "question": "What is the military conflict whose commanders are John McEwen and Phm Vn ng",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/John_McEwen> . ?uri <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ph\u1ea1m_V\u0103n_\u0110\u1ed3ng> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what is the military conflict",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "whose commanders are mcewen ng and phm vn commanders",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what is the military conflict [DES] whose commanders are mcewen ng and phm vn commanders",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "what is the military conflict",
            "whose commanders are mcewen ng and phm vn commanders"
        ],
        "subq2": []
    },
    {
        "ID": "3",
        "question": "Which party has come in power in Mumbai North",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/constituency> <http://dbpedia.org/resource/Mumbai_North_(Lok_Sabha_constituency)> . ?x <http://dbpedia.org/ontology/party> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which party",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "has come in north in north power in north party",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which party [DES] has come in north in north power in north party",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "which party",
            "has come in north in north power in north party"
        ],
        "subq2": []
    },
    {
        "ID": "4170",
        "question": "Name the tv show with judges Randy Jackson and Jennifer Lopez",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/judges> <http://dbpedia.org/resource/Randy_Jackson> . ?uri <http://dbpedia.org/property/judges> <http://dbpedia.org/resource/Jennifer_Lopez> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "name the tv show",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "with judges randy and jennifer lopez",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "name the tv show [DES] with judges randy and jennifer lopez",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "name the tv show",
            "with judges randy and jennifer lopez"
        ],
        "subq2": []
    },
    {
        "ID": "467",
        "question": "What is the largest city of the country which hosted the 1951 Asian Games",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/1951_Asian_Games> <http://dbpedia.org/property/hostCity> ?x . ?x <http://dbpedia.org/ontology/largestCity> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "what is the largest city of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the country which hosted the 1951 asian games",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "what is the largest city of [INQL] the country which hosted the 1951 asian games [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "what is the largest city of [ENT]"
        ],
        "subq2": [
            "the country which hosted the 1951 asian games"
        ]
    },
    {
        "ID": "5",
        "question": "Which royalty was married to ptolemy XIII Theos Philopator and had mother named Cleopatra V",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/mother> <http://dbpedia.org/resource/Cleopatra_V_of_Egypt> . ?uri <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Ptolemy_XIII_Theos_Philopator>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which royalty",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "was married to ptolemy theos and had mother named xiii philopator and had mother named ptolemy theos",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which royalty [DES] was married to ptolemy theos and had mother named xiii philopator and had mother named ptolemy theos",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "which royalty",
            "was married to ptolemy theos and had mother named xiii philopator and had mother named ptolemy theos"
        ],
        "subq2": []
    },
    {
        "ID": "919",
        "question": "Whose theme music was composed by a band which collaborated with Phish",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/associatedBand> <http://dbpedia.org/resource/Phish> . ?uri <http://dbpedia.org/property/themeMusicComposer> ?x  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "whose theme music was composed by [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "a band which collaborated with phish",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "whose theme music was composed by [INQL] a band which collaborated with phish [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "whose theme music was composed by [ENT]"
        ],
        "subq2": [
            "a band which collaborated with phish"
        ]
    },
    {
        "ID": "2595",
        "question": "Is morrissey in the smiths",
        "sparql": "ASK WHERE { <http://dbpedia.org/resource/Morrissey> <http://dbpedia.org/ontology/associatedBand> <http://dbpedia.org/resource/The_Smiths> }",
        "intent": "ASK",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "is morrissey",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "in the smiths",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "is morrissey [DES] in the smiths",
        "compositionality_type_golden": "simple",
        "intent_golden": "ASK",
        "subq1": [
            "is morrissey",
            "in the smiths"
        ],
        "subq2": []
    },
    {
        "ID": "1063",
        "question": "Which administrative headquarters of the Pulau Ubin is also the resting place of the Nicole Lai",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Pulau_Ubin> <http://dbpedia.org/ontology/capital> ?uri. <http://dbpedia.org/resource/Nicole_Lai> <http://dbpedia.org/ontology/restingPlace> ?uri} ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which administrative headquarters of the pulau ubin",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "is also the resting place of the nicole lai",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which administrative headquarters of the pulau ubin [DES] is also the resting place of the nicole lai",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "which administrative headquarters of the pulau ubin",
            "is also the resting place of the nicole lai"
        ],
        "subq2": []
    },
    {
        "ID": "2590",
        "question": "Where did the beverages sold by Refriango originate",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/manufacturer> <http://dbpedia.org/resource/Refriango> . ?x <http://dbpedia.org/property/origin> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Beverage>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "where did [ENT] originate",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the beverages sold by refriango",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "where did [INQL] the beverages sold by refriango [INQR] originate",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "where did [ENT] originate"
        ],
        "subq2": [
            "the beverages sold by refriango"
        ]
    },
    {
        "ID": "242",
        "question": "Who built the stadium which was rented by Costa Rica national football team",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/tenants> <http://dbpedia.org/resource/Costa_Rica_national_football_team> . ?x <http://dbpedia.org/ontology/builder> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Stadium>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "who built [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the stadium which was rented by costa rica national football team",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "who built [INQL] the stadium which was rented by costa rica national football team [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "who built [ENT]"
        ],
        "subq2": [
            "the stadium which was rented by costa rica national football team"
        ]
    },
    {
        "ID": "1160",
        "question": "In which country does the Auckland rugby union team play",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Auckland_rugby_union_team> <http://dbpedia.org/ontology/league> ?x . ?x <http://dbpedia.org/ontology/country> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "in which country does [ENT] play",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the auckland rugby team",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "in which country does [INQL] the auckland rugby team [INQR] play",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "in which country does [ENT] play"
        ],
        "subq2": [
            "the auckland rugby team"
        ]
    },
    {
        "ID": "2870",
        "question": "What is the serving railway line of Warwick railway station, Perth",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Warwick_railway_station,_Perth> <http://dbpedia.org/ontology/servingRailwayLine> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what is the serving railway line of",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "station , perth warwick , perth",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what is the serving railway line of [DES] station , perth warwick , perth",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "what is the serving railway line of",
            "station , perth warwick , perth"
        ],
        "subq2": []
    },
    {
        "ID": "3735",
        "question": "What is the radio show created by Timoteo Jeffries, about",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/creator> <http://dbpedia.org/resource/Timoteo_Jeffries> . ?x <http://dbpedia.org/property/format> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RadioProgram>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "what is [ENT] about",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the radio show created by timoteo <UNK>",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "what is [INQL] the radio show created by timoteo <UNK> [INQR] about",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "what is [ENT] about"
        ],
        "subq2": [
            "the radio show created by timoteo <UNK>"
        ]
    },
    {
        "ID": "2397",
        "question": "Where are all the protected areas near Bend, Oregon",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/nearestCity> <http://dbpedia.org/resource/Bend,_Oregon> . ?x <http://dbpedia.org/ontology/location> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ProtectedArea>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "where are all the areas near [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the protected near bend , oregon",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "where are all the areas near [INQL] the protected near bend , oregon [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "where are all the areas near [ENT]"
        ],
        "subq2": [
            "the protected near bend , oregon"
        ]
    },
    {
        "ID": "3517",
        "question": "Was True Grit a novel of the western genre",
        "sparql": "ASK WHERE { <http://dbpedia.org/resource/True_Grit_(novel)> <http://dbpedia.org/ontology/literaryGenre> <http://dbpedia.org/resource/Western_(genre)> }",
        "intent": "ASK",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "was true a novel genre of the western genre",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "western genre",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "was true a novel genre of the western genre [DES] western genre",
        "compositionality_type_golden": "simple",
        "intent_golden": "ASK",
        "subq1": [
            "was true a novel genre of the western genre",
            "western genre"
        ],
        "subq2": []
    },
    {
        "ID": "3421",
        "question": "Which notable series of Russell T Davies is also the series of Short Trips: A day in the life",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Short_Trips:_A_Day_in_the_Life> <http://dbpedia.org/ontology/series> ?uri. <http://dbpedia.org/resource/Russell_T_Davies> <http://dbpedia.org/ontology/notableWork> ?uri} ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which series of russell t",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "is also the notable day of series short trips : a life in the life series",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which series of russell t [DES] is also the notable day of series short trips : a life in the life series",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "which series of russell t",
            "is also the notable day of series short trips : a life in the life series"
        ],
        "subq2": []
    },
    {
        "ID": "2563",
        "question": "Which battles were fought under the president when Chung Won Shik was the prime minister",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/primeminister> <http://dbpedia.org/resource/Chung_Won-shik> . ?x <http://dbpedia.org/property/battles> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "which battles were fought under [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the president when chung shik was won the prime minister shik",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "which battles were fought under [INQL] the president when chung shik was won the prime minister shik [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "which battles were fought under [ENT]"
        ],
        "subq2": [
            "the president when chung shik was won the prime minister shik"
        ]
    },
    {
        "ID": "1605",
        "question": "Which office holder's resting place is in Palo Alto, California and was succeeded by Adrian A. Basora",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/restingPlace> <http://dbpedia.org/resource/Palo_Alto,_California> . ?uri <http://dbpedia.org/property/successor> <http://dbpedia.org/resource/Adrian_A._Basora>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which office holder 's resting place is in palo alto , california",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "and was succeeded by palo a. basora",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which office holder 's resting place is in palo alto , california [DES] and was succeeded by palo a. basora",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "which office holder 's resting place is in palo alto , california",
            "and was succeeded by palo a. basora"
        ],
        "subq2": []
    },
    {
        "ID": "4828",
        "question": "which movies have been published by Cinema International Corporation",
        "sparql": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/distributor> <http://dbpedia.org/resource/Cinema_International_Corporation> } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which movies",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "have been published by cinema international corporation",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which movies [DES] have been published by cinema international corporation",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "which movies",
            "have been published by cinema international corporation"
        ],
        "subq2": []
    },
    {
        "ID": "2324",
        "question": "What is the total number of other destinations of the airlines whose one of the destinations is Mediterranean Sea",
        "sparql": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/destinations> <http://dbpedia.org/resource/Mediterranean_Sea> . ?x <http://dbpedia.org/property/destinations> ?uri }",
        "intent": "COUNT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "what is the total number of other destinations of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the airlines whose one of the destinations is mediterranean sea",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "what is the total number of other destinations of [INQL] the airlines whose one of the destinations is mediterranean sea [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "COUNT",
        "subq1": [
            "what is the total number of other destinations of [ENT]"
        ],
        "subq2": [
            "the airlines whose one of the destinations is mediterranean sea"
        ]
    },
    {
        "ID": "2709",
        "question": "Count the total number of academic discipline of the journals whose one of the academic discipline is Neuroimaging",
        "sparql": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/academicDiscipline> <http://dbpedia.org/resource/Neuroimaging> . ?x <http://dbpedia.org/ontology/academicDiscipline> ?uri }",
        "intent": "COUNT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "count the total number of academic discipline of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the journals whose one of the academic discipline is neuroimaging",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "count the total number of academic discipline of [INQL] the journals whose one of the academic discipline is neuroimaging [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "COUNT",
        "subq1": [
            "count the total number of academic discipline of [ENT]"
        ],
        "subq2": [
            "the journals whose one of the academic discipline is neuroimaging"
        ]
    },
    {
        "ID": "4398",
        "question": "List the award which have been won by both Charles LeMaire and Nick Park",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Charles_LeMaire> <http://dbpedia.org/ontology/award> ?uri. <http://dbpedia.org/resource/Nick_Park> <http://dbpedia.org/ontology/award> ?uri . }",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "list the award",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "which have been won by both nick lemaire and charles lemaire",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "list the award [DES] which have been won by both nick lemaire and charles lemaire",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "list the award",
            "which have been won by both nick lemaire and charles lemaire"
        ],
        "subq2": []
    },
    {
        "ID": "1312",
        "question": "What are some cities which have a Ferris wheel",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/buildingType> <http://dbpedia.org/resource/Ferris_wheel> . ?x <http://dbpedia.org/property/locationTown> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "what are some cities wheel [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "which have a ferris wheel",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "what are some cities wheel [INQL] which have a ferris wheel [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "what are some cities wheel [ENT]"
        ],
        "subq2": [
            "which have a ferris wheel"
        ]
    },
    {
        "ID": "3448",
        "question": "Name the movie who has screenplay by Akiva Goldsman and is edited by Mark Stevens",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/screenplay> <http://dbpedia.org/resource/Akiva_Goldsman> . ?uri <http://dbpedia.org/property/editing> <http://dbpedia.org/resource/Mark_Stevens_(film_editor)>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "name the movie who has screenplay by akiva mark stevens",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "and goldsman is edited by mark stevens",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "name the movie who has screenplay by akiva mark stevens [DES] and goldsman is edited by mark stevens",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "name the movie who has screenplay by akiva mark stevens",
            "and goldsman is edited by mark stevens"
        ],
        "subq2": []
    },
    {
        "ID": "3812",
        "question": "Count the movies in Swedish language",
        "sparql": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/language> <http://dbpedia.org/resource/Swedish_language>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
        "intent": "COUNT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "count the movies",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "in swedish language",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "count the movies [DES] in swedish language",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "COUNT",
        "subq1": [
            "count the movies",
            "in swedish language"
        ],
        "subq2": []
    },
    {
        "ID": "4655",
        "question": "Give me the total number of television shows whose theme music composer is Julian Gingell and created by Simon Fuller",
        "sparql": " SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/themeMusicComposer> <http://dbpedia.org/resource/Julian_Gingell> . ?uri <http://dbpedia.org/property/creator> <http://dbpedia.org/resource/Simon_Fuller> } ",
        "intent": "COUNT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "give me the total number of television shows whose theme music composer is julian gingell",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "and created by simon fuller",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "give me the total number of television shows whose theme music composer is julian gingell [DES] and created by simon fuller",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "COUNT",
        "subq1": [
            "give me the total number of television shows whose theme music composer is julian gingell",
            "and created by simon fuller"
        ],
        "subq2": []
    },
    {
        "ID": "2362",
        "question": "Which cloud platform of Google cloud connect also provides services to 21Vianet",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/21Vianet> <http://dbpedia.org/property/services> ?uri. <http://dbpedia.org/resource/Google_Cloud_Connect> <http://dbpedia.org/ontology/computingPlatform> ?uri} ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which cloud platform of cloud cloud",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "also provides connect platform to 21vianet services",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which cloud platform of cloud cloud [DES] also provides connect platform to 21vianet services",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "which cloud platform of cloud cloud",
            "also provides connect platform to 21vianet services"
        ],
        "subq2": []
    },
    {
        "ID": "1975",
        "question": "Name the office holder whose constituency is Haight-Ashbury",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/constituency> <http://dbpedia.org/resource/Haight-Ashbury>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "name the office holder",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "whose constituency is haight-ashbury",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "name the office holder [DES] whose constituency is haight-ashbury",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "name the office holder",
            "whose constituency is haight-ashbury"
        ],
        "subq2": []
    },
    {
        "ID": "3514",
        "question": "Name the location of Lekh Castle which is also the location of SamurAbsheron channel",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lekh_Castle> <http://dbpedia.org/ontology/location> ?uri. <http://dbpedia.org/resource/Samur\u2013Absheron_channel> <http://dbpedia.org/ontology/sourceCountry> ?uri} ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "name the location of lekh castle",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "which is also the location of samurabsheron",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "name the location of lekh castle [DES] which is also the location of samurabsheron",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "name the location of lekh castle",
            "which is also the location of samurabsheron"
        ],
        "subq2": []
    },
    {
        "ID": "1761",
        "question": "Count the number of families of the Animal kingdom",
        "sparql": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/kingdom> <http://dbpedia.org/resource/Animal> . ?x <http://dbpedia.org/ontology/family> ?uri  . }",
        "intent": "COUNT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "count the number of families of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the animal kingdom",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "count the number of families of [INQL] the animal kingdom [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "COUNT",
        "subq1": [
            "count the number of families of [ENT]"
        ],
        "subq2": [
            "the animal kingdom"
        ]
    },
    {
        "ID": "2739",
        "question": "What is the political party of the person succeeded by A.K. Singh",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/successor> <http://dbpedia.org/resource/A._K._Singh> . ?x <http://dbpedia.org/property/party> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "what is the political party of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the person succeeded by a.k. singh",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "what is the political party of [INQL] the person succeeded by a.k. singh [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "what is the political party of [ENT]"
        ],
        "subq2": [
            "the person succeeded by a.k. singh"
        ]
    },
    {
        "ID": "4844",
        "question": "Who is the head coach of the teams in Middlesbrough FC",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/club> <http://dbpedia.org/resource/Middlesbrough_F.C.> . ?x <http://dbpedia.org/ontology/manager> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "who is the head coach of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the teams in middlesbrough fc",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "who is the head coach of [INQL] the teams in middlesbrough fc [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "who is the head coach of [ENT]"
        ],
        "subq2": [
            "the teams in middlesbrough fc"
        ]
    },
    {
        "ID": "2472",
        "question": "To which uni. did sidney c patridge and cyril hume both once went",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Sidney_Catlin_Partridge> <http://dbpedia.org/property/education> ?uri. <http://dbpedia.org/resource/Cyril_Hume> <http://dbpedia.org/property/education> ?uri . }",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "to which uni.",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "did sidney patridge and once cyril hume went both c",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "to which uni. [DES] did sidney patridge and once cyril hume went both c",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "to which uni.",
            "did sidney patridge and once cyril hume went both c"
        ],
        "subq2": []
    },
    {
        "ID": "4007",
        "question": "People in the royal Thai army follow which religion",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/branch> <http://dbpedia.org/resource/Royal_Thai_Army> . ?x <http://dbpedia.org/ontology/religion> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "[ENT] follow which religion",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "people in the royal thai army",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "[INQL] people in the royal thai army [INQR] follow which religion",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "[ENT] follow which religion"
        ],
        "subq2": [
            "people in the royal thai army"
        ]
    },
    {
        "ID": "1493",
        "question": "Was Lucrezia Tornabuoni the mother of Lorenzo de' Medici",
        "sparql": "ASK WHERE { <http://dbpedia.org/resource/Lorenzo_de'_Medici> <http://dbpedia.org/property/mother> <http://dbpedia.org/resource/Lucrezia_Tornabuoni> }",
        "intent": "ASK",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "was lucrezia tornabuoni the mother of lorenzo ``",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "was lucrezia medici de medici",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "was lucrezia tornabuoni the mother of lorenzo `` [DES] was lucrezia medici de medici",
        "compositionality_type_golden": "simple",
        "intent_golden": "ASK",
        "subq1": [
            "was lucrezia tornabuoni the mother of lorenzo ``",
            "was lucrezia medici de medici"
        ],
        "subq2": []
    },
    {
        "ID": "4206",
        "question": "Who are the producers of the movies which has music by Gary Chang",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/music> <http://dbpedia.org/resource/Gary_Chang> . ?x <http://dbpedia.org/property/producer> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "who are the producers of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the movies which has music by gary chang",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "who are the producers of [INQL] the movies which has music by gary chang [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "who are the producers of [ENT]"
        ],
        "subq2": [
            "the movies which has music by gary chang"
        ]
    },
    {
        "ID": "2158",
        "question": "Where was Special 26 recorded",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Special_26> <http://dbpedia.org/property/recorded> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "where was [ENT] recorded",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "special recorded",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "where was [INQL] special recorded [INQR] recorded",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "where was [ENT] recorded"
        ],
        "subq2": [
            "special recorded"
        ]
    },
    {
        "ID": "1169",
        "question": "How many movies music composers are associated with Demis Roussos",
        "sparql": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/associatedActs> <http://dbpedia.org/resource/Demis_Roussos> . ?uri <http://dbpedia.org/ontology/musicComposer> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
        "intent": "COUNT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "how many movies composers [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "are associated with demis roussos",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "how many movies composers [INQL] are associated with demis roussos [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "COUNT",
        "subq1": [
            "how many movies composers [ENT]"
        ],
        "subq2": [
            "are associated with demis roussos"
        ]
    },
    {
        "ID": "4516",
        "question": "To which nation did David Animle Hanses owe his allegiance",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/David_Animle_Hansen> <http://dbpedia.org/property/allegiance> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "to which nation",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "did david animle hanses his allegiance",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "to which nation [DES] did david animle hanses his allegiance",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "to which nation",
            "did david animle hanses his allegiance"
        ],
        "subq2": []
    },
    {
        "ID": "232",
        "question": "What is the alma mater of the actors of The God Who Wasn't There",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_God_Who_Wasn't_There> <http://dbpedia.org/property/starring> ?x . ?x <http://dbpedia.org/property/almaMater> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "what is the alma mater of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the actors who there wasn't there",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "what is the alma mater of [INQL] the actors who there wasn't there [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "what is the alma mater of [ENT]"
        ],
        "subq2": [
            "the actors who there wasn't there"
        ]
    },
    {
        "ID": "66",
        "question": "List some musicians associated with famous guitar players",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/notableInstruments> <http://dbpedia.org/resource/Guitar> . ?x <http://dbpedia.org/ontology/associatedMusicalArtist> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "list some famous musicians associated with [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "famous players associated with guitar",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "list some famous musicians associated with [INQL] famous players associated with guitar [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "list some famous musicians associated with [ENT]"
        ],
        "subq2": [
            "famous players associated with guitar"
        ]
    },
    {
        "ID": "1603",
        "question": "What are the airlines whose hub airport is operated by the Los Angeles World Airports",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/operator> <http://dbpedia.org/resource/Los_Angeles_World_Airports> . ?uri <http://dbpedia.org/ontology/hubAirport> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Airline>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what are the airlines",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "whose hub airport is operated by the los angeles world airport",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what are the airlines [DES] whose hub airport is operated by the los angeles world airport",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "what are the airlines",
            "whose hub airport is operated by the los angeles world airport"
        ],
        "subq2": []
    },
    {
        "ID": "3283",
        "question": "Which company's cars are assembled in Colombia",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/assembly> <http://dbpedia.org/resource/Colombia> . ?x <http://dbpedia.org/property/parentCompany> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Automobile>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "which company 's cars [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "are assembled in colombia",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "which company 's cars [INQL] are assembled in colombia [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "which company 's cars [ENT]"
        ],
        "subq2": [
            "are assembled in colombia"
        ]
    },
    {
        "ID": "3596",
        "question": "Who directed The Haunted House",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Haunted_House_(1929_film)> <http://dbpedia.org/ontology/director> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "who directed the haunted house",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "who directed the haunted house",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "who directed the haunted house [DES] who directed the haunted house",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "who directed the haunted house",
            "who directed the haunted house"
        ],
        "subq2": []
    },
    {
        "ID": "125",
        "question": "Count all the different purposes followed by the different NGOs",
        "sparql": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/type> <http://dbpedia.org/resource/Non-governmental_organization> . ?x <http://dbpedia.org/property/purpose> ?uri  . }",
        "intent": "COUNT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "count all the different purposes followed by [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the different ngos",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "count all the different purposes followed by [INQL] the different ngos [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "COUNT",
        "subq1": [
            "count all the different purposes followed by [ENT]"
        ],
        "subq2": [
            "the different ngos"
        ]
    },
    {
        "ID": "1296",
        "question": "The players born in Bellaire, Ohio have played for which team",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Bellaire,_Ohio> . ?x <http://dbpedia.org/ontology/team> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "[ENT] have played for which team",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the players born in bellaire",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "[INQL] the players born in bellaire [INQR] have played for which team",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "[ENT] have played for which team"
        ],
        "subq2": [
            "the players born in bellaire"
        ]
    },
    {
        "ID": "1976",
        "question": "What is the common ideology followed by Katyayana and Palang Dharma Party",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Katyayana_(Buddhist)> <http://dbpedia.org/property/religion> ?uri. <http://dbpedia.org/resource/Palang_Dharma_Party> <http://dbpedia.org/ontology/ideology> ?uri} ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what is the common ideology by palang dharma party and followed by katyayana",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                }
            ]
        },
        "pred": "what is the common ideology by palang dharma party and followed by katyayana",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "what is the common ideology by palang dharma party and followed by katyayana"
        ],
        "subq2": []
    },
    {
        "ID": "4517",
        "question": "Count the tenants of MasterCard Centre",
        "sparql": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/MasterCard_Centre> <http://dbpedia.org/property/tenants> ?uri  . }",
        "intent": "COUNT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "count the tenants of mastercard centre",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "centre",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "count the tenants of mastercard centre [DES] centre",
        "compositionality_type_golden": "simple",
        "intent_golden": "COUNT",
        "subq1": [
            "count the tenants of mastercard centre",
            "centre"
        ],
        "subq2": []
    },
    {
        "ID": "4481",
        "question": "who are starring in the movies written by Mark Sandrich",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/writer> <http://dbpedia.org/resource/Mark_Sandrich> . ?x <http://dbpedia.org/ontology/starring> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "who are starring in [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the movies written by mark sandrich",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "who are starring in [INQL] the movies written by mark sandrich [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "who are starring in [ENT]"
        ],
        "subq2": [
            "the movies written by mark sandrich"
        ]
    },
    {
        "ID": "2075",
        "question": "Count the number of religions followed by BJP members",
        "sparql": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/party> <http://dbpedia.org/resource/Bharatiya_Janata_Party> . ?x <http://dbpedia.org/ontology/religion> ?uri  . }",
        "intent": "COUNT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "count the number of religions followed by [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "bjp members",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "count the number of religions followed by [INQL] bjp members [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "COUNT",
        "subq1": [
            "count the number of religions followed by [ENT]"
        ],
        "subq2": [
            "bjp members"
        ]
    },
    {
        "ID": "3086",
        "question": "What is the mascot of the rival school of Sullivan Central High",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Sullivan_Central_High_School> <http://dbpedia.org/property/rival> ?x . ?x <http://dbpedia.org/property/mascot> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "what is the mascot of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the school of rival high school of sullivan high school",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "what is the mascot of [INQL] the school of rival high school of sullivan high school [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "what is the mascot of [ENT]"
        ],
        "subq2": [
            "the school of rival high school of sullivan high school"
        ]
    },
    {
        "ID": "4345",
        "question": "What award has been awarded to both Dion Beebe and Charles LeMaire",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Dion_Beebe> <http://dbpedia.org/ontology/award> ?uri. <http://dbpedia.org/resource/Charles_LeMaire> <http://dbpedia.org/property/awards> ?uri} ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what award",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "has been awarded to both beebe and charles lemaire",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what award [DES] has been awarded to both beebe and charles lemaire",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "what award",
            "has been awarded to both beebe and charles lemaire"
        ],
        "subq2": []
    },
    {
        "ID": "3345",
        "question": "What is the birth name of Putri Raemawasti",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Putri_Raemawasti> <http://dbpedia.org/property/birthName> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what is the name of birth",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "putri raemawasti",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what is the name of birth [DES] putri raemawasti",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "what is the name of birth",
            "putri raemawasti"
        ],
        "subq2": []
    },
    {
        "ID": "4464",
        "question": "What is the party of the politicians whose children is Sanjay Gandhi",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/children> <http://dbpedia.org/resource/Sanjay_Gandhi> . ?x <http://dbpedia.org/ontology/party> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "what is the party of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the politicians whose children is sanjay gandhi",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "what is the party of [INQL] the politicians whose children is sanjay gandhi [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "what is the party of [ENT]"
        ],
        "subq2": [
            "the politicians whose children is sanjay gandhi"
        ]
    },
    {
        "ID": "2797",
        "question": "Name the tenants of MAsterCard center wich is also the draft team of Antoine Bibeau",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/MasterCard_Centre> <http://dbpedia.org/property/tenants> ?uri. <http://dbpedia.org/resource/Antoine_Bibeau> <http://dbpedia.org/property/draftTeam> ?uri} ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "name the tenants of mastercard wich center",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "is also the draft team of antoine bibeau",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "name the tenants of mastercard wich center [DES] is also the draft team of antoine bibeau",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "name the tenants of mastercard wich center",
            "is also the draft team of antoine bibeau"
        ],
        "subq2": []
    },
    {
        "ID": "918",
        "question": "What is the number of occupation of the people who died in tampa bay, florida",
        "sparql": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Tampa,_Florida> . ?x <http://dbpedia.org/ontology/occupation> ?uri  . }",
        "intent": "COUNT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "what is the number of occupation of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the people who died in tampa , florida",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "what is the number of occupation of [INQL] the people who died in tampa , florida [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "COUNT",
        "subq1": [
            "what is the number of occupation of [ENT]"
        ],
        "subq2": [
            "the people who died in tampa , florida"
        ]
    },
    {
        "ID": "1646",
        "question": "Who was the United States president who also served as a governor of Indiana Territory",
        "sparql": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/branch> <http://dbpedia.org/resource/Indiana_Territory> } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "who was the united states",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "who also served as a governor of indiana territory",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "who was the united states [DES] who also served as a governor of indiana territory",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "who was the united states",
            "who also served as a governor of indiana territory"
        ],
        "subq2": []
    },
    {
        "ID": "364",
        "question": "List the people who were born in Gelnhausen and graduated from Pepperdine University",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Gelnhausen> . ?uri <http://dbpedia.org/property/education> <http://dbpedia.org/resource/Pepperdine_University>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "list the people",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "who were born in gelnhausen and graduated from pepperdine",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "list the people [DES] who were born in gelnhausen and graduated from pepperdine",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "list the people",
            "who were born in gelnhausen and graduated from pepperdine"
        ],
        "subq2": []
    },
    {
        "ID": "3287",
        "question": "Musical artists who are associated with Ren & Angela were born where",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/associatedActs> <http://dbpedia.org/resource/Ren\u00e9_&_Angela> . ?x <http://dbpedia.org/property/birthPlace> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "who musical artists",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "who are associated with angela ren & where",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "who musical artists [DES] who are associated with angela ren & where",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "who musical artists",
            "who are associated with angela ren & where"
        ],
        "subq2": []
    },
    {
        "ID": "2125",
        "question": "What religion do the Wickramabahu Centeral College and Neungin High School both follow",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Wickramabahu_Central_College_(National_School)> <http://dbpedia.org/property/religiousAffiliation> ?uri. <http://dbpedia.org/resource/Neungin_High_School> <http://dbpedia.org/property/religiousAffiliation> ?uri . }",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what religion",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "do the centeral college and wickramabahu neungin high school both",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what religion [DES] do the centeral college and wickramabahu neungin high school both",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "what religion",
            "do the centeral college and wickramabahu neungin high school both"
        ],
        "subq2": []
    },
    {
        "ID": "4123",
        "question": "Who designed the language integrated query",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Language_Integrated_Query> <http://dbpedia.org/ontology/designer> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "who designed [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the language integrated query",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "who designed [INQL] the language integrated query [INQR]",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "who designed [ENT]"
        ],
        "subq2": [
            "the language integrated query"
        ]
    },
    {
        "ID": "525",
        "question": "Name the debut team of Dan Otero",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Dan_Otero> <http://dbpedia.org/ontology/debutTeam> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "name the debut team of dan otero",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "name the debut team",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "name the debut team of dan otero [DES] name the debut team",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "name the debut team of dan otero",
            "name the debut team"
        ],
        "subq2": []
    },
    {
        "ID": "55",
        "question": "Who started at the pole position in both 1997 canadian grand prix and the 94 spanish one",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/1997_Canadian_Grand_Prix> <http://dbpedia.org/property/poleDriver> ?uri. <http://dbpedia.org/resource/1994_Spanish_Grand_Prix> <http://dbpedia.org/property/poleDriver> ?uri . }",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "who started at the pole position",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "in both 1997 canadian grand prix and the 94 spanish grand prix one",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "who started at the pole position [DES] in both 1997 canadian grand prix and the 94 spanish grand prix one",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "who started at the pole position",
            "in both 1997 canadian grand prix and the 94 spanish grand prix one"
        ],
        "subq2": []
    },
    {
        "ID": "638",
        "question": "Who founded the Not on our Watch NGO",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Not_on_Our_Watch_(organization)> <http://dbpedia.org/ontology/foundedBy> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "who founded [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the on watch ngo",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "who founded [INQL] the on watch ngo [INQR]",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "who founded [ENT]"
        ],
        "subq2": [
            "the on watch ngo"
        ]
    },
    {
        "ID": "302",
        "question": "What is the name of the artist which worked on the subsequent work of Ella Loves Cole",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ella_Loves_Cole> <http://dbpedia.org/ontology/subsequentWork> ?x . ?x <http://dbpedia.org/property/artist> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "what is the name of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the artist which worked on the subsequent work of ella loves",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "what is the name of [INQL] the artist which worked on the subsequent work of ella loves [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "what is the name of [ENT]"
        ],
        "subq2": [
            "the artist which worked on the subsequent work of ella loves"
        ]
    },
    {
        "ID": "2766",
        "question": "Which company owns Sony bank",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Sony_Bank> <http://dbpedia.org/ontology/owningCompany> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which company",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "owns sony bank",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which company [DES] owns sony bank",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "which company",
            "owns sony bank"
        ],
        "subq2": []
    },
    {
        "ID": "1276",
        "question": "What state was Cyrus Mann born in, and has the famous Downriver",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Downriver> <http://dbpedia.org/ontology/state> ?uri. <http://dbpedia.org/resource/Cyrus_Mann> <http://dbpedia.org/property/birthPlace> ?uri . }",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what state",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "was born mann in <UNK> and has the famous downriver",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what state [DES] was born mann in <UNK> and has the famous downriver",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "what state",
            "was born mann in <UNK> and has the famous downriver"
        ],
        "subq2": []
    },
    {
        "ID": "2055",
        "question": "Who is a religious figure titled superior general",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/title> <http://dbpedia.org/resource/Superior_general>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Religious>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "who is a religious figure titled superior",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "who is a religious figure titled superior figure",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "who is a religious figure titled superior [DES] who is a religious figure titled superior figure",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "who is a religious figure titled superior",
            "who is a religious figure titled superior figure"
        ],
        "subq2": []
    },
    {
        "ID": "3644",
        "question": "List the employments of people who died in Tampa, Florida",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Tampa,_Florida> . ?x <http://dbpedia.org/ontology/occupation> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "list the employments of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "people who died in tampa , florida",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "list the employments of [INQL] people who died in tampa , florida [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "list the employments of [ENT]"
        ],
        "subq2": [
            "people who died in tampa , florida"
        ]
    },
    {
        "ID": "4143",
        "question": "What are some famous veterinary physicians known for",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/field> <http://dbpedia.org/resource/Veterinary_physician> . ?x <http://dbpedia.org/property/knownFor> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "what are [ENT] known for",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "some famous veterinary physicians",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "what are [INQL] some famous veterinary physicians [INQR] known for",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "what are [ENT] known for"
        ],
        "subq2": [
            "some famous veterinary physicians"
        ]
    },
    {
        "ID": "2878",
        "question": "List the movies edited by Julian Doyle in which music was composed by Geoffrey Brugon",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/music> <http://dbpedia.org/resource/Geoffrey_Burgon> . ?uri <http://dbpedia.org/property/editing> <http://dbpedia.org/resource/Julian_Doyle_(filmmaker)>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "list the movies edited by julian brugon doyle",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "which music was composed by geoffrey brugon",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "list the movies edited by julian brugon doyle [DES] which music was composed by geoffrey brugon",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "list the movies edited by julian brugon doyle",
            "which music was composed by geoffrey brugon"
        ],
        "subq2": []
    },
    {
        "ID": "4202",
        "question": "Name the children of the person who is the star of The Weathered Underground",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Weathered_Underground> <http://dbpedia.org/ontology/starring> ?x . ?x <http://dbpedia.org/property/children> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "name the children of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the person who is the star of the weathered underground",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "name the children of [INQL] the person who is the star of the weathered underground [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "name the children of [ENT]"
        ],
        "subq2": [
            "the person who is the star of the weathered underground"
        ]
    },
    {
        "ID": "2286",
        "question": "Which owner of Chelsea F.C also owns Evraz",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Evraz> <http://dbpedia.org/ontology/owningCompany> ?uri. <http://dbpedia.org/resource/Chelsea_F.C.> <http://dbpedia.org/property/owner> ?uri} ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which owner of chelsea",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "also owns evraz f.c",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which owner of chelsea [DES] also owns evraz f.c",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "which owner of chelsea",
            "also owns evraz f.c"
        ],
        "subq2": []
    },
    {
        "ID": "2261",
        "question": "Did Umkhonto we Sizwe had Nelson Mandela as a commander",
        "sparql": "ASK WHERE { <http://dbpedia.org/resource/Umkhonto_we_Sizwe> <http://dbpedia.org/property/notableCommanders> <http://dbpedia.org/resource/Nelson_Mandela> }",
        "intent": "ASK",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "did we sizwe",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "had nelson mandela as a commander",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "did we sizwe [DES] had nelson mandela as a commander",
        "compositionality_type_golden": "simple",
        "intent_golden": "ASK",
        "subq1": [
            "did we sizwe",
            "had nelson mandela as a commander"
        ],
        "subq2": []
    },
    {
        "ID": "2296",
        "question": "Name the office holder with associate as Marcus Calpurnius Bibulus and has a kid named Augustus",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/associate> <http://dbpedia.org/resource/Marcus_Calpurnius_Bibulus> . ?uri <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Augustus>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "name the office holder with holder as marcus calpurnius bibulus",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "and has a associate named kid bibulus",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "name the office holder with holder as marcus calpurnius bibulus [DES] and has a associate named kid bibulus",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "name the office holder with holder as marcus calpurnius bibulus",
            "and has a associate named kid bibulus"
        ],
        "subq2": []
    },
    {
        "ID": "1753",
        "question": "What are the movies whose screenplay is done by Eric Roth",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/screenplay> <http://dbpedia.org/resource/Eric_Roth>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what are the movies",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "whose screenplay is done by eric roth",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what are the movies [DES] whose screenplay is done by eric roth",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "what are the movies",
            "whose screenplay is done by eric roth"
        ],
        "subq2": []
    },
    {
        "ID": "1968",
        "question": "What is the total number of writers whose singles are recorded in Miami",
        "sparql": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/recordedIn> <http://dbpedia.org/resource/Miami> . ?x <http://dbpedia.org/property/writer> ?uri  . }",
        "intent": "COUNT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "what is the total number of writers whose [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "singles whose singles are recorded in miami",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "what is the total number of writers whose [INQL] singles whose singles are recorded in miami [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "COUNT",
        "subq1": [
            "what is the total number of writers whose [ENT]"
        ],
        "subq2": [
            "singles whose singles are recorded in miami"
        ]
    },
    {
        "ID": "4351",
        "question": "What religions are followed by members of the societies whose architectural influences can be seen on the Sanggar Agung",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Sanggar_Agung> <http://dbpedia.org/property/architecturalStyle> ?x . ?x <http://dbpedia.org/ontology/religion> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "what religions are followed by [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the societies whose members can be seen on the architectural influences",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "what religions are followed by [INQL] the societies whose members can be seen on the architectural influences [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "what religions are followed by [ENT]"
        ],
        "subq2": [
            "the societies whose members can be seen on the architectural influences"
        ]
    },
    {
        "ID": "3117",
        "question": "Who is the producer of album which has the song Money",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Money_(Pink_Floyd_song)> <http://dbpedia.org/property/album> ?x . ?x <http://dbpedia.org/property/producer> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "who is the producer of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "album which has the song money",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "who is the producer of [INQL] album which has the song money [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "who is the producer of [ENT]"
        ],
        "subq2": [
            "album which has the song money"
        ]
    },
    {
        "ID": "2393",
        "question": "List the Sci-fi TV shows with theme music given by Ron Grainer",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/genre> <http://dbpedia.org/resource/Science_fiction> . ?uri <http://dbpedia.org/property/themeMusicComposer> <http://dbpedia.org/resource/Ron_Grainer>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "list the tv shows",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "with theme music given by ron grainer",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "list the tv shows [DES] with theme music given by ron grainer",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "list the tv shows",
            "with theme music given by ron grainer"
        ],
        "subq2": []
    },
    {
        "ID": "523",
        "question": "What is the company to which Fusajiro Yamauchi proprietor to",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/foundedBy> <http://dbpedia.org/resource/Fusajiro_Yamauchi>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "what is the company to [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "which fusajiro yamauchi proprietor",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "what is the company to [INQL] which fusajiro yamauchi proprietor [INQR]",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "what is the company to [ENT]"
        ],
        "subq2": [
            "which fusajiro yamauchi proprietor"
        ]
    },
    {
        "ID": "3900",
        "question": "Who is the writer of mark twain Tonight",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Mark_Twain_Tonight> <http://dbpedia.org/property/writer> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "who is the writer of mark twain tonight",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                }
            ]
        },
        "pred": "who is the writer of mark twain tonight",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "who is the writer of mark twain tonight"
        ],
        "subq2": []
    },
    {
        "ID": "3122",
        "question": "How many members are there in the European Go Federation",
        "sparql": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/European_Go_Federation> <http://dbpedia.org/property/membership> ?uri  . }",
        "intent": "COUNT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "how many members",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "are there in the european go federation",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "how many members [DES] are there in the european go federation",
        "compositionality_type_golden": "simple",
        "intent_golden": "COUNT",
        "subq1": [
            "how many members",
            "are there in the european go federation"
        ],
        "subq2": []
    },
    {
        "ID": "4156",
        "question": "Was Kevin Rudd the PM of Julia Gillard",
        "sparql": "ASK WHERE { <http://dbpedia.org/resource/Julia_Gillard> <http://dbpedia.org/ontology/primeMinister> <http://dbpedia.org/resource/Kevin_Rudd> }",
        "intent": "ASK",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "was rudd pm of kevin julia gillard",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "the kevin julia pm",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "was rudd pm of kevin julia gillard [DES] the kevin julia pm",
        "compositionality_type_golden": "simple",
        "intent_golden": "ASK",
        "subq1": [
            "was rudd pm of kevin julia gillard",
            "the kevin julia pm"
        ],
        "subq2": []
    },
    {
        "ID": "1969",
        "question": "Daniel L D Granger and Job Durfee have based their political career in which US state",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Daniel_L._D._Granger> <http://dbpedia.org/property/state> ?uri. <http://dbpedia.org/resource/Job_Durfee> <http://dbpedia.org/property/state> ?uri . }",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "l d granger and daniel career based their career in which us state",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                }
            ]
        },
        "pred": "l d granger and daniel career based their career in which us state",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "l d granger and daniel career based their career in which us state"
        ],
        "subq2": []
    },
    {
        "ID": "671",
        "question": "What is the mascot of the handball teams in the Turkish Handball Super League",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/league> <http://dbpedia.org/resource/Turkish_Handball_Super_League> . ?x <http://dbpedia.org/property/mascot> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/HandballTeam>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "what is the mascot of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the teams in the turkish handball super league",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "what is the mascot of [INQL] the teams in the turkish handball super league [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "what is the mascot of [ENT]"
        ],
        "subq2": [
            "the teams in the turkish handball super league"
        ]
    },
    {
        "ID": "4188",
        "question": "What city was recorded in Live in detroit which is also the official residence of ken Holland",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Live_in_Detroit,_MI> <http://dbpedia.org/ontology/recordedIn> ?uri. <http://dbpedia.org/resource/Ken_Holland> <http://dbpedia.org/ontology/residence> ?uri} ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what city was live in detroit",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "which is also the official residence of ken holland",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what city was live in detroit [DES] which is also the official residence of ken holland",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "what city was live in detroit",
            "which is also the official residence of ken holland"
        ],
        "subq2": []
    },
    {
        "ID": "666",
        "question": "Marika Gombitov makes songs in which languages",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/artist> <http://dbpedia.org/resource/Marika_Gombitov\u00e1> . ?x <http://dbpedia.org/property/language> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "marika gombitov in",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "which languages makes in which languages makes",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "marika gombitov in [DES] which languages makes in which languages makes",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "marika gombitov in",
            "which languages makes in which languages makes"
        ],
        "subq2": []
    },
    {
        "ID": "4338",
        "question": "What are some musical artists associated with the ones signed up with EMI",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/recordLabel> <http://dbpedia.org/resource/EMI> . ?x <http://dbpedia.org/ontology/associatedMusicalArtist> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "what are some musical artists associated with [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the ones signed up with emi",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "what are some musical artists associated with [INQL] the ones signed up with emi [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "what are some musical artists associated with [ENT]"
        ],
        "subq2": [
            "the ones signed up with emi"
        ]
    },
    {
        "ID": "1887",
        "question": "Name the river which flows through the closest city of Mount Raimer",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Mount_Raimer> <http://dbpedia.org/property/nearestCity> ?x . ?x <http://dbpedia.org/ontology/river> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "name the river which flows through the city of mount raimer",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "which closest raimer",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "name the river which flows through the city of mount raimer [DES] which closest raimer",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "name the river which flows through the city of mount raimer",
            "which closest raimer"
        ],
        "subq2": []
    },
    {
        "ID": "3266",
        "question": "Name the scientist whose supervisor also supervised Mary Ainsworth",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/doctoralStudents> <http://dbpedia.org/resource/Mary_Ainsworth> . ?uri <http://dbpedia.org/property/doctoralAdvisor> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "name the scientist",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "whose supervisor also supervised mary ainsworth",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "name the scientist [DES] whose supervisor also supervised mary ainsworth",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "name the scientist",
            "whose supervisor also supervised mary ainsworth"
        ],
        "subq2": []
    },
    {
        "ID": "280",
        "question": "What are some relatives of armymen who died in Germany",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/placeOfDeath> <http://dbpedia.org/resource/Germany> . ?x <http://dbpedia.org/ontology/relation> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryPerson>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "what are some relatives of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "armymen who died in germany",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "what are some relatives of [INQL] armymen who died in germany [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "what are some relatives of [ENT]"
        ],
        "subq2": [
            "armymen who died in germany"
        ]
    },
    {
        "ID": "1719",
        "question": "Deion sanders and Hinkey haines debuted their career with which common team",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Hinkey_Haines> <http://dbpedia.org/property/debutteam> ?uri. <http://dbpedia.org/resource/Deion_Sanders> <http://dbpedia.org/property/debutteam> ?uri . }",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "sanders and hinkey haines debuted their career with which common team debuted with their career team sanders",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                }
            ]
        },
        "pred": "sanders and hinkey haines debuted their career with which common team debuted with their career team sanders",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "sanders and hinkey haines debuted their career with which common team debuted with their career team sanders"
        ],
        "subq2": []
    },
    {
        "ID": "2947",
        "question": "Which garrison of East Indies Station is also the route end of Mumbai Vadodara Express",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Mumbai_Vadodara_Expressway> <http://dbpedia.org/ontology/routeEnd> ?uri. <http://dbpedia.org/resource/East_Indies_Station> <http://dbpedia.org/ontology/garrison> ?uri} ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which route end of east vadodara indies",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "is also the garrison of mumbai vadodara express",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which route end of east vadodara indies [DES] is also the garrison of mumbai vadodara express",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "which route end of east vadodara indies",
            "is also the garrison of mumbai vadodara express"
        ],
        "subq2": []
    },
    {
        "ID": "899",
        "question": "To which political party does Virendra Kataria belongs",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Virendra_Kataria> <http://dbpedia.org/property/party> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "to which political party does [ENT] belongs",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "virendra kataria",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "to which political party does [INQL] virendra kataria [INQR] belongs",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "to which political party does [ENT] belongs"
        ],
        "subq2": [
            "virendra kataria"
        ]
    },
    {
        "ID": "4850",
        "question": "Copley Medal has been awarded to which scientists",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Copley_Medal>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "copley has been awarded medal to",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "which scientists",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "copley has been awarded medal to [DES] which scientists",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "copley has been awarded medal to",
            "which scientists"
        ],
        "subq2": []
    },
    {
        "ID": "760",
        "question": "What is the total number of awards whose presenter's headquarters is Beverly Hills, California",
        "sparql": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/headquarters> <http://dbpedia.org/resource/Beverly_Hills,_California> . ?uri <http://dbpedia.org/ontology/presenter> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>}",
        "intent": "COUNT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what is the total number of presenter 's headquarters is beverly hills , california",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                }
            ]
        },
        "pred": "what is the total number of presenter 's headquarters is beverly hills , california",
        "compositionality_type_golden": "composition",
        "intent_golden": "COUNT",
        "subq1": [
            "what is the total number of presenter 's headquarters is beverly hills , california"
        ],
        "subq2": []
    },
    {
        "ID": "1906",
        "question": "Who is the narrator of The Price of Beauty",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Price_of_Beauty> <http://dbpedia.org/ontology/narrator> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "who is the narrator of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the narrator of the beauty price beauty",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "who is the narrator of [INQL] the narrator of the beauty price beauty [INQR]",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "who is the narrator of [ENT]"
        ],
        "subq2": [
            "the narrator of the beauty price beauty"
        ]
    },
    {
        "ID": "4042",
        "question": "Does Dan River flow into the Jordan Valley",
        "sparql": "ASK WHERE { <http://dbpedia.org/resource/Jordan_River> <http://dbpedia.org/ontology/leftTributary> <http://dbpedia.org/resource/Dan_River_(Middle_East)> }",
        "intent": "ASK",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "does dan valley into the dan jordan flow",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "does jordan flow into",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "does dan valley into the dan jordan flow [DES] does jordan flow into",
        "compositionality_type_golden": "simple",
        "intent_golden": "ASK",
        "subq1": [
            "does dan valley into the dan jordan flow",
            "does jordan flow into"
        ],
        "subq2": []
    },
    {
        "ID": "3823",
        "question": "Who is the producer of the device which is the operating system of Now TV",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Now_TV_(UK)> <http://dbpedia.org/ontology/operatingSystem> ?x . ?x <http://dbpedia.org/ontology/manufacturer> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "who is the producer of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the device which is the operating system of now",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "who is the producer of [INQL] the device which is the operating system of now [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "who is the producer of [ENT]"
        ],
        "subq2": [
            "the device which is the operating system of now"
        ]
    },
    {
        "ID": "4138",
        "question": "How many artists have collaborated with famous guitar players",
        "sparql": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/notableInstruments> <http://dbpedia.org/resource/Guitar> . ?x <http://dbpedia.org/ontology/associatedMusicalArtist> ?uri  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>}",
        "intent": "COUNT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "how many artists",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "have collaborated with famous players",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "how many artists [DES] have collaborated with famous players",
        "compositionality_type_golden": "composition",
        "intent_golden": "COUNT",
        "subq1": [
            "how many artists",
            "have collaborated with famous players"
        ],
        "subq2": []
    },
    {
        "ID": "3818",
        "question": "How many politicians live in India",
        "sparql": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/India>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
        "intent": "COUNT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "how many politicians",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "live in india",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "how many politicians [DES] live in india",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "COUNT",
        "subq1": [
            "how many politicians",
            "live in india"
        ],
        "subq2": []
    },
    {
        "ID": "4300",
        "question": "What is the base currency of the country which operates the Marion Dufresne",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Marion_Dufresne_(1995)> <http://dbpedia.org/ontology/operator> ?x . ?x <http://dbpedia.org/ontology/currency> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "what is the base currency of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the country which operates the marion dufresne",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "what is the base currency of [INQL] the country which operates the marion dufresne [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "what is the base currency of [ENT]"
        ],
        "subq2": [
            "the country which operates the marion dufresne"
        ]
    },
    {
        "ID": "2593",
        "question": "What is the region served by the governor of Stephen L.R. McNichols",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Stephen_L.R._McNichols> <http://dbpedia.org/property/governor> ?x . ?x <http://dbpedia.org/ontology/region> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "what is the region served by [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the region served by stephen l.r. mcnichols",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "what is the region served by [INQL] the region served by stephen l.r. mcnichols [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "what is the region served by [ENT]"
        ],
        "subq2": [
            "the region served by stephen l.r. mcnichols"
        ]
    },
    {
        "ID": "4164",
        "question": "Who operates Liverpool Playhouse",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Liverpool_Playhouse> <http://dbpedia.org/ontology/operatedBy> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "who operates liverpool playhouse",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                }
            ]
        },
        "pred": "who operates liverpool playhouse",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "who operates liverpool playhouse"
        ],
        "subq2": []
    },
    {
        "ID": "3031",
        "question": "Who has composed songs produced by Terry Melcher",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/producer> <http://dbpedia.org/resource/Terry_Melcher> . ?x <http://dbpedia.org/ontology/composer> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "who has composed [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "songs produced by terry melcher",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "who has composed [INQL] songs produced by terry melcher [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "who has composed [ENT]"
        ],
        "subq2": [
            "songs produced by terry melcher"
        ]
    },
    {
        "ID": "3579",
        "question": "To which series does Lost special belong to",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Lost_Special> <http://dbpedia.org/property/series> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "to which series",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "does lost special belong to",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "to which series [DES] does lost special belong to",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "to which series",
            "does lost special belong to"
        ],
        "subq2": []
    },
    {
        "ID": "2832",
        "question": "How many albums did the maker of The Band produce",
        "sparql": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/artist> <http://dbpedia.org/resource/The_Band> . ?x <http://dbpedia.org/ontology/subsequentWork> ?uri  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>}",
        "intent": "COUNT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "how many albums did [ENT] produce",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the maker of the band",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "how many albums did [INQL] the maker of the band [INQR] produce",
        "compositionality_type_golden": "composition",
        "intent_golden": "COUNT",
        "subq1": [
            "how many albums did [ENT] produce"
        ],
        "subq2": [
            "the maker of the band"
        ]
    },
    {
        "ID": "3472",
        "question": "List few musical artist whose notable instruments are Ludwig Drums and Remo",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/notableInstruments> <http://dbpedia.org/resource/Ludwig_Drums> . ?uri <http://dbpedia.org/ontology/instrument> <http://dbpedia.org/resource/Remo>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "list few musical artist",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "whose notable artist are instruments drums and ludwig remo",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "list few musical artist [DES] whose notable artist are instruments drums and ludwig remo",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "list few musical artist",
            "whose notable artist are instruments drums and ludwig remo"
        ],
        "subq2": []
    },
    {
        "ID": "137",
        "question": "How many rivers start in an English speaking country",
        "sparql": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/officialLanguage> <http://dbpedia.org/resource/English_language> . ?uri <http://dbpedia.org/ontology/sourceCountry> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
        "intent": "COUNT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "how many rivers start in [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "an english speaking country",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "how many rivers start in [INQL] an english speaking country [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "COUNT",
        "subq1": [
            "how many rivers start in [ENT]"
        ],
        "subq2": [
            "an english speaking country"
        ]
    },
    {
        "ID": "2180",
        "question": "For a position in which institution were both Jack Ryan and Robert sarvis both appointed",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jack_Ryan_(politician)> <http://dbpedia.org/ontology/nominee> ?uri. <http://dbpedia.org/resource/Robert_Sarvis> <http://dbpedia.org/ontology/nominee> ?uri . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "for a position",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "in which were both jack ryan institution and appointed robert sarvis both appointed",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "for a position [DES] in which were both jack ryan institution and appointed robert sarvis both appointed",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "for a position",
            "in which were both jack ryan institution and appointed robert sarvis both appointed"
        ],
        "subq2": []
    },
    {
        "ID": "2128",
        "question": "Where Everybody knows you is the theme album of which show",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Where_Everybody_Knows_Your_Name> <http://dbpedia.org/ontology/album> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "where everybody knows you is [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the album of which show everybody knows you",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "where everybody knows you is [INQL] the album of which show everybody knows you [INQR]",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "where everybody knows you is [ENT]"
        ],
        "subq2": [
            "the album of which show everybody knows you"
        ]
    },
    {
        "ID": "3177",
        "question": "Food in which countries has shallot in it",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/ingredient> <http://dbpedia.org/resource/Shallot> . ?x <http://dbpedia.org/ontology/country> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Food>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "in which countries",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "has shallot in it food in it food",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "in which countries [DES] has shallot in it food in it food",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "in which countries",
            "has shallot in it food in it food"
        ],
        "subq2": []
    },
    {
        "ID": "4367",
        "question": "Which rivers have source origins asnorth western, Zambia",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/sourceRegion> <http://dbpedia.org/resource/North-Western_Province,_Zambia>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which rivers",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "have origins western asnorth , zambia",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which rivers [DES] have origins western asnorth , zambia",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "which rivers",
            "have origins western asnorth , zambia"
        ],
        "subq2": []
    },
    {
        "ID": "4261",
        "question": "Organization holding stocks of Galician and German wikipedias",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Galician_Wikipedia> <http://dbpedia.org/property/owner> ?uri. <http://dbpedia.org/resource/German_Wikipedia> <http://dbpedia.org/ontology/owner> ?uri . }",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "holding organization",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "stocks of galician and holding wikipedias",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "holding organization [DES] stocks of galician and holding wikipedias",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "holding organization",
            "stocks of galician and holding wikipedias"
        ],
        "subq2": []
    },
    {
        "ID": "4344",
        "question": "Name the river with Readin, Brekshire in its path and mouth place is Sothend-on-sea",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/city> <http://dbpedia.org/resource/Reading,_Berkshire> . ?uri <http://dbpedia.org/ontology/mouthPlace> <http://dbpedia.org/resource/Southend-on-Sea>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "name the river with readin , brekshire in its mouth place is sothend-on-sea",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "and mouth place is sothend-on-sea",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "name the river with readin , brekshire in its mouth place is sothend-on-sea [DES] and mouth place is sothend-on-sea",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "name the river with readin , brekshire in its mouth place is sothend-on-sea",
            "and mouth place is sothend-on-sea"
        ],
        "subq2": []
    },
    {
        "ID": "1331",
        "question": "Alexander Magleby, a rugby player is alma mater to which university",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Alexander_Magleby> <http://dbpedia.org/property/university> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "alexander <UNK>",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "a alma mater to which university magleby , a alma mater to which university",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "alexander <UNK> [DES] a alma mater to which university magleby , a alma mater to which university",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "alexander <UNK>",
            "a alma mater to which university magleby , a alma mater to which university"
        ],
        "subq2": []
    },
    {
        "ID": "2017",
        "question": "Is Amharic the official language of Ethiopia",
        "sparql": "ASK WHERE { <http://dbpedia.org/resource/Ethiopia> <http://dbpedia.org/ontology/officialLanguage> <http://dbpedia.org/resource/Amharic> }",
        "intent": "ASK",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "is the official language of ethiopia",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "is the official language",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "is the official language of ethiopia [DES] is the official language",
        "compositionality_type_golden": "simple",
        "intent_golden": "ASK",
        "subq1": [
            "is the official language of ethiopia",
            "is the official language"
        ],
        "subq2": []
    },
    {
        "ID": "2482",
        "question": "What sport played at Islamic azad uni employes Craig Van Tilbury",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Craig_Van_Tilbury> <http://dbpedia.org/ontology/occupation> ?uri. <http://dbpedia.org/resource/Islamic_Azad_University_Central_Tehran_Branch> <http://dbpedia.org/ontology/sport> ?uri} ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what sport played at islamic azad uni",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "employes craig van tilbury",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what sport played at islamic azad uni [DES] employes craig van tilbury",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "what sport played at islamic azad uni",
            "employes craig van tilbury"
        ],
        "subq2": []
    },
    {
        "ID": "1358",
        "question": "List the products of the company which published Tweenies: Game Time",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Tweenies:_Game_Time> <http://dbpedia.org/property/publisher> ?x . ?x <http://dbpedia.org/property/products> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "list the products of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the company which published tweenies game : the products",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "list the products of [INQL] the company which published tweenies game : the products [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "list the products of [ENT]"
        ],
        "subq2": [
            "the company which published tweenies game : the products"
        ]
    },
    {
        "ID": "1329",
        "question": "List the agencies located someplace lead by Alex Chalk",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/leaderName> <http://dbpedia.org/resource/Alex_Chalk> . ?uri <http://dbpedia.org/ontology/location> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "list the agencies located by [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the agencies located by alex chalk",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "list the agencies located by [INQL] the agencies located by alex chalk [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "list the agencies located by [ENT]"
        ],
        "subq2": [
            "the agencies located by alex chalk"
        ]
    },
    {
        "ID": "2150",
        "question": "What religion are the characters of Absolutely Fabulous from",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/series> <http://dbpedia.org/resource/Absolutely_Fabulous> . ?x <http://dbpedia.org/ontology/religion> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "what religion are [ENT] from",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the characters of absolutely fabulous",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "what religion are [INQL] the characters of absolutely fabulous [INQR] from",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "what religion are [ENT] from"
        ],
        "subq2": [
            "the characters of absolutely fabulous"
        ]
    },
    {
        "ID": "2122",
        "question": "What are the movies whose music composer uses a Hammond organ",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/instrument> <http://dbpedia.org/resource/Hammond_organ> . ?uri <http://dbpedia.org/ontology/musicComposer> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what are the movies",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "whose music composer uses a hammond organ",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what are the movies [DES] whose music composer uses a hammond organ",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "what are the movies",
            "whose music composer uses a hammond organ"
        ],
        "subq2": []
    },
    {
        "ID": "3981",
        "question": "Was Love Hurts in Short Cut Draw Blood",
        "sparql": "ASK WHERE { <http://dbpedia.org/resource/Love_Hurts> <http://dbpedia.org/property/album> <http://dbpedia.org/resource/Short_Cut_Draw_Blood> }",
        "intent": "ASK",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "was hurts",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "in short cut draw love draw",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "was hurts [DES] in short cut draw love draw",
        "compositionality_type_golden": "simple",
        "intent_golden": "ASK",
        "subq1": [
            "was hurts",
            "in short cut draw love draw"
        ],
        "subq2": []
    },
    {
        "ID": "1252",
        "question": "Janaka Thissakuttiarachchi follows what religion, which once employed Atisa Srijnana too",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Janaka_Thissakuttiarachchi> <http://dbpedia.org/property/religion> ?uri. <http://dbpedia.org/resource/Ati\u015ba> <http://dbpedia.org/ontology/occupation> ?uri . }",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "janaka thissakuttiarachchi religion <UNK>",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "which once employed too atisa srijnana religion too",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "janaka thissakuttiarachchi religion <UNK> [DES] which once employed too atisa srijnana religion too",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "janaka thissakuttiarachchi religion <UNK>",
            "which once employed too atisa srijnana religion too"
        ],
        "subq2": []
    },
    {
        "ID": "3278",
        "question": "Which birthpalce of Svetlana Gounkina is also the largest city of Union State",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Union_State> <http://dbpedia.org/property/largestCity> ?uri. <http://dbpedia.org/resource/Svetlana_Gounkina> <http://dbpedia.org/ontology/birthPlace> ?uri} ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which birthpalce of svetlana gounkina",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "is also the largest city of union state",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which birthpalce of svetlana gounkina [DES] is also the largest city of union state",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "which birthpalce of svetlana gounkina",
            "is also the largest city of union state"
        ],
        "subq2": []
    },
    {
        "ID": "3374",
        "question": "Name the TV show with artist Christopher Franke and cast member Jason Carter",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/artist> <http://dbpedia.org/resource/Christopher_Franke> . ?uri <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Jason_Carter_(actor)>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "name the tv show with artist",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "and christopher franke and jason carter",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "name the tv show with artist [DES] and christopher franke and jason carter",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "name the tv show with artist",
            "and christopher franke and jason carter"
        ],
        "subq2": []
    },
    {
        "ID": "2814",
        "question": "Which artist married to Lee Krasner",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Lee_Krasner>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which artist",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "married to krasner lee",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which artist [DES] married to krasner lee",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "which artist",
            "married to krasner lee"
        ],
        "subq2": []
    },
    {
        "ID": "1848",
        "question": "What teams did the ex teamplayers of lighthouse boy club start their career with",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/youthclubs> <http://dbpedia.org/resource/Lighthouse_Boys_Club> . ?x <http://dbpedia.org/property/debutteam> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "what teams did [ENT] start their career with",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the teams of ex teamplayers",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "what teams did [INQL] the teams of ex teamplayers [INQR] start their career with",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "what teams did [ENT] start their career with"
        ],
        "subq2": [
            "the teams of ex teamplayers"
        ]
    },
    {
        "ID": "3037",
        "question": "Where was the deadbody discovered of one of the alumni of General Educational Development",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/education> <http://dbpedia.org/resource/General_Educational_Development> . ?x <http://dbpedia.org/property/bodyDiscovered> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "where was the deadbody one of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the educational alumni of the educational development of general",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "where was the deadbody one of [INQL] the educational alumni of the educational development of general [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "where was the deadbody one of [ENT]"
        ],
        "subq2": [
            "the educational alumni of the educational development of general"
        ]
    },
    {
        "ID": "388",
        "question": "Who designed the bridge in Oddamavadi",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/locatedInArea> <http://dbpedia.org/resource/Oddamavadi> . ?x <http://dbpedia.org/property/designer> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bridge>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "who designed [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the bridge in oddamavadi",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "who designed [INQL] the bridge in oddamavadi [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "who designed [ENT]"
        ],
        "subq2": [
            "the bridge in oddamavadi"
        ]
    },
    {
        "ID": "235",
        "question": "What is the leader name of the settlements whose governing body is Municipal council",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/governingBody> <http://dbpedia.org/resource/Municipal_council> . ?x <http://dbpedia.org/ontology/leaderName> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "what is the leader name of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the settlements whose governing body is municipal",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "what is the leader name of [INQL] the settlements whose governing body is municipal [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "what is the leader name of [ENT]"
        ],
        "subq2": [
            "the settlements whose governing body is municipal"
        ]
    },
    {
        "ID": "1077",
        "question": "Name the co-founder of the record labels which have one of the founder as Chris DuBois",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/founder> <http://dbpedia.org/resource/Chris_DuBois> . ?x <http://dbpedia.org/property/founder> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RecordLabel>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "name the record labels of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the founder which have one of the chris as dubois",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "name the record labels of [INQL] the founder which have one of the chris as dubois [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "name the record labels of [ENT]"
        ],
        "subq2": [
            "the founder which have one of the chris as dubois"
        ]
    },
    {
        "ID": "1984",
        "question": "List the companies operating in Australia",
        "sparql": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/regionServed> <http://dbpedia.org/resource/Australia> } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "list the companies",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "in australia",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "list the companies [DES] in australia",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "list the companies",
            "in australia"
        ],
        "subq2": []
    },
    {
        "ID": "4363",
        "question": "In which countries is coconut used as a food ingredient",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/ingredient> <http://dbpedia.org/resource/Coconut> . ?x <http://dbpedia.org/property/country> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Food>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "in which countries [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "is coconut used as a food ingredient",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "in which countries [INQL] is coconut used as a food ingredient [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "in which countries [ENT]"
        ],
        "subq2": [
            "is coconut used as a food ingredient"
        ]
    },
    {
        "ID": "3962",
        "question": "How many people have worked for teams chaired by Patricia Amorim",
        "sparql": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/chairman> <http://dbpedia.org/resource/Patr\u00edcia_Amorim> . ?x <http://dbpedia.org/property/name> ?uri  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
        "intent": "COUNT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "how many people have worked for [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "teams chaired by patricia amorim",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "how many people have worked for [INQL] teams chaired by patricia amorim [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "COUNT",
        "subq1": [
            "how many people have worked for [ENT]"
        ],
        "subq2": [
            "teams chaired by patricia amorim"
        ]
    },
    {
        "ID": "770",
        "question": "How many kinds of games can be played on the Amiga",
        "sparql": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/computingPlatform> <http://dbpedia.org/resource/Amiga> . ?x <http://dbpedia.org/property/genre> ?uri  . }",
        "intent": "COUNT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "how many kinds of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "games can be played on the amiga",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "how many kinds of [INQL] games can be played on the amiga [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "COUNT",
        "subq1": [
            "how many kinds of [ENT]"
        ],
        "subq2": [
            "games can be played on the amiga"
        ]
    },
    {
        "ID": "2165",
        "question": "Is the book The Buddha and his Dhamma a book about Buddhism",
        "sparql": "ASK WHERE { <http://dbpedia.org/resource/The_Buddha_and_His_Dhamma> <http://dbpedia.org/ontology/literaryGenre> <http://dbpedia.org/resource/Buddhism> }",
        "intent": "ASK",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "is the book",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "and his book dhamma a book about buddhism",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "is the book [DES] and his book dhamma a book about buddhism",
        "compositionality_type_golden": "simple",
        "intent_golden": "ASK",
        "subq1": [
            "is the book",
            "and his book dhamma a book about buddhism"
        ],
        "subq2": []
    },
    {
        "ID": "673",
        "question": "How many relatives are there of people fought in the Battle of the Bulge",
        "sparql": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/battles> <http://dbpedia.org/resource/Battle_of_the_Bulge> . ?x <http://dbpedia.org/ontology/relation> ?uri  . }",
        "intent": "COUNT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "how many relatives are there of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "people fought in the battle of the bulge",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "how many relatives are there of [INQL] people fought in the battle of the bulge [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "COUNT",
        "subq1": [
            "how many relatives are there of [ENT]"
        ],
        "subq2": [
            "people fought in the battle of the bulge"
        ]
    },
    {
        "ID": "249",
        "question": "How many genres of games can I find on the commodore CDTV",
        "sparql": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/computingPlatform> <http://dbpedia.org/resource/Commodore_CDTV> . ?x <http://dbpedia.org/ontology/genre> ?uri  . }",
        "intent": "COUNT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "how many genres of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "games can i find on the commodore cdtv",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "how many genres of [INQL] games can i find on the commodore cdtv [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "COUNT",
        "subq1": [
            "how many genres of [ENT]"
        ],
        "subq2": [
            "games can i find on the commodore cdtv"
        ]
    },
    {
        "ID": "1574",
        "question": "Does Jevan Snead play as Quarterback",
        "sparql": "ASK WHERE { <http://dbpedia.org/resource/Jevan_Snead> <http://dbpedia.org/property/position> <http://dbpedia.org/resource/Quarterback> }",
        "intent": "ASK",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "does jevan snead play as quarterback",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "does jevan snead play",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "does jevan snead play as quarterback [DES] does jevan snead play",
        "compositionality_type_golden": "simple",
        "intent_golden": "ASK",
        "subq1": [
            "does jevan snead play as quarterback",
            "does jevan snead play"
        ],
        "subq2": []
    },
    {
        "ID": "3419",
        "question": "Give me the sitcoms where Eliza Schneider and Isaac Hayes gave voice",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/voices> <http://dbpedia.org/resource/Eliza_Schneider> . ?uri <http://dbpedia.org/property/voices> <http://dbpedia.org/resource/Isaac_Hayes> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "give me the sitcoms",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "where isaac hayes and voice",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "give me the sitcoms [DES] where isaac hayes and voice",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "give me the sitcoms",
            "where isaac hayes and voice"
        ],
        "subq2": []
    },
    {
        "ID": "2081",
        "question": "Directors of which movies are buried in Ronda",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Ronda> . ?uri <http://dbpedia.org/property/director> ?x  . }",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "directors of which movies",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "are buried in ronda",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "directors of which movies [DES] are buried in ronda",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "directors of which movies",
            "are buried in ronda"
        ],
        "subq2": []
    },
    {
        "ID": "1823",
        "question": "List the debut team of the baseball player who born in Houston",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/birthPlace> <http://dbpedia.org/resource/Houston> . ?x <http://dbpedia.org/ontology/debutTeam> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BaseballPlayer>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "list the debut team of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the baseball player who born in houston",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "list the debut team of [INQL] the baseball player who born in houston [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "list the debut team of [ENT]"
        ],
        "subq2": [
            "the baseball player who born in houston"
        ]
    },
    {
        "ID": "716",
        "question": "Does Cascade Airways have a hub in Seattle",
        "sparql": "ASK WHERE { <http://dbpedia.org/resource/Cascade_Airways> <http://dbpedia.org/ontology/hubAirport> <http://dbpedia.org/resource/Seattle> }",
        "intent": "ASK",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "does cascade airways",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "have a hub in seattle cascade airways",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "does cascade airways [DES] have a hub in seattle cascade airways",
        "compositionality_type_golden": "simple",
        "intent_golden": "ASK",
        "subq1": [
            "does cascade airways",
            "have a hub in seattle cascade airways"
        ],
        "subq2": []
    },
    {
        "ID": "4668",
        "question": "Who edited British Gazette",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/British_Gazette> <http://dbpedia.org/property/editor> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "who edited british gazette",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "edited british gazette",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "who edited british gazette [DES] edited british gazette",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "who edited british gazette",
            "edited british gazette"
        ],
        "subq2": []
    },
    {
        "ID": "2048",
        "question": "List the things for which the relatives of Mrunalini Kunte are known",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Mrunalini_Kunte> <http://dbpedia.org/ontology/relative> ?x . ?x <http://dbpedia.org/property/knownFor> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "list the things for which [ENT] are known",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the relatives of mrunalini kunte",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "list the things for which [INQL] the relatives of mrunalini kunte [INQR] are known",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "list the things for which [ENT] are known"
        ],
        "subq2": [
            "the relatives of mrunalini kunte"
        ]
    },
    {
        "ID": "4178",
        "question": "What acts and artists are associated with people who have worked with Divertis",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/associatedActs> <http://dbpedia.org/resource/Divertis> . ?x <http://dbpedia.org/ontology/associatedMusicalArtist> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what acts artists",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "and people who have worked with divertis",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what acts artists [DES] and people who have worked with divertis",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "what acts artists",
            "and people who have worked with divertis"
        ],
        "subq2": []
    },
    {
        "ID": "2724",
        "question": "What are the notableworks of Russell T Davies",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Russell_T_Davies> <http://dbpedia.org/property/notableworks> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what are the notableworks of russell t davies",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "davies",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what are the notableworks of russell t davies [DES] davies",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "what are the notableworks of russell t davies",
            "davies"
        ],
        "subq2": []
    },
    {
        "ID": "4521",
        "question": "Which company has developed games whose music is done by Gerard Marino",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/composer> <http://dbpedia.org/resource/Gerard_Marino> . ?x <http://dbpedia.org/ontology/developer> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VideoGame>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "which company has developed [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "games whose music is done by gerard marino",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "which company has developed [INQL] games whose music is done by gerard marino [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "which company has developed [ENT]"
        ],
        "subq2": [
            "games whose music is done by gerard marino"
        ]
    },
    {
        "ID": "1460",
        "question": "Who all have developed softwares for Unix Like OSes",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/operatingSystem> <http://dbpedia.org/resource/Unix-like> . ?x <http://dbpedia.org/ontology/developer> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "who all have developed [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "softwares for unix like oses",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "who all have developed [INQL] softwares for unix like oses [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "who all have developed [ENT]"
        ],
        "subq2": [
            "softwares for unix like oses"
        ]
    },
    {
        "ID": "1668",
        "question": "What are some party leaders of the parties which have had a seat in Berlin",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Berlin> . ?x <http://dbpedia.org/ontology/leader> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "what are some party seat of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the parties which have had a berlin in berlin",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "what are some party seat of [INQL] the parties which have had a berlin in berlin [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "what are some party seat of [ENT]"
        ],
        "subq2": [
            "the parties which have had a berlin in berlin"
        ]
    },
    {
        "ID": "2756",
        "question": "Was James maker in the band Noko",
        "sparql": "ASK WHERE { <http://dbpedia.org/resource/Noko> <http://dbpedia.org/ontology/associatedBand> <http://dbpedia.org/resource/James_Maker> }",
        "intent": "ASK",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "was james maker",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "in the band noko",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "was james maker [DES] in the band noko",
        "compositionality_type_golden": "simple",
        "intent_golden": "ASK",
        "subq1": [
            "was james maker",
            "in the band noko"
        ],
        "subq2": []
    },
    {
        "ID": "2000",
        "question": "Was Nick Jonas a member of the Jonas Brothers",
        "sparql": "ASK WHERE { <http://dbpedia.org/resource/Jonas_Brothers> <http://dbpedia.org/property/pastMembers> <http://dbpedia.org/resource/Nick_Jonas> }",
        "intent": "ASK",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "was nick jonas a member of the brothers",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "the brothers member",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "was nick jonas a member of the brothers [DES] the brothers member",
        "compositionality_type_golden": "simple",
        "intent_golden": "ASK",
        "subq1": [
            "was nick jonas a member of the brothers",
            "the brothers member"
        ],
        "subq2": []
    },
    {
        "ID": "404",
        "question": "Which tenant of New Sanno Hotel is the military branch of the Gary Holder-Winfield",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/New_Sanno_Hotel> <http://dbpedia.org/ontology/tenant> ?uri. <http://dbpedia.org/resource/Gary_Holder-Winfield> <http://dbpedia.org/ontology/militaryBranch> ?uri} ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which tenant of new sanno hotel",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "is the military branch of the gary holder-winfield hotel",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which tenant of new sanno hotel [DES] is the military branch of the gary holder-winfield hotel",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "which tenant of new sanno hotel",
            "is the military branch of the gary holder-winfield hotel"
        ],
        "subq2": []
    },
    {
        "ID": "384",
        "question": "List the director of The Adventures of mimi",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Adventures_of_Mimi_(video)> <http://dbpedia.org/property/director> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "list the adventures of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the adventures of mimi",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "list the adventures of [INQL] the adventures of mimi [INQR]",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "list the adventures of [ENT]"
        ],
        "subq2": [
            "the adventures of mimi"
        ]
    },
    {
        "ID": "4535",
        "question": "List sports managers who managed Middlesbrough F.C. and England national under-21 football team",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/managerClub> <http://dbpedia.org/resource/Middlesbrough_F.C.> . ?uri <http://dbpedia.org/property/managerclubs> <http://dbpedia.org/resource/England_national_under-21_football_team>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "list sports managers",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "who managed middlesbrough f.c. and under-21 national football team under-21",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "list sports managers [DES] who managed middlesbrough f.c. and under-21 national football team under-21",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "list sports managers",
            "who managed middlesbrough f.c. and under-21 national football team under-21"
        ],
        "subq2": []
    },
    {
        "ID": "2152",
        "question": "Name all the soccer players who played in a under 18 club for La Liga",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/league> <http://dbpedia.org/resource/La_Liga> . ?uri <http://dbpedia.org/property/youthclubs> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "name all the players who played in 18 [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "a soccer club under la liga",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "name all the players who played in 18 [INQL] a soccer club under la liga [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "name all the players who played in 18 [ENT]"
        ],
        "subq2": [
            "a soccer club under la liga"
        ]
    },
    {
        "ID": "1633",
        "question": "Which key perosn of the Elders is also the president of united World College",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Elders_(organization)> <http://dbpedia.org/property/keyPeople> ?uri. <http://dbpedia.org/resource/United_World_Colleges> <http://dbpedia.org/ontology/president> ?uri} ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which key perosn of the elders",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "is also the president of united world college",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which key perosn of the elders [DES] is also the president of united world college",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "which key perosn of the elders",
            "is also the president of united world college"
        ],
        "subq2": []
    },
    {
        "ID": "4586",
        "question": "Who are the players whose current clubs have Ferran Soriano as chairman",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/chairman> <http://dbpedia.org/resource/Ferran_Soriano> . ?uri <http://dbpedia.org/property/currentclub> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "who are the players whose current clubs [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "have ferran soriano as chairman",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "who are the players whose current clubs [INQL] have ferran soriano as chairman [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "who are the players whose current clubs [ENT]"
        ],
        "subq2": [
            "have ferran soriano as chairman"
        ]
    },
    {
        "ID": "3925",
        "question": "What are some parties which have people from Mangalore as a member",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/placeOfBirth> <http://dbpedia.org/resource/Mangalore> . ?x <http://dbpedia.org/property/party> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "what are some parties which have [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "which have people from mangalore as a member",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "what are some parties which have [INQL] which have people from mangalore as a member [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "what are some parties which have [ENT]"
        ],
        "subq2": [
            "which have people from mangalore as a member"
        ]
    },
    {
        "ID": "4158",
        "question": "Which employer of Michael M. Sears is also the producer of Delta III",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Michael_M._Sears> <http://dbpedia.org/ontology/employer> ?uri. <http://dbpedia.org/resource/Delta_III> <http://dbpedia.org/ontology/manufacturer> ?uri} ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which employer producer of michael m. sears",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "is also the producer of delta iii",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which employer producer of michael m. sears [DES] is also the producer of delta iii",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "which employer producer of michael m. sears",
            "is also the producer of delta iii"
        ],
        "subq2": []
    },
    {
        "ID": "223",
        "question": "Name the largest city in the county where there is a Cy-Fair High School",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Cy-Fair_High_School> <http://dbpedia.org/ontology/county> ?x . ?x <http://dbpedia.org/ontology/largestCity> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "name the largest city in [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the city where county is a cy-fair county high school",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "name the largest city in [INQL] the city where county is a cy-fair county high school [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "name the largest city in [ENT]"
        ],
        "subq2": [
            "the city where county is a cy-fair county high school"
        ]
    },
    {
        "ID": "2193",
        "question": "How many bacterias are there whose division is Firmicutes",
        "sparql": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/division> <http://dbpedia.org/resource/Firmicutes>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bacteria>}",
        "intent": "COUNT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "how many bacterias are there",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "whose division is firmicutes",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "how many bacterias are there [DES] whose division is firmicutes",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "COUNT",
        "subq1": [
            "how many bacterias are there",
            "whose division is firmicutes"
        ],
        "subq2": []
    },
    {
        "ID": "3136",
        "question": "To which country does Peter Blay owe his allegiance",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Peter_Blay> <http://dbpedia.org/property/allegiance> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "to which country",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "does peter blay owe his allegiance",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "to which country [DES] does peter blay owe his allegiance",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "to which country",
            "does peter blay owe his allegiance"
        ],
        "subq2": []
    },
    {
        "ID": "1824",
        "question": "Is jim harbaugh currently in the Michigan Wolverines",
        "sparql": "ASK WHERE { <http://dbpedia.org/resource/Jim_Harbaugh> <http://dbpedia.org/property/currentteam> <http://dbpedia.org/resource/Michigan_Wolverines> }",
        "intent": "ASK",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "jim harbaugh is currently in the michigan wolverines",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "currently michigan wolverines",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "jim harbaugh is currently in the michigan wolverines [DES] currently michigan wolverines",
        "compositionality_type_golden": "simple",
        "intent_golden": "ASK",
        "subq1": [
            "jim harbaugh is currently in the michigan wolverines",
            "currently michigan wolverines"
        ],
        "subq2": []
    },
    {
        "ID": "4600",
        "question": "Name the television show whose subsequent work is Crusade and Composer is Stewart Copeland",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/subsequentWork> <http://dbpedia.org/resource/Crusade_(TV_series)> . ?uri <http://dbpedia.org/property/composer> <http://dbpedia.org/resource/Stewart_Copeland>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "name the television show whose subsequent work is crusade",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "and composer is crusade copeland",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "name the television show whose subsequent work is crusade [DES] and composer is crusade copeland",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "name the television show whose subsequent work is crusade",
            "and composer is crusade copeland"
        ],
        "subq2": []
    },
    {
        "ID": "797",
        "question": "What are the current music bands of Chester Bennington",
        "sparql": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/currentMembers> <http://dbpedia.org/resource/Chester_Bennington> } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what are the current bands of chester bennington",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "what are the current bands of chester",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what are the current bands of chester bennington [DES] what are the current bands of chester",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "what are the current bands of chester bennington",
            "what are the current bands of chester"
        ],
        "subq2": []
    },
    {
        "ID": "2871",
        "question": "Who was the prime minister under which the predecessor of Derick Heathcoat Amory served",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/successor> <http://dbpedia.org/resource/Derick_Heathcoat-Amory,_1st_Viscount_Amory> . ?x <http://dbpedia.org/property/primeminister> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "who was the prime minister under [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "which the predecessor of derick heathcoat amory served",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "who was the prime minister under [INQL] which the predecessor of derick heathcoat amory served [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "who was the prime minister under [ENT]"
        ],
        "subq2": [
            "which the predecessor of derick heathcoat amory served"
        ]
    },
    {
        "ID": "9",
        "question": "Which person designed the cars which has been designed by ASC Creative Services",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/designCompany> <http://dbpedia.org/resource/ASC_Creative_Services> . ?x <http://dbpedia.org/property/designer> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Automobile>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "which person designed by [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the cars which has been designed by creative asc services",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "which person designed by [INQL] the cars which has been designed by creative asc services [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "which person designed by [ENT]"
        ],
        "subq2": [
            "the cars which has been designed by creative asc services"
        ]
    },
    {
        "ID": "1944",
        "question": "What are some orthonychidae birds",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/family> <http://dbpedia.org/resource/Orthonychidae>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bird>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what are some orthonychidae birds",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "what are some orthonychidae birds",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what are some orthonychidae birds [DES] what are some orthonychidae birds",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "what are some orthonychidae birds",
            "what are some orthonychidae birds"
        ],
        "subq2": []
    },
    {
        "ID": "1838",
        "question": "Which driver had the pole position in 1994 Spanish Grand Prix",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/1994_Spanish_Grand_Prix> <http://dbpedia.org/ontology/poleDriver> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which pole driver",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "had the position in 1994 spanish grand prix",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which pole driver [DES] had the position in 1994 spanish grand prix",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "which pole driver",
            "had the position in 1994 spanish grand prix"
        ],
        "subq2": []
    },
    {
        "ID": "255",
        "question": "Does the US route 281 have a junction at San Antonio",
        "sparql": "ASK WHERE { <http://dbpedia.org/resource/U.S._Route_281> <http://dbpedia.org/property/junction> <http://dbpedia.org/resource/San_Antonio> }",
        "intent": "ASK",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "does the us route 281",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "have a junction at san antonio junction",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "does the us route 281 [DES] have a junction at san antonio junction",
        "compositionality_type_golden": "simple",
        "intent_golden": "ASK",
        "subq1": [
            "does the us route 281",
            "have a junction at san antonio junction"
        ],
        "subq2": []
    },
    {
        "ID": "4508",
        "question": "How many awards have been given to the founder of Grameen Bank",
        "sparql": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Grameen_Bank> <http://dbpedia.org/property/founder> ?x . ?x <http://dbpedia.org/ontology/award> ?uri  . }",
        "intent": "COUNT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "how many awards have been given to [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the founder of grameen bank",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "how many awards have been given to [INQL] the founder of grameen bank [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "COUNT",
        "subq1": [
            "how many awards have been given to [ENT]"
        ],
        "subq2": [
            "the founder of grameen bank"
        ]
    },
    {
        "ID": "1581",
        "question": "Was Queen Latifah in the U.N.I.T.Y. group",
        "sparql": "ASK WHERE { <http://dbpedia.org/resource/U.N.I.T.Y.> <http://dbpedia.org/ontology/musicalArtist> <http://dbpedia.org/resource/Queen_Latifah> }",
        "intent": "ASK",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "was latifah in [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the u.n.i.t.y. group queen u.n.i.t.y.",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "was latifah in [INQL] the u.n.i.t.y. group queen u.n.i.t.y. [INQR]",
        "compositionality_type_golden": "simple",
        "intent_golden": "ASK",
        "subq1": [
            "was latifah in [ENT]"
        ],
        "subq2": [
            "the u.n.i.t.y. group queen u.n.i.t.y."
        ]
    },
    {
        "ID": "2956",
        "question": "Count the number of important works done by the writers of The Second Coming",
        "sparql": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/The_Second_Coming_(TV_serial)> <http://dbpedia.org/ontology/author> ?x . ?x <http://dbpedia.org/ontology/notableWork> ?uri  . }",
        "intent": "COUNT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "count the number of important works done by [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the writers coming of the second coming",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "count the number of important works done by [INQL] the writers coming of the second coming [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "COUNT",
        "subq1": [
            "count the number of important works done by [ENT]"
        ],
        "subq2": [
            "the writers coming of the second coming"
        ]
    },
    {
        "ID": "924",
        "question": "Who all are known to play the Gibson Guitar Corporation",
        "sparql": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/notableInstruments> <http://dbpedia.org/resource/Gibson_Guitar_Corporation> } ",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "who all are known to [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the play to play the gibson guitar",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "who all are known to [INQL] the play to play the gibson guitar [INQR]",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "who all are known to [ENT]"
        ],
        "subq2": [
            "the play to play the gibson guitar"
        ]
    },
    {
        "ID": "4429",
        "question": "Which child of Jack Ferguson became a Prime Minister",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jack_Ferguson> <http://dbpedia.org/ontology/child> ?x . ?x <http://dbpedia.org/property/primeminister> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which child of jack ferguson",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "became a prime minister a prime minister",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which child of jack ferguson [DES] became a prime minister a prime minister",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "which child of jack ferguson",
            "became a prime minister a prime minister"
        ],
        "subq2": []
    },
    {
        "ID": "2508",
        "question": "Did Annie Leibovitz do the cover of The Road Ahead",
        "sparql": "ASK WHERE { <http://dbpedia.org/resource/The_Road_Ahead_(Bill_Gates_book)> <http://dbpedia.org/ontology/coverArtist> <http://dbpedia.org/resource/Annie_Leibovitz> }",
        "intent": "ASK",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "did annie leibovitz",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "do the cover road of the road ahead",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "did annie leibovitz [DES] do the cover road of the road ahead",
        "compositionality_type_golden": "simple",
        "intent_golden": "ASK",
        "subq1": [
            "did annie leibovitz",
            "do the cover road of the road ahead"
        ],
        "subq2": []
    },
    {
        "ID": "3775",
        "question": "What are the things whose mascots are from the class Eutheria",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/class> <http://dbpedia.org/resource/Eutheria> . ?uri <http://dbpedia.org/property/mascot> ?x  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "what are the things whose mascots are from [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the are from the eutheria class",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "what are the things whose mascots are from [INQL] the are from the eutheria class [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "what are the things whose mascots are from [ENT]"
        ],
        "subq2": [
            "the are from the eutheria class"
        ]
    },
    {
        "ID": "4136",
        "question": "For whom did Michael Springer played for which is also had a former student named Donald Brooks",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Michael_Springer> <http://dbpedia.org/property/team> ?uri. <http://dbpedia.org/resource/Donald_Brooks> <http://dbpedia.org/property/education> ?uri} ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "for whom did michael springer played for",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "which is also had a former student named donald brooks",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "for whom did michael springer played for [DES] which is also had a former student named donald brooks",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "for whom did michael springer played for",
            "which is also had a former student named donald brooks"
        ],
        "subq2": []
    },
    {
        "ID": "2779",
        "question": "Name the common nationality of Georgina Theodora Wood and akwasi Oppong Fosu",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Georgina_Theodora_Wood> <http://dbpedia.org/ontology/nationality> ?uri. <http://dbpedia.org/resource/Akwasi_Oppong_Fosu> <http://dbpedia.org/ontology/nationality> ?uri . }",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "name the common nationality of georgina theodora and akwasi oppong wood",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                }
            ]
        },
        "pred": "name the common nationality of georgina theodora and akwasi oppong wood",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "name the common nationality of georgina theodora and akwasi oppong wood"
        ],
        "subq2": []
    },
    {
        "ID": "539",
        "question": "Name the movie written by Monty Python and distributed by Cinema International Corporation",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/distributor> <http://dbpedia.org/resource/Cinema_International_Corporation> . ?uri <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Monty_Python>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "name the movie written by monty python",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "and distributed by cinema international corporation",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "name the movie written by monty python [DES] and distributed by cinema international corporation",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "name the movie written by monty python",
            "and distributed by cinema international corporation"
        ],
        "subq2": []
    },
    {
        "ID": "2745",
        "question": "Is Pittsburgh Steelers the former team of Marv McFadden",
        "sparql": "ASK WHERE { <http://dbpedia.org/resource/Marv_McFadden> <http://dbpedia.org/property/pastteams> <http://dbpedia.org/resource/Pittsburgh_Steelers> }",
        "intent": "ASK",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "pittsburgh steelers",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "the former team of marv mcfadden",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "pittsburgh steelers [DES] the former team of marv mcfadden",
        "compositionality_type_golden": "simple",
        "intent_golden": "ASK",
        "subq1": [
            "pittsburgh steelers",
            "the former team of marv mcfadden"
        ],
        "subq2": []
    },
    {
        "ID": "4498",
        "question": "Which series was written by Eric Jendresen and John Orloff",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Erik_Jendresen> . ?uri <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/John_Orloff> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which series",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "was written by eric jendresen and john orloff",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which series [DES] was written by eric jendresen and john orloff",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "which series",
            "was written by eric jendresen and john orloff"
        ],
        "subq2": []
    },
    {
        "ID": "4571",
        "question": "In which city can I find both the office of Elasticsearch and the Yellow Claw DJ",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Yellow_Claw_(DJs)> <http://dbpedia.org/property/location> ?uri. <http://dbpedia.org/resource/Elasticsearch> <http://dbpedia.org/property/location> ?uri . }",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "in which city",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "can i find both the office of elasticsearch and the yellow claw",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "in which city [DES] can i find both the office of elasticsearch and the yellow claw",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "in which city",
            "can i find both the office of elasticsearch and the yellow claw"
        ],
        "subq2": []
    },
    {
        "ID": "1145",
        "question": "Name the partners of Kelly Brook",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Kelly_Brook> <http://dbpedia.org/ontology/partner> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "name the partners of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "kelly brook partners",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "name the partners of [INQL] kelly brook partners [INQR]",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "name the partners of [ENT]"
        ],
        "subq2": [
            "kelly brook partners"
        ]
    },
    {
        "ID": "667",
        "question": "What is the area of the broadcast network which has the affiliation with 9TV",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/9TV> <http://dbpedia.org/property/affiliation> ?x . ?x <http://dbpedia.org/property/area> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BroadcastNetwork>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "what is the broadcast area of the broadcast area [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "which has the affiliation with 9tv",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "what is the broadcast area of the broadcast area [INQL] which has the affiliation with 9tv [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "what is the broadcast area of the broadcast area [ENT]"
        ],
        "subq2": [
            "which has the affiliation with 9tv"
        ]
    },
    {
        "ID": "3019",
        "question": "Who is married to Gerard Piqu",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/partner> <http://dbpedia.org/resource/Gerard_Piqu\u00e9>  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "who is married to [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "gerard piqu",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "who is married to [INQL] gerard piqu [INQR]",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "who is married to [ENT]"
        ],
        "subq2": [
            "gerard piqu"
        ]
    },
    {
        "ID": "357",
        "question": "Which sports are played in schools affiliated with the Harvest Christian Center",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/religiousAffiliation> <http://dbpedia.org/resource/Harvest_Christian_Center> . ?x <http://dbpedia.org/ontology/sport> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/School>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "which sports are played in [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "schools affiliated with the christian harvest center",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "which sports are played in [INQL] schools affiliated with the christian harvest center [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "which sports are played in [ENT]"
        ],
        "subq2": [
            "schools affiliated with the christian harvest center"
        ]
    },
    {
        "ID": "2831",
        "question": "Who debuted their career in a team coached by Chip Kelly",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/coach> <http://dbpedia.org/resource/Chip_Kelly> . ?uri <http://dbpedia.org/ontology/debutTeam> ?x  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "who debuted their career in [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "a career coached by chip kelly",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "who debuted their career in [INQL] a career coached by chip kelly [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "who debuted their career in [ENT]"
        ],
        "subq2": [
            "a career coached by chip kelly"
        ]
    },
    {
        "ID": "2783",
        "question": "What are the nicknames given to the characters of The Wolves of the Mercy Falls",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/List_of_The_Wolves_of_Mercy_Falls_characters> <http://dbpedia.org/property/nickname> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "what are the nicknames given to [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the characters of the wolves of the mercy falls",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "what are the nicknames given to [INQL] the characters of the wolves of the mercy falls [INQR]",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "what are the nicknames given to [ENT]"
        ],
        "subq2": [
            "the characters of the wolves of the mercy falls"
        ]
    },
    {
        "ID": "1353",
        "question": "Name the river with source country in Zambia and source region as North-Western Province, Zambia",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/sourceCountry> <http://dbpedia.org/resource/Zambia> . ?uri <http://dbpedia.org/ontology/sourceRegion> <http://dbpedia.org/resource/North-Western_Province,_Zambia>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "name the river with source country in north-western province",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "and source region as north-western province , zambia",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "name the river with source country in north-western province [DES] and source region as north-western province , zambia",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "name the river with source country in north-western province",
            "and source region as north-western province , zambia"
        ],
        "subq2": []
    },
    {
        "ID": "470",
        "question": "Members of how many political parties have died in Delhi",
        "sparql": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/placeOfDeath> <http://dbpedia.org/resource/Delhi> . ?x <http://dbpedia.org/property/party> ?uri  . }",
        "intent": "COUNT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "[ENT] have died in delhi",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "members of how many political parties",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "[INQL] members of how many political parties [INQR] have died in delhi",
        "compositionality_type_golden": "composition",
        "intent_golden": "COUNT",
        "subq1": [
            "[ENT] have died in delhi"
        ],
        "subq2": [
            "members of how many political parties"
        ]
    },
    {
        "ID": "2703",
        "question": "What is the birthplace of Adugna Deyas and the place where Fiq is located",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Fiq,_Ethiopia> <http://dbpedia.org/ontology/country> ?uri. <http://dbpedia.org/resource/Adugna_Deyas> <http://dbpedia.org/property/birthPlace> ?uri . }",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what is the birthplace of adugna deyas",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "and the place where fiq is located",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what is the birthplace of adugna deyas [DES] and the place where fiq is located",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "what is the birthplace of adugna deyas",
            "and the place where fiq is located"
        ],
        "subq2": []
    },
    {
        "ID": "3330",
        "question": "what is the headquarters of Juan Dalmau Ramerez",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Juan_Dalmau_Ram\u00edrez> <http://dbpedia.org/property/headquarters> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what is the headquarters of juan dalmau",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "what ramerez",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what is the headquarters of juan dalmau [DES] what ramerez",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "what is the headquarters of juan dalmau",
            "what ramerez"
        ],
        "subq2": []
    },
    {
        "ID": "3637",
        "question": "The president who was in office when Lee Hyun Jae was the PM followed which religion",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/primeminister> <http://dbpedia.org/resource/Lee_Hyun-jae> . ?x <http://dbpedia.org/ontology/religion> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "the president who was in office when hyun jae",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "was the pm followed which religion",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "the president who was in office when hyun jae [DES] was the pm followed which religion",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "the president who was in office when hyun jae",
            "was the pm followed which religion"
        ],
        "subq2": []
    },
    {
        "ID": "1396",
        "question": "Who is the maker of the engine of Ford F-Series first generation",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ford_F-Series_first_generation> <http://dbpedia.org/property/engine> ?x . ?x <http://dbpedia.org/ontology/manufacturer> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "who is the maker of [ENT] first generation",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the engine of f-series ford first generation",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "who is the maker of [INQL] the engine of f-series ford first generation [INQR] first generation",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "who is the maker of [ENT] first generation"
        ],
        "subq2": [
            "the engine of f-series ford first generation"
        ]
    },
    {
        "ID": "3584",
        "question": "What is the religious affiliation of Neungin High School",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Neungin_High_School> <http://dbpedia.org/property/religiousAffiliation> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what is the religious affiliation of neungin high school",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "high school",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what is the religious affiliation of neungin high school [DES] high school",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "what is the religious affiliation of neungin high school",
            "high school"
        ],
        "subq2": []
    },
    {
        "ID": "4486",
        "question": "Is Maria Sharapova the silver medalist of Tennis at the 2012 Summer Olympics Women's singles",
        "sparql": "ASK WHERE { <http://dbpedia.org/resource/Tennis_at_the_2012_Summer_Olympics_\u2013_Women's_singles> <http://dbpedia.org/ontology/silverMedalist> <http://dbpedia.org/resource/Maria_Sharapova> }",
        "intent": "ASK",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "is sharapova the singles at [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the tennis medalist of 2012 women 's the singles",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "is sharapova the singles at [INQL] the tennis medalist of 2012 women 's the singles [INQR]",
        "compositionality_type_golden": "simple",
        "intent_golden": "ASK",
        "subq1": [
            "is sharapova the singles at [ENT]"
        ],
        "subq2": [
            "the tennis medalist of 2012 women 's the singles"
        ]
    },
    {
        "ID": "3376",
        "question": "Name the office holder with successor as Adrian A Basora and child as Lori Black",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Lori_Black> . ?uri <http://dbpedia.org/property/successor> <http://dbpedia.org/resource/Adrian_A._Basora>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "name the office holder with successor as a child",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "and lori basora as a child",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "name the office holder with successor as a child [DES] and lori basora as a child",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "name the office holder with successor as a child",
            "and lori basora as a child"
        ],
        "subq2": []
    },
    {
        "ID": "1256",
        "question": "Who is the owner of the South end",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_South_End> <http://dbpedia.org/property/owners> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "who is the owner of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the owner of south end south",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "who is the owner of [INQL] the owner of south end south [INQR]",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "who is the owner of [ENT]"
        ],
        "subq2": [
            "the owner of south end south"
        ]
    },
    {
        "ID": "3512",
        "question": "What is the colour of Xocolatlite",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Xocolatlite> <http://dbpedia.org/ontology/colour> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what is the colour of xocolatlite",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "what is the colour of xocolatlite",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what is the colour of xocolatlite [DES] what is the colour of xocolatlite",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "what is the colour of xocolatlite",
            "what is the colour of xocolatlite"
        ],
        "subq2": []
    },
    {
        "ID": "1250",
        "question": "For how many other teams have the members of Atlant Moscow Oblast played",
        "sparql": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/playedFor> <http://dbpedia.org/resource/Atlant_Moscow_Oblast> . ?x <http://dbpedia.org/ontology/formerTeam> ?uri  . }",
        "intent": "COUNT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "for how many other teams have [ENT] played",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the members of atlant oblast moscow",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "for how many other teams have [INQL] the members of atlant oblast moscow [INQR] played",
        "compositionality_type_golden": "composition",
        "intent_golden": "COUNT",
        "subq1": [
            "for how many other teams have [ENT] played"
        ],
        "subq2": [
            "the members of atlant oblast moscow"
        ]
    },
    {
        "ID": "4807",
        "question": "What is the state of origin of the president whose alma mater is Hellenic Naval Academy",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/almaMater> <http://dbpedia.org/resource/Hellenic_Naval_Academy> . ?x <http://dbpedia.org/ontology/stateOfOrigin> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "what is the state mater of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the academy whose alma mater is hellenic",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "what is the state mater of [INQL] the academy whose alma mater is hellenic [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "what is the state mater of [ENT]"
        ],
        "subq2": [
            "the academy whose alma mater is hellenic"
        ]
    },
    {
        "ID": "4298",
        "question": "What is the common ethnicity of the Maike Evers and Francisco Lachowski",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Maike_Evers> <http://dbpedia.org/ontology/ethnicity> ?uri. <http://dbpedia.org/resource/Francisco_Lachowski> <http://dbpedia.org/ontology/ethnicity> ?uri . }",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what is the common ethnicity of the maike evers and francisco lachowski",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                }
            ]
        },
        "pred": "what is the common ethnicity of the maike evers and francisco lachowski",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "what is the common ethnicity of the maike evers and francisco lachowski"
        ],
        "subq2": []
    },
    {
        "ID": "3284",
        "question": "In which places do companies founded in Newcastle operate",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/foundationPlace> <http://dbpedia.org/resource/City_of_Newcastle> . ?x <http://dbpedia.org/ontology/regionServed> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "in which places do [ENT] operate",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "companies founded in newcastle",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "in which places do [INQL] companies founded in newcastle [INQR] operate",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "in which places do [ENT] operate"
        ],
        "subq2": [
            "companies founded in newcastle"
        ]
    },
    {
        "ID": "2933",
        "question": "Which senator served in military units VMF-155 and VMF-218",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/militaryUnit> <http://dbpedia.org/resource/VMF-155> . ?uri <http://dbpedia.org/ontology/militaryUnit> <http://dbpedia.org/resource/VMF-218> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Senator>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which senator",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "served in military units vmf-155 and vmf-218",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which senator [DES] served in military units vmf-155 and vmf-218",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "which senator",
            "served in military units vmf-155 and vmf-218"
        ],
        "subq2": []
    },
    {
        "ID": "4175",
        "question": "What kind of games are made by Interplay Entertainment",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/publisher> <http://dbpedia.org/resource/Interplay_Entertainment> . ?x <http://dbpedia.org/property/genre> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VideoGame>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "what kind of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "games are made by interplay entertainment",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "what kind of [INQL] games are made by interplay entertainment [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "what kind of [ENT]"
        ],
        "subq2": [
            "games are made by interplay entertainment"
        ]
    },
    {
        "ID": "1852",
        "question": "Which producer of Purvis Eureka engine is also the owner of Ford Theatre",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Purvis_Eureka> <http://dbpedia.org/property/engine> ?uri. <http://dbpedia.org/resource/Ford_Theatre> <http://dbpedia.org/property/company> ?uri} ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which producer of purvis theatre",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "is also the owner of ford",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which producer of purvis theatre [DES] is also the owner of ford",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "which producer of purvis theatre",
            "is also the owner of ford"
        ],
        "subq2": []
    },
    {
        "ID": "4869",
        "question": "What developed EMMS",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/EMMS> <http://dbpedia.org/ontology/developer> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what emms",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "developed emms",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what emms [DES] developed emms",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "what emms",
            "developed emms"
        ],
        "subq2": []
    },
    {
        "ID": "2105",
        "question": "Which music band made Take Me There, and to which Tedd Riley was associated",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Teddy_Riley> <http://dbpedia.org/ontology/associatedBand> ?uri. <http://dbpedia.org/resource/Take_Me_There_(Blackstreet_&_M\u00fda_song)> <http://dbpedia.org/ontology/musicalBand> ?uri} ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which music made",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "take me , and riley tedd was associated to which band",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which music made [DES] take me , and riley tedd was associated to which band",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "which music made",
            "take me , and riley tedd was associated to which band"
        ],
        "subq2": []
    },
    {
        "ID": "133",
        "question": "In which time zone is Pong Pha",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Pong_Pha> <http://dbpedia.org/ontology/timeZone> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "in which time zone",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "is pong pha",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "in which time zone [DES] is pong pha",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "in which time zone",
            "is pong pha"
        ],
        "subq2": []
    },
    {
        "ID": "928",
        "question": "How many fictional characters are there in a series in which Craig Robinson acted",
        "sparql": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Craig_Robinson_(actor)> . ?uri <http://dbpedia.org/ontology/series> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}",
        "intent": "COUNT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "how many fictional characters are there in [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "a fictional characters in which craig robinson characters",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "how many fictional characters are there in [INQL] a fictional characters in which craig robinson characters [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "COUNT",
        "subq1": [
            "how many fictional characters are there in [ENT]"
        ],
        "subq2": [
            "a fictional characters in which craig robinson characters"
        ]
    },
    {
        "ID": "823",
        "question": "Which political party of Chandra Shekhar is also the political party of Datl Satyanarayana Raju",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Chandra_Shekhar> <http://dbpedia.org/ontology/otherParty> ?uri. <http://dbpedia.org/resource/Datla_Satyanarayana_Raju> <http://dbpedia.org/ontology/party> ?uri} ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which political party of chandra shekhar",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "is also the political party of datl satyanarayana",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which political party of chandra shekhar [DES] is also the political party of datl satyanarayana",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "which political party of chandra shekhar",
            "is also the political party of datl satyanarayana"
        ],
        "subq2": []
    },
    {
        "ID": "4543",
        "question": "Who owns the airport in Paphos",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Paphos_District> . ?x <http://dbpedia.org/property/owner> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Airport>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "who owns [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the airport in paphos airport",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "who owns [INQL] the airport in paphos airport [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "who owns [ENT]"
        ],
        "subq2": [
            "the airport in paphos airport"
        ]
    },
    {
        "ID": "1531",
        "question": "What is the baseball team whose club manager is Chip Hale",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/manager> <http://dbpedia.org/resource/Chip_Hale>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BaseballTeam>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what is the baseball team",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "whose club is chip hale",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what is the baseball team [DES] whose club is chip hale",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "what is the baseball team",
            "whose club is chip hale"
        ],
        "subq2": []
    },
    {
        "ID": "1214",
        "question": "Which bacteria's taxonomic class is Bacilli",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/class> <http://dbpedia.org/resource/Bacilli>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bacteria>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which <UNK>",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "taxonomic class is bacilli class",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which <UNK> [DES] taxonomic class is bacilli class",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "which <UNK>",
            "taxonomic class is bacilli class"
        ],
        "subq2": []
    },
    {
        "ID": "504",
        "question": "What honours did Reigh Count receive",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Reigh_Count> <http://dbpedia.org/ontology/honours> ?uri } ",
        "intent": "COUNT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what honours",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "did reigh count receive reigh",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what honours [DES] did reigh count receive reigh",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "what honours",
            "did reigh count receive reigh"
        ],
        "subq2": []
    },
    {
        "ID": "4285",
        "question": "What are some products of the company whose subsidiary is Sony Corp shareholders and subsidies",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/subsidiary> <http://dbpedia.org/resource/Sony_Corporation_shareholders_and_subsidiaries> . ?uri <http://dbpedia.org/ontology/manufacturer> ?x  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "what are some products of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the company whose subsidiary is sony corp shareholders and subsidies",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "what are some products of [INQL] the company whose subsidiary is sony corp shareholders and subsidies [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "what are some products of [ENT]"
        ],
        "subq2": [
            "the company whose subsidiary is sony corp shareholders and subsidies"
        ]
    },
    {
        "ID": "1996",
        "question": "Who built the stadiums where 2014 FIFA under 17 woman's world cup took place",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/tenant> <http://dbpedia.org/resource/2014_FIFA_U-17_Women's_World_Cup> . ?x <http://dbpedia.org/ontology/builder> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "who built [ENT] world 's place",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the stadiums where 2014 fifa 17 's <UNK>",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "who built [INQL] the stadiums where 2014 fifa 17 's <UNK> [INQR] world 's place",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "who built [ENT] world 's place"
        ],
        "subq2": [
            "the stadiums where 2014 fifa 17 's <UNK>"
        ]
    },
    {
        "ID": "3072",
        "question": "Which area operated by the South Side Elevated Railroad is also the place of death of the Sakari Suzuki",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/South_Side_Elevated_Railroad> <http://dbpedia.org/ontology/operatedBy> ?uri. <http://dbpedia.org/resource/Sakari_Suzuki> <http://dbpedia.org/property/deathPlace> ?uri} ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which area by the south side elevated",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "is also the place of death of the sakari suzuki",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which area by the south side elevated [DES] is also the place of death of the sakari suzuki",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "which area by the south side elevated",
            "is also the place of death of the sakari suzuki"
        ],
        "subq2": []
    },
    {
        "ID": "1958",
        "question": "What is the television show whose related with Doctor Who Confidential",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/related> <http://dbpedia.org/resource/Doctor_Who_Confidential>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what is the television show",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "whose related with doctor who confidential",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what is the television show [DES] whose related with doctor who confidential",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "what is the television show",
            "whose related with doctor who confidential"
        ],
        "subq2": []
    },
    {
        "ID": "1384",
        "question": "In which city wasThe Triple Door (The Courage album) performed live",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Live_at_The_Triple_Door_(The_Courage_album)> <http://dbpedia.org/property/recorded> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "in which city [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "wasthe (the door performed",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "in which city [INQL] wasthe (the door performed [INQR]",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "in which city [ENT]"
        ],
        "subq2": [
            "wasthe (the door performed"
        ]
    },
    {
        "ID": "894",
        "question": "Which nearest city of Jurgens Site is the death place of Jimmie Heuga",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jurgens_Site> <http://dbpedia.org/property/nearestCity> ?uri. <http://dbpedia.org/resource/Jimmie_Heuga> <http://dbpedia.org/property/deathPlace> ?uri} ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which nearest city of jurgens site",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "is the death place of jimmie heuga",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which nearest city of jurgens site [DES] is the death place of jimmie heuga",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "which nearest city of jurgens site",
            "is the death place of jimmie heuga"
        ],
        "subq2": []
    },
    {
        "ID": "455",
        "question": "List the battles fought by Ali Habib Mahmud",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ali_Habib_Mahmud> <http://dbpedia.org/property/battles> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "list the battles fought by [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "ali habib",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "list the battles fought by [INQL] ali habib [INQR]",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "list the battles fought by [ENT]"
        ],
        "subq2": [
            "ali habib"
        ]
    },
    {
        "ID": "4879",
        "question": "How many companies were started in the states",
        "sparql": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/foundationPlace> <http://dbpedia.org/resource/United_States>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
        "intent": "COUNT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "how many companies",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "were started in the started states",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "how many companies [DES] were started in the started states",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "COUNT",
        "subq1": [
            "how many companies",
            "were started in the started states"
        ],
        "subq2": []
    },
    {
        "ID": "3709",
        "question": "Is Charles Drummond Ellis a doctoral student of James Chadwick",
        "sparql": "ASK WHERE { <http://dbpedia.org/resource/James_Chadwick> <http://dbpedia.org/ontology/doctoralStudent> <http://dbpedia.org/resource/Charles_Drummond_Ellis> }",
        "intent": "ASK",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "is drummond a doctoral student of james chadwick",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "chadwick a doctoral student",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "is drummond a doctoral student of james chadwick [DES] chadwick a doctoral student",
        "compositionality_type_golden": "simple",
        "intent_golden": "ASK",
        "subq1": [
            "is drummond a doctoral student of james chadwick",
            "chadwick a doctoral student"
        ],
        "subq2": []
    },
    {
        "ID": "4618",
        "question": "How many movies are distributed by Cinema International Corporation",
        "sparql": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/distributor> <http://dbpedia.org/resource/Cinema_International_Corporation>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
        "intent": "COUNT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "how many movies",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "are distributed by cinema international corporation",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "how many movies [DES] are distributed by cinema international corporation",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "COUNT",
        "subq1": [
            "how many movies",
            "are distributed by cinema international corporation"
        ],
        "subq2": []
    },
    {
        "ID": "4268",
        "question": "Name the local authority of Trinity School, Brentwood",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Trinity_School,_Brentwood> <http://dbpedia.org/ontology/localAuthority> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "name the local authority of trinity school , brentwood",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "name the local authority of trinity school",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "name the local authority of trinity school , brentwood [DES] name the local authority of trinity school",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "name the local authority of trinity school , brentwood",
            "name the local authority of trinity school"
        ],
        "subq2": []
    },
    {
        "ID": "3522",
        "question": "Name the president of Wyche Fowler",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Wyche_Fowler> <http://dbpedia.org/ontology/president> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "name the president of wyche fowler",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "fowler fowler",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "name the president of wyche fowler [DES] fowler fowler",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "name the president of wyche fowler",
            "fowler fowler"
        ],
        "subq2": []
    },
    {
        "ID": "4134",
        "question": "In which fields have people born in Lausanne worked",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/placeOfBirth> <http://dbpedia.org/resource/Lausanne> . ?x <http://dbpedia.org/property/fields> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "in which fields have [ENT] worked",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "people born in lausanne",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "in which fields have [INQL] people born in lausanne [INQR] worked",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "in which fields have [ENT] worked"
        ],
        "subq2": [
            "people born in lausanne"
        ]
    },
    {
        "ID": "3602",
        "question": "Which Texas based company was founded by Jim Harris",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/locationCity> <http://dbpedia.org/resource/Texas> . ?uri <http://dbpedia.org/property/founder> <http://dbpedia.org/resource/Jim_Harris_(entrepreneur)>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which texas based company",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "was founded by jim harris",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which texas based company [DES] was founded by jim harris",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "which texas based company",
            "was founded by jim harris"
        ],
        "subq2": []
    },
    {
        "ID": "713",
        "question": "Name a show hosted by Brian Dunkleman and judged by Harry Connick, Jr",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/presenter> <http://dbpedia.org/resource/Brian_Dunkleman> . ?uri <http://dbpedia.org/property/judges> <http://dbpedia.org/resource/Harry_Connick,_Jr.>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "name a show by brian dunkleman",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "and hosted by harry connick , jr",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "name a show by brian dunkleman [DES] and hosted by harry connick , jr",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "name a show by brian dunkleman",
            "and hosted by harry connick , jr"
        ],
        "subq2": []
    },
    {
        "ID": "4186",
        "question": "To which educational institute does Cornell University Press belong to",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Cornell_University_Press> <http://dbpedia.org/ontology/parentCompany> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "to which educational institute does [ENT] belong to",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "cornell university press",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "to which educational institute does [INQL] cornell university press [INQR] belong to",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "to which educational institute does [ENT] belong to"
        ],
        "subq2": [
            "cornell university press"
        ]
    },
    {
        "ID": "2214",
        "question": "In which country's cuisine, ham is an important part",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/mainIngredient> <http://dbpedia.org/resource/Ham> . ?x <http://dbpedia.org/property/country> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "in which country's",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "'s cuisine , ham is an important part",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "in which country's [DES] 's cuisine , ham is an important part",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "in which country's",
            "'s cuisine , ham is an important part"
        ],
        "subq2": []
    },
    {
        "ID": "2923",
        "question": "List the softwares which runs on Microsoft Windows and has license as Software as a service",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/operatingSystem> <http://dbpedia.org/resource/Microsoft_Windows> . ?uri <http://dbpedia.org/ontology/license> <http://dbpedia.org/resource/Software_as_a_service>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "list the softwares which runs on microsoft windows",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "and license has microsoft windows as a service",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "list the softwares which runs on microsoft windows [DES] and license has microsoft windows as a service",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "list the softwares which runs on microsoft windows",
            "and license has microsoft windows as a service"
        ],
        "subq2": []
    },
    {
        "ID": "1810",
        "question": "Which political party of Yashpal Kapur is also the owner of National Herald",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_National_Herald_(India)> <http://dbpedia.org/ontology/owner> ?uri. <http://dbpedia.org/resource/Yashpal_Kapur> <http://dbpedia.org/ontology/party> ?uri} ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which political party of yashpal kapur",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "is also the owner of herald national party",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which political party of yashpal kapur [DES] is also the owner of herald national party",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "which political party of yashpal kapur",
            "is also the owner of herald national party"
        ],
        "subq2": []
    },
    {
        "ID": "3486",
        "question": "Who all have been presenters on shows by the NBC",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/channel> <http://dbpedia.org/resource/NBC> . ?x <http://dbpedia.org/property/presenter> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "who all have been presenters on [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the shows by the nbc",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "who all have been presenters on [INQL] the shows by the nbc [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "who all have been presenters on [ENT]"
        ],
        "subq2": [
            "the shows by the nbc"
        ]
    },
    {
        "ID": "3141",
        "question": "Give me the list of cars which are the predecessor of Full Sized Cars",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/class> <http://dbpedia.org/resource/Full-size_car> . ?x <http://dbpedia.org/ontology/predecessor> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Automobile>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "give me the list of cars which are the predecessor of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the predecessor of full sized",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "give me the list of cars which are the predecessor of [INQL] the predecessor of full sized [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "give me the list of cars which are the predecessor of [ENT]"
        ],
        "subq2": [
            "the predecessor of full sized"
        ]
    },
    {
        "ID": "1827",
        "question": "List the people with final resting place as Plymouth, Vermont and has Samuel W. McCall as predecessor",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Plymouth,_Vermont> . ?uri <http://dbpedia.org/property/predecessor> <http://dbpedia.org/resource/Samuel_W._McCall>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "list the people",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "with final resting place as plymouth , and has samuel w. mccall as predecessor",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "list the people [DES] with final resting place as plymouth , and has samuel w. mccall as predecessor",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "list the people",
            "with final resting place as plymouth , and has samuel w. mccall as predecessor"
        ],
        "subq2": []
    },
    {
        "ID": "1155",
        "question": "What disease led to the demise of Letitia MacTavish Hargrave and Martino Martini",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Letitia_MacTavish_Hargrave> <http://dbpedia.org/ontology/deathCause> ?uri. <http://dbpedia.org/resource/Martino_Martini> <http://dbpedia.org/ontology/deathCause> ?uri . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what disease",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "led to the demise of letitia mactavish and martino martini",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what disease [DES] led to the demise of letitia mactavish and martino martini",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "what disease",
            "led to the demise of letitia mactavish and martino martini"
        ],
        "subq2": []
    },
    {
        "ID": "1324",
        "question": "What are some software which are written in languages that are run on Unix like OS",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/operatingSystem> <http://dbpedia.org/resource/Unix-like> . ?uri <http://dbpedia.org/property/programmingLanguage> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what are some software",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "which are run in unix os that are run on unix os",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what are some software [DES] which are run in unix os that are run on unix os",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "what are some software",
            "which are run in unix os that are run on unix os"
        ],
        "subq2": []
    },
    {
        "ID": "4312",
        "question": "List all the movies whose directors were born in Kenosha, Wisconsin",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kenosha,_Wisconsin> . ?uri <http://dbpedia.org/property/director> ?x  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "list all the movies whose directors [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "were born in kenosha , wisconsin",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "list all the movies whose directors [INQL] were born in kenosha , wisconsin [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "list all the movies whose directors [ENT]"
        ],
        "subq2": [
            "were born in kenosha , wisconsin"
        ]
    },
    {
        "ID": "510",
        "question": "Does the St lawrence river start in Kingston, Ontario",
        "sparql": "ASK WHERE { <http://dbpedia.org/resource/Saint_Lawrence_River> <http://dbpedia.org/ontology/sourceMountain> <http://dbpedia.org/resource/Kingston,_Ontario> }",
        "intent": "ASK",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "does the river",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "start in kingston , ontario",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "does the river [DES] start in kingston , ontario",
        "compositionality_type_golden": "simple",
        "intent_golden": "ASK",
        "subq1": [
            "does the river",
            "start in kingston , ontario"
        ],
        "subq2": []
    },
    {
        "ID": "1680",
        "question": "What stadium's operator is Stan Kroenke",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/operator> <http://dbpedia.org/resource/Stan_Kroenke>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Stadium>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what <UNK>",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "operator is stan kroenke",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what <UNK> [DES] operator is stan kroenke",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "what <UNK>",
            "operator is stan kroenke"
        ],
        "subq2": []
    },
    {
        "ID": "499",
        "question": "Is Mike Babcock the head coach of Toronto Maple Leafs",
        "sparql": "ASK WHERE { <http://dbpedia.org/resource/Toronto_Maple_Leafs> <http://dbpedia.org/property/headCoach> <http://dbpedia.org/resource/Mike_Babcock> }",
        "intent": "ASK",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "is the head coach of mike babcock maple",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "is the mike babcock leafs",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "is the head coach of mike babcock maple [DES] is the mike babcock leafs",
        "compositionality_type_golden": "simple",
        "intent_golden": "ASK",
        "subq1": [
            "is the head coach of mike babcock maple",
            "is the mike babcock leafs"
        ],
        "subq2": []
    },
    {
        "ID": "4536",
        "question": "Whose commanders are John Mc Ewen and Park Chunghee",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/John_McEwen> . ?uri <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Park_Chung-hee> . }",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "whose commanders are mc ewen park and john chunghee",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                }
            ]
        },
        "pred": "whose commanders are mc ewen park and john chunghee",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "whose commanders are mc ewen park and john chunghee"
        ],
        "subq2": []
    },
    {
        "ID": "1856",
        "question": "Who gave guest appearances on the show which is the next episode after the Bombshell one",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/previousWork> <http://dbpedia.org/resource/Bombshell_(Smash)> . ?x <http://dbpedia.org/property/guests> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionEpisode>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "who gave guest appearances on [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the episode which is the next the show after the show appearances",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "who gave guest appearances on [INQL] the episode which is the next the show after the show appearances [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "who gave guest appearances on [ENT]"
        ],
        "subq2": [
            "the episode which is the next the show after the show appearances"
        ]
    },
    {
        "ID": "1388",
        "question": "What is manufactured by a company headed by Kazuo Hirai",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/keyPeople> <http://dbpedia.org/resource/Kazuo_Hirai> . ?uri <http://dbpedia.org/ontology/manufacturer> ?x  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "what is manufactured by [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "a company headed by kazuo hirai",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "what is manufactured by [INQL] a company headed by kazuo hirai [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "what is manufactured by [ENT]"
        ],
        "subq2": [
            "a company headed by kazuo hirai"
        ]
    },
    {
        "ID": "3719",
        "question": "Under which presidents have politicians from the Continental army served",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/branch> <http://dbpedia.org/resource/Continental_Army> . ?x <http://dbpedia.org/property/president> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "under which presidents have [ENT] served",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "politicians from the continental army",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "under which presidents have [INQL] politicians from the continental army [INQR] served",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "under which presidents have [ENT] served"
        ],
        "subq2": [
            "politicians from the continental army"
        ]
    },
    {
        "ID": "2386",
        "question": "Philadelphia City Council is the governing body of which city",
        "sparql": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/governingBody> <http://dbpedia.org/resource/Philadelphia_City_Council> } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "philadelphia city is the governing body of",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "which city council city council",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "philadelphia city is the governing body of [DES] which city council city council",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "philadelphia city is the governing body of",
            "which city council city council"
        ],
        "subq2": []
    },
    {
        "ID": "3236",
        "question": "What are the binomial authority of Menetries's warbler",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Menetries's_warbler> <http://dbpedia.org/ontology/binomialAuthority> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what are the binomial authority of menetries 's warbler",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "what are the binomial authority of %composition",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what are the binomial authority of menetries 's warbler [DES] what are the binomial authority of %composition",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "what are the binomial authority of menetries 's warbler",
            "what are the binomial authority of %composition"
        ],
        "subq2": []
    },
    {
        "ID": "1540",
        "question": "Name the movie which has music composed by Elliot Goldenthal and screenplay by Akiva Goldsman",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/music> <http://dbpedia.org/resource/Elliot_Goldenthal> . ?uri <http://dbpedia.org/property/screenplay> <http://dbpedia.org/resource/Akiva_Goldsman>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "name the movie which has music composed by elliot goldenthal",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "and screenplay by akiva goldsman",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "name the movie which has music composed by elliot goldenthal [DES] and screenplay by akiva goldsman",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "name the movie which has music composed by elliot goldenthal",
            "and screenplay by akiva goldsman"
        ],
        "subq2": []
    },
    {
        "ID": "1217",
        "question": "Name the fictional character whose relative are Duck family and Clan McDuck",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/relative> <http://dbpedia.org/resource/Duck_family_(Disney)> . ?uri <http://dbpedia.org/property/relatives> <http://dbpedia.org/resource/Clan_McDuck>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "name the fictional character",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "whose relative are clan mcduck and mcduck",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "name the fictional character [DES] whose relative are clan mcduck and mcduck",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "name the fictional character",
            "whose relative are clan mcduck and mcduck"
        ],
        "subq2": []
    },
    {
        "ID": "2681",
        "question": "Which university with athletics department in NCAA Division I Football Bowl Subdivision has nickname Tulane Green Wave",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/mouthMountain> <http://dbpedia.org/resource/St._Louis> . ?uri <http://dbpedia.org/ontology/rightTributary> <http://dbpedia.org/resource/Madison_River>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which university",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "with nickname department ncaa division i football division i football bowl subdivision",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which university [DES] with nickname department ncaa division i football division i football bowl subdivision",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "which university",
            "with nickname department ncaa division i football division i football bowl subdivision"
        ],
        "subq2": []
    },
    {
        "ID": "2993",
        "question": "Which state does Jerome B. Chaffee belong",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jerome_B._Chaffee> <http://dbpedia.org/property/state> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which state",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "does jerome b. chaffee belong",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which state [DES] does jerome b. chaffee belong",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "which state",
            "does jerome b. chaffee belong"
        ],
        "subq2": []
    },
    {
        "ID": "1191",
        "question": "In which of the parties that have governed over Rishikesh, does Govinda belong too",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Govinda_(actor)> <http://dbpedia.org/ontology/party> ?uri. <http://dbpedia.org/resource/Rishikesh> <http://dbpedia.org/ontology/leaderName> ?uri} ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "in which parties",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "that have governed over rishikesh , does govinda belong too",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "in which parties [DES] that have governed over rishikesh , does govinda belong too",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "in which parties",
            "that have governed over rishikesh , does govinda belong too"
        ],
        "subq2": []
    },
    {
        "ID": "1542",
        "question": "What awards are won by the screenwriter of Lucky You",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lucky_You_(film)> <http://dbpedia.org/property/screenplay> ?x . ?x <http://dbpedia.org/ontology/award> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "what awards are won by [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the screenwriter of lucky you",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "what awards are won by [INQL] the screenwriter of lucky you [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "what awards are won by [ENT]"
        ],
        "subq2": [
            "the screenwriter of lucky you"
        ]
    },
    {
        "ID": "3301",
        "question": "Name the Pole driver of 1994 Spanish Grand Prix",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/1994_Spanish_Grand_Prix> <http://dbpedia.org/property/poleDriver> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "name the driver of spanish grand prix",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "1994 spanish grand prix",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "name the driver of spanish grand prix [DES] 1994 spanish grand prix",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "name the driver of spanish grand prix",
            "1994 spanish grand prix"
        ],
        "subq2": []
    },
    {
        "ID": "3324",
        "question": "Where did Georges Wolinski and Judson Huss die",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Georges_Wolinski> <http://dbpedia.org/property/placeOfDeath> ?uri. <http://dbpedia.org/resource/Judson_Huss> <http://dbpedia.org/property/deathPlace> ?uri} ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "where did georges wolinski and judson huss die",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                }
            ]
        },
        "pred": "where did georges wolinski and judson huss die",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "where did georges wolinski and judson huss die"
        ],
        "subq2": []
    },
    {
        "ID": "2539",
        "question": "What is the parent company of the airline whose hub is in Detroit",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/hubs> <http://dbpedia.org/resource/Detroit> . ?x <http://dbpedia.org/ontology/parentCompany> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Airline>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "what is the parent company of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the airline whose hub is in detroit",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "what is the parent company of [INQL] the airline whose hub is in detroit [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "what is the parent company of [ENT]"
        ],
        "subq2": [
            "the airline whose hub is in detroit"
        ]
    },
    {
        "ID": "953",
        "question": "What is the appliance which uses the central processing unit manufactured by Marvell Technology Group",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/cpu> <http://dbpedia.org/resource/Marvell_Technology_Group>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/InformationAppliance>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "what is the central appliance which uses [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the unit which uses the central processing group technology",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "what is the central appliance which uses [INQL] the unit which uses the central processing group technology [INQR]",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "what is the central appliance which uses [ENT]"
        ],
        "subq2": [
            "the unit which uses the central processing group technology"
        ]
    },
    {
        "ID": "4330",
        "question": "Give me all magazines whose founder died in Berkeley, California",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Berkeley,_California> . ?uri <http://dbpedia.org/ontology/founder> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Magazine>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "give me all magazines whose founder [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "died in berkeley , california",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "give me all magazines whose founder [INQL] died in berkeley , california [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "give me all magazines whose founder [ENT]"
        ],
        "subq2": [
            "died in berkeley , california"
        ]
    },
    {
        "ID": "732",
        "question": "Which technological products were manufactured by Foxconn",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/manufacturer> <http://dbpedia.org/resource/Foxconn>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/InformationAppliance>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which products",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "were manufactured by foxconn",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which products [DES] were manufactured by foxconn",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "which products",
            "were manufactured by foxconn"
        ],
        "subq2": []
    },
    {
        "ID": "1156",
        "question": "Is George Lucas the cinematographer of 6-18-67",
        "sparql": "ASK WHERE { <http://dbpedia.org/resource/6-18-67> <http://dbpedia.org/property/cinematography> <http://dbpedia.org/resource/George_Lucas> }",
        "intent": "ASK",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "is the cinematographer of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the cinematographer of george 6-18-67",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "is the cinematographer of [INQL] the cinematographer of george 6-18-67 [INQR]",
        "compositionality_type_golden": "simple",
        "intent_golden": "ASK",
        "subq1": [
            "is the cinematographer of [ENT]"
        ],
        "subq2": [
            "the cinematographer of george 6-18-67"
        ]
    },
    {
        "ID": "3294",
        "question": "Whose predecessor had Jenny Macklin as a deputy",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/deputy> <http://dbpedia.org/resource/Jenny_Macklin> . ?uri <http://dbpedia.org/property/predecessor> ?x  . }",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "whose predecessor had jenny macklin",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "as a deputy",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "whose predecessor had jenny macklin [DES] as a deputy",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "whose predecessor had jenny macklin",
            "as a deputy"
        ],
        "subq2": []
    },
    {
        "ID": "2982",
        "question": "How many cars are similar to the ones assembled in the Jefferson North Assembly",
        "sparql": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/assembly> <http://dbpedia.org/resource/Jefferson_North_Assembly> . ?x <http://dbpedia.org/property/related> ?uri  . }",
        "intent": "COUNT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "how many cars are similar to [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the ones assembled in the jefferson north assembly",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "how many cars are similar to [INQL] the ones assembled in the jefferson north assembly [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "COUNT",
        "subq1": [
            "how many cars are similar to [ENT]"
        ],
        "subq2": [
            "the ones assembled in the jefferson north assembly"
        ]
    },
    {
        "ID": "2156",
        "question": "Count the number of region of AN/FSQ-7 Combat Direction Central",
        "sparql": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/AN/FSQ-7_Combat_Direction_Central> <http://dbpedia.org/ontology/region> ?uri  . }",
        "intent": "COUNT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "count the number of region",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "an/fsq-7 combat central region",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "count the number of region [DES] an/fsq-7 combat central region",
        "compositionality_type_golden": "simple",
        "intent_golden": "COUNT",
        "subq1": [
            "count the number of region",
            "an/fsq-7 combat central region"
        ],
        "subq2": []
    },
    {
        "ID": "1062",
        "question": "What are the common houses of US Congress and the Kansas Legislature",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/United_States_Congress> <http://dbpedia.org/property/houses> ?uri. <http://dbpedia.org/resource/Kansas_Legislature> <http://dbpedia.org/ontology/house> ?uri} ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what are the common houses of us congress and the kansas legislature",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                }
            ]
        },
        "pred": "what are the common houses of us congress and the kansas legislature",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "what are the common houses of us congress and the kansas legislature"
        ],
        "subq2": []
    },
    {
        "ID": "2616",
        "question": "Was John Muir the first one to ascend one of the peaks in the cathedral peak",
        "sparql": "ASK WHERE { <http://dbpedia.org/resource/Cathedral_Peak_(California)> <http://dbpedia.org/ontology/firstAscentPerson> <http://dbpedia.org/resource/John_Muir> }",
        "intent": "ASK",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "was muir the first peak to ascend [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "one of the first peak one of the cathedral peaks in the cathedral",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "was muir the first peak to ascend [INQL] one of the first peak one of the cathedral peaks in the cathedral [INQR]",
        "compositionality_type_golden": "simple",
        "intent_golden": "ASK",
        "subq1": [
            "was muir the first peak to ascend [ENT]"
        ],
        "subq2": [
            "one of the first peak one of the cathedral peaks in the cathedral"
        ]
    },
    {
        "ID": "1167",
        "question": "From how many different places have people gone to the Harward Medical School",
        "sparql": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/institution> <http://dbpedia.org/resource/Harvard_Medical_School> . ?x <http://dbpedia.org/ontology/birthPlace> ?uri  . }",
        "intent": "COUNT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "from how many different places have [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "people gone to the medical harward school",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "from how many different places have [INQL] people gone to the medical harward school [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "COUNT",
        "subq1": [
            "from how many different places have [ENT]"
        ],
        "subq2": [
            "people gone to the medical harward school"
        ]
    },
    {
        "ID": "3222",
        "question": "Name the television show where Mona Marshall has given voice and is distributed by Comedy Central",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/voices> <http://dbpedia.org/resource/Mona_Marshall> . ?uri <http://dbpedia.org/property/distributor> <http://dbpedia.org/resource/Comedy_Central>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "name the television show where mona has given by comedy central",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "and is distributed by comedy central",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "name the television show where mona has given by comedy central [DES] and is distributed by comedy central",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "name the television show where mona has given by comedy central",
            "and is distributed by comedy central"
        ],
        "subq2": []
    },
    {
        "ID": "3636",
        "question": "What are Jerry Bock's musicals based upon",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/music> <http://dbpedia.org/resource/Jerry_Bock> . ?x <http://dbpedia.org/ontology/basedOn> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Musical>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what are jerry bock 's musicals",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "based upon",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what are jerry bock 's musicals [DES] based upon",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "what are jerry bock 's musicals",
            "based upon"
        ],
        "subq2": []
    },
    {
        "ID": "2938",
        "question": "Give me list of people who were the first to climb a peak in the Yosemite park",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/locatedInArea> <http://dbpedia.org/resource/Yosemite_National_Park> . ?x <http://dbpedia.org/ontology/firstAscentPerson> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "give me the list of people who were the first peak to climb [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "a peak in the yosemite park",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "give me the list of people who were the first peak to climb [INQL] a peak in the yosemite park [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "give me the list of people who were the first peak to climb [ENT]"
        ],
        "subq2": [
            "a peak in the yosemite park"
        ]
    },
    {
        "ID": "4491",
        "question": "What is Naval Support Activity Naples a part of",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Naval_Support_Activity_Naples> <http://dbpedia.org/ontology/type> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what is naval support activity of naples a part of naples",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "which support activity of naples",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what is naval support activity of naples a part of naples [DES] which support activity of naples",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "what is naval support activity of naples a part of naples",
            "which support activity of naples"
        ],
        "subq2": []
    },
    {
        "ID": "3140",
        "question": "Who has allegiance is Colony of Virginia and buried in Montpelier",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/allegiance> <http://dbpedia.org/resource/Colony_of_Virginia> . ?uri <http://dbpedia.org/property/restingplace> <http://dbpedia.org/resource/Montpelier_(Orange,_Virginia)>  . }",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "who has allegiance is colony of virginia",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "and buried in montpelier",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "who has allegiance is colony of virginia [DES] and buried in montpelier",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "who has allegiance is colony of virginia",
            "and buried in montpelier"
        ],
        "subq2": []
    },
    {
        "ID": "143",
        "question": "Was Tim Gunn a guest on The Broken Code",
        "sparql": "ASK WHERE { <http://dbpedia.org/resource/The_Broken_Code> <http://dbpedia.org/property/guests> <http://dbpedia.org/resource/Tim_Gunn> }",
        "intent": "ASK",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "was tim gunn a guest",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "on the broken code",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "was tim gunn a guest [DES] on the broken code",
        "compositionality_type_golden": "simple",
        "intent_golden": "ASK",
        "subq1": [
            "was tim gunn a guest",
            "on the broken code"
        ],
        "subq2": []
    },
    {
        "ID": "3577",
        "question": "What is the successor of PlayStation 4",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/successor> <http://dbpedia.org/resource/PlayStation_4>  . }",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what is the successor of playstation 4",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                }
            ]
        },
        "pred": "what is the successor of playstation 4",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "what is the successor of playstation 4"
        ],
        "subq2": []
    },
    {
        "ID": "2782",
        "question": "What is the sovereign state of the Dafydd Benfras where Jasmine Lowson is also citizen of",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Dafydd_Benfras> <http://dbpedia.org/ontology/country> ?uri. <http://dbpedia.org/resource/Jasmine_Lowson> <http://dbpedia.org/ontology/citizenship> ?uri} ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what is the state of the dafydd benfras",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "where jasmine lowson is also citizen of",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what is the state of the dafydd benfras [DES] where jasmine lowson is also citizen of",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "what is the state of the dafydd benfras",
            "where jasmine lowson is also citizen of"
        ],
        "subq2": []
    },
    {
        "ID": "717",
        "question": "Who did their highschool from a school whose mascot was a fighting tiger",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/mascot> <http://dbpedia.org/resource/Fighting_Tiger> . ?uri <http://dbpedia.org/ontology/highschool> ?x  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "who did their highschool from [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "a school whose mascot was fighting tiger",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "who did their highschool from [INQL] a school whose mascot was fighting tiger [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "who did their highschool from [ENT]"
        ],
        "subq2": [
            "a school whose mascot was fighting tiger"
        ]
    },
    {
        "ID": "1819",
        "question": "Which destination of Emerald Air is also the city served by houston Fort Bend Airport",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Emerald_Air_(United_States)> <http://dbpedia.org/ontology/destination> ?uri. <http://dbpedia.org/resource/Houston_Fort_Bend_Airport> <http://dbpedia.org/property/cityServed> ?uri} ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which destination of emerald air",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "is also served by fort houston bend airport",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which destination of emerald air [DES] is also served by fort houston bend airport",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "which destination of emerald air",
            "is also served by fort houston bend airport"
        ],
        "subq2": []
    },
    {
        "ID": "2502",
        "question": "name the region served by Jerusalem Institue of Justice which was also the conflict region in GazaIsrael",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jerusalem_Institute_of_Justice> <http://dbpedia.org/ontology/service> ?uri. <http://dbpedia.org/resource/Gaza\u2013Israel_conflict> <http://dbpedia.org/property/result> ?uri} ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "name the region served by jerusalem institue of justice",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "which was also the conflict in gazaisrael region",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "name the region served by jerusalem institue of justice [DES] which was also the conflict in gazaisrael region",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "name the region served by jerusalem institue of justice",
            "which was also the conflict in gazaisrael region"
        ],
        "subq2": []
    },
    {
        "ID": "4360",
        "question": "Name the company whose key person is Raymond Conner and produces Boeing CH-47 Chinook",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/keyPeople> <http://dbpedia.org/resource/Raymond_Conner> . ?uri <http://dbpedia.org/property/products> <http://dbpedia.org/resource/Boeing_CH-47_Chinook>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "name the company whose key person is boeing",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "and produces boeing ch-47 chinook",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "name the company whose key person is boeing [DES] and produces boeing ch-47 chinook",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "name the company whose key person is boeing",
            "and produces boeing ch-47 chinook"
        ],
        "subq2": []
    },
    {
        "ID": "4171",
        "question": "What is the total number of professions in which someone who has suicided worked",
        "sparql": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/deathCause> <http://dbpedia.org/resource/Suicide> . ?x <http://dbpedia.org/ontology/occupation> ?uri  . }",
        "intent": "COUNT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "what is the total number of professions in which [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "which has someone suicided worked",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "what is the total number of professions in which [INQL] which has someone suicided worked [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "COUNT",
        "subq1": [
            "what is the total number of professions in which [ENT]"
        ],
        "subq2": [
            "which has someone suicided worked"
        ]
    },
    {
        "ID": "395",
        "question": "How many golf players are there in Arizona State Sun Devils",
        "sparql": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/college> <http://dbpedia.org/resource/Arizona_State_Sun_Devils>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GolfPlayer>}",
        "intent": "COUNT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "how many golf players",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "are there in arizona state sun devils",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "how many golf players [DES] are there in arizona state sun devils",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "COUNT",
        "subq1": [
            "how many golf players",
            "are there in arizona state sun devils"
        ],
        "subq2": []
    },
    {
        "ID": "4836",
        "question": "Count the number of characters in Batman Live",
        "sparql": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Batman_Live> <http://dbpedia.org/property/characters> ?uri  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>}",
        "intent": "COUNT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "count the number of characters in [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "live in batman",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "count the number of characters in [INQL] live in batman [INQR]",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "COUNT",
        "subq1": [
            "count the number of characters in [ENT]"
        ],
        "subq2": [
            "live in batman"
        ]
    },
    {
        "ID": "4492",
        "question": "List the services provided by the company which provides Microsoft azure as one of the service",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/services> <http://dbpedia.org/resource/Microsoft_Azure> . ?x <http://dbpedia.org/property/services> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "list the services provided by [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the company which provides microsoft azure as one of the services",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "list the services provided by [INQL] the company which provides microsoft azure as one of the services [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "list the services provided by [ENT]"
        ],
        "subq2": [
            "the company which provides microsoft azure as one of the services"
        ]
    },
    {
        "ID": "1365",
        "question": "What are some team members of the team based in Camp Nou",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/homeStadium> <http://dbpedia.org/resource/Camp_Nou> . ?x <http://dbpedia.org/property/name> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "what are some team members of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the team based in nou camp",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "what are some team members of [INQL] the team based in nou camp [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "what are some team members of [ENT]"
        ],
        "subq2": [
            "the team based in nou camp"
        ]
    },
    {
        "ID": "4558",
        "question": "Which universities are also known as the Tulane Green wave",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/nickname> <http://dbpedia.org/resource/Tulane_Green_Wave>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which universities",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "are also known as the tulane wave green",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which universities [DES] are also known as the tulane wave green",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "which universities",
            "are also known as the tulane wave green"
        ],
        "subq2": []
    },
    {
        "ID": "595",
        "question": "What is the branch of the politicians whose governor is Bill Clements",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/governor> <http://dbpedia.org/resource/Bill_Clements> . ?x <http://dbpedia.org/property/branch> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "what is the branch of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the politicians whose governor is bill clements",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "what is the branch of [INQL] the politicians whose governor is bill clements [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "what is the branch of [ENT]"
        ],
        "subq2": [
            "the politicians whose governor is bill clements"
        ]
    },
    {
        "ID": "3952",
        "question": "Who composed the episode after which came Butter's Very own Episode",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/subsequentWork> <http://dbpedia.org/resource/Butters'_Very_Own_Episode> . ?x <http://dbpedia.org/ontology/musicComposer> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionEpisode>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "who composed [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the episode which came butter episode 's very episode",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "who composed [INQL] the episode which came butter episode 's very episode [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "who composed [ENT]"
        ],
        "subq2": [
            "the episode which came butter episode 's very episode"
        ]
    },
    {
        "ID": "2914",
        "question": "What is the location country of Teperberg 1870",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Teperberg_1870> <http://dbpedia.org/property/locationCountry> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what is the location country of teperberg 1870",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "what is the location country of teperberg",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what is the location country of teperberg 1870 [DES] what is the location country of teperberg",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "what is the location country of teperberg 1870",
            "what is the location country of teperberg"
        ],
        "subq2": []
    },
    {
        "ID": "2326",
        "question": "List the software developed by Shawn Fanning",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Shawn_Fanning>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "list the software",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "developed by shawn fanning",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "list the software [DES] developed by shawn fanning",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "list the software",
            "developed by shawn fanning"
        ],
        "subq2": []
    },
    {
        "ID": "3766",
        "question": "What is the stylistic origin of the music genres where the Bass guitar is important",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/instruments> <http://dbpedia.org/resource/Bass_guitar> . ?x <http://dbpedia.org/ontology/stylisticOrigin> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicGenre>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "what is the stylistic origin of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the music genres where the bass guitar is important",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "what is the stylistic origin of [INQL] the music genres where the bass guitar is important [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "what is the stylistic origin of [ENT]"
        ],
        "subq2": [
            "the music genres where the bass guitar is important"
        ]
    },
    {
        "ID": "3440",
        "question": "What are the other notable work of the executive producer of The Runaway Bride episode of Doctor Who",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Runaway_Bride_(Doctor_Who)> <http://dbpedia.org/ontology/executiveProducer> ?x . ?x <http://dbpedia.org/property/notableworks> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "what are the other episode of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the executive producer of the bride of runaway doctor who are runaway",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "what are the other episode of [INQL] the executive producer of the bride of runaway doctor who are runaway [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "what are the other episode of [ENT]"
        ],
        "subq2": [
            "the executive producer of the bride of runaway doctor who are runaway"
        ]
    },
    {
        "ID": "3851",
        "question": "Who was the voice actor of allen walker also gave voice to kimihiro watanuki",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Allen_Walker> <http://dbpedia.org/ontology/voice> ?uri. <http://dbpedia.org/resource/Kimihiro_Watanuki> <http://dbpedia.org/ontology/voice> ?uri . }",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "who was the actor of allen",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "also voice to kimihiro walker watanuki",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "who was the actor of allen [DES] also voice to kimihiro walker watanuki",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "who was the actor of allen",
            "also voice to kimihiro walker watanuki"
        ],
        "subq2": []
    },
    {
        "ID": "4132",
        "question": "Name the office holder whose final resting place is North Bend and was part of Siege of fort recovery conflict",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Siege_of_Fort_Recovery> . ?uri <http://dbpedia.org/property/restingplace> <http://dbpedia.org/resource/North_Bend,_Ohio>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "name the office holder whose final resting place is north bend and was part of siege of fort recovery",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                }
            ]
        },
        "pred": "name the office holder whose final resting place is north bend and was part of siege of fort recovery",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "name the office holder whose final resting place is north bend and was part of siege of fort recovery"
        ],
        "subq2": []
    },
    {
        "ID": "4591",
        "question": "What type of engines are utilised by Purvis Eureka",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Purvis_Eureka> <http://dbpedia.org/property/engine> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what type of engines",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "are utilised by purvis eureka",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what type of engines [DES] are utilised by purvis eureka",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "what type of engines",
            "are utilised by purvis eureka"
        ],
        "subq2": []
    },
    {
        "ID": "2143",
        "question": "Who edited Easy street",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Easy_Street_(film)> <http://dbpedia.org/ontology/editing> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "who edited [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "edited easy",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "who edited [INQL] edited easy [INQR]",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "who edited [ENT]"
        ],
        "subq2": [
            "edited easy"
        ]
    },
    {
        "ID": "1571",
        "question": "Who were involved in the wars where Jonathan Haskell battled",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jonathan_Haskell> <http://dbpedia.org/property/battles> ?x . ?x <http://dbpedia.org/property/combatant> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "who were involved in [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the wars where jonathan haskell battled",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "who were involved in [INQL] the wars where jonathan haskell battled [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "who were involved in [ENT]"
        ],
        "subq2": [
            "the wars where jonathan haskell battled"
        ]
    },
    {
        "ID": "4079",
        "question": "In which city was the film star of Singhasan Battisi born",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Singhasan_Battisi_(TV_series)> <http://dbpedia.org/ontology/starring> ?x . ?x <http://dbpedia.org/property/birthPlace> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "in which city was [ENT] born",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the film of singhasan battisi",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "in which city was [INQL] the film of singhasan battisi [INQR] born",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "in which city was [ENT] born"
        ],
        "subq2": [
            "the film of singhasan battisi"
        ]
    },
    {
        "ID": "1122",
        "question": "What are the reason served by Toll Global Express which is also the country of LPGA",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Toll_Global_Express> <http://dbpedia.org/ontology/regionServed> ?uri. <http://dbpedia.org/resource/LPGA> <http://dbpedia.org/ontology/country> ?uri} ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what are the reason served by toll global",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "which is also the country of lpga",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what are the reason served by toll global [DES] which is also the country of lpga",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "what are the reason served by toll global",
            "which is also the country of lpga"
        ],
        "subq2": []
    },
    {
        "ID": "2786",
        "question": "List the territory of Tonkin Campaign",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Tonkin_Campaign> <http://dbpedia.org/ontology/territory> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "list the territory of tonkin campaign",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "list the tonkin campaign",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "list the territory of tonkin campaign [DES] list the tonkin campaign",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "list the territory of tonkin campaign",
            "list the tonkin campaign"
        ],
        "subq2": []
    },
    {
        "ID": "2967",
        "question": "For which teams did Ryan Powell play for",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ryan_Powell_(lacrosse)> <http://dbpedia.org/ontology/team> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "for which teams",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "did ryan powell play for",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "for which teams [DES] did ryan powell play for",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "for which teams",
            "did ryan powell play for"
        ],
        "subq2": []
    },
    {
        "ID": "2504",
        "question": "What are the awards won by the person who wrote the screen play for Lost in Rio",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/OSS_117:_Lost_in_Rio> <http://dbpedia.org/property/screenplay> ?x . ?x <http://dbpedia.org/property/awards> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "what are the awards won by [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the person who wrote the screen for rio play for in rio",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "what are the awards won by [INQL] the person who wrote the screen for rio play for in rio [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "what are the awards won by [ENT]"
        ],
        "subq2": [
            "the person who wrote the screen for rio play for in rio"
        ]
    },
    {
        "ID": "3465",
        "question": "Total number of places where people drafted in the detroit pistons have died",
        "sparql": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/draftTeam> <http://dbpedia.org/resource/Detroit_Pistons> . ?x <http://dbpedia.org/property/placeOfDeath> ?uri  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Location>}",
        "intent": "COUNT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "total number of places where [ENT] have died",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "where the detroit pistons have died",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "total number of places where [INQL] where the detroit pistons have died [INQR] have died",
        "compositionality_type_golden": "composition",
        "intent_golden": "COUNT",
        "subq1": [
            "total number of places where [ENT] have died"
        ],
        "subq2": [
            "where the detroit pistons have died"
        ]
    },
    {
        "ID": "675",
        "question": "What band made The trial and One of these days song",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Trial_(song)> <http://dbpedia.org/property/artist> ?uri. <http://dbpedia.org/resource/One_of_These_Days_(instrumental)> <http://dbpedia.org/ontology/musicalArtist> ?uri . }",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what band made the trial",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "and one of these days and one of these",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what band made the trial [DES] and one of these days and one of these",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "what band made the trial",
            "and one of these days and one of these"
        ],
        "subq2": []
    },
    {
        "ID": "2808",
        "question": "Name the club of Julie Hastings",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Julie_Hastings> <http://dbpedia.org/ontology/club> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "name the club of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "julie club",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "name the club of [INQL] julie club [INQR]",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "name the club of [ENT]"
        ],
        "subq2": [
            "julie club"
        ]
    },
    {
        "ID": "3348",
        "question": "From where does the river Upper Neretva start flowing",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Upper_Neretva> <http://dbpedia.org/ontology/riverMouth> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "from where does [ENT] start",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the river start neretva upper flowing",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "from where does [INQL] the river start neretva upper flowing [INQR] start",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "from where does [ENT] start"
        ],
        "subq2": [
            "the river start neretva upper flowing"
        ]
    },
    {
        "ID": "728",
        "question": "Name the university located in Indiana and has affiliations with Kaplan, Inc",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/campus> <http://dbpedia.org/resource/Indiana> . ?uri <http://dbpedia.org/property/affiliations> <http://dbpedia.org/resource/Kaplan,_Inc.>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "name the university located in kaplan",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "and has affiliations with kaplan , inc",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "name the university located in kaplan [DES] and has affiliations with kaplan , inc",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "name the university located in kaplan",
            "and has affiliations with kaplan , inc"
        ],
        "subq2": []
    },
    {
        "ID": "412",
        "question": "List the newspapers whose offices are situated in 1211 Avenue of the Americas",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/1211_Avenue_of_the_Americas>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Newspaper>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "list the newspapers whose offices [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "are situated in 1211 avenue",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "list the newspapers whose offices [INQL] are situated in 1211 avenue [INQR]",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "list the newspapers whose offices [ENT]"
        ],
        "subq2": [
            "are situated in 1211 avenue"
        ]
    },
    {
        "ID": "3146",
        "question": "Was Morrissey a member of the Smiths",
        "sparql": "ASK WHERE { <http://dbpedia.org/resource/The_Smiths> <http://dbpedia.org/ontology/formerBandMember> <http://dbpedia.org/resource/Morrissey> }",
        "intent": "ASK",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "was a member of the smiths",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "of the smiths",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "was a member of the smiths [DES] of the smiths",
        "compositionality_type_golden": "simple",
        "intent_golden": "ASK",
        "subq1": [
            "was a member of the smiths",
            "of the smiths"
        ],
        "subq2": []
    },
    {
        "ID": "1516",
        "question": "Did Phillippe Cabot go to Columbia for studying",
        "sparql": "ASK WHERE { <http://dbpedia.org/resource/Phillippe_Cabot> <http://dbpedia.org/ontology/university> <http://dbpedia.org/resource/Columbia_University> }",
        "intent": "ASK",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "phillippe cabot go to columbia for",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "did columbia cabot cabot",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "phillippe cabot go to columbia for [DES] did columbia cabot cabot",
        "compositionality_type_golden": "simple",
        "intent_golden": "ASK",
        "subq1": [
            "phillippe cabot go to columbia for",
            "did columbia cabot cabot"
        ],
        "subq2": []
    },
    {
        "ID": "825",
        "question": "What river originates in Kingston Ontario",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/sourceLocation> <http://dbpedia.org/resource/Kingston,_Ontario>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what river",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "originates in kingston ontario",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what river [DES] originates in kingston ontario",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "what river",
            "originates in kingston ontario"
        ],
        "subq2": []
    },
    {
        "ID": "3267",
        "question": "By what style was Providence Chapel, Charlwood made",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Providence_Chapel,_Charlwood> <http://dbpedia.org/property/style> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "by what style",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "was providence chapel , charlwood made",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "by what style [DES] was providence chapel , charlwood made",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "by what style",
            "was providence chapel , charlwood made"
        ],
        "subq2": []
    },
    {
        "ID": "3974",
        "question": "For how many PMs did the politician work, whose successor was Kingsley Wood",
        "sparql": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Kingsley_Wood> <http://dbpedia.org/ontology/successor> ?x . ?x <http://dbpedia.org/property/primeminister> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
        "intent": "COUNT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "for how many pms did the politician [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "whose successor was kingsley wood",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "for how many pms did the politician [INQL] whose successor was kingsley wood [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "COUNT",
        "subq1": [
            "for how many pms did the politician [ENT]"
        ],
        "subq2": [
            "whose successor was kingsley wood"
        ]
    },
    {
        "ID": "616",
        "question": "list some companies founded by Jim Harris",
        "sparql": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/foundedBy> <http://dbpedia.org/resource/Jim_Harris_(entrepreneur)> } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "list some companies",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "founded by jim harris",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "list some companies [DES] founded by jim harris",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "list some companies",
            "founded by jim harris"
        ],
        "subq2": []
    },
    {
        "ID": "114",
        "question": "Give me the total number of employer of the engineers whose one of the employer is McDonnell Aircraft",
        "sparql": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/employer> <http://dbpedia.org/resource/McDonnell_Aircraft> . ?x <http://dbpedia.org/ontology/employer> ?uri }",
        "intent": "COUNT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "give me the total number of employer of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the engineers whose one of the employer is mcdonnell aircraft",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "give me the total number of employer of [INQL] the engineers whose one of the employer is mcdonnell aircraft [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "COUNT",
        "subq1": [
            "give me the total number of employer of [ENT]"
        ],
        "subq2": [
            "the engineers whose one of the employer is mcdonnell aircraft"
        ]
    },
    {
        "ID": "417",
        "question": "How many developers have games where I can hear Lightning McQueen",
        "sparql": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Lightning_McQueen> <http://dbpedia.org/ontology/voice> ?x . ?x <http://dbpedia.org/ontology/developer> ?uri  . }",
        "intent": "COUNT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "how many developers have [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "games where i can hear lightning mcqueen",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "how many developers have [INQL] games where i can hear lightning mcqueen [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "COUNT",
        "subq1": [
            "how many developers have [ENT]"
        ],
        "subq2": [
            "games where i can hear lightning mcqueen"
        ]
    },
    {
        "ID": "3069",
        "question": "Which university's affiliation is with Kalpan, Inc. and has campus at Iowa",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/affiliations> <http://dbpedia.org/resource/Kaplan,_Inc.> . ?uri <http://dbpedia.org/ontology/campus> <http://dbpedia.org/resource/Iowa>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which university 's affiliation is kalpan",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "and has campus at iowa",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which university 's affiliation is kalpan [DES] and has campus at iowa",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "which university 's affiliation is kalpan",
            "and has campus at iowa"
        ],
        "subq2": []
    },
    {
        "ID": "1625",
        "question": "How many record labels publish works of Jazz fusion",
        "sparql": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/genre> <http://dbpedia.org/resource/Jazz_fusion> . ?x <http://dbpedia.org/ontology/recordLabel> ?uri  . }",
        "intent": "COUNT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "how many labels publish [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "jazz publish works",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "how many labels publish [INQL] jazz publish works [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "COUNT",
        "subq1": [
            "how many labels publish [ENT]"
        ],
        "subq2": [
            "jazz publish works"
        ]
    },
    {
        "ID": "4950",
        "question": "What are the regions in which the distributor of Secrets and Lies serves",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Secrets_and_Lies_(U.S._TV_series)> <http://dbpedia.org/ontology/distributor> ?x . ?x <http://dbpedia.org/ontology/regionServed> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "what are the regions in which [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "which serves the distributor of secrets and lies",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "what are the regions in which [INQL] which serves the distributor of secrets and lies [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "what are the regions in which [ENT]"
        ],
        "subq2": [
            "which serves the distributor of secrets and lies"
        ]
    },
    {
        "ID": "4185",
        "question": "List all the writers of the comics which has Robert Bernstein as one of the writer",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/writers> <http://dbpedia.org/resource/Robert_Bernstein_(comics)> . ?x <http://dbpedia.org/property/writers> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Comic>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "list all the writers of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the writer which has robert bernstein as one of the comics",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "list all the writers of [INQL] the writer which has robert bernstein as one of the comics [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "list all the writers of [ENT]"
        ],
        "subq2": [
            "the writer which has robert bernstein as one of the comics"
        ]
    },
    {
        "ID": "2896",
        "question": "What are the settlements whose neighboring municipalities is Lancy",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/neighboringMunicipalities> <http://dbpedia.org/resource/Lancy>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what are the settlements",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "whose municipalities is lancy",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what are the settlements [DES] whose municipalities is lancy",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "what are the settlements",
            "whose municipalities is lancy"
        ],
        "subq2": []
    },
    {
        "ID": "4671",
        "question": "Count the total number of hometown of the gymnasts whose one of the hometown in Russia",
        "sparql": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/hometown> <http://dbpedia.org/resource/Russia> . ?x <http://dbpedia.org/property/hometown> ?uri }",
        "intent": "COUNT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "count the total number of hometown of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the gymnasts whose one of the hometown in russia",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "count the total number of hometown of [INQL] the gymnasts whose one of the hometown in russia [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "COUNT",
        "subq1": [
            "count the total number of hometown of [ENT]"
        ],
        "subq2": [
            "the gymnasts whose one of the hometown in russia"
        ]
    },
    {
        "ID": "2082",
        "question": "In which states does the river flow whose left tributary is Toms Creek",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Toms_Creek_(Monocacy_River)> <http://dbpedia.org/ontology/leftTributary> ?x . ?x <http://dbpedia.org/ontology/state> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "in which states does [ENT] flow",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the river whose tributary is left toms creek",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "in which states does [INQL] the river whose tributary is left toms creek [INQR] flow",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "in which states does [ENT] flow"
        ],
        "subq2": [
            "the river whose tributary is left toms creek"
        ]
    },
    {
        "ID": "753",
        "question": "Name the river whose source mountain is Baikal Mountains and mouth location is Arctic Ocean",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/sourceMountain> <http://dbpedia.org/resource/Baikal_Mountains> . ?uri <http://dbpedia.org/property/mouthLocation> <http://dbpedia.org/resource/Arctic_Ocean>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "name the river whose source mountain is baikal mountains",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "and location is arctic ocean",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "name the river whose source mountain is baikal mountains [DES] and location is arctic ocean",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "name the river whose source mountain is baikal mountains",
            "and location is arctic ocean"
        ],
        "subq2": []
    },
    {
        "ID": "2546",
        "question": "Count the PhD students whose thesis are supervised by National Medal of Science winners",
        "sparql": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/prizes> <http://dbpedia.org/resource/National_Medal_of_Science> . ?x <http://dbpedia.org/property/doctoralStudents> ?uri  . }",
        "intent": "COUNT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "count the phd whose medal [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "are supervised national medal of supervised",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "count the phd whose medal [INQL] are supervised national medal of supervised [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "COUNT",
        "subq1": [
            "count the phd whose medal [ENT]"
        ],
        "subq2": [
            "are supervised national medal of supervised"
        ]
    },
    {
        "ID": "3969",
        "question": "Which broadcast area of CFRX is also the place of birth of Anthony Raymond",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/CFRX> <http://dbpedia.org/ontology/broadcastArea> ?uri. <http://dbpedia.org/resource/Anthony_Raymond_Ceresko> <http://dbpedia.org/property/placeOfBirth> ?uri} ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which broadcast area of cfrx",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "is also the place of birth of raymond anthony",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which broadcast area of cfrx [DES] is also the place of birth of raymond anthony",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "which broadcast area of cfrx",
            "is also the place of birth of raymond anthony"
        ],
        "subq2": []
    },
    {
        "ID": "3373",
        "question": "Count the total number of cast member of the television shows whose actress is Joey McIntyre",
        "sparql": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Joey_McIntyre> . ?x <http://dbpedia.org/property/starring> ?uri }",
        "intent": "COUNT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "count the total number of actress of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the television shows whose cast is joey mcintyre",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "count the total number of actress of [INQL] the television shows whose cast is joey mcintyre [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "COUNT",
        "subq1": [
            "count the total number of actress of [ENT]"
        ],
        "subq2": [
            "the television shows whose cast is joey mcintyre"
        ]
    },
    {
        "ID": "4107",
        "question": "List all the awards won by the artist who has won SIGGRAPH",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/SIGGRAPH> . ?x <http://dbpedia.org/ontology/award> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "list all the awards won by [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the artist who has won siggraph",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "list all the awards won by [INQL] the artist who has won siggraph [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "list all the awards won by [ENT]"
        ],
        "subq2": [
            "the artist who has won siggraph"
        ]
    },
    {
        "ID": "2444",
        "question": "Where was david Scherman trained",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/David_Scherman> <http://dbpedia.org/property/training> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "where was david scherman trained",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "where was david scherman",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "where was david scherman trained [DES] where was david scherman",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "where was david scherman trained",
            "where was david scherman"
        ],
        "subq2": []
    },
    {
        "ID": "4380",
        "question": "Count the battles fought by Raoul Magrin-Vernerey",
        "sparql": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Raoul_Magrin-Vernerey> <http://dbpedia.org/property/battles> ?uri  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>}",
        "intent": "COUNT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "count the battles",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "fought by raoul magrin-vernerey",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "count the battles [DES] fought by raoul magrin-vernerey",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "COUNT",
        "subq1": [
            "count the battles",
            "fought by raoul magrin-vernerey"
        ],
        "subq2": []
    },
    {
        "ID": "1066",
        "question": "Which athlete was the flag bearer for Switzerland in 2004 and 2008 summer Olympics",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Switzerland_at_the_2004_Summer_Olympics> <http://dbpedia.org/property/flagbearer> ?uri. <http://dbpedia.org/resource/Switzerland_at_the_2008_Summer_Olympics> <http://dbpedia.org/property/flagbearer> ?uri . }",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which athlete",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "was the flag for switzerland summer olympics and 2008 in 2004",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which athlete [DES] was the flag for switzerland summer olympics and 2008 in 2004",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "which athlete",
            "was the flag for switzerland summer olympics and 2008 in 2004"
        ],
        "subq2": []
    },
    {
        "ID": "3913",
        "question": "Which nationalist group was responsible for foundation of Young Lords",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Young_Lords> <http://dbpedia.org/property/international> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which nationalist group",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "was responsible for young of young lords lords",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which nationalist group [DES] was responsible for young of young lords lords",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "which nationalist group",
            "was responsible for young of young lords lords"
        ],
        "subq2": []
    },
    {
        "ID": "3498",
        "question": "What award was won by the father of Angelina Jolie",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/children> <http://dbpedia.org/resource/Angelina_Jolie> . ?x <http://dbpedia.org/ontology/award> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "what award was won by [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the father of angelina jolie",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "what award was won by [INQL] the father of angelina jolie [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "what award was won by [ENT]"
        ],
        "subq2": [
            "the father of angelina jolie"
        ]
    },
    {
        "ID": "2738",
        "question": "What are the software whose programming language are Multilingual",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/language> <http://dbpedia.org/resource/Multilingualism> . ?uri <http://dbpedia.org/property/programmingLanguage> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what are the software",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "whose programming language are multilingual",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what are the software [DES] whose programming language are multilingual",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "what are the software",
            "whose programming language are multilingual"
        ],
        "subq2": []
    },
    {
        "ID": "4000",
        "question": "Was Marshall Arisman the cover artist in american psycho",
        "sparql": "ASK WHERE { <http://dbpedia.org/resource/American_Psycho> <http://dbpedia.org/property/coverArtist> <http://dbpedia.org/resource/Marshall_Arisman> }",
        "intent": "ASK",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "was the cover artist",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "in american psycho marshall",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "was the cover artist [DES] in american psycho marshall",
        "compositionality_type_golden": "simple",
        "intent_golden": "ASK",
        "subq1": [
            "was the cover artist",
            "in american psycho marshall"
        ],
        "subq2": []
    },
    {
        "ID": "1568",
        "question": "Which birthplace of Liliya Lobanova is also the location of the Snake Island",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Liliya_Lobanova> <http://dbpedia.org/property/birthplace> ?uri. <http://dbpedia.org/resource/Snake_Island_(Black_Sea)> <http://dbpedia.org/property/locationCountry> ?uri} ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which birthplace of liliya lobanova",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "is also the location of the snake island",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which birthplace of liliya lobanova [DES] is also the location of the snake island",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "which birthplace of liliya lobanova",
            "is also the location of the snake island"
        ],
        "subq2": []
    },
    {
        "ID": "2427",
        "question": "Count all the stateless people",
        "sparql": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/citizenship> <http://dbpedia.org/resource/Statelessness>  . }",
        "intent": "COUNT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "count all the stateless [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the people",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "count all the stateless [INQL] the people [INQR]",
        "compositionality_type_golden": "simple",
        "intent_golden": "COUNT",
        "subq1": [
            "count all the stateless [ENT]"
        ],
        "subq2": [
            "the people"
        ]
    },
    {
        "ID": "3746",
        "question": "Josef Bhler belongs to which political party",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Josef_B\u00fchler> <http://dbpedia.org/ontology/occupation> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "josef bhler to",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "which political party belongs to which political party",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "josef bhler to [DES] which political party belongs to which political party",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "josef bhler to",
            "which political party belongs to which political party"
        ],
        "subq2": []
    },
    {
        "ID": "4639",
        "question": "Where did the war take place where one of the commander was Zuo Zongtang",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Zuo_Zongtang> . ?x <http://dbpedia.org/ontology/territory> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "where did the war take place [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "where one of the commander was zuo zongtang",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "where did the war take place [INQL] where one of the commander was zuo zongtang [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "where did the war take place [ENT]"
        ],
        "subq2": [
            "where one of the commander was zuo zongtang"
        ]
    },
    {
        "ID": "1687",
        "question": "In which place is the company which is known for Barbara bestor located",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Barbara_Bestor> <http://dbpedia.org/property/knownFor> ?x . ?x <http://dbpedia.org/ontology/location> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "in which place is [ENT] located",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the company which is known for barbara bestor",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "in which place is [INQL] the company which is known for barbara bestor [INQR] located",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "in which place is [ENT] located"
        ],
        "subq2": [
            "the company which is known for barbara bestor"
        ]
    },
    {
        "ID": "851",
        "question": "What novels are belong to the genre of Utopian and dystopian fiction",
        "sparql": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/literaryGenre> <http://dbpedia.org/resource/Utopian_and_dystopian_fiction> } ",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "what fiction belong to [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the fiction novels and dystopian dystopian",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "what fiction belong to [INQL] the fiction novels and dystopian dystopian [INQR]",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "what fiction belong to [ENT]"
        ],
        "subq2": [
            "the fiction novels and dystopian dystopian"
        ]
    },
    {
        "ID": "3546",
        "question": "What are the movies written by Nick Castle",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/writer> <http://dbpedia.org/resource/Nick_Castle>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what are the movies",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "written by nick castle",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what are the movies [DES] written by nick castle",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "what are the movies",
            "written by nick castle"
        ],
        "subq2": []
    },
    {
        "ID": "895",
        "question": "On which river are there things belonging to zambezi river authority",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/owner> <http://dbpedia.org/resource/Zambezi_River_Authority> . ?x <http://dbpedia.org/ontology/river> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "on which things are there [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "river belonging to zambezi authority",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "on which things are there [INQL] river belonging to zambezi authority [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "on which things are there [ENT]"
        ],
        "subq2": [
            "river belonging to zambezi authority"
        ]
    },
    {
        "ID": "4592",
        "question": "Is Egyptian Arabic belong to the Central Semitic Languages family",
        "sparql": "ASK WHERE { <http://dbpedia.org/resource/Egyptian_Arabic> <http://dbpedia.org/ontology/languageFamily> <http://dbpedia.org/resource/Central_Semitic_languages> }",
        "intent": "ASK",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "is the languages belong to the egyptian semitic languages",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "egyptian arabic family languages",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "is the languages belong to the egyptian semitic languages [DES] egyptian arabic family languages",
        "compositionality_type_golden": "simple",
        "intent_golden": "ASK",
        "subq1": [
            "is the languages belong to the egyptian semitic languages",
            "egyptian arabic family languages"
        ],
        "subq2": []
    },
    {
        "ID": "335",
        "question": "Who is the artist of Sings Kristofferson and also performed Milk Cow Blues at least once",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Sings_Kristofferson> <http://dbpedia.org/property/artist> ?uri. <http://dbpedia.org/resource/Milk_Cow_Blues> <http://dbpedia.org/ontology/artist> ?uri . }",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "who is the artist of sings",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "and also performed at least once",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "who is the artist of sings [DES] and also performed at least once",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "who is the artist of sings",
            "and also performed at least once"
        ],
        "subq2": []
    },
    {
        "ID": "2839",
        "question": "Who has fought in wars under commander Arthur St Clair",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_St._Clair> . ?x <http://dbpedia.org/property/combatant> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "who has fought in [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "wars under arthur clair",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "who has fought in [INQL] wars under arthur clair [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "who has fought in [ENT]"
        ],
        "subq2": [
            "wars under arthur clair"
        ]
    },
    {
        "ID": "3087",
        "question": "Which Paramount TV show was produced by Glen and Les Charles",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/executiveProducer> <http://dbpedia.org/resource/Glen_and_Les_Charles> . ?uri <http://dbpedia.org/property/company> <http://dbpedia.org/resource/Paramount_Television>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which tv show",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "was produced by paramount and les charles",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which tv show [DES] was produced by paramount and les charles",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "which tv show",
            "was produced by paramount and les charles"
        ],
        "subq2": []
    },
    {
        "ID": "1348",
        "question": "Name some basketball players who have played for chicago bulls",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/team> <http://dbpedia.org/resource/Chicago_Bulls>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BasketballPlayer>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "name some basketball players",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "who have played for chicago bulls",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "name some basketball players [DES] who have played for chicago bulls",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "name some basketball players",
            "who have played for chicago bulls"
        ],
        "subq2": []
    },
    {
        "ID": "1015",
        "question": "Which owner of the national Herald india is the leader of Kumta",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_National_Herald_(India)> <http://dbpedia.org/ontology/owner> ?uri. <http://dbpedia.org/resource/Kumta> <http://dbpedia.org/property/governmentType> ?uri} ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which owner of the national national",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "is the herald leader of india",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which owner of the national national [DES] is the herald leader of india",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "which owner of the national national",
            "is the herald leader of india"
        ],
        "subq2": []
    },
    {
        "ID": "2816",
        "question": "Was Francisco Pizarro of the monarch of Charles 5, of the roman empire",
        "sparql": "ASK WHERE { <http://dbpedia.org/resource/Francisco_Pizarro> <http://dbpedia.org/ontology/monarch> <http://dbpedia.org/resource/Charles_V,_Holy_Roman_Emperor> }",
        "intent": "ASK",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "was pizarro of the monarch of roman , empire of the charles 5",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                }
            ]
        },
        "pred": "was pizarro of the monarch of roman , empire of the charles 5",
        "compositionality_type_golden": "simple",
        "intent_golden": "ASK",
        "subq1": [
            "was pizarro of the monarch of roman , empire of the charles 5"
        ],
        "subq2": []
    },
    {
        "ID": "1631",
        "question": "What is the largest city of Pulau Ubin",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Pulau_Ubin> <http://dbpedia.org/ontology/largestCity> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what is the largest city of pulau ubin",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "pulau ubin",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what is the largest city of pulau ubin [DES] pulau ubin",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "what is the largest city of pulau ubin",
            "pulau ubin"
        ],
        "subq2": []
    },
    {
        "ID": "2489",
        "question": "What is the origin of the musical artist of A Todo Romantic Style",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/A_Todo_Romantic_Style> <http://dbpedia.org/property/artist> ?x . ?x <http://dbpedia.org/property/origin> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "what is the origin of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the musical artist of a todo romantic style",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "what is the origin of [INQL] the musical artist of a todo romantic style [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "what is the origin of [ENT]"
        ],
        "subq2": [
            "the musical artist of a todo romantic style"
        ]
    },
    {
        "ID": "3730",
        "question": "Horses sired by Karinga Bay have participated in which races",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/sire> <http://dbpedia.org/resource/Karinga_Bay> . ?x <http://dbpedia.org/property/race> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Horse>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "[ENT] have participated in which races",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "sired bay horses",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "[INQL] sired bay horses [INQR] have participated in which races",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "[ENT] have participated in which races"
        ],
        "subq2": [
            "sired bay horses"
        ]
    },
    {
        "ID": "3251",
        "question": "What is the alma mater of the scientists known for String theory",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/knownFor> <http://dbpedia.org/resource/String_theory> . ?x <http://dbpedia.org/property/almaMater> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "what is the alma mater of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the scientists known for string theory",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "what is the alma mater of [INQL] the scientists known for string theory [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "what is the alma mater of [ENT]"
        ],
        "subq2": [
            "the scientists known for string theory"
        ]
    },
    {
        "ID": "4634",
        "question": "How many apes are there",
        "sparql": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/family> <http://dbpedia.org/resource/Ape>  . }",
        "intent": "COUNT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "how many apes are there",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "how many apes are there",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "how many apes are there [DES] how many apes are there",
        "compositionality_type_golden": "simple",
        "intent_golden": "COUNT",
        "subq1": [
            "how many apes are there",
            "how many apes are there"
        ],
        "subq2": []
    },
    {
        "ID": "2070",
        "question": "What is a common nickname given to both Lyons Township high school and the wheaton college in massachusetts",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lyons_Township_High_School> <http://dbpedia.org/property/nickname> ?uri. <http://dbpedia.org/resource/Wheaton_College_(Massachusetts)> <http://dbpedia.org/property/nickname> ?uri . }",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what is a common nickname given both to school township and the lyons township in massachusetts high school",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                }
            ]
        },
        "pred": "what is a common nickname given both to school township and the lyons township in massachusetts high school",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "what is a common nickname given both to school township and the lyons township in massachusetts high school"
        ],
        "subq2": []
    },
    {
        "ID": "4452",
        "question": "Where do beauty queens with brown hair reside",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/hairColor> <http://dbpedia.org/resource/Brown_hair> . ?x <http://dbpedia.org/ontology/residence> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "where do [ENT] reside",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "beauty queens with brown hair",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "where do [INQL] beauty queens with brown hair [INQR] reside",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "where do [ENT] reside"
        ],
        "subq2": [
            "beauty queens with brown hair"
        ]
    },
    {
        "ID": "4882",
        "question": "List the television shows one of whose distributor's divisions is Warner Bros. Animation",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/divisions> <http://dbpedia.org/resource/Warner_Bros._Animation> . ?uri <http://dbpedia.org/property/distributor> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "list the television shows one of whose distributor 's [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "whose distributor is warner bros. animation",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "list the television shows one of whose distributor 's [INQL] whose distributor is warner bros. animation [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "list the television shows one of whose distributor 's [ENT]"
        ],
        "subq2": [
            "whose distributor is warner bros. animation"
        ]
    },
    {
        "ID": "1635",
        "question": "Name the television show directed by Simon Fuller and judged by Jennifier Lopez",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/creator> <http://dbpedia.org/resource/Simon_Fuller> . ?uri <http://dbpedia.org/property/judges> <http://dbpedia.org/resource/Jennifer_Lopez>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "name the television show directed by simon fuller",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "and judged by simon fuller",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "name the television show directed by simon fuller [DES] and judged by simon fuller",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "name the television show directed by simon fuller",
            "and judged by simon fuller"
        ],
        "subq2": []
    },
    {
        "ID": "2479",
        "question": "Name the appointer of William Clark",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/William_Clark> <http://dbpedia.org/property/appointer> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "name the appointer of william clark",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "name the appointer of william clark",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "name the appointer of william clark [DES] name the appointer of william clark",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "name the appointer of william clark",
            "name the appointer of william clark"
        ],
        "subq2": []
    },
    {
        "ID": "2265",
        "question": "in which movies have momoki kochi acted",
        "sparql": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Momoko_K\u014dchi> } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "in which movies",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "have momoki kochi acted",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "in which movies [DES] have momoki kochi acted",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "in which movies",
            "have momoki kochi acted"
        ],
        "subq2": []
    },
    {
        "ID": "2959",
        "question": "What is the base currency of the Benelux and is also used as money in Kerguelen Islands",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Benelux> <http://dbpedia.org/property/currency> ?uri. <http://dbpedia.org/resource/Kerguelen_Islands> <http://dbpedia.org/ontology/currency> ?uri} ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what is the base currency of the benelux islands",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "and is also used as kerguelen in kerguelen",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what is the base currency of the benelux islands [DES] and is also used as kerguelen in kerguelen",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "what is the base currency of the benelux islands",
            "and is also used as kerguelen in kerguelen"
        ],
        "subq2": []
    },
    {
        "ID": "4731",
        "question": "List the mammals whose taxonomy is Diprotodontia and phylum is Chordate",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/order> <http://dbpedia.org/resource/Diprotodontia> . ?uri <http://dbpedia.org/ontology/phylum> <http://dbpedia.org/resource/Chordate>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Mammal>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "list the mammals whose taxonomy is diprotodontia",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "and is chordate",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "list the mammals whose taxonomy is diprotodontia [DES] and is chordate",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "list the mammals whose taxonomy is diprotodontia",
            "and is chordate"
        ],
        "subq2": []
    },
    {
        "ID": "3059",
        "question": "Count the key people of the Clinton Foundation",
        "sparql": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Clinton_Foundation> <http://dbpedia.org/property/keyPeople> ?uri  . }",
        "intent": "COUNT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "count the key people of the clinton foundation",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "foundation",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "count the key people of the clinton foundation [DES] foundation",
        "compositionality_type_golden": "simple",
        "intent_golden": "COUNT",
        "subq1": [
            "count the key people of the clinton foundation",
            "foundation"
        ],
        "subq2": []
    },
    {
        "ID": "2141",
        "question": "Name the company founded in New Mexico and provides Outlook.com as services",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/foundation> <http://dbpedia.org/resource/New_Mexico> . ?uri <http://dbpedia.org/property/services> <http://dbpedia.org/resource/Outlook.com>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "name the company founded in new mexico",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "and provides the services as services",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "name the company founded in new mexico [DES] and provides the services as services",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "name the company founded in new mexico",
            "and provides the services as services"
        ],
        "subq2": []
    },
    {
        "ID": "3118",
        "question": "Which tv show was preceded by The spirit of Christmas and voice to the character was given by Mona Marshall",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/previousWork> <http://dbpedia.org/resource/The_Spirit_of_Christmas_(short_film)> . ?uri <http://dbpedia.org/property/voices> <http://dbpedia.org/resource/Mona_Marshall>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which tv show was given by the spirit of christmas",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "and voice was given to the character was given by mona marshall",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which tv show was given by the spirit of christmas [DES] and voice was given to the character was given by mona marshall",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "which tv show was given by the spirit of christmas",
            "and voice was given to the character was given by mona marshall"
        ],
        "subq2": []
    },
    {
        "ID": "4725",
        "question": "Under which common jurisdiction do Trinity School, Brentwood and Buckhurst Hill County High School fall",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Trinity_School,_Brentwood> <http://dbpedia.org/ontology/localAuthority> ?uri. <http://dbpedia.org/resource/Buckhurst_Hill_County_High_School> <http://dbpedia.org/ontology/localAuthority> ?uri . }",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "under which common jurisdiction",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "do trinity school , brentwood and buckhurst hill county fall high school",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "under which common jurisdiction [DES] do trinity school , brentwood and buckhurst hill county fall high school",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "under which common jurisdiction",
            "do trinity school , brentwood and buckhurst hill county fall high school"
        ],
        "subq2": []
    },
    {
        "ID": "4045",
        "question": "Music of how many things has been given by Akira Ifukube",
        "sparql": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/music> <http://dbpedia.org/resource/Akira_Ifukube>  . }",
        "intent": "COUNT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "how many things of music",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "has been given by akira ifukube",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "how many things of music [DES] has been given by akira ifukube",
        "compositionality_type_golden": "simple",
        "intent_golden": "COUNT",
        "subq1": [
            "how many things of music",
            "has been given by akira ifukube"
        ],
        "subq2": []
    },
    {
        "ID": "3356",
        "question": "What made jo garcia and merritt cabal both famous",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jo_Garcia> <http://dbpedia.org/ontology/knownFor> ?uri. <http://dbpedia.org/resource/Merritt_Cabal> <http://dbpedia.org/ontology/knownFor> ?uri . }",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what made jo garcia and merritt cabal both famous both famous",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                }
            ]
        },
        "pred": "what made jo garcia and merritt cabal both famous both famous",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "what made jo garcia and merritt cabal both famous both famous"
        ],
        "subq2": []
    },
    {
        "ID": "2744",
        "question": "What was the career of some people who have committed suicide",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/deathCause> <http://dbpedia.org/resource/Suicide> . ?x <http://dbpedia.org/ontology/occupation> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "what was the career of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "some people who have committed suicide",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "what was the career of [INQL] some people who have committed suicide [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "what was the career of [ENT]"
        ],
        "subq2": [
            "some people who have committed suicide"
        ]
    },
    {
        "ID": "3506",
        "question": "In how many places are the tombs of people who died in Connecticut Colony",
        "sparql": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/placeOfDeath> <http://dbpedia.org/resource/Connecticut_Colony> . ?x <http://dbpedia.org/ontology/restingPlace> ?uri  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>}",
        "intent": "COUNT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "in how many places are the tombs of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "people who died in colony of connecticut",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "in how many places are the tombs of [INQL] people who died in colony of connecticut [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "COUNT",
        "subq1": [
            "in how many places are the tombs of [ENT]"
        ],
        "subq2": [
            "people who died in colony of connecticut"
        ]
    },
    {
        "ID": "1679",
        "question": "List the producer of the television shows distributed by FremantleMedia",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/distributor> <http://dbpedia.org/resource/FremantleMedia> . ?x <http://dbpedia.org/ontology/producer> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "list the producer of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the television shows distributed by fremantlemedia",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "list the producer of [INQL] the television shows distributed by fremantlemedia [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "list the producer of [ENT]"
        ],
        "subq2": [
            "the television shows distributed by fremantlemedia"
        ]
    },
    {
        "ID": "4249",
        "question": "Name the awards won by Elie Wiesel",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Elie_Wiesel> <http://dbpedia.org/property/awards> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "name the awards won by [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "elie wiesel",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "name the awards won by [INQL] elie wiesel [INQR]",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "name the awards won by [ENT]"
        ],
        "subq2": [
            "elie wiesel"
        ]
    },
    {
        "ID": "3147",
        "question": "Who are the producers of Marie Sisters",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Marie_Sisters> <http://dbpedia.org/property/producer> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "who are the producers of sisters",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "marie sisters",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "who are the producers of sisters [DES] marie sisters",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "who are the producers of sisters",
            "marie sisters"
        ],
        "subq2": []
    },
    {
        "ID": "2294",
        "question": "Who won the silver medal when the bronze was won by Yang Yilin",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/bronzeMedalist> <http://dbpedia.org/resource/Yang_Yilin> . ?x <http://dbpedia.org/ontology/silverMedalist> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "who won the silver",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "when the bronze medal was won by yang yilin",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "who won the silver [DES] when the bronze medal was won by yang yilin",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "who won the silver",
            "when the bronze medal was won by yang yilin"
        ],
        "subq2": []
    },
    {
        "ID": "580",
        "question": "List the successor of successor of Hayden, Stone & Co",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Hayden,_Stone_&_Co.> <http://dbpedia.org/ontology/successor> ?x . ?x <http://dbpedia.org/ontology/successor> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "list the successor of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "successor of hayden , stone & co",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "list the successor of [INQL] successor of hayden , stone & co [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "list the successor of [ENT]"
        ],
        "subq2": [
            "successor of hayden , stone & co"
        ]
    },
    {
        "ID": "1470",
        "question": "Count the number of battles fought by the military person involved in Morocco",
        "sparql": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/battles> <http://dbpedia.org/resource/Morocco> . ?x <http://dbpedia.org/property/battles> ?uri }",
        "intent": "COUNT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "count the number of battles fought by [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the military person involved in morocco",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "count the number of battles fought by [INQL] the military person involved in morocco [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "COUNT",
        "subq1": [
            "count the number of battles fought by [ENT]"
        ],
        "subq2": [
            "the military person involved in morocco"
        ]
    },
    {
        "ID": "4070",
        "question": "What is the origin of Xynisteri",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Xynisteri> <http://dbpedia.org/ontology/origin> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what is the origin of xynisteri",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "what is the origin of xynisteri",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what is the origin of xynisteri [DES] what is the origin of xynisteri",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "what is the origin of xynisteri",
            "what is the origin of xynisteri"
        ],
        "subq2": []
    },
    {
        "ID": "3343",
        "question": "How many important works have been done by Russel Davies",
        "sparql": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Russell_T_Davies> <http://dbpedia.org/ontology/notableWork> ?uri  . }",
        "intent": "COUNT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "how many important works have been done by [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "russel davies",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "how many important works have been done by [INQL] russel davies [INQR]",
        "compositionality_type_golden": "simple",
        "intent_golden": "COUNT",
        "subq1": [
            "how many important works have been done by [ENT]"
        ],
        "subq2": [
            "russel davies"
        ]
    },
    {
        "ID": "4583",
        "question": "Who are currently playing for Barcelona FC",
        "sparql": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/currentclub> <http://dbpedia.org/resource/FC_Barcelona> } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "who are currently playing for barcelona",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "playing for barcelona",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "who are currently playing for barcelona [DES] playing for barcelona",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "who are currently playing for barcelona",
            "playing for barcelona"
        ],
        "subq2": []
    },
    {
        "ID": "3672",
        "question": "Is Andrew Lincoln the narrator of Million Dollar Traders",
        "sparql": "ASK WHERE { <http://dbpedia.org/resource/Million_Dollar_Traders> <http://dbpedia.org/ontology/narrator> <http://dbpedia.org/resource/Andrew_Lincoln> }",
        "intent": "ASK",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "is andrew lincoln dollar the narrator of million traders",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "traders",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "is andrew lincoln dollar the narrator of million traders [DES] traders",
        "compositionality_type_golden": "simple",
        "intent_golden": "ASK",
        "subq1": [
            "is andrew lincoln dollar the narrator of million traders",
            "traders"
        ],
        "subq2": []
    },
    {
        "ID": "559",
        "question": "Who is the owner of Saumarez",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Saumarez_(horse)> <http://dbpedia.org/ontology/owner> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "who is the owner of saumarez",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                }
            ]
        },
        "pred": "who is the owner of saumarez",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "who is the owner of saumarez"
        ],
        "subq2": []
    },
    {
        "ID": "2849",
        "question": "What is telecasted on the network where Deborah Turness holds important position",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/keyPerson> <http://dbpedia.org/resource/Deborah_Turness> . ?uri <http://dbpedia.org/ontology/network> ?x  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "what is telecasted on [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the network where deborah turness holds position",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "what is telecasted on [INQL] the network where deborah turness holds position [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "what is telecasted on [ENT]"
        ],
        "subq2": [
            "the network where deborah turness holds position"
        ]
    },
    {
        "ID": "512",
        "question": "Who is the fictional character whose relative is Vestigial Peter",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/relative> <http://dbpedia.org/resource/Vestigial_Peter>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "who is the fictional character",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "whose relative is peter vestigial",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "who is the fictional character [DES] whose relative is peter vestigial",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "who is the fictional character",
            "whose relative is peter vestigial"
        ],
        "subq2": []
    },
    {
        "ID": "1081",
        "question": "How many home stadium are there, of the soccer club seasons whose chairman is Merritt Paulson",
        "sparql": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/chairman> <http://dbpedia.org/resource/Merritt_Paulson> . ?x <http://dbpedia.org/ontology/homeStadium> ?uri  . }",
        "intent": "COUNT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "how many home stadium are there , of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the soccer club seasons whose chairman is merritt paulson",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "how many home stadium are there , of [INQL] the soccer club seasons whose chairman is merritt paulson [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "COUNT",
        "subq1": [
            "how many home stadium are there , of [ENT]"
        ],
        "subq2": [
            "the soccer club seasons whose chairman is merritt paulson"
        ]
    },
    {
        "ID": "1664",
        "question": "Name the alma mater of Ernest de Saisset",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ernest_de_Saisset> <http://dbpedia.org/ontology/almaMater> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "name the alma mater of ernest de saisset",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                }
            ]
        },
        "pred": "name the alma mater of ernest de saisset",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "name the alma mater of ernest de saisset"
        ],
        "subq2": []
    },
    {
        "ID": "1012",
        "question": "What magazine companies are of form Limited liability company",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/company> <http://dbpedia.org/resource/Limited_liability_company>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Magazine>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what companies",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "are limited liability company form of",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what companies [DES] are limited liability company form of",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "what companies",
            "are limited liability company form of"
        ],
        "subq2": []
    },
    {
        "ID": "1931",
        "question": "List the driver of SA MArino Grand Prix is also the Pole driver of Canadian Grand Proix",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/1999_San_Marino_Grand_Prix> <http://dbpedia.org/property/firstDriver> ?uri. <http://dbpedia.org/resource/1997_Canadian_Grand_Prix> <http://dbpedia.org/property/poleDriver> ?uri} ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "list the driver of sa marino",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "is also the pole driver of proix canadian grand prix",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "list the driver of sa marino [DES] is also the pole driver of proix canadian grand prix",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "list the driver of sa marino",
            "is also the pole driver of proix canadian grand prix"
        ],
        "subq2": []
    },
    {
        "ID": "1150",
        "question": "Where does John A Danaher III work",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/John_A._Danaher_III> <http://dbpedia.org/property/office> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "where does [ENT] danaher iii",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "a work john danaher iii",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "where does [INQL] a work john danaher iii [INQR] danaher iii",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "where does [ENT] danaher iii"
        ],
        "subq2": [
            "a work john danaher iii"
        ]
    },
    {
        "ID": "2838",
        "question": "Name few movies directed by Tim Burton",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/director> <http://dbpedia.org/resource/Tim_Burton>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "name few movies",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "directed by tim burton",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "name few movies [DES] directed by tim burton",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "name few movies",
            "directed by tim burton"
        ],
        "subq2": []
    },
    {
        "ID": "116",
        "question": "Where was Live in Detroit, MI recorded",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Live_in_Detroit,_MI> <http://dbpedia.org/ontology/recordedIn> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "where was live in detroit",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "recorded , mi",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "where was live in detroit [DES] recorded , mi",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "where was live in detroit",
            "recorded , mi"
        ],
        "subq2": []
    },
    {
        "ID": "740",
        "question": "Name all the bands which have members of QDT in them",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/QDT> <http://dbpedia.org/ontology/bandMember> ?x . ?x <http://dbpedia.org/ontology/associatedBand> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "name all the bands which have [ENT] in them",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "members of qdt in them",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "name all the bands which have [INQL] members of qdt in them [INQR] in them",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "name all the bands which have [ENT] in them"
        ],
        "subq2": [
            "members of qdt in them"
        ]
    },
    {
        "ID": "4806",
        "question": "Which footballers did their high school in west Sacramento california",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/highSchool> <http://dbpedia.org/resource/West_Sacramento,_California>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AmericanFootballPlayer>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which footballers",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "did their school in west sacramento california high school sacramento",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which footballers [DES] did their school in west sacramento california high school sacramento",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "which footballers",
            "did their school in west sacramento california high school sacramento"
        ],
        "subq2": []
    },
    {
        "ID": "3675",
        "question": "List the names of the soccer club seasons whose division is 2012 Campeonato Brasileiro Srie A",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/league> <http://dbpedia.org/resource/2012_Campeonato_Brasileiro_S\u00e9rie_A> . ?x <http://dbpedia.org/property/name> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "list the names of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the soccer club seasons whose division is campeonato brasileiro srie",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "list the names of [INQL] the soccer club seasons whose division is campeonato brasileiro srie [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "list the names of [ENT]"
        ],
        "subq2": [
            "the soccer club seasons whose division is campeonato brasileiro srie"
        ]
    },
    {
        "ID": "830",
        "question": "Which successor of Philippine Ports Authority is the state of origin of Ruben J. Villote",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Philippine_Ports_Authority> <http://dbpedia.org/ontology/successor> ?uri. <http://dbpedia.org/resource/Ruben_J._Villote> <http://dbpedia.org/ontology/stateOfOrigin> ?uri} ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which successor of philippine authority",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "is the state of origin of ruben j. villote",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which successor of philippine authority [DES] is the state of origin of ruben j. villote",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "which successor of philippine authority",
            "is the state of origin of ruben j. villote"
        ],
        "subq2": []
    },
    {
        "ID": "119",
        "question": "What awards have been won by the executive producer of Timmy Time",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Timmy_Time> <http://dbpedia.org/ontology/executiveProducer> ?x . ?x <http://dbpedia.org/ontology/award> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "what awards have been won by [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the executive producer of timmy time",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "what awards have been won by [INQL] the executive producer of timmy time [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "what awards have been won by [ENT]"
        ],
        "subq2": [
            "the executive producer of timmy time"
        ]
    },
    {
        "ID": "4853",
        "question": "Which american football team is owned by Mark davis and is located in O.co Colliseum",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/owner> <http://dbpedia.org/resource/Mark_Davis_(American_football)> . ?uri <http://dbpedia.org/ontology/locationCity> <http://dbpedia.org/resource/O.co_Coliseum>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AmericanFootballTeam>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which american football team",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "is located by mark davis and is located in o.co colliseum",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which american football team [DES] is located by mark davis and is located in o.co colliseum",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "which american football team",
            "is located by mark davis and is located in o.co colliseum"
        ],
        "subq2": []
    },
    {
        "ID": "4738",
        "question": "The successor of Ulrich II, Count of East Frisia was born in what place",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ulrich_II,_Count_of_East_Frisia> <http://dbpedia.org/property/successor> ?x . ?x <http://dbpedia.org/property/placeOfBirth> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "count the successor of ulrich east <UNK>",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "was born in what place",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "count the successor of ulrich east <UNK> [DES] was born in what place",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "count the successor of ulrich east <UNK>",
            "was born in what place"
        ],
        "subq2": []
    },
    {
        "ID": "635",
        "question": "Who is the prime minister of Michael Jeffery who is also the minister of Williuam Deane",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Michael_Jeffery> <http://dbpedia.org/property/primeminister> ?uri. <http://dbpedia.org/resource/William_Deane> <http://dbpedia.org/ontology/primeMinister> ?uri} ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "who is the prime minister of michael jeffery",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "who is also the minister of williuam deane",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "who is the prime minister of michael jeffery [DES] who is also the minister of williuam deane",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "who is the prime minister of michael jeffery",
            "who is also the minister of williuam deane"
        ],
        "subq2": []
    },
    {
        "ID": "4465",
        "question": "Who is the owner of the FC which owns the Cobham Training Centre",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Cobham_Training_Centre> <http://dbpedia.org/property/owner> ?x . ?x <http://dbpedia.org/property/owner> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "who is the owner of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the training centre which owns the cobham training centre",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "who is the owner of [INQL] the training centre which owns the cobham training centre [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "who is the owner of [ENT]"
        ],
        "subq2": [
            "the training centre which owns the cobham training centre"
        ]
    },
    {
        "ID": "4364",
        "question": "Who is considered to be the deciding person when it comes to crustaceans from the Balanidae family",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/family> <http://dbpedia.org/resource/Balanidae> . ?x <http://dbpedia.org/ontology/binomialAuthority> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Crustacean>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "who is considered to be deciding to be deciding [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the person when it to comes to crustaceans balanidae",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "who is considered to be deciding to be deciding [INQL] the person when it to comes to crustaceans balanidae [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "who is considered to be deciding to be deciding [ENT]"
        ],
        "subq2": [
            "the person when it to comes to crustaceans balanidae"
        ]
    },
    {
        "ID": "4142",
        "question": "What have some US citizens died of",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/citizenship> <http://dbpedia.org/resource/United_States> . ?x <http://dbpedia.org/ontology/deathCause> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "what have [ENT] died of",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "some us citizens",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "what have [INQL] some us citizens [INQR] died of",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "what have [ENT] died of"
        ],
        "subq2": [
            "some us citizens"
        ]
    },
    {
        "ID": "991",
        "question": "What are some apes",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/family> <http://dbpedia.org/resource/Ape>  . }",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what are some apes",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "what are some apes",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what are some apes [DES] what are some apes",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "what are some apes",
            "what are some apes"
        ],
        "subq2": []
    },
    {
        "ID": "876",
        "question": "Who is buried at the place governed by National Park Service",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/governingBody> <http://dbpedia.org/resource/National_Park_Service> . ?uri <http://dbpedia.org/property/restingplace> ?x  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "who is buried at [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the place governed by national park",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "who is buried at [INQL] the place governed by national park [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "who is buried at [ENT]"
        ],
        "subq2": [
            "the place governed by national park"
        ]
    },
    {
        "ID": "4",
        "question": "Name the municipality of Roberto Clemente Bridge",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Roberto_Clemente_Bridge> <http://dbpedia.org/ontology/municipality> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "name the municipality of roberto clemente bridge",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "name clemente bridge",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "name the municipality of roberto clemente bridge [DES] name clemente bridge",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "name the municipality of roberto clemente bridge",
            "name clemente bridge"
        ],
        "subq2": []
    },
    {
        "ID": "3051",
        "question": "Which past members of the Conglomerate (American group) also sang Take Me There (Blackstreet & Ma song)",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Conglomerate_(American_group)> <http://dbpedia.org/property/pastMembers> ?uri. <http://dbpedia.org/resource/Take_Me_There_(Blackstreet_&_M\u00fda_song)> <http://dbpedia.org/ontology/musicalBand> ?uri} ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which members of the conglomerate (american",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "also sang (american group) & me there (blackstreet",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which members of the conglomerate (american [DES] also sang (american group) & me there (blackstreet",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "which members of the conglomerate (american",
            "also sang (american group) & me there (blackstreet"
        ],
        "subq2": []
    },
    {
        "ID": "3124",
        "question": "List all the notable works of Russell T Davies",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Russell_T_Davies> <http://dbpedia.org/ontology/notableWork> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "list all the [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the notable works of russell t davies",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "list all the [INQL] the notable works of russell t davies [INQR]",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "list all the [ENT]"
        ],
        "subq2": [
            "the notable works of russell t davies"
        ]
    },
    {
        "ID": "2660",
        "question": "Which military unit garrison is Arlington County, Virginia and The Pentagon",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/garrison> <http://dbpedia.org/resource/Arlington_County,_Virginia> . ?uri <http://dbpedia.org/property/garrison> <http://dbpedia.org/resource/The_Pentagon>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which military unit is arlington",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "and the county , virginia the pentagon",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which military unit is arlington [DES] and the county , virginia the pentagon",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "which military unit is arlington",
            "and the county , virginia the pentagon"
        ],
        "subq2": []
    },
    {
        "ID": "2491",
        "question": "Name all the products produced by the producer of United States dollar",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/United_States_dollar> . ?x <http://dbpedia.org/ontology/product> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "name all the products produced by [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the producer of united states dollar",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "name all the products produced by [INQL] the producer of united states dollar [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "name all the products produced by [ENT]"
        ],
        "subq2": [
            "the producer of united states dollar"
        ]
    },
    {
        "ID": "3854",
        "question": "What is the launch site of Aquarius (rocket)",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Aquarius_(rocket)> <http://dbpedia.org/ontology/launchSite> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what is the launch site of aquarius (rocket)",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "what is the launch site of aquarius (rocket)",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what is the launch site of aquarius (rocket) [DES] what is the launch site of aquarius (rocket)",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "what is the launch site of aquarius (rocket)",
            "what is the launch site of aquarius (rocket)"
        ],
        "subq2": []
    },
    {
        "ID": "1715",
        "question": "What are the players whose former teams are Carolina Panthers and Indianapolis Colts",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/formerTeam> <http://dbpedia.org/resource/Carolina_Panthers> . ?uri <http://dbpedia.org/ontology/formerTeam> <http://dbpedia.org/resource/Indianapolis_Colts> . }",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what are the former players",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "whose former teams are indianapolis colts and carolina panthers",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what are the former players [DES] whose former teams are indianapolis colts and carolina panthers",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "what are the former players",
            "whose former teams are indianapolis colts and carolina panthers"
        ],
        "subq2": []
    },
    {
        "ID": "1148",
        "question": "Count the total number of mammals whose phylum is Chordate and order (taxonomy) is Diprotodontia",
        "sparql": " SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/phylum> <http://dbpedia.org/resource/Chordate> . ?uri <http://dbpedia.org/ontology/order> <http://dbpedia.org/resource/Diprotodontia> } ",
        "intent": "COUNT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "count the total number of mammals whose order is chordate",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "and (taxonomy) is diprotodontia",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "count the total number of mammals whose order is chordate [DES] and (taxonomy) is diprotodontia",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "COUNT",
        "subq1": [
            "count the total number of mammals whose order is chordate",
            "and (taxonomy) is diprotodontia"
        ],
        "subq2": []
    },
    {
        "ID": "3261",
        "question": "Who is the music composer of Kenny Dies",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Kenny_Dies> <http://dbpedia.org/ontology/musicComposer> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "who is the music composer of kenny dies",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "dies",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "who is the music composer of kenny dies [DES] dies",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "who is the music composer of kenny dies",
            "dies"
        ],
        "subq2": []
    },
    {
        "ID": "574",
        "question": "How many cities are around the sea into which the aegean sea flows",
        "sparql": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Aegean_Sea> <http://dbpedia.org/ontology/outflow> ?x . ?x <http://dbpedia.org/property/cities> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Sea>}",
        "intent": "COUNT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "how many cities are around [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the sea into which the aegean flows",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "how many cities are around [INQL] the sea into which the aegean flows [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "COUNT",
        "subq1": [
            "how many cities are around [ENT]"
        ],
        "subq2": [
            "the sea into which the aegean flows"
        ]
    },
    {
        "ID": "3769",
        "question": "Where did the office holder who is predecessor to Marco Aurelio Robles died",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/predecessor> <http://dbpedia.org/resource/Marco_Aurelio_Robles> . ?x <http://dbpedia.org/property/placeOfDeath> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "where did the office holder died [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "who is predecessor to marco aurelio robles",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "where did the office holder died [INQL] who is predecessor to marco aurelio robles [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "where did the office holder died [ENT]"
        ],
        "subq2": [
            "who is predecessor to marco aurelio robles"
        ]
    },
    {
        "ID": "3736",
        "question": "Who is associated with the musical artists from Africa '70 (band) and Tony Allen",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Africa_'70_(band)> . ?uri <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Tony_Allen_(musician)> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "who is associated musical artists",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "from '' tony africa and allen 70",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "who is associated musical artists [DES] from '' tony africa and allen 70",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "who is associated musical artists",
            "from '' tony africa and allen 70"
        ],
        "subq2": []
    },
    {
        "ID": "4146",
        "question": "Is the Hyundai Lavita assembled in Kulim",
        "sparql": "ASK WHERE { <http://dbpedia.org/resource/Hyundai_Lavita> <http://dbpedia.org/ontology/assembly> <http://dbpedia.org/resource/Kulim> }",
        "intent": "ASK",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "is the hyundai lavita",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "assembled in kulim",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "is the hyundai lavita [DES] assembled in kulim",
        "compositionality_type_golden": "simple",
        "intent_golden": "ASK",
        "subq1": [
            "is the hyundai lavita",
            "assembled in kulim"
        ],
        "subq2": []
    },
    {
        "ID": "853",
        "question": "What is the programme format of WWTR",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/WWTR> <http://dbpedia.org/ontology/programmeFormat> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what is the programme format of wwtr",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "of wwtr",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what is the programme format of wwtr [DES] of wwtr",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "what is the programme format of wwtr",
            "of wwtr"
        ],
        "subq2": []
    },
    {
        "ID": "1982",
        "question": "list the founders of Bream Bay",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Bream_Bay> <http://dbpedia.org/property/founder> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "list the founders of bream bay",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "list the founders of bream",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "list the founders of bream bay [DES] list the founders of bream",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "list the founders of bream bay",
            "list the founders of bream"
        ],
        "subq2": []
    },
    {
        "ID": "2774",
        "question": "Is Essex the Ceremonial County of West Tilbury",
        "sparql": "ASK WHERE { <http://dbpedia.org/resource/West_Tilbury> <http://dbpedia.org/ontology/ceremonialCounty> <http://dbpedia.org/resource/Essex> }",
        "intent": "ASK",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "is the ceremonial county of west tilbury",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "tilbury",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "is the ceremonial county of west tilbury [DES] tilbury",
        "compositionality_type_golden": "simple",
        "intent_golden": "ASK",
        "subq1": [
            "is the ceremonial county of west tilbury",
            "tilbury"
        ],
        "subq2": []
    },
    {
        "ID": "1166",
        "question": "What is the total number of participant in conflict of SFOR",
        "sparql": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/battles> <http://dbpedia.org/resource/SFOR> . ?x <http://dbpedia.org/ontology/battle> ?uri  . }",
        "intent": "COUNT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "what is the total number of conflict in [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the conflict of sfor",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "what is the total number of conflict in [INQL] the conflict of sfor [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "COUNT",
        "subq1": [
            "what is the total number of conflict in [ENT]"
        ],
        "subq2": [
            "the conflict of sfor"
        ]
    },
    {
        "ID": "971",
        "question": "Name the people whose academic advisor has also mentored the thesis of Alexius Meinong",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/doctoralStudents> <http://dbpedia.org/resource/Alexius_Meinong> . ?uri <http://dbpedia.org/ontology/academicAdvisor> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "name the people",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "whose academic advisor has also mentored thesis of alexius meinong",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "name the people [DES] whose academic advisor has also mentored thesis of alexius meinong",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "name the people",
            "whose academic advisor has also mentored thesis of alexius meinong"
        ],
        "subq2": []
    },
    {
        "ID": "2701",
        "question": "Where is Denver Broncos located",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Denver_Broncos> <http://dbpedia.org/ontology/locationCity> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "where is denver broncos",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "located denver broncos",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "where is denver broncos [DES] located denver broncos",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "where is denver broncos",
            "located denver broncos"
        ],
        "subq2": []
    },
    {
        "ID": "4495",
        "question": "Which serving railway line of the Daund Junction railway station is the home port of INS Viraat",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/INS_Viraat_(R22)> <http://dbpedia.org/ontology/homeport> ?uri. <http://dbpedia.org/resource/Daund_Junction_railway_station> <http://dbpedia.org/ontology/servingRailwayLine> ?uri} ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which serving line of the daund junction railway station",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "is the home of port junction railway station viraat viraat",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which serving line of the daund junction railway station [DES] is the home of port junction railway station viraat viraat",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "which serving line of the daund junction railway station",
            "is the home of port junction railway station viraat viraat"
        ],
        "subq2": []
    },
    {
        "ID": "3847",
        "question": "Which river flows through Hudson Highlands State park and also through Troy, New York",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Hudson_Highlands_State_Park> <http://dbpedia.org/property/river> ?uri. <http://dbpedia.org/resource/Troy,_New_York> <http://dbpedia.org/ontology/river> ?uri} ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which river flows through hudson state park",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "and also flows through troy park , new york",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which river flows through hudson state park [DES] and also flows through troy park , new york",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "which river flows through hudson state park",
            "and also flows through troy park , new york"
        ],
        "subq2": []
    },
    {
        "ID": "2368",
        "question": "What is the university to which Erica Frank went, and where Ivan Toplak was a club manager",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Erica_Frank> <http://dbpedia.org/ontology/institution> ?uri. <http://dbpedia.org/resource/Ivan_Toplak> <http://dbpedia.org/ontology/managerClub> ?uri} ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what is the university to which erica frank went ,",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "and where ivan toplak was a club",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what is the university to which erica frank went , [DES] and where ivan toplak was a club",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "what is the university to which erica frank went ,",
            "and where ivan toplak was a club"
        ],
        "subq2": []
    },
    {
        "ID": "4115",
        "question": "How many movies have been directed by Orson Welles",
        "sparql": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/director> <http://dbpedia.org/resource/Orson_Welles>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
        "intent": "COUNT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "how many movies",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "have been directed by orson welles",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "how many movies [DES] have been directed by orson welles",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "COUNT",
        "subq1": [
            "how many movies",
            "have been directed by orson welles"
        ],
        "subq2": []
    },
    {
        "ID": "4131",
        "question": "Which borough is common for Duddeston and Bordesley railway station",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Duddeston_railway_station> <http://dbpedia.org/property/borough> ?uri. <http://dbpedia.org/resource/Bordesley_railway_station> <http://dbpedia.org/property/borough> ?uri . }",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which borough is common railway and bordesley railway station",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                }
            ]
        },
        "pred": "which borough is common railway and bordesley railway station",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "which borough is common railway and bordesley railway station"
        ],
        "subq2": []
    },
    {
        "ID": "2950",
        "question": "Does Mauritius follow a parliamentary republic",
        "sparql": "ASK WHERE { <http://dbpedia.org/resource/Mauritius> <http://dbpedia.org/property/governmentType> <http://dbpedia.org/resource/Parliamentary_republic> }",
        "intent": "ASK",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "does a parliamentary republic",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "parliamentary republic",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "does a parliamentary republic [DES] parliamentary republic",
        "compositionality_type_golden": "simple",
        "intent_golden": "ASK",
        "subq1": [
            "does a parliamentary republic",
            "parliamentary republic"
        ],
        "subq2": []
    },
    {
        "ID": "524",
        "question": "Who is the performer of the album whose subsequent work is Willie Nelson and Family",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/subsequentWork> <http://dbpedia.org/resource/Willie_Nelson_and_Family> . ?x <http://dbpedia.org/ontology/artist> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "who is the performer of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the album whose subsequent work is willie nelson and nelson",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "who is the performer of [INQL] the album whose subsequent work is willie nelson and nelson [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "who is the performer of [ENT]"
        ],
        "subq2": [
            "the album whose subsequent work is willie nelson and nelson"
        ]
    },
    {
        "ID": "2455",
        "question": "What is the birthplace of Ludovic Boi which is also the residence of Fernando Augustin",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ludovic_Boi> <http://dbpedia.org/ontology/birthPlace> ?uri. <http://dbpedia.org/resource/Fernando_Augustin> <http://dbpedia.org/property/residence> ?uri . }",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what is the birthplace of ludovic boi",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "which is also the residence of fernando augustin",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what is the birthplace of ludovic boi [DES] which is also the residence of fernando augustin",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "what is the birthplace of ludovic boi",
            "which is also the residence of fernando augustin"
        ],
        "subq2": []
    },
    {
        "ID": "1841",
        "question": "Who is the producer of album, which has the song Eclipse",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Eclipse_(song)> <http://dbpedia.org/ontology/album> ?x . ?x <http://dbpedia.org/property/producer> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "who is the producer of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "album , which has the song eclipse",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "who is the producer of [INQL] album , which has the song eclipse [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "who is the producer of [ENT]"
        ],
        "subq2": [
            "album , which has the song eclipse"
        ]
    },
    {
        "ID": "537",
        "question": "Which parties have their members live in the PM House, Colombo",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Prime_Minister's_House_(Colombo)> . ?uri <http://dbpedia.org/ontology/leader> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "which parties have their live in [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "pm in the colombo house , colombo",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "which parties have their live in [INQL] pm in the colombo house , colombo [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "which parties have their live in [ENT]"
        ],
        "subq2": [
            "pm in the colombo house , colombo"
        ]
    },
    {
        "ID": "2806",
        "question": "Which awards have been given to scientists that graduated from NKU athens",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/National_and_Kapodistrian_University_of_Athens> . ?x <http://dbpedia.org/ontology/award> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "which awards have been given to [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "that graduated from nku",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "which awards have been given to [INQL] that graduated from nku [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "which awards have been given to [ENT]"
        ],
        "subq2": [
            "that graduated from nku"
        ]
    },
    {
        "ID": "4341",
        "question": "Ricky Gervais is the executive producer of the series having how many fictional characters",
        "sparql": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/executiveProducer> <http://dbpedia.org/resource/Ricky_Gervais> . ?uri <http://dbpedia.org/ontology/series> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}",
        "intent": "COUNT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "[ENT] having how many fictional characters",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "ricky gervais is the executive producer of the fictional series",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "[INQL] ricky gervais is the executive producer of the fictional series [INQR] having how many fictional characters",
        "compositionality_type_golden": "composition",
        "intent_golden": "COUNT",
        "subq1": [
            "[ENT] having how many fictional characters"
        ],
        "subq2": [
            "ricky gervais is the executive producer of the fictional series"
        ]
    },
    {
        "ID": "3175",
        "question": "Did Jerry Rice study in Oktoc Mississippi",
        "sparql": "ASK WHERE { <http://dbpedia.org/resource/Jerry_Rice> <http://dbpedia.org/property/highSchool> <http://dbpedia.org/resource/Oktoc,_Mississippi> }",
        "intent": "ASK",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "did rice study in oktoc",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "jerry study in mississippi",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "did rice study in oktoc [DES] jerry study in mississippi",
        "compositionality_type_golden": "simple",
        "intent_golden": "ASK",
        "subq1": [
            "did rice study in oktoc",
            "jerry study in mississippi"
        ],
        "subq2": []
    },
    {
        "ID": "784",
        "question": "Cable stayed bridges have been used to cross over how many things",
        "sparql": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/design> <http://dbpedia.org/resource/Cable-stayed_bridge> . ?x <http://dbpedia.org/property/crosses> ?uri  . }",
        "intent": "COUNT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "[ENT] have been used to how many things",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "cable cross stayed bridges",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "[INQL] cable cross stayed bridges [INQR] have been used to how many things",
        "compositionality_type_golden": "composition",
        "intent_golden": "COUNT",
        "subq1": [
            "[ENT] have been used to how many things"
        ],
        "subq2": [
            "cable cross stayed bridges"
        ]
    },
    {
        "ID": "4057",
        "question": "Is north caucasian emirate have an islamic government",
        "sparql": "ASK WHERE { <http://dbpedia.org/resource/North_Caucasian_Emirate> <http://dbpedia.org/ontology/governmentType> <http://dbpedia.org/resource/Islam> }",
        "intent": "ASK",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "is caucasian emirate",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "have an islamic government emirate",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "is caucasian emirate [DES] have an islamic government emirate",
        "compositionality_type_golden": "simple",
        "intent_golden": "ASK",
        "subq1": [
            "is caucasian emirate",
            "have an islamic government emirate"
        ],
        "subq2": []
    },
    {
        "ID": "1409",
        "question": "What are the television shows whose starting music is composed by Ron Grainer",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/themeMusicComposer> <http://dbpedia.org/resource/Ron_Grainer>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what are the television shows",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "whose music is composed by ron grainer",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what are the television shows [DES] whose music is composed by ron grainer",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "what are the television shows",
            "whose music is composed by ron grainer"
        ],
        "subq2": []
    },
    {
        "ID": "2537",
        "question": "Who influenced the author of The Shooting of Dan McGrew",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Shooting_of_Dan_McGrew_(1924_film)> <http://dbpedia.org/ontology/writer> ?x . ?x <http://dbpedia.org/property/influences> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "who influenced [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the author of dan mcgrew shooting",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "who influenced [INQL] the author of dan mcgrew shooting [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "who influenced [ENT]"
        ],
        "subq2": [
            "the author of dan mcgrew shooting"
        ]
    },
    {
        "ID": "154",
        "question": "Raymond Johansen is the mayor of what city",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/leaderName> <http://dbpedia.org/resource/Raymond_Johansen>  . }",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "johansen is the mayor of",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "what city",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "johansen is the mayor of [DES] what city",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "johansen is the mayor of",
            "what city"
        ],
        "subq2": []
    },
    {
        "ID": "3009",
        "question": "What region was Gloria Schaffer born in, which also contains Newington",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Gloria_Schaffer> <http://dbpedia.org/property/birthPlace> ?uri. <http://dbpedia.org/resource/Newington,_Connecticut> <http://dbpedia.org/ontology/isPartOf> ?uri . }",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what region was gloria schaffer born in <UNK>",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "which also contains newington",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what region was gloria schaffer born in <UNK> [DES] which also contains newington",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "what region was gloria schaffer born in <UNK>",
            "which also contains newington"
        ],
        "subq2": []
    },
    {
        "ID": "1686",
        "question": "List some teams for which someone who has played as a defender, now plays",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/position> <http://dbpedia.org/resource/Defenceman> . ?x <http://dbpedia.org/ontology/team> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "list some teams for which [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "someone who has played as a defender , now plays now",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "list some teams for which [INQL] someone who has played as a defender , now plays now [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "list some teams for which [ENT]"
        ],
        "subq2": [
            "someone who has played as a defender , now plays now"
        ]
    },
    {
        "ID": "2901",
        "question": "Which rivers start from the Provinces of Zambia",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/settlementType> <http://dbpedia.org/resource/Provinces_of_Zambia> . ?uri <http://dbpedia.org/ontology/sourceRegion> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which rivers start from the provinces of zambia",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "zambia",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which rivers start from the provinces of zambia [DES] zambia",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "which rivers start from the provinces of zambia",
            "zambia"
        ],
        "subq2": []
    },
    {
        "ID": "4949",
        "question": "Who are the scientists known for the Manhattan Project",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/knownFor> <http://dbpedia.org/resource/Manhattan_Project>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "who are the scientists known for the manhattan project",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "who known for the manhattan project",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "who are the scientists known for the manhattan project [DES] who known for the manhattan project",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "who are the scientists known for the manhattan project",
            "who known for the manhattan project"
        ],
        "subq2": []
    },
    {
        "ID": "3863",
        "question": "What are some dishes from the family of dishes which primarily use flour",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/mainIngredient> <http://dbpedia.org/resource/Flour> . ?uri <http://dbpedia.org/ontology/type> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Food>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "what are some dishes from [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the of which primarily use flour",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "what are some dishes from [INQL] the of which primarily use flour [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "what are some dishes from [ENT]"
        ],
        "subq2": [
            "the of which primarily use flour"
        ]
    },
    {
        "ID": "2733",
        "question": "Which religion do the people follow, whose constituency is Jadavpur",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/constituency> <http://dbpedia.org/resource/Jadavpur_(Lok_Sabha_constituency)> . ?x <http://dbpedia.org/property/religion> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "which religion do the people follow , [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "whose constituency is jadavpur",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "which religion do the people follow , [INQL] whose constituency is jadavpur [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "which religion do the people follow , [ENT]"
        ],
        "subq2": [
            "whose constituency is jadavpur"
        ]
    },
    {
        "ID": "1895",
        "question": "In which region is the rival school of Somerset, Massachusetts located",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/rival> <http://dbpedia.org/resource/Somerset,_Massachusetts> . ?x <http://dbpedia.org/ontology/region> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/School>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "in which region",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "is the rival school of somerset , massachusetts located",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "in which region [DES] is the rival school of somerset , massachusetts located",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "in which region",
            "is the rival school of somerset , massachusetts located"
        ],
        "subq2": []
    },
    {
        "ID": "569",
        "question": "Which key person of Clinton Foundation is also the president of Jim Sasser",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Clinton_Foundation> <http://dbpedia.org/property/keyPeople> ?uri. <http://dbpedia.org/resource/Jim_Sasser> <http://dbpedia.org/ontology/president> ?uri} ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which key person of clinton foundation",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "is also the president of jim sasser",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which key person of clinton foundation [DES] is also the president of jim sasser",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "which key person of clinton foundation",
            "is also the president of jim sasser"
        ],
        "subq2": []
    },
    {
        "ID": "1816",
        "question": "Where did the athlete start his career, who did his highschool in Red Lion Area School District",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/highschool> <http://dbpedia.org/resource/Red_Lion_Area_School_District> . ?x <http://dbpedia.org/property/debutteam> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "where did the highschool athlete start his district , [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "who did his career , who did red lion school in lion",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "where did the highschool athlete start his district , [INQL] who did his career , who did red lion school in lion [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "where did the highschool athlete start his district , [ENT]"
        ],
        "subq2": [
            "who did his career , who did red lion school in lion"
        ]
    },
    {
        "ID": "2065",
        "question": "Name a person who works in Open Society Foundation and has wife named Susan Weber Soros",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/employer> <http://dbpedia.org/resource/Open_Society_Foundations> . ?uri <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Susan_Weber_Soros>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "name a person who works in society foundation",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "and has wife named susan soros",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "name a person who works in society foundation [DES] and has wife named susan soros",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "name a person who works in society foundation",
            "and has wife named susan soros"
        ],
        "subq2": []
    },
    {
        "ID": "127",
        "question": "How many things are crossed over by bridges which can carry cars",
        "sparql": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/carries> <http://dbpedia.org/resource/Motor_vehicle> . ?x <http://dbpedia.org/property/crosses> ?uri  . }",
        "intent": "COUNT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "how many things are crossed over [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "bridges which can carry cars",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "how many things are crossed over [INQL] bridges which can carry cars [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "COUNT",
        "subq1": [
            "how many things are crossed over [ENT]"
        ],
        "subq2": [
            "bridges which can carry cars"
        ]
    },
    {
        "ID": "3394",
        "question": "Which fictional character sculpted by Josh Friedmann was portrayed in Terminator 3",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/creator> <http://dbpedia.org/resource/Josh_Friedman> . ?uri <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Terminator_3:_Rise_of_the_Machines>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which fictional character",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "sculpted by josh friedmann was portrayed in terminator 3",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which fictional character [DES] sculpted by josh friedmann was portrayed in terminator 3",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "which fictional character",
            "sculpted by josh friedmann was portrayed in terminator 3"
        ],
        "subq2": []
    },
    {
        "ID": "3327",
        "question": "Which team won the American Football League",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/American_Football_League> <http://dbpedia.org/property/champion> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which team",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "won the american football league",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which team [DES] won the american football league",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "which team",
            "won the american football league"
        ],
        "subq2": []
    },
    {
        "ID": "4986",
        "question": "Which currency can I use both in Kerguelen islands and French southern and antarctic lands",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/French_Southern_and_Antarctic_Lands> <http://dbpedia.org/ontology/currency> ?uri. <http://dbpedia.org/resource/Kerguelen_Islands> <http://dbpedia.org/ontology/currency> ?uri . }",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which southern currency",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "can i use both in kerguelen islands and southern lands french lands",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which southern currency [DES] can i use both in kerguelen islands and southern lands french lands",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "which southern currency",
            "can i use both in kerguelen islands and southern lands french lands"
        ],
        "subq2": []
    },
    {
        "ID": "2975",
        "question": "Who is the founder of the trade union which affiliates Amalgamated Association of Iron and Steel Workers",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Amalgamated_Association_of_Iron_and_Steel_Workers> <http://dbpedia.org/ontology/affiliation> ?x . ?x <http://dbpedia.org/property/founded> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TradeUnion>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "who is the founder of the trade union",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "which affiliates amalgamated of iron and steel workers",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "who is the founder of the trade union [DES] which affiliates amalgamated of iron and steel workers",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "who is the founder of the trade union",
            "which affiliates amalgamated of iron and steel workers"
        ],
        "subq2": []
    },
    {
        "ID": "980",
        "question": "Which leader of United States House of Representatives was the appointer of ohn Drayton",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/United_States_House_of_Representatives_elections,_1788_and_1789> <http://dbpedia.org/property/leader> ?uri. <http://dbpedia.org/resource/John_Drayton> <http://dbpedia.org/property/appointer> ?uri} ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which appointer of united states house of representatives",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "was the leader of ohn drayton",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which appointer of united states house of representatives [DES] was the leader of ohn drayton",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "which appointer of united states house of representatives",
            "was the leader of ohn drayton"
        ],
        "subq2": []
    },
    {
        "ID": "2300",
        "question": "Is fox belong to the phylum of Chordate",
        "sparql": "ASK WHERE { <http://dbpedia.org/resource/Fox> <http://dbpedia.org/ontology/phylum> <http://dbpedia.org/resource/Chordate> }",
        "intent": "ASK",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "is belong to the fox phylum of the chordate phylum",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                }
            ]
        },
        "pred": "is belong to the fox phylum of the chordate phylum",
        "compositionality_type_golden": "simple",
        "intent_golden": "ASK",
        "subq1": [
            "is belong to the fox phylum of the chordate phylum"
        ],
        "subq2": []
    },
    {
        "ID": "190",
        "question": "Which researchers received fellowship from Royal Society",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Royal_Society>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which researchers",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "received fellowship from royal society",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which researchers [DES] received fellowship from royal society",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "which researchers",
            "received fellowship from royal society"
        ],
        "subq2": []
    },
    {
        "ID": "1139",
        "question": "Which president of United States had vice president as John Adams",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/vicePresident> <http://dbpedia.org/resource/John_Adams>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which president of united states",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "had vice president as john adams",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which president of united states [DES] had vice president as john adams",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "which president of united states",
            "had vice president as john adams"
        ],
        "subq2": []
    },
    {
        "ID": "699",
        "question": "Where was James H. Fields buried",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/James_H._Fields> <http://dbpedia.org/property/placeofburial> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "where was [ENT] buried",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "james h. fields",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "where was [INQL] james h. fields [INQR] buried",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "where was [ENT] buried"
        ],
        "subq2": [
            "james h. fields"
        ]
    },
    {
        "ID": "4780",
        "question": "Is Henry Knox a commander of Continental Artillery Regiment",
        "sparql": "ASK WHERE { <http://dbpedia.org/resource/Continental_Artillery_Regiment> <http://dbpedia.org/ontology/notableCommander> <http://dbpedia.org/resource/Henry_Knox> }",
        "intent": "ASK",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "is a commander of henry artillery",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "a commander artillery continental regiment",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "is a commander of henry artillery [DES] a commander artillery continental regiment",
        "compositionality_type_golden": "simple",
        "intent_golden": "ASK",
        "subq1": [
            "is a commander of henry artillery",
            "a commander artillery continental regiment"
        ],
        "subq2": []
    },
    {
        "ID": "606",
        "question": "What is the commander of Battle of Brownstown",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Battle_of_Brownstown> <http://dbpedia.org/ontology/commander> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "what is the commander of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "battle of brownstown",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "what is the commander of [INQL] battle of brownstown [INQR]",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "what is the commander of [ENT]"
        ],
        "subq2": [
            "battle of brownstown"
        ]
    },
    {
        "ID": "4276",
        "question": "Is Baker's Dozen Donuts in the coffee industry",
        "sparql": "ASK WHERE { <http://dbpedia.org/resource/Baker's_Dozen_Donuts> <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Coffee> }",
        "intent": "ASK",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "is baker 's [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the dozen in the industry coffee 's donuts",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "is baker 's [INQL] the dozen in the industry coffee 's donuts [INQR]",
        "compositionality_type_golden": "simple",
        "intent_golden": "ASK",
        "subq1": [
            "is baker 's [ENT]"
        ],
        "subq2": [
            "the dozen in the industry coffee 's donuts"
        ]
    },
    {
        "ID": "301",
        "question": "What is Jon Speelman famous for",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jon_Speelman> <http://dbpedia.org/ontology/field> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what is jon speelman famous for",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "for",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what is jon speelman famous for [DES] for",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "what is jon speelman famous for",
            "for"
        ],
        "subq2": []
    },
    {
        "ID": "3420",
        "question": "Who is the fictional character whose family member is Padme Amidala",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/family> <http://dbpedia.org/resource/Padm\u00e9_Amidala>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "who is the fictional character",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "whose family member is padme amidala",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "who is the fictional character [DES] whose family member is padme amidala",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "who is the fictional character",
            "whose family member is padme amidala"
        ],
        "subq2": []
    },
    {
        "ID": "4820",
        "question": "What company is the one which wrote the google web toolkit and PlayN",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Google_Web_Toolkit> <http://dbpedia.org/ontology/author> ?uri. <http://dbpedia.org/resource/PlayN> <http://dbpedia.org/ontology/author> ?uri . }",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what company",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "is the one which wrote the google web toolkit and google web playn",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what company [DES] is the one which wrote the google web toolkit and google web playn",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "what company",
            "is the one which wrote the google web toolkit and google web playn"
        ],
        "subq2": []
    },
    {
        "ID": "1060",
        "question": "How many different songwriters have had their songs recorded in London",
        "sparql": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/recordedIn> <http://dbpedia.org/resource/London> . ?x <http://dbpedia.org/ontology/writer> ?uri  . }",
        "intent": "COUNT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "how many different songwriters [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "have had their songs in london",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "how many different songwriters [INQL] have had their songs in london [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "COUNT",
        "subq1": [
            "how many different songwriters [ENT]"
        ],
        "subq2": [
            "have had their songs in london"
        ]
    },
    {
        "ID": "2565",
        "question": "Which are the automobile platform whose one of the automobile platform is Dodge",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/automobilePlatform> <http://dbpedia.org/resource/Dodge> . ?x <http://dbpedia.org/ontology/automobilePlatform> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Automobile>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "which are the automobile whose one of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the automobile whose platform is dodge platform",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "which are the automobile whose one of [INQL] the automobile whose platform is dodge platform [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "which are the automobile whose one of [ENT]"
        ],
        "subq2": [
            "the automobile whose platform is dodge platform"
        ]
    },
    {
        "ID": "4994",
        "question": "What is the total number of other combatant of the military conflicts whose combatant is Choctaw",
        "sparql": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/combatant> <http://dbpedia.org/resource/Choctaw> . ?x <http://dbpedia.org/property/combatant> ?uri }",
        "intent": "COUNT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "what is the total number of other combatant of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the military conflicts whose combatant is choctaw",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "what is the total number of other combatant of [INQL] the military conflicts whose combatant is choctaw [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "COUNT",
        "subq1": [
            "what is the total number of other combatant of [ENT]"
        ],
        "subq2": [
            "the military conflicts whose combatant is choctaw"
        ]
    },
    {
        "ID": "1069",
        "question": "List some pupils of National Science Medal winning scientists",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/prizes> <http://dbpedia.org/resource/National_Medal_of_Science> . ?x <http://dbpedia.org/property/doctoralStudents> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "list some pupils medal of science winning",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "list some pupils medal",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "list some pupils medal of science winning [DES] list some pupils medal",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "list some pupils medal of science winning",
            "list some pupils medal"
        ],
        "subq2": []
    },
    {
        "ID": "2524",
        "question": "Relatives of Moses used to follow which religions",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Moses> <http://dbpedia.org/ontology/relative> ?x . ?x <http://dbpedia.org/ontology/veneratedIn> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "[ENT] follow to which religions",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "relatives of moses",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "[INQL] relatives of moses [INQR] follow to which religions",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "[ENT] follow to which religions"
        ],
        "subq2": [
            "relatives of moses"
        ]
    },
    {
        "ID": "2205",
        "question": "Where was Ne daj se, Nina first aired",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ne_daj_se,_Nina> <http://dbpedia.org/property/firstAired> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "where was daj se , ne first aired",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "where was daj aired",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "where was daj se , ne first aired [DES] where was daj aired",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "where was daj se , ne first aired",
            "where was daj aired"
        ],
        "subq2": []
    },
    {
        "ID": "1243",
        "question": "Where did the 2015 MLS All-Star Game take place",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/2015_MLS_All-Star_Game> <http://dbpedia.org/property/city> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "where did [ENT] take place",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the 2015 mls all-star game",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "where did [INQL] the 2015 mls all-star game [INQR] take place",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "where did [ENT] take place"
        ],
        "subq2": [
            "the 2015 mls all-star game"
        ]
    },
    {
        "ID": "16",
        "question": "Is Nikolai Morozov the former coach of Stanislav Morozov",
        "sparql": "ASK WHERE { <http://dbpedia.org/resource/Stanislav_Morozov> <http://dbpedia.org/ontology/formerCoach> <http://dbpedia.org/resource/Nikolai_Morozov_(figure_skater)> }",
        "intent": "ASK",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "is nikolai morozov [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the former coach of stanislav morozov",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "is nikolai morozov [INQL] the former coach of stanislav morozov [INQR]",
        "compositionality_type_golden": "simple",
        "intent_golden": "ASK",
        "subq1": [
            "is nikolai morozov [ENT]"
        ],
        "subq2": [
            "the former coach of stanislav morozov"
        ]
    },
    {
        "ID": "3120",
        "question": "Did Alexandre Tichonov study at the Moscow university",
        "sparql": "ASK WHERE { <http://dbpedia.org/resource/Alexandre_Tichonov> <http://dbpedia.org/property/university> <http://dbpedia.org/resource/Moscow> }",
        "intent": "ASK",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "did alexandre tichonov study at [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the university at the moscow university moscow",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "did alexandre tichonov study at [INQL] the university at the moscow university moscow [INQR]",
        "compositionality_type_golden": "simple",
        "intent_golden": "ASK",
        "subq1": [
            "did alexandre tichonov study at [ENT]"
        ],
        "subq2": [
            "the university at the moscow university moscow"
        ]
    },
    {
        "ID": "4642",
        "question": "What is the name of the homeground of football team Panionios G.S.S",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/2013\u201314_Panionios_G.S.S._season> <http://dbpedia.org/ontology/ground> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "what is the name of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the football team homeground of panionios g.s.s",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "what is the name of [INQL] the football team homeground of panionios g.s.s [INQR]",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "what is the name of [ENT]"
        ],
        "subq2": [
            "the football team homeground of panionios g.s.s"
        ]
    },
    {
        "ID": "815",
        "question": "List presidents of the school whose one of the president is Charles. Prince of Wales",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/president> <http://dbpedia.org/resource/Charles,_Prince_of_Wales> . ?x <http://dbpedia.org/property/president> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/School>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "list presidents of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the school one of the president is charles. prince of wales",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "list presidents of [INQL] the school one of the president is charles. prince of wales [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "list presidents of [ENT]"
        ],
        "subq2": [
            "the school one of the president is charles. prince of wales"
        ]
    },
    {
        "ID": "3067",
        "question": "Does Timothy Morton study Buddhism",
        "sparql": "ASK WHERE { <http://dbpedia.org/resource/Timothy_Morton> <http://dbpedia.org/property/mainInterests> <http://dbpedia.org/resource/Buddhism> }",
        "intent": "ASK",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "does timothy morton buddhism study",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "does timothy study",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "does timothy morton buddhism study [DES] does timothy study",
        "compositionality_type_golden": "simple",
        "intent_golden": "ASK",
        "subq1": [
            "does timothy morton buddhism study",
            "does timothy study"
        ],
        "subq2": []
    },
    {
        "ID": "4784",
        "question": "Brian Moriarty designed video games written by whom",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/designer> <http://dbpedia.org/resource/Brian_Moriarty> . ?x <http://dbpedia.org/property/writer> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VideoGame>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "[ENT] whom",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "moriarty video games designed by whom",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "[INQL] moriarty video games designed by whom [INQR] whom",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "[ENT] whom"
        ],
        "subq2": [
            "moriarty video games designed by whom"
        ]
    },
    {
        "ID": "959",
        "question": "What are some movies whose distributors are led by Kevin Tsujihara",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/keyPerson> <http://dbpedia.org/resource/Kevin_Tsujihara> . ?uri <http://dbpedia.org/property/distributor> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what are some movies",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "whose distributors are led by kevin tsujihara",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what are some movies [DES] whose distributors are led by kevin tsujihara",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "what are some movies",
            "whose distributors are led by kevin tsujihara"
        ],
        "subq2": []
    },
    {
        "ID": "225",
        "question": "Name the common associate band of Blayse and Teddy Riley",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Blayse> <http://dbpedia.org/ontology/associatedBand> ?uri. <http://dbpedia.org/resource/Teddy_Riley> <http://dbpedia.org/ontology/associatedBand> ?uri . }",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "name the common band of blayse and riley blayse",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                }
            ]
        },
        "pred": "name the common band of blayse and riley blayse",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "name the common band of blayse and riley blayse"
        ],
        "subq2": []
    },
    {
        "ID": "3354",
        "question": "What did Steven T Mason's father die from",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Stevens_T._Mason> . ?x <http://dbpedia.org/ontology/deathCause> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what did steven t 's father",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "from",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what did steven t 's father [DES] from",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "what did steven t 's father",
            "from"
        ],
        "subq2": []
    },
    {
        "ID": "2485",
        "question": "Whose military units are VMF-218 and VMF-155",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/militaryUnit> <http://dbpedia.org/resource/VMF-218> . ?uri <http://dbpedia.org/ontology/militaryUnit> <http://dbpedia.org/resource/VMF-155> . }",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "whose military units are vmf-218 and vmf-155",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                }
            ]
        },
        "pred": "whose military units are vmf-218 and vmf-155",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "whose military units are vmf-218 and vmf-155"
        ],
        "subq2": []
    },
    {
        "ID": "562",
        "question": "What automobile engine's successor is BMW M40",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/successor> <http://dbpedia.org/resource/BMW_M40>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AutomobileEngine>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what engine 's successor is bmw m40",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "is bmw m40",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what engine 's successor is bmw m40 [DES] is bmw m40",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "what engine 's successor is bmw m40",
            "is bmw m40"
        ],
        "subq2": []
    },
    {
        "ID": "3436",
        "question": "Name the company which produces both Boeing F/A-18 E/F Hornet and CH-46 Chinook",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Boeing_F/A-18E/F_Super_Hornet> . ?uri <http://dbpedia.org/property/products> <http://dbpedia.org/resource/Boeing_CH-47_Chinook>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "name the company which produces both boeing f/a-18 e/f",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "and ch-46 chinook",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "name the company which produces both boeing f/a-18 e/f [DES] and ch-46 chinook",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "name the company which produces both boeing f/a-18 e/f",
            "and ch-46 chinook"
        ],
        "subq2": []
    },
    {
        "ID": "1693",
        "question": "What is the district of Methodist Central Hall Westminster",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Methodist_Central_Hall_Westminster> <http://dbpedia.org/ontology/district> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what is the district of methodist hall westminster",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                }
            ]
        },
        "pred": "what is the district of methodist hall westminster",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "what is the district of methodist hall westminster"
        ],
        "subq2": []
    },
    {
        "ID": "1045",
        "question": "Who develops the computation platform of Microsoft Expression Encoder",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Microsoft_Expression_Encoder> <http://dbpedia.org/ontology/computingPlatform> ?x . ?x <http://dbpedia.org/ontology/developer> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "who develops the computation of microsoft expression encoder",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "platform expression encoder",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "who develops the computation of microsoft expression encoder [DES] platform expression encoder",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "who develops the computation of microsoft expression encoder",
            "platform expression encoder"
        ],
        "subq2": []
    },
    {
        "ID": "3446",
        "question": "What is the official language of Ladonia, which is the target area of Probus Journal",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ladonia_(micronation)> <http://dbpedia.org/ontology/officialLanguage> ?uri. <http://dbpedia.org/resource/Probus_(journal)> <http://dbpedia.org/ontology/academicDiscipline> ?uri} ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what is the official language of <UNK>",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "which is the target area of probus",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what is the official language of <UNK> [DES] which is the target area of probus",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "what is the official language of <UNK>",
            "which is the target area of probus"
        ],
        "subq2": []
    },
    {
        "ID": "4565",
        "question": "Where did the conflict take place where Louis Briere de I'Isle was a commander",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Louis_Bri\u00e8re_de_l'Isle> . ?x <http://dbpedia.org/ontology/territory> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "where did the louis briere de i'isle was a commander",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "where did louis briere take place",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "where did the louis briere de i'isle was a commander [DES] where did louis briere take place",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "where did the louis briere de i'isle was a commander",
            "where did louis briere take place"
        ],
        "subq2": []
    },
    {
        "ID": "954",
        "question": "In which team was the person drafted who has studied at the Worcester college, Oxford",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Worcester_College,_Oxford> . ?x <http://dbpedia.org/property/draftTeam> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "in which team was the drafted team [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the person who has studied at the worcester college , oxford",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "in which team was the drafted team [INQL] the person who has studied at the worcester college , oxford [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "in which team was the drafted team [ENT]"
        ],
        "subq2": [
            "the person who has studied at the worcester college , oxford"
        ]
    },
    {
        "ID": "4985",
        "question": "How many people hold important positions along with Donna Shalala",
        "sparql": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/keyPerson> <http://dbpedia.org/resource/Donna_Shalala> . ?x <http://dbpedia.org/property/keyPeople> ?uri  . }",
        "intent": "COUNT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "how many important people",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "hold along shalala with donna",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "how many important people [DES] hold along shalala with donna",
        "compositionality_type_golden": "composition",
        "intent_golden": "COUNT",
        "subq1": [
            "how many important people",
            "hold along shalala with donna"
        ],
        "subq2": []
    },
    {
        "ID": "2735",
        "question": "What other things are provided by the producer of Office 365",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/service> <http://dbpedia.org/resource/Office_365> . ?x <http://dbpedia.org/property/services> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "what other things are provided by [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the producer of office 365",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "what other things are provided by [INQL] the producer of office 365 [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "what other things are provided by [ENT]"
        ],
        "subq2": [
            "the producer of office 365"
        ]
    },
    {
        "ID": "4903",
        "question": "Who owns the company that made the Edsel Villager",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/products> <http://dbpedia.org/resource/Edsel_Villager> . ?x <http://dbpedia.org/property/parent> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "who owns [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the company that made the edsel villager",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "who owns [INQL] the company that made the edsel villager [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "who owns [ENT]"
        ],
        "subq2": [
            "the company that made the edsel villager"
        ]
    },
    {
        "ID": "4735",
        "question": "Which collaborator of Nice and Smooth wrote Same Song",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Nice_&_Smooth> <http://dbpedia.org/ontology/associatedBand> ?uri. <http://dbpedia.org/resource/Same_Song_(Digital_Underground_song)> <http://dbpedia.org/property/writer> ?uri . }",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which collaborator of nice",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "and smooth wrote same song",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which collaborator of nice [DES] and smooth wrote same song",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "which collaborator of nice",
            "and smooth wrote same song"
        ],
        "subq2": []
    },
    {
        "ID": "4823",
        "question": "Who fought in the battle at Tupelo Mississippi",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Tupelo,_Mississippi> . ?x <http://dbpedia.org/property/combatant> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "who fought in [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the battle at tupelo mississippi",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "who fought in [INQL] the battle at tupelo mississippi [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "who fought in [ENT]"
        ],
        "subq2": [
            "the battle at tupelo mississippi"
        ]
    },
    {
        "ID": "1218",
        "question": "List the movies whose cast member were born in Scotland",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Scotland> . ?uri <http://dbpedia.org/ontology/starring> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "list the movies whose cast member [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "were born in scotland",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "list the movies whose cast member [INQL] were born in scotland [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "list the movies whose cast member [ENT]"
        ],
        "subq2": [
            "were born in scotland"
        ]
    },
    {
        "ID": "1527",
        "question": "List the other nicknames of city which has one of the nickname as City of Angels",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/nickname> <http://dbpedia.org/resource/City_of_Angels> . ?x <http://dbpedia.org/property/nickname> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "list of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "city which has one of the angels city as angels city of the other angels city",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "list of [INQL] city which has one of the angels city as angels city of the other angels city [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "list of [ENT]"
        ],
        "subq2": [
            "city which has one of the angels city as angels city of the other angels city"
        ]
    },
    {
        "ID": "3987",
        "question": "Count the writers whose work has been played in NY",
        "sparql": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/place> <http://dbpedia.org/resource/New_York> . ?x <http://dbpedia.org/property/writer> ?uri  . }",
        "intent": "COUNT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "count the writers whose work [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "has been played in ny",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "count the writers whose work [INQL] has been played in ny [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "COUNT",
        "subq1": [
            "count the writers whose work [ENT]"
        ],
        "subq2": [
            "has been played in ny"
        ]
    },
    {
        "ID": "1300",
        "question": "Where did the graduates of Memphis, Tennessee continue their education",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/highschool> <http://dbpedia.org/resource/Memphis,_Tennessee> . ?x <http://dbpedia.org/ontology/school> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "where did [ENT] continue their education",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the graduates of memphis , tennessee continue their education",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "where did [INQL] the graduates of memphis , tennessee continue their education [INQR] continue their education",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "where did [ENT] continue their education"
        ],
        "subq2": [
            "the graduates of memphis , tennessee continue their education"
        ]
    },
    {
        "ID": "4891",
        "question": "What subsequent work of Moondog Matinee has the composer of Motorpsycho Nitemare",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Motorpsycho_Nitemare> <http://dbpedia.org/property/composer> ?uri. <http://dbpedia.org/resource/Moondog_Matinee> <http://dbpedia.org/ontology/subsequentWork> ?uri} ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what composer of moondog matinee",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "has the composer of motorpsycho nitemare",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what composer of moondog matinee [DES] has the composer of motorpsycho nitemare",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "what composer of moondog matinee",
            "has the composer of motorpsycho nitemare"
        ],
        "subq2": []
    },
    {
        "ID": "160",
        "question": "What was the language of the single which came before To Know Him Is to Love Him",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/To_Know_Him_Is_to_Love_Him> <http://dbpedia.org/ontology/previousWork> ?x . ?x <http://dbpedia.org/property/language> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "what was the language of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the single which came before to know is love him",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "what was the language of [INQL] the single which came before to know is love him [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "what was the language of [ENT]"
        ],
        "subq2": [
            "the single which came before to know is love him"
        ]
    },
    {
        "ID": "4067",
        "question": "What are the television shows whose company is owned by Viacom",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/owningCompany> <http://dbpedia.org/resource/Viacom_(original)> . ?uri <http://dbpedia.org/property/company> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what are the television shows",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "whose company is owned by viacom",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what are the television shows [DES] whose company is owned by viacom",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "what are the television shows",
            "whose company is owned by viacom"
        ],
        "subq2": []
    },
    {
        "ID": "956",
        "question": "How many people used to play in the youthclub of FC Barcelona",
        "sparql": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/youthclubs> <http://dbpedia.org/resource/FC_Barcelona>  . }",
        "intent": "COUNT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "how many people",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "used to play in the youthclub fc barcelona",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "how many people [DES] used to play in the youthclub fc barcelona",
        "compositionality_type_golden": "simple",
        "intent_golden": "COUNT",
        "subq1": [
            "how many people",
            "used to play in the youthclub fc barcelona"
        ],
        "subq2": []
    },
    {
        "ID": "3791",
        "question": "Quebec born ice hockey players have stopped playing for which teams",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Quebec> . ?x <http://dbpedia.org/ontology/formerTeam> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/IceHockeyPlayer>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "[ENT] have playing for which teams",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "quebec born players",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "[INQL] quebec born players [INQR] have playing for which teams",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "[ENT] have playing for which teams"
        ],
        "subq2": [
            "quebec born players"
        ]
    },
    {
        "ID": "3234",
        "question": "Who is the chancellor of Falmouth University",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Falmouth_University> <http://dbpedia.org/property/chancellor> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "who is the chancellor of falmouth university",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "who is the chancellor of falmouth",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "who is the chancellor of falmouth university [DES] who is the chancellor of falmouth",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "who is the chancellor of falmouth university",
            "who is the chancellor of falmouth"
        ],
        "subq2": []
    },
    {
        "ID": "2869",
        "question": "what kind of things play on WBIG FM",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/WBIG-FM> <http://dbpedia.org/ontology/programmeFormat> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "what kind of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "things play on wbig fm",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "what kind of [INQL] things play on wbig fm [INQR]",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "what kind of [ENT]"
        ],
        "subq2": [
            "things play on wbig fm"
        ]
    },
    {
        "ID": "3777",
        "question": "Name the are where South side Elevated Railroad operate and has place of birth as Arthur A. Ross",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/South_Side_Elevated_Railroad> <http://dbpedia.org/ontology/operatedBy> ?uri. <http://dbpedia.org/resource/Arthur_A._Ross> <http://dbpedia.org/property/placeOfBirth> ?uri} ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "name the are where south a. ross elevated operate",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "and has place of birth as arthur ross",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "name the are where south a. ross elevated operate [DES] and has place of birth as arthur ross",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "name the are where south a. ross elevated operate",
            "and has place of birth as arthur ross"
        ],
        "subq2": []
    },
    {
        "ID": "4433",
        "question": "In which fields are the graduates of Worcester College, Oxford working",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/almaMater> <http://dbpedia.org/resource/Worcester_College,_Oxford> . ?x <http://dbpedia.org/ontology/field> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "in which fields are [ENT] working",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the graduates of worcester college , oxford",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "in which fields are [INQL] the graduates of worcester college , oxford [INQR] working",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "in which fields are [ENT] working"
        ],
        "subq2": [
            "the graduates of worcester college , oxford"
        ]
    },
    {
        "ID": "2961",
        "question": "List the places where the relatives of Mark Donaldson died",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Mark_Donaldson_(rugby_player)> <http://dbpedia.org/property/relatives> ?x . ?x <http://dbpedia.org/ontology/deathPlace> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "list the places where [ENT] died",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the places of mark donaldson",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "list the places where [INQL] the places of mark donaldson [INQR] died",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "list the places where [ENT] died"
        ],
        "subq2": [
            "the places of mark donaldson"
        ]
    },
    {
        "ID": "2200",
        "question": "What famous politician died in the Petersen House",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/deathPlace> <http://dbpedia.org/resource/Petersen_House>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what famous politician",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "died in the petersen house",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what famous politician [DES] died in the petersen house",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "what famous politician",
            "died in the petersen house"
        ],
        "subq2": []
    },
    {
        "ID": "98",
        "question": "What are some artists on the show whose opening theme is Send It On",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/openingTheme> <http://dbpedia.org/resource/Send_It_On_(Disney's_Friends_for_Change_song)> . ?x <http://dbpedia.org/property/artist> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "what are some artists on [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the artists whose opening theme is send on it",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "what are some artists on [INQL] the artists whose opening theme is send on it [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "what are some artists on [ENT]"
        ],
        "subq2": [
            "the artists whose opening theme is send on it"
        ]
    },
    {
        "ID": "2557",
        "question": "What is the citizenship of Saima Chowdhury",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Saima_Chowdhury> <http://dbpedia.org/ontology/citizenship> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what is the citizenship of saima chowdhury",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "what is the citizenship of saima chowdhury",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what is the citizenship of saima chowdhury [DES] what is the citizenship of saima chowdhury",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "what is the citizenship of saima chowdhury",
            "what is the citizenship of saima chowdhury"
        ],
        "subq2": []
    },
    {
        "ID": "3183",
        "question": "What are the musical performances whose label is Celluloid Records",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/label> <http://dbpedia.org/resource/Celluloid_Records>  . }",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what are the musical performances",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "whose label is celluloid records",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what are the musical performances [DES] whose label is celluloid records",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "what are the musical performances",
            "whose label is celluloid records"
        ],
        "subq2": []
    },
    {
        "ID": "253",
        "question": "What is the craft of the Ralph Flanders which is also the profession of Claiborne Pell",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ralph_Flanders> <http://dbpedia.org/property/occupation> ?uri. <http://dbpedia.org/resource/Claiborne_Pell> <http://dbpedia.org/ontology/profession> ?uri} ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what is the craft of the ralph flanders",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "which is also the profession of claiborne pell",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what is the craft of the ralph flanders [DES] which is also the profession of claiborne pell",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "what is the craft of the ralph flanders",
            "which is also the profession of claiborne pell"
        ],
        "subq2": []
    },
    {
        "ID": "3923",
        "question": "How many people have fought wars where Arthur St. Clair was a commander",
        "sparql": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_St._Clair> . ?x <http://dbpedia.org/property/combatant> ?uri  . }",
        "intent": "COUNT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "how many people have fought [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "where arthur clair was a commander",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "how many people have fought [INQL] where arthur clair was a commander [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "COUNT",
        "subq1": [
            "how many people have fought [ENT]"
        ],
        "subq2": [
            "where arthur clair was a commander"
        ]
    },
    {
        "ID": "4199",
        "question": "Does Chicago own the Monroe Station",
        "sparql": "ASK WHERE { <http://dbpedia.org/resource/Monroe_station_(CTA_Blue_Line)> <http://dbpedia.org/property/owned> <http://dbpedia.org/resource/Chicago> }",
        "intent": "ASK",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "does [ENT] monroe chicago own",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the chicago own station",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "does [INQL] the chicago own station [INQR] monroe chicago own",
        "compositionality_type_golden": "simple",
        "intent_golden": "ASK",
        "subq1": [
            "does [ENT] monroe chicago own"
        ],
        "subq2": [
            "the chicago own station"
        ]
    },
    {
        "ID": "1445",
        "question": "Which team has had both Martin prochzka and garry unger as its players",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Martin_Proch\u00e1zka> <http://dbpedia.org/ontology/formerTeam> ?uri. <http://dbpedia.org/resource/Garry_Unger> <http://dbpedia.org/ontology/formerTeam> ?uri . }",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which team",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "has had both prochzka and garry unger as its players",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which team [DES] has had both prochzka and garry unger as its players",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "which team",
            "has had both prochzka and garry unger as its players"
        ],
        "subq2": []
    },
    {
        "ID": "1648",
        "question": "What are the awards received by spouse of Ellen Lundstrom",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ellen_Lundstr\u00f6m> . ?x <http://dbpedia.org/property/awards> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "what are the awards received by [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "spouse of ellen lundstrom",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "what are the awards received by [INQL] spouse of ellen lundstrom [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "what are the awards received by [ENT]"
        ],
        "subq2": [
            "spouse of ellen lundstrom"
        ]
    },
    {
        "ID": "4682",
        "question": "Who all have succeeded the kings buried in Rome",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/placeOfBurial> <http://dbpedia.org/resource/Rome> . ?x <http://dbpedia.org/ontology/successor> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "who all have succeeded [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the kings in rome",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "who all have succeeded [INQL] the kings in rome [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "who all have succeeded [ENT]"
        ],
        "subq2": [
            "the kings in rome"
        ]
    },
    {
        "ID": "4723",
        "question": "Through which states do the rivers flow which join in the republican river from the left",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Republican_River> <http://dbpedia.org/ontology/leftTributary> ?x . ?x <http://dbpedia.org/ontology/state> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "through which states do the rivers flow through [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "which join in the republican flow from the republican river left from the republican river left from",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "through which states do the rivers flow through [INQL] which join in the republican flow from the republican river left from the republican river left from [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "through which states do the rivers flow through [ENT]"
        ],
        "subq2": [
            "which join in the republican flow from the republican river left from the republican river left from"
        ]
    },
    {
        "ID": "3991",
        "question": "Give me the home town of all musical artists who uses Guitar as instrument",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/instrument> <http://dbpedia.org/resource/Guitar> . ?x <http://dbpedia.org/ontology/hometown> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "give me the home town of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "all artists who uses guitar as musical instrument",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "give me the home town of [INQL] all artists who uses guitar as musical instrument [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "give me the home town of [ENT]"
        ],
        "subq2": [
            "all artists who uses guitar as musical instrument"
        ]
    },
    {
        "ID": "1696",
        "question": "How many religions are followed amongst the people who've worked in the Korean army",
        "sparql": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/militaryBranch> <http://dbpedia.org/resource/Republic_of_Korea_Army> . ?x <http://dbpedia.org/ontology/religion> ?uri  . }",
        "intent": "COUNT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "how many religions are followed [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the people amongst in the korean army",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "how many religions are followed [INQL] the people amongst in the korean army [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "COUNT",
        "subq1": [
            "how many religions are followed [ENT]"
        ],
        "subq2": [
            "the people amongst in the korean army"
        ]
    },
    {
        "ID": "3191",
        "question": "Was andy warhol a part of Pop Art movement",
        "sparql": "ASK WHERE { <http://dbpedia.org/resource/Andy_Warhol> <http://dbpedia.org/property/movement> <http://dbpedia.org/resource/Pop_art> }",
        "intent": "ASK",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "was a part of pop [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "andy warhol art movement",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "was a part of pop [INQL] andy warhol art movement [INQR]",
        "compositionality_type_golden": "simple",
        "intent_golden": "ASK",
        "subq1": [
            "was a part of pop [ENT]"
        ],
        "subq2": [
            "andy warhol art movement"
        ]
    },
    {
        "ID": "4499",
        "question": "Count the number of musical work which were sold by Sony Music",
        "sparql": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/label> <http://dbpedia.org/resource/Sony_Music_Entertainment> . ?uri <http://dbpedia.org/property/music> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>}",
        "intent": "COUNT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "count the number of work of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "music which were sold by sony music",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "count the number of work of [INQL] music which were sold by sony music [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "COUNT",
        "subq1": [
            "count the number of work of [ENT]"
        ],
        "subq2": [
            "music which were sold by sony music"
        ]
    },
    {
        "ID": "1154",
        "question": "Who is the person whose home town is Fairmount, Indiana",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/hometown> <http://dbpedia.org/resource/Fairmount,_Indiana>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "who is the person",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "whose home town is fairmount , indiana",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "who is the person [DES] whose home town is fairmount , indiana",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "who is the person",
            "whose home town is fairmount , indiana"
        ],
        "subq2": []
    },
    {
        "ID": "2255",
        "question": "Name the movies directed by Stanley Kubrick and edited by Anthony Harvey",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Stanley_Kubrick> . ?uri <http://dbpedia.org/property/editing> <http://dbpedia.org/resource/Anthony_Harvey>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "name the movies directed by stanley kubrick",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "and edited by anthony harvey",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "name the movies directed by stanley kubrick [DES] and edited by anthony harvey",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "name the movies directed by stanley kubrick",
            "and edited by anthony harvey"
        ],
        "subq2": []
    },
    {
        "ID": "1682",
        "question": "List all binomial authority of the insects whose one of the binomial authority is douard Mntries",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/binomialAuthority> <http://dbpedia.org/resource/\u00c9douard_M\u00e9n\u00e9tries> . ?x <http://dbpedia.org/ontology/binomialAuthority> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "list all binomial authority of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the insects whose one of the binomial authority is douard mntries",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "list all binomial authority of [INQL] the insects whose one of the binomial authority is douard mntries [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "list all binomial authority of [ENT]"
        ],
        "subq2": [
            "the insects whose one of the binomial authority is douard mntries"
        ]
    },
    {
        "ID": "3170",
        "question": "Who is the military general buried in St Mary's Church, Battersea",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/placeofburial> <http://dbpedia.org/resource/St_Mary's_Church,_Battersea>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryPerson>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "who is [ENT] buried",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the military general in st mary 's church , battersea",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "who is [INQL] the military general in st mary 's church , battersea [INQR] buried",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "who is [ENT] buried"
        ],
        "subq2": [
            "the military general in st mary 's church , battersea"
        ]
    },
    {
        "ID": "2056",
        "question": "What is the military unit whose command structures are United States Department of the Navy and United States Department of Defense",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/commandStructure> <http://dbpedia.org/resource/United_States_Department_of_the_Navy> . ?uri <http://dbpedia.org/ontology/commandStructure> <http://dbpedia.org/resource/United_States_Department_of_Defense> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what is the military unit",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "whose command are united states department of the navy and united states department of defense",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what is the military unit [DES] whose command are united states department of the navy and united states department of defense",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "what is the military unit",
            "whose command are united states department of the navy and united states department of defense"
        ],
        "subq2": []
    },
    {
        "ID": "4090",
        "question": "What are some other things developed by the company who made the remote desktop protocol",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/products> <http://dbpedia.org/resource/Remote_Desktop_Protocol> . ?x <http://dbpedia.org/ontology/product> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "what are some other things developed by [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the company who made the remote desktop protocol",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "what are some other things developed by [INQL] the company who made the remote desktop protocol [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "what are some other things developed by [ENT]"
        ],
        "subq2": [
            "the company who made the remote desktop protocol"
        ]
    },
    {
        "ID": "3108",
        "question": "Where was Al-Muzaffar Umar buried",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Al-Muzaffar_Umar> <http://dbpedia.org/property/placeOfBurial> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "where was al-muzaffar umar",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "buried umar",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "where was al-muzaffar umar [DES] buried umar",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "where was al-muzaffar umar",
            "buried umar"
        ],
        "subq2": []
    },
    {
        "ID": "4548",
        "question": "List the guests of On Broadway",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/On_Broadway_(Smash)> <http://dbpedia.org/property/guests> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "list the guests",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "on broadway",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "list the guests [DES] on broadway",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "list the guests",
            "on broadway"
        ],
        "subq2": []
    },
    {
        "ID": "3723",
        "question": "How many universities are there whose country's capital is Oslo",
        "sparql": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/capital> <http://dbpedia.org/resource/Oslo> . ?uri <http://dbpedia.org/ontology/country> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}",
        "intent": "COUNT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "how many universities are there whose capital 's [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "country whose capital is oslo",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "how many universities are there whose capital 's [INQL] country whose capital is oslo [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "COUNT",
        "subq1": [
            "how many universities are there whose capital 's [ENT]"
        ],
        "subq2": [
            "country whose capital is oslo"
        ]
    },
    {
        "ID": "2049",
        "question": "Did Bob Dylan write the lyrics of the times they are a changin'",
        "sparql": "ASK WHERE { <http://dbpedia.org/resource/The_Times_They_Are_a-Changin'_(musical)> <http://dbpedia.org/property/lyrics> <http://dbpedia.org/resource/Bob_Dylan> }",
        "intent": "ASK",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "did they dylan write [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the lyrics of the bob changin ``",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "did they dylan write [INQL] the lyrics of the bob changin `` [INQR]",
        "compositionality_type_golden": "simple",
        "intent_golden": "ASK",
        "subq1": [
            "did they dylan write [ENT]"
        ],
        "subq2": [
            "the lyrics of the bob changin ``"
        ]
    },
    {
        "ID": "3643",
        "question": "What is the religion of the ones in the Kampuchean Union of Salvation",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/militaryBranch> <http://dbpedia.org/resource/Kampuchean_United_Front_for_National_Salvation> . ?x <http://dbpedia.org/ontology/religion> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "what is the religion of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the ones in the union of union salvation",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "what is the religion of [INQL] the ones in the union of union salvation [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "what is the religion of [ENT]"
        ],
        "subq2": [
            "the ones in the union of union salvation"
        ]
    },
    {
        "ID": "4927",
        "question": "Where did the members of judge advocate general corps study",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/militaryRank> <http://dbpedia.org/resource/Judge_Advocate_General's_Corps,_United_States_Army> . ?x <http://dbpedia.org/ontology/almaMater> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "where did [ENT] study",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the members of advocate general corps",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "where did [INQL] the members of advocate general corps [INQR] study",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "where did [ENT] study"
        ],
        "subq2": [
            "the members of advocate general corps"
        ]
    },
    {
        "ID": "623",
        "question": "Name the airlines which have a hub in airport in SF",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/cityServed> <http://dbpedia.org/resource/San_Francisco> . ?uri <http://dbpedia.org/property/hubs> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Airline>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "name the airlines which have a hub airport in sf",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "which have a hub airport in sf",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "name the airlines which have a hub airport in sf [DES] which have a hub airport in sf",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "name the airlines which have a hub airport in sf",
            "which have a hub airport in sf"
        ],
        "subq2": []
    },
    {
        "ID": "262",
        "question": "Which executive producer of the ultimate merger is also an important person at Trump Productions",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Ultimate_Merger> <http://dbpedia.org/ontology/executiveProducer> ?uri. <http://dbpedia.org/resource/Trump_Productions> <http://dbpedia.org/ontology/keyPerson> ?uri . }",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which executive producer of the ultimate productions",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "is also an important person at trump merger",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which executive producer of the ultimate productions [DES] is also an important person at trump merger",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "which executive producer of the ultimate productions",
            "is also an important person at trump merger"
        ],
        "subq2": []
    },
    {
        "ID": "3369",
        "question": "What is the official name of Colorado wine",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Colorado_wine> <http://dbpedia.org/property/officialName> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what is the official name of colorado",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "name of wine",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what is the official name of colorado [DES] name of wine",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "what is the official name of colorado",
            "name of wine"
        ],
        "subq2": []
    },
    {
        "ID": "4061",
        "question": "In how many states can one find Burr Tuss kind of bridges",
        "sparql": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/style> <http://dbpedia.org/resource/Burr_Truss> . ?x <http://dbpedia.org/ontology/state> ?uri  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>}",
        "intent": "COUNT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "in how many states can one of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "one tuss tuss bridges",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "in how many states can one of [INQL] one tuss tuss bridges [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "COUNT",
        "subq1": [
            "in how many states can one of [ENT]"
        ],
        "subq2": [
            "one tuss tuss bridges"
        ]
    },
    {
        "ID": "1802",
        "question": "who developed google videos",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Google_Videos> <http://dbpedia.org/property/developer> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "who developed videos",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "who developed google videos google",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "who developed videos [DES] who developed google videos google",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "who developed videos",
            "who developed google videos google"
        ],
        "subq2": []
    },
    {
        "ID": "4736",
        "question": "Who is the child of John Tyler, Sr",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/John_Tyler,_Sr.> <http://dbpedia.org/ontology/child> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "who is the child of john tyler , sr",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "sr",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "who is the child of john tyler , sr [DES] sr",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "who is the child of john tyler , sr",
            "sr"
        ],
        "subq2": []
    },
    {
        "ID": "4992",
        "question": "Is Brazilian jiu-jitsu the trainer of Nick Diaz",
        "sparql": "ASK WHERE { <http://dbpedia.org/resource/Nick_Diaz> <http://dbpedia.org/ontology/trainer> <http://dbpedia.org/resource/Brazilian_jiu-jitsu> }",
        "intent": "ASK",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "is the trainer of nick diaz",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "the nick diaz trainer",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "is the trainer of nick diaz [DES] the nick diaz trainer",
        "compositionality_type_golden": "simple",
        "intent_golden": "ASK",
        "subq1": [
            "is the trainer of nick diaz",
            "the nick diaz trainer"
        ],
        "subq2": []
    },
    {
        "ID": "2385",
        "question": "Who is the owner of Latvian Wikipedia and Wiktionary",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Latvian_Wikipedia> <http://dbpedia.org/ontology/owner> ?uri. <http://dbpedia.org/resource/Wiktionary> <http://dbpedia.org/ontology/owner> ?uri . }",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "who is the owner of latvian wikipedia and wiktionary",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                }
            ]
        },
        "pred": "who is the owner of latvian wikipedia and wiktionary",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "who is the owner of latvian wikipedia and wiktionary"
        ],
        "subq2": []
    },
    {
        "ID": "1959",
        "question": "Name all those buried in a place governed by a city council",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/governingBody> <http://dbpedia.org/resource/City_council> . ?uri <http://dbpedia.org/property/restingPlace> ?x  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "name all those buried in [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "a place governed by a council city",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "name all those buried in [INQL] a place governed by a council city [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "name all those buried in [ENT]"
        ],
        "subq2": [
            "a place governed by a council city"
        ]
    },
    {
        "ID": "2976",
        "question": "What royalties' sepulcher is Mausoleum of Augustus",
        "sparql": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/placeOfBurial> <http://dbpedia.org/resource/Mausoleum_of_Augustus> } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what royalties `` sepulcher",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "is mausoleum of augustus augustus",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what royalties `` sepulcher [DES] is mausoleum of augustus augustus",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "what royalties `` sepulcher",
            "is mausoleum of augustus augustus"
        ],
        "subq2": []
    },
    {
        "ID": "488",
        "question": "Name the common university of the Cardinal and Jim Wylie",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Stanford_Cardinal> <http://dbpedia.org/ontology/university> ?uri. <http://dbpedia.org/resource/Jim_Wylie> <http://dbpedia.org/ontology/university> ?uri . }",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "name the common university of the cardinal and jim wylie",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                }
            ]
        },
        "pred": "name the common university of the cardinal and jim wylie",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "name the common university of the cardinal and jim wylie"
        ],
        "subq2": []
    },
    {
        "ID": "1843",
        "question": "What is the automobile platform of Chiva bus",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Chiva_bus> <http://dbpedia.org/ontology/automobilePlatform> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what is the automobile platform of chiva bus",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "what is the automobile bus",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what is the automobile platform of chiva bus [DES] what is the automobile bus",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "what is the automobile platform of chiva bus",
            "what is the automobile bus"
        ],
        "subq2": []
    },
    {
        "ID": "1734",
        "question": "Who are the animator of The Skeleton Dance",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Skeleton_Dance> <http://dbpedia.org/ontology/animator> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "who are the animator of the skeleton dance",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "who are the skeleton dance",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "who are the animator of the skeleton dance [DES] who are the skeleton dance",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "who are the animator of the skeleton dance",
            "who are the skeleton dance"
        ],
        "subq2": []
    },
    {
        "ID": "2911",
        "question": "How many movies have a screenplay located in the States",
        "sparql": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/United_States> . ?uri <http://dbpedia.org/property/screenplay> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
        "intent": "COUNT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "how many movies have a screenplay [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "located in the states",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "how many movies have a screenplay [INQL] located in the states [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "COUNT",
        "subq1": [
            "how many movies have a screenplay [ENT]"
        ],
        "subq2": [
            "located in the states"
        ]
    },
    {
        "ID": "3219",
        "question": "Which ceremonial County of the East Tilbury is also the local authority of the Trinity School, Brentwood",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/East_Tilbury> <http://dbpedia.org/ontology/ceremonialCounty> ?uri. <http://dbpedia.org/resource/Trinity_School,_Brentwood> <http://dbpedia.org/ontology/localAuthority> ?uri} ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which ceremonial of the east tilbury",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "is also the local authority of the trinity school , brentwood",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which ceremonial of the east tilbury [DES] is also the local authority of the trinity school , brentwood",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "which ceremonial of the east tilbury",
            "is also the local authority of the trinity school , brentwood"
        ],
        "subq2": []
    },
    {
        "ID": "146",
        "question": "What system is both a platform where Nord runs and also distributed The beauty inside",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Nord_(video_game)> <http://dbpedia.org/ontology/computingPlatform> ?uri. <http://dbpedia.org/resource/The_Beauty_Inside> <http://dbpedia.org/ontology/distributor> ?uri . }",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what system",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "is both a beauty where nord platform and also distributed the beauty system",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what system [DES] is both a beauty where nord platform and also distributed the beauty system",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "what system",
            "is both a beauty where nord platform and also distributed the beauty system"
        ],
        "subq2": []
    },
    {
        "ID": "1986",
        "question": "Name the country whose leader's deputy is Piotr Glinski",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/deputy> <http://dbpedia.org/resource/Piotr_Gli\u0144ski> . ?uri <http://dbpedia.org/property/leaderName> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "name the country whose leader 's [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "deputy is piotr glinski",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "name the country whose leader 's [INQL] deputy is piotr glinski [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "name the country whose leader 's [ENT]"
        ],
        "subq2": [
            "deputy is piotr glinski"
        ]
    },
    {
        "ID": "1369",
        "question": "Is Cologny a neighboring city of Geneva",
        "sparql": "ASK WHERE { <http://dbpedia.org/resource/Geneva> <http://dbpedia.org/property/neighboringMunicipalities> <http://dbpedia.org/resource/Cologny> }",
        "intent": "ASK",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "is a neighboring city of cologny geneva",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "neighboring city",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "is a neighboring city of cologny geneva [DES] neighboring city",
        "compositionality_type_golden": "simple",
        "intent_golden": "ASK",
        "subq1": [
            "is a neighboring city of cologny geneva",
            "neighboring city"
        ],
        "subq2": []
    },
    {
        "ID": "2811",
        "question": "Whose creators are Jerry Seinfeld and Larry David",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Jerry_Seinfeld> . ?uri <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Larry_David> . }",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "whose creators are jerry seinfeld and larry david",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                }
            ]
        },
        "pred": "whose creators are jerry seinfeld and larry david",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "whose creators are jerry seinfeld and larry david"
        ],
        "subq2": []
    },
    {
        "ID": "659",
        "question": "Which TV show is related to The Sarah Jane Adventures and theme music is composed by Ron Grainer",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/related> <http://dbpedia.org/resource/The_Sarah_Jane_Adventures> . ?uri <http://dbpedia.org/property/themeMusicComposer> <http://dbpedia.org/resource/Ron_Grainer>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which tv show is related to the sarah jane adventures",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "and theme music is composed by ron grainer adventures",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which tv show is related to the sarah jane adventures [DES] and theme music is composed by ron grainer adventures",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "which tv show is related to the sarah jane adventures",
            "and theme music is composed by ron grainer adventures"
        ],
        "subq2": []
    },
    {
        "ID": "1794",
        "question": "Name the parent company of Ford Air Transport Service",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ford_Air_Transport_Service> <http://dbpedia.org/ontology/parentCompany> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "name the company of ford air transport service",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "transport service",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "name the company of ford air transport service [DES] transport service",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "name the company of ford air transport service",
            "transport service"
        ],
        "subq2": []
    },
    {
        "ID": "2511",
        "question": "Who has these major shrines : Emmitsburg, Maryland and Shrine of St. Elizabeth Ann Bayley Seton",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/majorShrine> <http://dbpedia.org/resource/Emmitsburg,_Maryland> . ?uri <http://dbpedia.org/ontology/majorShrine> <http://dbpedia.org/resource/Shrine_of_St._Elizabeth_Ann_Bayley_Seton> . }",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "who has these shrines : emmitsburg , maryland",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "and shrine of st. ann bayley",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "who has these shrines : emmitsburg , maryland [DES] and shrine of st. ann bayley",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "who has these shrines : emmitsburg , maryland",
            "and shrine of st. ann bayley"
        ],
        "subq2": []
    },
    {
        "ID": "3397",
        "question": "Which region of Bannock is the origin of Spaghetti squash",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Spaghetti_squash> <http://dbpedia.org/ontology/origin> ?uri. <http://dbpedia.org/resource/Bannock_(food)> <http://dbpedia.org/ontology/region> ?uri} ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which region of bannock",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "is the origin of spaghetti squash",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which region of bannock [DES] is the origin of spaghetti squash",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "which region of bannock",
            "is the origin of spaghetti squash"
        ],
        "subq2": []
    },
    {
        "ID": "4282",
        "question": "Where in the us military did pierre r graham and edwin f hunter work",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Pierre_R._Graham> <http://dbpedia.org/property/branch> ?uri. <http://dbpedia.org/resource/Edwin_F._Hunter> <http://dbpedia.org/property/branch> ?uri . }",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "where in the us military did pierre r",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "and edwin f hunter work",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "where in the us military did pierre r [DES] and edwin f hunter work",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "where in the us military did pierre r",
            "and edwin f hunter work"
        ],
        "subq2": []
    },
    {
        "ID": "1147",
        "question": "Count everyone who lives in a place where Indian English is an official language",
        "sparql": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/officialLanguage> <http://dbpedia.org/resource/Indian_English> . ?uri <http://dbpedia.org/ontology/residence> ?x  . }",
        "intent": "COUNT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "count everyone who lives in [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "a place where indian english is an official language",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "count everyone who lives in [INQL] a place where indian english is an official language [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "COUNT",
        "subq1": [
            "count everyone who lives in [ENT]"
        ],
        "subq2": [
            "a place where indian english is an official language"
        ]
    },
    {
        "ID": "3272",
        "question": "Did Raymond Picard take birth in Paris",
        "sparql": "ASK WHERE { <http://dbpedia.org/resource/Raymond_Picard> <http://dbpedia.org/property/birthplace> <http://dbpedia.org/resource/Paris> }",
        "intent": "ASK",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "raymond picard did raymond picard take in",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                }
            ]
        },
        "pred": "raymond picard did raymond picard take in",
        "compositionality_type_golden": "simple",
        "intent_golden": "ASK",
        "subq1": [
            "raymond picard did raymond picard take in"
        ],
        "subq2": []
    },
    {
        "ID": "608",
        "question": "How many religions are practiced by diplomats",
        "sparql": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Diplomacy> . ?x <http://dbpedia.org/property/religion> ?uri  . }",
        "intent": "COUNT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "how many religions are practiced by [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "diplomats",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "how many religions are practiced by [INQL] diplomats [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "COUNT",
        "subq1": [
            "how many religions are practiced by [ENT]"
        ],
        "subq2": [
            "diplomats"
        ]
    },
    {
        "ID": "3582",
        "question": "Was Elton John a chairman of a Watford FC Season",
        "sparql": "ASK WHERE { <http://dbpedia.org/resource/1999\u20132000_Watford_F.C._season> <http://dbpedia.org/ontology/chairman> <http://dbpedia.org/resource/Elton_John> }",
        "intent": "ASK",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "was a john watford",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "was a chairman of a watford season",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "was a john watford [DES] was a chairman of a watford season",
        "compositionality_type_golden": "simple",
        "intent_golden": "ASK",
        "subq1": [
            "was a john watford",
            "was a chairman of a watford season"
        ],
        "subq2": []
    },
    {
        "ID": "1930",
        "question": "Which publisher of Lucifer's hammer is also known for Jo Garcia",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lucifer's_Hammer> <http://dbpedia.org/ontology/publisher> ?uri. <http://dbpedia.org/resource/Jo_Garcia> <http://dbpedia.org/ontology/knownFor> ?uri} ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which publisher of lucifer 's hammer",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "is also known for jo garcia",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which publisher of lucifer 's hammer [DES] is also known for jo garcia",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "which publisher of lucifer 's hammer",
            "is also known for jo garcia"
        ],
        "subq2": []
    },
    {
        "ID": "197",
        "question": "To whom was Tessa Dahl born to",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Tessa_Dahl> <http://dbpedia.org/ontology/parent> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "to whom",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "was tessa born to whom",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "to whom [DES] was tessa born to whom",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "to whom",
            "was tessa born to whom"
        ],
        "subq2": []
    },
    {
        "ID": "2931",
        "question": "Which sport at Polytechnic University of the Philippines Taguig is the field of Jon speelman",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jon_Speelman> <http://dbpedia.org/ontology/field> ?uri. <http://dbpedia.org/resource/Polytechnic_University_of_the_Philippines_Taguig> <http://dbpedia.org/ontology/sport> ?uri} ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which sport",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "at polytechnic university of the field is the field of philippines speelman",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which sport [DES] at polytechnic university of the field is the field of philippines speelman",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "which sport",
            "at polytechnic university of the field is the field of philippines speelman"
        ],
        "subq2": []
    },
    {
        "ID": "2327",
        "question": "Count the number of things people who know linguistics are known for",
        "sparql": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/knownFor> <http://dbpedia.org/resource/Linguistics> . ?x <http://dbpedia.org/ontology/knownFor> ?uri }",
        "intent": "COUNT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "count the number of things [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "people who linguistics are known for",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "count the number of things [INQL] people who linguistics are known for [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "COUNT",
        "subq1": [
            "count the number of things [ENT]"
        ],
        "subq2": [
            "people who linguistics are known for"
        ]
    },
    {
        "ID": "4389",
        "question": "Where were sverre krogh sundbo and havard vad petersson born",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Sverre_Krogh_Sundb\u00f8> <http://dbpedia.org/property/birthPlace> ?uri. <http://dbpedia.org/resource/H\u00e5vard_Vad_Petersson> <http://dbpedia.org/property/placeOfBirth> ?uri} ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "where were sverre krogh",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "and havard vad petersson born",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "where were sverre krogh [DES] and havard vad petersson born",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "where were sverre krogh",
            "and havard vad petersson born"
        ],
        "subq2": []
    },
    {
        "ID": "766",
        "question": "Was Cliff Burton in Metallica",
        "sparql": "ASK WHERE { <http://dbpedia.org/resource/Metallica> <http://dbpedia.org/property/pastMembers> <http://dbpedia.org/resource/Cliff_Burton> }",
        "intent": "ASK",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "was cliff in metallica",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "was metallica in metallica",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "was cliff in metallica [DES] was metallica in metallica",
        "compositionality_type_golden": "simple",
        "intent_golden": "ASK",
        "subq1": [
            "was cliff in metallica",
            "was metallica in metallica"
        ],
        "subq2": []
    },
    {
        "ID": "4496",
        "question": "How many religions are followed by organizations which are internationally known as the muslim brotherhood",
        "sparql": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/international> <http://dbpedia.org/resource/Muslim_Brotherhood> . ?x <http://dbpedia.org/ontology/religion> ?uri  . }",
        "intent": "COUNT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "how many religions are followed by [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "organizations which are known as the internationally muslim brotherhood",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "how many religions are followed by [INQL] organizations which are known as the internationally muslim brotherhood [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "COUNT",
        "subq1": [
            "how many religions are followed by [ENT]"
        ],
        "subq2": [
            "organizations which are known as the internationally muslim brotherhood"
        ]
    },
    {
        "ID": "4218",
        "question": "What are some people born in NY known for",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/New_York_City> . ?x <http://dbpedia.org/ontology/knownFor> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what are some people",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "born in ny",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what are some people [DES] born in ny",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "what are some people",
            "born in ny"
        ],
        "subq2": []
    },
    {
        "ID": "3255",
        "question": "Who is the developer of the software which is produced by Claris",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Claris> <http://dbpedia.org/property/products> ?x . ?x <http://dbpedia.org/ontology/developer> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "who is the developer of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the software which is produced by claris",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "who is the developer of [INQL] the software which is produced by claris [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "who is the developer of [ENT]"
        ],
        "subq2": [
            "the software which is produced by claris"
        ]
    },
    {
        "ID": "202",
        "question": "What is the river whose source is Cowombat Flat and has it's mouth located in Murray Mouth",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/source> <http://dbpedia.org/resource/Cowombat_Flat> . ?uri <http://dbpedia.org/ontology/riverMouth> <http://dbpedia.org/resource/Murray_Mouth>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what is the river",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "whose source is cowombat flat and it 's mouth in murray",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what is the river [DES] whose source is cowombat flat and it 's mouth in murray",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "what is the river",
            "whose source is cowombat flat and it 's mouth in murray"
        ],
        "subq2": []
    },
    {
        "ID": "3510",
        "question": "Where does the river flow into which begins in Lebrsnik",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/sourcePlace> <http://dbpedia.org/resource/Lebr\u0161nik> . ?x <http://dbpedia.org/ontology/riverMouth> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "where does the river flow into [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "which begins in lebrsnik",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "where does the river flow into [INQL] which begins in lebrsnik [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "where does the river flow into [ENT]"
        ],
        "subq2": [
            "which begins in lebrsnik"
        ]
    },
    {
        "ID": "1733",
        "question": "What is the government type of Ancient Rome",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ancient_Rome> <http://dbpedia.org/ontology/governmentType> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what is the type of government",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "what is the rome",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what is the type of government [DES] what is the rome",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "what is the type of government",
            "what is the rome"
        ],
        "subq2": []
    },
    {
        "ID": "2777",
        "question": "Which director of On deadly Ground also released Mojo Priest",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Mojo_Priest> <http://dbpedia.org/property/artist> ?uri. <http://dbpedia.org/resource/On_Deadly_Ground> <http://dbpedia.org/property/director> ?uri . }",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which ground of deadly",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "also director mojo priest",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which ground of deadly [DES] also director mojo priest",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "which ground of deadly",
            "also director mojo priest"
        ],
        "subq2": []
    },
    {
        "ID": "1707",
        "question": "What is the television show whose channel's parent organisation is Fox Sports",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/parentOrganisation> <http://dbpedia.org/resource/Fox_Sports_(United_States)> . ?uri <http://dbpedia.org/ontology/channel> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what is the television show",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "whose organisation is fox sports show",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what is the television show [DES] whose organisation is fox sports show",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "what is the television show",
            "whose organisation is fox sports show"
        ],
        "subq2": []
    },
    {
        "ID": "3474",
        "question": "Who commanded the invasion of Buwat and made Fatima bint Sa'd famous",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Invasion_of_Buwat> <http://dbpedia.org/property/commander> ?uri. <http://dbpedia.org/resource/Fatimah_bint_Sa'd> <http://dbpedia.org/ontology/knownFor> ?uri . }",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "who commanded the invasion of buwat",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "and made fatima bint famous",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "who commanded the invasion of buwat [DES] and made fatima bint famous",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "who commanded the invasion of buwat",
            "and made fatima bint famous"
        ],
        "subq2": []
    },
    {
        "ID": "854",
        "question": "What is the home ground of the clubs managed by Ciao Zanardi",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Caio_Zanardi> . ?x <http://dbpedia.org/ontology/ground> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "what is the home of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the clubs managed by ciao zanardi",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "what is the home of [INQL] the clubs managed by ciao zanardi [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "what is the home of [ENT]"
        ],
        "subq2": [
            "the clubs managed by ciao zanardi"
        ]
    },
    {
        "ID": "4737",
        "question": "What is the country with native language as Languages of Ethiopia",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/language> <http://dbpedia.org/resource/Languages_of_Ethiopia>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what is the country",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "with languages as native language of ethiopia",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what is the country [DES] with languages as native language of ethiopia",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "what is the country",
            "with languages as native language of ethiopia"
        ],
        "subq2": []
    },
    {
        "ID": "4097",
        "question": "What is the band with previous members Kevin Jonas and Joe Jonas",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/pastMembers> <http://dbpedia.org/resource/Kevin_Jonas> . ?uri <http://dbpedia.org/property/pastMembers> <http://dbpedia.org/resource/Joe_Jonas> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what is the previous members",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "with joe jonas and joe jonas",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what is the previous members [DES] with joe jonas and joe jonas",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "what is the previous members",
            "with joe jonas and joe jonas"
        ],
        "subq2": []
    },
    {
        "ID": "2160",
        "question": "List the people with Scientology as their religious belief",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/religion> <http://dbpedia.org/resource/Scientology>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "list the people",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "with scientology as their religious belief",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "list the people [DES] with scientology as their religious belief",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "list the people",
            "with scientology as their religious belief"
        ],
        "subq2": []
    },
    {
        "ID": "698",
        "question": "How many fictional characters were humans",
        "sparql": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/species> <http://dbpedia.org/resource/Human>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}",
        "intent": "COUNT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "how many fictional characters",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "were humans",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "how many fictional characters [DES] were humans",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "COUNT",
        "subq1": [
            "how many fictional characters",
            "were humans"
        ],
        "subq2": []
    },
    {
        "ID": "4947",
        "question": "Where was Girls (The Prodigy song) recorded",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Girls_(The_Prodigy_song)> <http://dbpedia.org/property/recorded> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "where was [ENT] recorded",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "girls (the song)",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "where was [INQL] girls (the song) [INQR] recorded",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "where was [ENT] recorded"
        ],
        "subq2": [
            "girls (the song)"
        ]
    },
    {
        "ID": "2999",
        "question": "How many TV shows' networks are headquartered in NY",
        "sparql": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/headquarters> <http://dbpedia.org/resource/New_York> . ?uri <http://dbpedia.org/property/network> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "intent": "COUNT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "how many tv shows `` are [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "networks headquartered in ny",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "how many tv shows `` are [INQL] networks headquartered in ny [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "COUNT",
        "subq1": [
            "how many tv shows `` are [ENT]"
        ],
        "subq2": [
            "networks headquartered in ny"
        ]
    },
    {
        "ID": "3696",
        "question": "Does StandBy records distribute via Sony",
        "sparql": "ASK WHERE { <http://dbpedia.org/resource/StandBy_Records> <http://dbpedia.org/ontology/distributingLabel> <http://dbpedia.org/resource/Sony> }",
        "intent": "ASK",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "does standby distribute records",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "distribute via records",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "does standby distribute records [DES] distribute via records",
        "compositionality_type_golden": "simple",
        "intent_golden": "ASK",
        "subq1": [
            "does standby distribute records",
            "distribute via records"
        ],
        "subq2": []
    },
    {
        "ID": "1636",
        "question": "Give me some shows owned by BBC one and BBC hd",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/network> <http://dbpedia.org/resource/BBC_One> . ?uri <http://dbpedia.org/ontology/network> <http://dbpedia.org/resource/BBC_HD> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "give me some shows",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "owned by bbc hd and bbc hd",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "give me some shows [DES] owned by bbc hd and bbc hd",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "give me some shows",
            "owned by bbc hd and bbc hd"
        ],
        "subq2": []
    },
    {
        "ID": "3457",
        "question": "How many teams have rented stadiums in Canada",
        "sparql": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Canada> . ?x <http://dbpedia.org/property/tenants> ?uri  . }",
        "intent": "COUNT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "how many teams have rented [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "stadiums in canada",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "how many teams have rented [INQL] stadiums in canada [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "COUNT",
        "subq1": [
            "how many teams have rented [ENT]"
        ],
        "subq2": [
            "stadiums in canada"
        ]
    },
    {
        "ID": "3581",
        "question": "List the awards won by the film director of Chicken Run",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Chicken_Run> <http://dbpedia.org/property/director> ?x . ?x <http://dbpedia.org/ontology/award> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "list the awards won by [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the film director of chicken",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "list the awards won by [INQL] the film director of chicken [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "list the awards won by [ENT]"
        ],
        "subq2": [
            "the film director of chicken"
        ]
    },
    {
        "ID": "1291",
        "question": "What territory of Sino French War was the battle of Raoul Magrin-Vernerey fought",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Sino-French_War> <http://dbpedia.org/ontology/territory> ?uri. <http://dbpedia.org/resource/Raoul_Magrin-Vernerey> <http://dbpedia.org/property/battles> ?uri} ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what territory of sino french war",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "was the battle of raoul fought",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what territory of sino french war [DES] was the battle of raoul fought",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "what territory of sino french war",
            "was the battle of raoul fought"
        ],
        "subq2": []
    },
    {
        "ID": "4659",
        "question": "List the outflow of Lake Uniamsi",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lake_Uniam\u00e9si> <http://dbpedia.org/ontology/outflow> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "list the outflow of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "lake uniamsi",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "list the outflow of [INQL] lake uniamsi [INQR]",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "list the outflow of [ENT]"
        ],
        "subq2": [
            "lake uniamsi"
        ]
    },
    {
        "ID": "1853",
        "question": "Did John Byrne create Emma Frost",
        "sparql": "ASK WHERE { <http://dbpedia.org/resource/Emma_Frost> <http://dbpedia.org/property/creators> <http://dbpedia.org/resource/John_Byrne_(comics)> }",
        "intent": "ASK",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "did john byrne emma",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "did john byrne emma",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "did john byrne emma [DES] did john byrne emma",
        "compositionality_type_golden": "simple",
        "intent_golden": "ASK",
        "subq1": [
            "did john byrne emma",
            "did john byrne emma"
        ],
        "subq2": []
    },
    {
        "ID": "3763",
        "question": "Was Heinrich Himmler ever a commanders of Army Group Oberrhein",
        "sparql": "ASK WHERE { <http://dbpedia.org/resource/Army_Group_Oberrhein_(Germany)> <http://dbpedia.org/property/notableCommanders> <http://dbpedia.org/resource/Heinrich_Himmler> }",
        "intent": "ASK",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "was heinrich a commanders of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "heinrich ever a commanders of oberrhein group oberrhein",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "was heinrich a commanders of [INQL] heinrich ever a commanders of oberrhein group oberrhein [INQR]",
        "compositionality_type_golden": "simple",
        "intent_golden": "ASK",
        "subq1": [
            "was heinrich a commanders of [ENT]"
        ],
        "subq2": [
            "heinrich ever a commanders of oberrhein group oberrhein"
        ]
    },
    {
        "ID": "3304",
        "question": "List the universities from a country where Norwegian language is officially accepted",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/officialLanguage> <http://dbpedia.org/resource/Norwegian_language> . ?uri <http://dbpedia.org/ontology/country> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "list the universities from [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "a country where norwegian language is accepted",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "list the universities from [INQL] a country where norwegian language is accepted [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "list the universities from [ENT]"
        ],
        "subq2": [
            "a country where norwegian language is accepted"
        ]
    },
    {
        "ID": "4912",
        "question": "Name the incumbent of Linda Jenness",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Linda_Jenness> <http://dbpedia.org/ontology/incumbent> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "name the incumbent of linda jenness",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "jenness jenness",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "name the incumbent of linda jenness [DES] jenness jenness",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "name the incumbent of linda jenness",
            "jenness jenness"
        ],
        "subq2": []
    },
    {
        "ID": "3743",
        "question": "Which companies makes cars assembled in Karachi, Pakistan",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/assembly> <http://dbpedia.org/resource/Karachi> . ?x <http://dbpedia.org/property/parentCompany> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Automobile>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which companies",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "makes cars assembled in karachi , pakistan",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which companies [DES] makes cars assembled in karachi , pakistan",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "which companies",
            "makes cars assembled in karachi , pakistan"
        ],
        "subq2": []
    },
    {
        "ID": "3445",
        "question": "Which company founded by Fusajiro Yamauchi also provides services of Nintendo eShop",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/foundedBy> <http://dbpedia.org/resource/Fusajiro_Yamauchi> . ?uri <http://dbpedia.org/property/services> <http://dbpedia.org/resource/Nintendo_eShop>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which company founded by fusajiro yamauchi",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "also provides yamauchi services of nintendo eshop",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which company founded by fusajiro yamauchi [DES] also provides yamauchi services of nintendo eshop",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "which company founded by fusajiro yamauchi",
            "also provides yamauchi services of nintendo eshop"
        ],
        "subq2": []
    },
    {
        "ID": "1998",
        "question": "In which countries does the sea lie on whose shore is the city of Cumana",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/cities> <http://dbpedia.org/resource/Cuman\u00e1> . ?x <http://dbpedia.org/ontology/country> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Sea>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "in which countries does [ENT] lie",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the sea on whose shore is the city of cumana",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "in which countries does [INQL] the sea on whose shore is the city of cumana [INQR] lie",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "in which countries does [ENT] lie"
        ],
        "subq2": [
            "the sea on whose shore is the city of cumana"
        ]
    },
    {
        "ID": "663",
        "question": "Tirana is the largest city of which country",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/largestCity> <http://dbpedia.org/resource/Tirana>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "tirana is the largest city of",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "which country",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "tirana is the largest city of [DES] which country",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "tirana is the largest city of",
            "which country"
        ],
        "subq2": []
    },
    {
        "ID": "4779",
        "question": "From which countries are the people from who are an academic authority of the Western pygmy blue species",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Western_pygmy_blue> <http://dbpedia.org/ontology/binomialAuthority> ?x . ?x <http://dbpedia.org/ontology/citizenship> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "from which countries are [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the people who are an species of the western blue pygmy",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "from which countries are [INQL] the people who are an species of the western blue pygmy [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "from which countries are [ENT]"
        ],
        "subq2": [
            "the people who are an species of the western blue pygmy"
        ]
    },
    {
        "ID": "3748",
        "question": "Where is the headquarters of Sigma TV",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Sigma_TV> <http://dbpedia.org/property/headquarters> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "where is [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the headquarters of sigma tv",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "where is [INQL] the headquarters of sigma tv [INQR]",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "where is [ENT]"
        ],
        "subq2": [
            "the headquarters of sigma tv"
        ]
    },
    {
        "ID": "4413",
        "question": "Which scientist was advised by John Robert Woodyard",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/doctoralAdvisor> <http://dbpedia.org/resource/John_Robert_Woodyard>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which scientist",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "was advised by john robert woodyard",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which scientist [DES] was advised by john robert woodyard",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "which scientist",
            "was advised by john robert woodyard"
        ],
        "subq2": []
    },
    {
        "ID": "4744",
        "question": "What is the launch site of the Juno I which was also the ground of 2016 Fort Lauderdale Strikers season",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Juno_I> <http://dbpedia.org/ontology/launchSite> ?uri. <http://dbpedia.org/resource/2016_Fort_Lauderdale_Strikers_season> <http://dbpedia.org/ontology/ground> ?uri} ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what is the launch site of the juno i",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "which was also the ground of fort lauderdale strikers season",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what is the launch site of the juno i [DES] which was also the ground of fort lauderdale strikers season",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "what is the launch site of the juno i",
            "which was also the ground of fort lauderdale strikers season"
        ],
        "subq2": []
    },
    {
        "ID": "709",
        "question": "Who has been married to both Penny Lancaster and Alana Stewart",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Penny_Lancaster> <http://dbpedia.org/ontology/spouse> ?uri. <http://dbpedia.org/resource/Alana_Stewart> <http://dbpedia.org/ontology/spouse> ?uri . }",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "who has been married to both penny",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "and lancaster stewart",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "who has been married to both penny [DES] and lancaster stewart",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "who has been married to both penny",
            "and lancaster stewart"
        ],
        "subq2": []
    },
    {
        "ID": "1282",
        "question": "Count the affiliations of International Union of Anarchists",
        "sparql": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/International_Union_of_Anarchists> <http://dbpedia.org/property/affiliation> ?uri  . }",
        "intent": "COUNT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "count the affiliations of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "international union of anarchists international union",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "count the affiliations of [INQL] international union of anarchists international union [INQR]",
        "compositionality_type_golden": "simple",
        "intent_golden": "COUNT",
        "subq1": [
            "count the affiliations of [ENT]"
        ],
        "subq2": [
            "international union of anarchists international union"
        ]
    },
    {
        "ID": "2675",
        "question": "What is the alma mater of the scientist whose PhD advisor is Jean-Claude Latombe",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/doctoralAdvisor> <http://dbpedia.org/resource/Jean-Claude_Latombe> . ?x <http://dbpedia.org/property/almaMater> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "what is the alma mater of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the scientist whose phd is jean-claude latombe",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "what is the alma mater of [INQL] the scientist whose phd is jean-claude latombe [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "what is the alma mater of [ENT]"
        ],
        "subq2": [
            "the scientist whose phd is jean-claude latombe"
        ]
    },
    {
        "ID": "4029",
        "question": "List the people residing in Wilton, Connecticut",
        "sparql": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Wilton,_Connecticut> } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "list the people",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "residing in wilton , connecticut",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "list the people [DES] residing in wilton , connecticut",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "list the people",
            "residing in wilton , connecticut"
        ],
        "subq2": []
    },
    {
        "ID": "1306",
        "question": "What is the Location of the Peetz Table Wind Energy Center which is also the state of Ben Nighthorse Campbell",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Peetz_Table_Wind_Energy_Center> <http://dbpedia.org/property/location> ?uri. <http://dbpedia.org/resource/Ben_Nighthorse_Campbell> <http://dbpedia.org/property/state> ?uri} ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what is the location of the peetz energy center",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "which is also the state of ben campbell",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what is the location of the peetz energy center [DES] which is also the state of ben campbell",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "what is the location of the peetz energy center",
            "which is also the state of ben campbell"
        ],
        "subq2": []
    },
    {
        "ID": "2237",
        "question": "Count the water bodies that flow into the North Sea",
        "sparql": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/North_Sea> <http://dbpedia.org/property/inflow> ?uri  . }",
        "intent": "COUNT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "count the bodies that [ENT] flow into the north sea",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "water into the north sea",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "count the bodies that [INQL] water into the north sea [INQR] flow into the north sea",
        "compositionality_type_golden": "simple",
        "intent_golden": "COUNT",
        "subq1": [
            "count the bodies that [ENT] flow into the north sea"
        ],
        "subq2": [
            "water into the north sea"
        ]
    },
    {
        "ID": "3302",
        "question": "Who was the First Driver of 1999 San Marino Grand Prix",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/1999_San_Marino_Grand_Prix> <http://dbpedia.org/property/firstDriver> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "who was the first driver of san marino san prix",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "who was the first driver of san prix",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "who was the first driver of san marino san prix [DES] who was the first driver of san prix",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "who was the first driver of san marino san prix",
            "who was the first driver of san prix"
        ],
        "subq2": []
    },
    {
        "ID": "2038",
        "question": "Bantam Spectra is the publisher of which series",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/publisher> <http://dbpedia.org/resource/Bantam_Spectra> . ?x <http://dbpedia.org/ontology/series> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "bantam spectra is the publisher of",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "which series which series",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "bantam spectra is the publisher of [DES] which series which series",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "bantam spectra is the publisher of",
            "which series which series"
        ],
        "subq2": []
    },
    {
        "ID": "1529",
        "question": "Where is the sister station of Al Arabiya 99 located",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/sisterStations> <http://dbpedia.org/resource/Al_Arabiya_99> . ?x <http://dbpedia.org/property/location> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RadioStation>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "where is [ENT] located",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the sister station of al arabiya 99",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "where is [INQL] the sister station of al arabiya 99 [INQR] located",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "where is [ENT] located"
        ],
        "subq2": [
            "the sister station of al arabiya 99"
        ]
    },
    {
        "ID": "1663",
        "question": "Which common prime minister did Graham Richardson and Bon McMullan serve",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Graham_Richardson> <http://dbpedia.org/ontology/primeMinister> ?uri. <http://dbpedia.org/resource/Bob_McMullan> <http://dbpedia.org/ontology/primeMinister> ?uri . }",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which common prime minister did graham richardson and bon mcmullan serve",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                }
            ]
        },
        "pred": "which common prime minister did graham richardson and bon mcmullan serve",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "which common prime minister did graham richardson and bon mcmullan serve"
        ],
        "subq2": []
    },
    {
        "ID": "4934",
        "question": "How many things are produced by companies located in Tehran",
        "sparql": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Tehran> . ?x <http://dbpedia.org/ontology/product> ?uri  . }",
        "intent": "COUNT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "how many things are produced by [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "companies located in tehran",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "how many things are produced by [INQL] companies located in tehran [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "COUNT",
        "subq1": [
            "how many things are produced by [ENT]"
        ],
        "subq2": [
            "companies located in tehran"
        ]
    },
    {
        "ID": "4953",
        "question": "Which is the common past team of the Charlie Justice (American football player) and Bobby Hoppe",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Charlie_Justice_(American_football_player)> <http://dbpedia.org/property/pastteams> ?uri. <http://dbpedia.org/resource/Bobby_Hoppe> <http://dbpedia.org/property/pastteams> ?uri . }",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which is the common past of the past (american player) football team and charlie hoppe hoppe",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                }
            ]
        },
        "pred": "which is the common past of the past (american player) football team and charlie hoppe hoppe",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "which is the common past of the past (american player) football team and charlie hoppe hoppe"
        ],
        "subq2": []
    },
    {
        "ID": "3627",
        "question": "Name the officeholder who has child named Augustus and has an associate named Marcus Bibulus",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/associate> <http://dbpedia.org/resource/Marcus_Calpurnius_Bibulus> . ?uri <http://dbpedia.org/property/children> <http://dbpedia.org/resource/Augustus>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "name the officeholder who has child named marcus augustus",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "and has an associate named marcus bibulus",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "name the officeholder who has child named marcus augustus [DES] and has an associate named marcus bibulus",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "name the officeholder who has child named marcus augustus",
            "and has an associate named marcus bibulus"
        ],
        "subq2": []
    },
    {
        "ID": "2693",
        "question": "Which party won both the general election and the andhra pradesh election in 2004",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Indian_general_election,_2004_(Delhi)> <http://dbpedia.org/ontology/affiliation> ?uri. <http://dbpedia.org/resource/Indian_general_election,_2004_(Andhra_Pradesh)> <http://dbpedia.org/ontology/affiliation> ?uri . }",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which party",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "won both the general election and the andhra pradesh election in 2004",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which party [DES] won both the general election and the andhra pradesh election in 2004",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "which party",
            "won both the general election and the andhra pradesh election in 2004"
        ],
        "subq2": []
    },
    {
        "ID": "3060",
        "question": "Give me someone on the board of trinity house",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/board> <http://dbpedia.org/resource/Trinity_House>  . }",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "give me someone",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "on the board of trinity house",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "give me someone [DES] on the board of trinity house",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "give me someone",
            "on the board of trinity house"
        ],
        "subq2": []
    },
    {
        "ID": "1597",
        "question": "Whose leaders are Willem-Alexander and Fredis Refunjol",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/leader> <http://dbpedia.org/resource/Willem-Alexander_of_the_Netherlands> . ?uri <http://dbpedia.org/ontology/leader> <http://dbpedia.org/resource/Fredis_Refunjol> . }",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "whose leaders are willem-alexander and fredis refunjol",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                }
            ]
        },
        "pred": "whose leaders are willem-alexander and fredis refunjol",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "whose leaders are willem-alexander and fredis refunjol"
        ],
        "subq2": []
    },
    {
        "ID": "2729",
        "question": "Horses grandsired by Sundridge have won which awards",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/grandsire> <http://dbpedia.org/resource/Sundridge_(horse)> . ?x <http://dbpedia.org/ontology/honours> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Horse>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "[ENT] have won which awards",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "grandsired horses by sundridge horses",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "[INQL] grandsired horses by sundridge horses [INQR] have won which awards",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "[ENT] have won which awards"
        ],
        "subq2": [
            "grandsired horses by sundridge horses"
        ]
    },
    {
        "ID": "2625",
        "question": "What is the river whose source region is North-Western Province, Zambia and river mouth is Indian Ocean",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/sourceRegion> <http://dbpedia.org/resource/North-Western_Province,_Zambia> . ?uri <http://dbpedia.org/ontology/riverMouth> <http://dbpedia.org/resource/Indian_Ocean>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what is the river whose source province is indian ocean , zambia",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "and mouth region is north-western province",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what is the river whose source province is indian ocean , zambia [DES] and mouth region is north-western province",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "what is the river whose source province is indian ocean , zambia",
            "and mouth region is north-western province"
        ],
        "subq2": []
    },
    {
        "ID": "3157",
        "question": "Who was on the first team in the GPs that were held at Watkins Glen, NY",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Watkins_Glen,_New_York> . ?x <http://dbpedia.org/property/firstTeam> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GrandPrix>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "who was on the first team in [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the gps that were held at watkins glen , ny",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "who was on the first team in [INQL] the gps that were held at watkins glen , ny [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "who was on the first team in [ENT]"
        ],
        "subq2": [
            "the gps that were held at watkins glen , ny"
        ]
    },
    {
        "ID": "3314",
        "question": "Name the movie whose screenplay is by Akiva Goldsman and directed by Joel Schumacher",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/screenplay> <http://dbpedia.org/resource/Akiva_Goldsman> . ?uri <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Joel_Schumacher>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "name the movie whose screenplay is directed by akiva goldsman",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "and directed by joel schumacher",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "name the movie whose screenplay is directed by akiva goldsman [DES] and directed by joel schumacher",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "name the movie whose screenplay is directed by akiva goldsman",
            "and directed by joel schumacher"
        ],
        "subq2": []
    },
    {
        "ID": "1722",
        "question": "What ethnicity of Linda Hogan is also the state of origin of Holmes Colbert",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Linda_Hogan> <http://dbpedia.org/ontology/ethnicity> ?uri. <http://dbpedia.org/resource/Holmes_Colbert> <http://dbpedia.org/ontology/stateOfOrigin> ?uri} ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what ethnicity of linda hogan",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "is also the state of origin of holmes colbert",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what ethnicity of linda hogan [DES] is also the state of origin of holmes colbert",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "what ethnicity of linda hogan",
            "is also the state of origin of holmes colbert"
        ],
        "subq2": []
    },
    {
        "ID": "1059",
        "question": "What are the track and field events of Jamiatu Muslim Mindanao",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jamiatu_Muslim_Mindanao> <http://dbpedia.org/property/athletics> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what are the track",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "and jamiatu muslim mindanao of jamiatu muslim mindanao",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what are the track [DES] and jamiatu muslim mindanao of jamiatu muslim mindanao",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "what are the track",
            "and jamiatu muslim mindanao of jamiatu muslim mindanao"
        ],
        "subq2": []
    },
    {
        "ID": "4636",
        "question": "How many cities are close to Lake Victoria",
        "sparql": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Lake_Victoria> <http://dbpedia.org/ontology/nearestCity> ?uri  . }",
        "intent": "COUNT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "how many cities",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "are close to lake victoria",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "how many cities [DES] are close to lake victoria",
        "compositionality_type_golden": "simple",
        "intent_golden": "COUNT",
        "subq1": [
            "how many cities",
            "are close to lake victoria"
        ],
        "subq2": []
    },
    {
        "ID": "3242",
        "question": "Is greasy pop recording the distributor of festival records",
        "sparql": "ASK WHERE { <http://dbpedia.org/resource/Greasy_Pop_Records> <http://dbpedia.org/ontology/distributingLabel> <http://dbpedia.org/resource/Festival_Records> }",
        "intent": "ASK",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "is greasy pop records [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the recording distributor of distributor records",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "is greasy pop records [INQL] the recording distributor of distributor records [INQR]",
        "compositionality_type_golden": "simple",
        "intent_golden": "ASK",
        "subq1": [
            "is greasy pop records [ENT]"
        ],
        "subq2": [
            "the recording distributor of distributor records"
        ]
    },
    {
        "ID": "1678",
        "question": "What is the baseball team whose club manager's debut team is Houston Astros",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/debutTeam> <http://dbpedia.org/resource/Houston_Astros> . ?uri <http://dbpedia.org/ontology/manager> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BaseballTeam>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what is the baseball team",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "whose debut team is houston astros",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what is the baseball team [DES] whose debut team is houston astros",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "what is the baseball team",
            "whose debut team is houston astros"
        ],
        "subq2": []
    },
    {
        "ID": "1757",
        "question": "What cities are near to Nihoa which is also known as Bird Island",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Nihoa> <http://dbpedia.org/property/nearestCity> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what cities",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "are near island which is also known as bird",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what cities [DES] are near island which is also known as bird",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "what cities",
            "are near island which is also known as bird"
        ],
        "subq2": []
    },
    {
        "ID": "4191",
        "question": "Is Sloth in the Chordate phylum",
        "sparql": "ASK WHERE { <http://dbpedia.org/resource/Sloth> <http://dbpedia.org/property/phylum> <http://dbpedia.org/resource/Chordate> }",
        "intent": "ASK",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "is sloth",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "in the chordate phylum",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "is sloth [DES] in the chordate phylum",
        "compositionality_type_golden": "simple",
        "intent_golden": "ASK",
        "subq1": [
            "is sloth",
            "in the chordate phylum"
        ],
        "subq2": []
    },
    {
        "ID": "563",
        "question": "Which shareholder of Naval Air facility Adak is also the operator of New Sanno Hotel",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/New_Sanno_Hotel> <http://dbpedia.org/property/operator> ?uri. <http://dbpedia.org/resource/Naval_Air_Facility_Adak> <http://dbpedia.org/property/owner> ?uri} ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which shareholder of naval air facility",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "is also the operator of new sanno hotel sanno",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which shareholder of naval air facility [DES] is also the operator of new sanno hotel sanno",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "which shareholder of naval air facility",
            "is also the operator of new sanno hotel sanno"
        ],
        "subq2": []
    },
    {
        "ID": "2790",
        "question": "What other awards have been given to Golden Globe winners",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Golden_Globe_Award> . ?x <http://dbpedia.org/property/awards> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "what other awards have been given to [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "golden globe winners",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "what other awards have been given to [INQL] golden globe winners [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "what other awards have been given to [ENT]"
        ],
        "subq2": [
            "golden globe winners"
        ]
    },
    {
        "ID": "863",
        "question": "Which allegiance of the John Kotelawala is also the sovereign state of the Sanath Weerakoon",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/John_Kotelawala> <http://dbpedia.org/property/allegiance> ?uri. <http://dbpedia.org/resource/Sanath_Weerakoon> <http://dbpedia.org/ontology/country> ?uri} ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which allegiance of the john kotelawala",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "is also the sovereign state of the john sanath weerakoon",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which allegiance of the john kotelawala [DES] is also the sovereign state of the john sanath weerakoon",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "which allegiance of the john kotelawala",
            "is also the sovereign state of the john sanath weerakoon"
        ],
        "subq2": []
    },
    {
        "ID": "1484",
        "question": "List the television shows whose network's sister names is N-tv",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/sisterNames> <http://dbpedia.org/resource/N-tv> . ?uri <http://dbpedia.org/property/network> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "list the television shows whose network 's [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "sister is n-tv",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "list the television shows whose network 's [INQL] sister is n-tv [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "list the television shows whose network 's [ENT]"
        ],
        "subq2": [
            "sister is n-tv"
        ]
    },
    {
        "ID": "206",
        "question": "God Defend New Zealand is the national anthem of which country",
        "sparql": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/nationalAnthem> <http://dbpedia.org/resource/God_Defend_New_Zealand> } ",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "[ENT] is the national anthem of which country",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "defend new zealand national anthem",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "[INQL] defend new zealand national anthem [INQR] is the national anthem of which country",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "[ENT] is the national anthem of which country"
        ],
        "subq2": [
            "defend new zealand national anthem"
        ]
    },
    {
        "ID": "4488",
        "question": "Where do the rivers starting from Zambia end",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/sourceCountry> <http://dbpedia.org/resource/Zambia> . ?x <http://dbpedia.org/ontology/riverMouth> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "where do the rivers end from zambia",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "where zambia",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "where do the rivers end from zambia [DES] where zambia",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "where do the rivers end from zambia",
            "where zambia"
        ],
        "subq2": []
    },
    {
        "ID": "870",
        "question": "Which political party of kumta had affiliation with Indian general election, 2004 (Andhra Pradesh)",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Kumta> <http://dbpedia.org/property/governmentType> ?uri. <http://dbpedia.org/resource/Indian_general_election,_2004_(Andhra_Pradesh)> <http://dbpedia.org/ontology/affiliation> ?uri} ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which political party of indian kumta",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "had affiliation with 2004 election , (andhra pradesh)",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which political party of indian kumta [DES] had affiliation with 2004 election , (andhra pradesh)",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "which political party of indian kumta",
            "had affiliation with 2004 election , (andhra pradesh)"
        ],
        "subq2": []
    },
    {
        "ID": "4493",
        "question": "Who was member of boards at Royal Society and Trinity House",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/board> <http://dbpedia.org/resource/Royal_Society> . ?uri <http://dbpedia.org/ontology/board> <http://dbpedia.org/resource/Trinity_House> . }",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "who was member of boards at royal society and royal society house",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                }
            ]
        },
        "pred": "who was member of boards at royal society and royal society house",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "who was member of boards at royal society and royal society house"
        ],
        "subq2": []
    },
    {
        "ID": "502",
        "question": "Where is the king buried whose predecessor was Iyasu II",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/predecessor> <http://dbpedia.org/resource/Iyasu_II> . ?x <http://dbpedia.org/property/placeOfBurial> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Monarch>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "where is the king ii",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "whose predecessor was iyasu ii",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "where is the king ii [DES] whose predecessor was iyasu ii",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "where is the king ii",
            "whose predecessor was iyasu ii"
        ],
        "subq2": []
    },
    {
        "ID": "1028",
        "question": "In how many different places have people beatified by Pope Pius X died",
        "sparql": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/beatifiedBy> <http://dbpedia.org/resource/Pope_Pius_X> . ?x <http://dbpedia.org/property/deathPlace> ?uri  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>}",
        "intent": "COUNT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "in how many different places have [ENT] died",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "people people beatified by pope pius x",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "in how many different places have [INQL] people people beatified by pope pius x [INQR] died",
        "compositionality_type_golden": "composition",
        "intent_golden": "COUNT",
        "subq1": [
            "in how many different places have [ENT] died"
        ],
        "subq2": [
            "people people beatified by pope pius x"
        ]
    },
    {
        "ID": "3840",
        "question": "What faiths are followed by the relatives of Meadow Soprano",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Meadow_Soprano> <http://dbpedia.org/ontology/relative> ?x . ?x <http://dbpedia.org/ontology/religion> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "what faiths are followed by [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the relatives of meadow soprano",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "what faiths are followed by [INQL] the relatives of meadow soprano [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "what faiths are followed by [ENT]"
        ],
        "subq2": [
            "the relatives of meadow soprano"
        ]
    },
    {
        "ID": "2690",
        "question": "Where is the headquarters of the public transit system which owns Target Field, a Metro Transit Station",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Target_Field_(Metro_Transit_station)> <http://dbpedia.org/ontology/owningOrganisation> ?x . ?x <http://dbpedia.org/property/headquarters> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "where is the headquarters of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the public transit system which owns target transit , a field",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "where is the headquarters of [INQL] the public transit system which owns target transit , a field [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "where is the headquarters of [ENT]"
        ],
        "subq2": [
            "the public transit system which owns target transit , a field"
        ]
    },
    {
        "ID": "1570",
        "question": "What is the nationality of Aishath Saffa",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Aishath_Saffa> <http://dbpedia.org/property/nationality> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what is the nationality of aishath saffa",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "what is the nationality of aishath",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what is the nationality of aishath saffa [DES] what is the nationality of aishath",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "what is the nationality of aishath saffa",
            "what is the nationality of aishath"
        ],
        "subq2": []
    },
    {
        "ID": "2773",
        "question": "who was the president under whom winston bryant served as a lieutenant",
        "sparql": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/lieutenant> <http://dbpedia.org/resource/Winston_Bryant> } ",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "who was the president under [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "whom winston bryant served as a lieutenant",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "who was the president under [INQL] whom winston bryant served as a lieutenant [INQR]",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "who was the president under [ENT]"
        ],
        "subq2": [
            "whom winston bryant served as a lieutenant"
        ]
    },
    {
        "ID": "2731",
        "question": "What are the bands associated with the artists of My Favorite Girl",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/My_Favorite_Girl_(Dave_Hollister_song)> <http://dbpedia.org/property/artist> ?x . ?x <http://dbpedia.org/ontology/associatedBand> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "what are the bands with [ENT] associated",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the artists of my girl favorite",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "what are the bands with [INQL] the artists of my girl favorite [INQR] associated",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "what are the bands with [ENT] associated"
        ],
        "subq2": [
            "the artists of my girl favorite"
        ]
    },
    {
        "ID": "804",
        "question": "On what subjects was Broca's Brain written",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Broca's_Brain> <http://dbpedia.org/property/subject> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "on what subjects was [ENT] written",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "broca 's brain",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "on what subjects was [INQL] broca 's brain [INQR] written",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "on what subjects was [ENT] written"
        ],
        "subq2": [
            "broca 's brain"
        ]
    },
    {
        "ID": "3645",
        "question": "Which parent organization of GetTV is also the label of next thing",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Next_Thing> <http://dbpedia.org/ontology/recordLabel> ?uri. <http://dbpedia.org/resource/GetTV> <http://dbpedia.org/ontology/parentOrganisation> ?uri} ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which parent organization of gettv",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "is also the label of next thing",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which parent organization of gettv [DES] is also the label of next thing",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "which parent organization of gettv",
            "is also the label of next thing"
        ],
        "subq2": []
    },
    {
        "ID": "2454",
        "question": "Which teams have used the stadium whose architect was Populous",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/architect> <http://dbpedia.org/resource/Populous_(company)> . ?x <http://dbpedia.org/ontology/tenant> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Stadium>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "which teams have used [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the stadium whose architect was populous",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "which teams have used [INQL] the stadium whose architect was populous [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "which teams have used [ENT]"
        ],
        "subq2": [
            "the stadium whose architect was populous"
        ]
    },
    {
        "ID": "4598",
        "question": "Name the route end of the North-South Transport Corridor and Mumbai Vadodara Expressway",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/North\u2013South_Transport_Corridor> <http://dbpedia.org/ontology/routeEnd> ?uri. <http://dbpedia.org/resource/Mumbai_Vadodara_Expressway> <http://dbpedia.org/ontology/routeEnd> ?uri . }",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "name the route end of the north-south",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "and mumbai vadodara expressway transport expressway",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "name the route end of the north-south [DES] and mumbai vadodara expressway transport expressway",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "name the route end of the north-south",
            "and mumbai vadodara expressway transport expressway"
        ],
        "subq2": []
    },
    {
        "ID": "3104",
        "question": "Is Albert P Clark buried in Colorado",
        "sparql": "ASK WHERE { <http://dbpedia.org/resource/Albert_P._Clark> <http://dbpedia.org/property/placeofburial> <http://dbpedia.org/resource/Colorado> }",
        "intent": "ASK",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "is albert p clark",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "buried in albert p clark",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "is albert p clark [DES] buried in albert p clark",
        "compositionality_type_golden": "simple",
        "intent_golden": "ASK",
        "subq1": [
            "is albert p clark",
            "buried in albert p clark"
        ],
        "subq2": []
    },
    {
        "ID": "4875",
        "question": "Which hockey team is head coached by Bill Peters",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/headCoach> <http://dbpedia.org/resource/Bill_Peters_(ice_hockey)>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/HockeyTeam>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which hockey team",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "is coached by bill peters",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which hockey team [DES] is coached by bill peters",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "which hockey team",
            "is coached by bill peters"
        ],
        "subq2": []
    },
    {
        "ID": "200",
        "question": "Count the number of religions followed by the alumni of Ananda College",
        "sparql": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ananda_College> . ?x <http://dbpedia.org/ontology/religion> ?uri  . }",
        "intent": "COUNT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "count the number of religions followed by [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the alumni of ananda college",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "count the number of religions followed by [INQL] the alumni of ananda college [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "COUNT",
        "subq1": [
            "count the number of religions followed by [ENT]"
        ],
        "subq2": [
            "the alumni of ananda college"
        ]
    },
    {
        "ID": "3099",
        "question": "Which team did Wilfred McDonalds and Cam Plante play for",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Wilfred_McDonald> <http://dbpedia.org/property/playedFor> ?uri. <http://dbpedia.org/resource/Cam_Plante> <http://dbpedia.org/property/playedFor> ?uri . }",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which team",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "did wilfred mcdonalds and cam plante play for",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which team [DES] did wilfred mcdonalds and cam plante play for",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "which team",
            "did wilfred mcdonalds and cam plante play for"
        ],
        "subq2": []
    },
    {
        "ID": "2278",
        "question": "What are the television shows whose network's stockholder is Warner Bros. Television",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/owner> <http://dbpedia.org/resource/Warner_Bros._Television> . ?uri <http://dbpedia.org/ontology/network> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "what are the television shows whose stockholder 's [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "network is warner bros. television",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "what are the television shows whose stockholder 's [INQL] network is warner bros. television [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "what are the television shows whose stockholder 's [ENT]"
        ],
        "subq2": [
            "network is warner bros. television"
        ]
    },
    {
        "ID": "3561",
        "question": "Name the Fox TV show judged by Rand Jackson",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/judges> <http://dbpedia.org/resource/Randy_Jackson> . ?uri <http://dbpedia.org/property/channel> <http://dbpedia.org/resource/Fox_Broadcasting_Company>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "name the tv show",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "judged by rand jackson",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "name the tv show [DES] judged by rand jackson",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "name the tv show",
            "judged by rand jackson"
        ],
        "subq2": []
    },
    {
        "ID": "4474",
        "question": "What is the total number of software whose programming language is C++ and operating system is Microsoft Windows",
        "sparql": " SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/programmingLanguage> <http://dbpedia.org/resource/C++> . ?uri <http://dbpedia.org/ontology/operatingSystem> <http://dbpedia.org/resource/Microsoft_Windows> } ",
        "intent": "COUNT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what is the total number of software whose programming language is c++",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "and operating system is microsoft windows",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what is the total number of software whose programming language is c++ [DES] and operating system is microsoft windows",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "COUNT",
        "subq1": [
            "what is the total number of software whose programming language is c++",
            "and operating system is microsoft windows"
        ],
        "subq2": []
    },
    {
        "ID": "4514",
        "question": "Name the city of Phil-Ellena",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Phil-Ellena> <http://dbpedia.org/ontology/city> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "name the city of phil-ellena",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "of phil-ellena",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "name the city of phil-ellena [DES] of phil-ellena",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "name the city of phil-ellena",
            "of phil-ellena"
        ],
        "subq2": []
    },
    {
        "ID": "391",
        "question": "how many companies are located in a spanish speaking region",
        "sparql": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/language> <http://dbpedia.org/resource/Spanish_language> . ?uri <http://dbpedia.org/ontology/location> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>}",
        "intent": "COUNT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "how many companies",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "are located in a spanish speaking region",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "how many companies [DES] are located in a spanish speaking region",
        "compositionality_type_golden": "composition",
        "intent_golden": "COUNT",
        "subq1": [
            "how many companies",
            "are located in a spanish speaking region"
        ],
        "subq2": []
    },
    {
        "ID": "1495",
        "question": "What is the combatant of the Northwest Indian War and also the ethnic group of the Linda Hogan",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Northwest_Indian_War> <http://dbpedia.org/property/combatant> ?uri. <http://dbpedia.org/resource/Linda_Hogan> <http://dbpedia.org/property/ethnicity> ?uri} ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what is the ethnic group of the indian war",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "and also the combatant group of the linda hogan",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what is the ethnic group of the indian war [DES] and also the combatant group of the linda hogan",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "what is the ethnic group of the indian war",
            "and also the combatant group of the linda hogan"
        ],
        "subq2": []
    },
    {
        "ID": "2695",
        "question": "Which airlines fly to Gimhae International Airport",
        "sparql": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/targetAirport> <http://dbpedia.org/resource/Gimhae_International_Airport> } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which airlines",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "fly to gimhae international airport",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which airlines [DES] fly to gimhae international airport",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "which airlines",
            "fly to gimhae international airport"
        ],
        "subq2": []
    },
    {
        "ID": "2027",
        "question": "GetTV is owned by which organisation",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/GetTV> <http://dbpedia.org/ontology/parentOrganisation> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "gettv is owned by",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "which organisation",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "gettv is owned by [DES] which organisation",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "gettv is owned by",
            "which organisation"
        ],
        "subq2": []
    },
    {
        "ID": "2568",
        "question": "Name the islands that belong to the archipelago whose largest city is Papeete",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/largestCity> <http://dbpedia.org/resource/Papeete> . ?uri <http://dbpedia.org/property/archipelago> ?x  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "name the islands that belong to [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the islands whose largest city is papeete",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "name the islands that belong to [INQL] the islands whose largest city is papeete [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "name the islands that belong to [ENT]"
        ],
        "subq2": [
            "the islands whose largest city is papeete"
        ]
    },
    {
        "ID": "64",
        "question": "In which team did Dave Bing and Ron Reed started their basketball career",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Dave_Bing> <http://dbpedia.org/property/draftTeam> ?uri. <http://dbpedia.org/resource/Ron_Reed> <http://dbpedia.org/property/draftTeam> ?uri . }",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "in which team",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "did dave bing and started their career reed their career",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "in which team [DES] did dave bing and started their career reed their career",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "in which team",
            "did dave bing and started their career reed their career"
        ],
        "subq2": []
    },
    {
        "ID": "3884",
        "question": "List the settlements area whose province is Metropolitan City of Venice",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/province> <http://dbpedia.org/resource/Metropolitan_City_of_Venice>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "list the settlements area [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "area whose province is metropolitan city of venice",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "list the settlements area [INQL] area whose province is metropolitan city of venice [INQR]",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "list the settlements area [ENT]"
        ],
        "subq2": [
            "area whose province is metropolitan city of venice"
        ]
    },
    {
        "ID": "2062",
        "question": "What was recorded by Live in Detroit, MI and also place of birth of the Bodhin Kjolhede",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Live_in_Detroit,_MI> <http://dbpedia.org/ontology/recordedIn> ?uri. <http://dbpedia.org/resource/Bodhin_Kjolhede> <http://dbpedia.org/property/placeOfBirth> ?uri} ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what was recorded by detroit <UNK>",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "and also place of birth of the bodhin kjolhede",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what was recorded by detroit <UNK> [DES] and also place of birth of the bodhin kjolhede",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "what was recorded by detroit <UNK>",
            "and also place of birth of the bodhin kjolhede"
        ],
        "subq2": []
    },
    {
        "ID": "492",
        "question": "From how many different institutes have the members of Judge Advocate General's Corps graduated",
        "sparql": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/militaryRank> <http://dbpedia.org/resource/Judge_Advocate_General's_Corps,_United_States_Army> . ?x <http://dbpedia.org/ontology/almaMater> ?uri  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>}",
        "intent": "COUNT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "from how many different institutes have [ENT] graduated",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the members of judge advocate 's judge",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "from how many different institutes have [INQL] the members of judge advocate 's judge [INQR] graduated",
        "compositionality_type_golden": "composition",
        "intent_golden": "COUNT",
        "subq1": [
            "from how many different institutes have [ENT] graduated"
        ],
        "subq2": [
            "the members of judge advocate 's judge"
        ]
    },
    {
        "ID": "379",
        "question": "Whose a famous relative of anne spielberg",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/relation> <http://dbpedia.org/resource/Anne_Spielberg>  . }",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "whose a famous relative of anne spielberg",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                }
            ]
        },
        "pred": "whose a famous relative of anne spielberg",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "whose a famous relative of anne spielberg"
        ],
        "subq2": []
    },
    {
        "ID": "4859",
        "question": "To which city does Northeast Library belong",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Northeast_Library> <http://dbpedia.org/ontology/city> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "to which city",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "does northeast library belong",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "to which city [DES] does northeast library belong",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "to which city",
            "does northeast library belong"
        ],
        "subq2": []
    },
    {
        "ID": "3993",
        "question": "What are the airline hubs of Cascade Airways",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Union_of_Cambodian_Democrats> <http://dbpedia.org/ontology/ideology> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "what are the hubs of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "airline of cascade airways",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "what are the hubs of [INQL] airline of cascade airways [INQR]",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "what are the hubs of [ENT]"
        ],
        "subq2": [
            "airline of cascade airways"
        ]
    },
    {
        "ID": "4887",
        "question": "Who has manufactured vehicles designed originally by NASA",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/designCompany> <http://dbpedia.org/resource/NASA> . ?x <http://dbpedia.org/ontology/manufacturer> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Automobile>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "who has manufactured by nasa",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "originally manufactured by nasa",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "who has manufactured by nasa [DES] originally manufactured by nasa",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "who has manufactured by nasa",
            "originally manufactured by nasa"
        ],
        "subq2": []
    },
    {
        "ID": "1076",
        "question": "What is the order of the Henry Clay and profession of the William Luther Hill",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Henry_Clay> <http://dbpedia.org/property/order> ?uri. <http://dbpedia.org/resource/William_Luther_Hill> <http://dbpedia.org/ontology/profession> ?uri} ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what is the order of the henry luther hill",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "and profession of the william henry luther hill",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what is the order of the henry luther hill [DES] and profession of the william henry luther hill",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "what is the order of the henry luther hill",
            "and profession of the william henry luther hill"
        ],
        "subq2": []
    },
    {
        "ID": "878",
        "question": "What show has theme music composer as Ron Grainer and at the same time related to Class (2016 TV series)",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/themeMusicComposer> <http://dbpedia.org/resource/Ron_Grainer> . ?uri <http://dbpedia.org/ontology/related> <http://dbpedia.org/resource/Class_(2016_TV_series)>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what tv show has theme music composer as grainer",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "and at the same time to (2016 class series)",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what tv show has theme music composer as grainer [DES] and at the same time to (2016 class series)",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "what tv show has theme music composer as grainer",
            "and at the same time to (2016 class series)"
        ],
        "subq2": []
    },
    {
        "ID": "337",
        "question": "What is the life stance of the ethnic groups related to Micronesia",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/related> <http://dbpedia.org/resource/Micronesia> . ?x <http://dbpedia.org/ontology/religion> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EthnicGroup>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what is the life stance of the ethnic",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "related to micronesia",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what is the life stance of the ethnic [DES] related to micronesia",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "what is the life stance of the ethnic",
            "related to micronesia"
        ],
        "subq2": []
    },
    {
        "ID": "1016",
        "question": "Name the river whose mouth mountain is Southend-on-Sea and mouth place is Essex",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/mouthMountain> <http://dbpedia.org/resource/Southend-on-Sea> . ?uri <http://dbpedia.org/ontology/mouthPlace> <http://dbpedia.org/resource/Essex>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "name the river whose mouth place is essex",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "and mouth place is southend-on-sea",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "name the river whose mouth place is essex [DES] and mouth place is southend-on-sea",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "name the river whose mouth place is essex",
            "and mouth place is southend-on-sea"
        ],
        "subq2": []
    },
    {
        "ID": "1275",
        "question": "Which venue of indy PopCon is also the death place of Louis Le Cocqq",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Indy_PopCon> <http://dbpedia.org/property/venue> ?uri. <http://dbpedia.org/resource/Louis_LeCocq> <http://dbpedia.org/property/placeOfDeath> ?uri} ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which venue of indy popcon",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "is also the place of death of louis cocqq",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which venue of indy popcon [DES] is also the place of death of louis cocqq",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "which venue of indy popcon",
            "is also the place of death of louis cocqq"
        ],
        "subq2": []
    },
    {
        "ID": "3798",
        "question": "What genre's softwares are released with a GNU GPL license",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/license> <http://dbpedia.org/resource/GNU_General_Public_License> . ?x <http://dbpedia.org/property/genre> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "what genre 's [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "softwares are released with a gnu gpl license",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "what genre 's [INQL] softwares are released with a gnu gpl license [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "what genre 's [ENT]"
        ],
        "subq2": [
            "softwares are released with a gnu gpl license"
        ]
    },
    {
        "ID": "4551",
        "question": "Is Christchurch the largest city of South Island",
        "sparql": "ASK WHERE { <http://dbpedia.org/resource/South_Island> <http://dbpedia.org/ontology/largestCity> <http://dbpedia.org/resource/Christchurch> }",
        "intent": "ASK",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "christchurch is the largest city of south island",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "is the largest city",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "christchurch is the largest city of south island [DES] is the largest city",
        "compositionality_type_golden": "simple",
        "intent_golden": "ASK",
        "subq1": [
            "christchurch is the largest city of south island",
            "is the largest city"
        ],
        "subq2": []
    },
    {
        "ID": "3342",
        "question": "Who is the leader of Allgemeine SS",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Allgemeine_SS> <http://dbpedia.org/ontology/leader> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "who is the leader of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "allgemeine ss",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "who is the leader of [INQL] allgemeine ss [INQR]",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "who is the leader of [ENT]"
        ],
        "subq2": [
            "allgemeine ss"
        ]
    },
    {
        "ID": "4911",
        "question": "Giorgos Kaminis is the mayor of what",
        "sparql": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/mayor> <http://dbpedia.org/resource/Giorgos_Kaminis> } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "giorgos is the mayor of",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "what kaminis is the mayor of what",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "giorgos is the mayor of [DES] what kaminis is the mayor of what",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "giorgos is the mayor of",
            "what kaminis is the mayor of what"
        ],
        "subq2": []
    },
    {
        "ID": "995",
        "question": "Where is the headquarters of Metro Transit (Minnesota)",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Metro_Transit_(Minnesota)> <http://dbpedia.org/property/headquarters> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "where is [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the headquarters of metro (minnesota) transit",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "where is [INQL] the headquarters of metro (minnesota) transit [INQR]",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "where is [ENT]"
        ],
        "subq2": [
            "the headquarters of metro (minnesota) transit"
        ]
    },
    {
        "ID": "1981",
        "question": "Give me the count of all the names of characters created by Frank Miller",
        "sparql": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/creators> <http://dbpedia.org/resource/Frank_Miller_(comics)> . ?x <http://dbpedia.org/property/characterName> ?uri  . }",
        "intent": "COUNT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "give me the names of all the characters of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the characters created by frank miller",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "give me the names of all the characters of [INQL] the characters created by frank miller [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "COUNT",
        "subq1": [
            "give me the names of all the characters of [ENT]"
        ],
        "subq2": [
            "the characters created by frank miller"
        ]
    },
    {
        "ID": "4297",
        "question": "Which fictional character portrayed in Terminator 2: Judgment Day is painted by Josh Friedman",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Terminator_2:_Judgment_Day> . ?uri <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Josh_Friedman>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which fictional character",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "portrayed in terminator 2: judgment day is painted by terminator 2: judgment day",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which fictional character [DES] portrayed in terminator 2: judgment day is painted by terminator 2: judgment day",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "which fictional character",
            "portrayed in terminator 2: judgment day is painted by terminator 2: judgment day"
        ],
        "subq2": []
    },
    {
        "ID": "161",
        "question": "Where was the narrator of Spain on the Road Again born",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Spain..._on_the_Road_Again> <http://dbpedia.org/ontology/narrator> ?x . ?x <http://dbpedia.org/property/birthPlace> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "where was the narrator of spain on the road",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "born on the road again",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "where was the narrator of spain on the road [DES] born on the road again",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "where was the narrator of spain on the road",
            "born on the road again"
        ],
        "subq2": []
    },
    {
        "ID": "4798",
        "question": "Does AMC Gremlin have the Volkswagen engine",
        "sparql": "ASK WHERE { <http://dbpedia.org/resource/AMC_Gremlin> <http://dbpedia.org/property/engine> <http://dbpedia.org/resource/Volkswagen> }",
        "intent": "ASK",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "does [ENT] have the amc engine",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the engine volkswagen engine",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "does [INQL] the engine volkswagen engine [INQR] have the amc engine",
        "compositionality_type_golden": "simple",
        "intent_golden": "ASK",
        "subq1": [
            "does [ENT] have the amc engine"
        ],
        "subq2": [
            "the engine volkswagen engine"
        ]
    },
    {
        "ID": "1500",
        "question": "Name the movie with narrator as Trevor Peacock and music composer as Christophe Beck",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/narrator> <http://dbpedia.org/resource/Trevor_Peacock> . ?uri <http://dbpedia.org/property/music> <http://dbpedia.org/resource/Christophe_Beck>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "name the movie with narrator as trevor peacock",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "and music composer as christophe beck",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "name the movie with narrator as trevor peacock [DES] and music composer as christophe beck",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "name the movie with narrator as trevor peacock",
            "and music composer as christophe beck"
        ],
        "subq2": []
    },
    {
        "ID": "3843",
        "question": "Where did the scientist study whose doctoral thesis was supervised by Leonard Lerman",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/doctoralAdvisor> <http://dbpedia.org/resource/Leonard_Lerman> . ?x <http://dbpedia.org/property/almaMater> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "where did the scientist study [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "whose doctoral was supervised supervised by leonard lerman",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "where did the scientist study [INQL] whose doctoral was supervised supervised by leonard lerman [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "where did the scientist study [ENT]"
        ],
        "subq2": [
            "whose doctoral was supervised supervised by leonard lerman"
        ]
    },
    {
        "ID": "2613",
        "question": "Where can one find some quick bread in the world",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/type> <http://dbpedia.org/resource/Quick_bread> . ?x <http://dbpedia.org/ontology/region> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "where can some find [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "some quick bread in the world",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "where can some find [INQL] some quick bread in the world [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "where can some find [ENT]"
        ],
        "subq2": [
            "some quick bread in the world"
        ]
    },
    {
        "ID": "3461",
        "question": "What is the sea whose cities are Gdask and Oulu",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/cities> <http://dbpedia.org/resource/Gda\u0144sk> . ?uri <http://dbpedia.org/property/cities> <http://dbpedia.org/resource/Oulu> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Sea>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what is the sea",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "whose cities are gdask and oulu",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what is the sea [DES] whose cities are gdask and oulu",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "what is the sea",
            "whose cities are gdask and oulu"
        ],
        "subq2": []
    },
    {
        "ID": "1021",
        "question": "What rivers originate from Australian Alps",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/sourcePlace> <http://dbpedia.org/resource/Australian_Alps>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what rivers",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "originate from australian alps",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what rivers [DES] originate from australian alps",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "what rivers",
            "originate from australian alps"
        ],
        "subq2": []
    },
    {
        "ID": "3073",
        "question": "Which venues are located at places governed by John Roberts",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/leader> <http://dbpedia.org/resource/John_Roberts> . ?uri <http://dbpedia.org/property/address> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Venue>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "which venues are located at [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "places governed by john roberts",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "which venues are located at [INQL] places governed by john roberts [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "which venues are located at [ENT]"
        ],
        "subq2": [
            "places governed by john roberts"
        ]
    },
    {
        "ID": "3943",
        "question": "What is the venue of San Diego Comic-Con International",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/San_Diego_Comic-Con_International> <http://dbpedia.org/property/venue> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what is the venue of the san diego comic-con",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "what is the venue of san diego comic-con",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what is the venue of the san diego comic-con [DES] what is the venue of san diego comic-con",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "what is the venue of the san diego comic-con",
            "what is the venue of san diego comic-con"
        ],
        "subq2": []
    },
    {
        "ID": "1585",
        "question": "Which office holder owes its allegiance to a state whose capital town is Jamestown, Virginia",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Jamestown,_Virginia> . ?uri <http://dbpedia.org/property/allegiance> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which office holder owes allegiance to a state",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "whose capital is jamestown , virginia",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which office holder owes allegiance to a state [DES] whose capital is jamestown , virginia",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "which office holder owes allegiance to a state",
            "whose capital is jamestown , virginia"
        ],
        "subq2": []
    },
    {
        "ID": "1955",
        "question": "Which professional fighter, who is also a politician and was elected to House of Representatives of the Philippines",
        "sparql": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/House_of_Representatives_of_the_Philippines> } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which professional fighter , who is also a politician",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "and was also a politician to the philippines house of representatives",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which professional fighter , who is also a politician [DES] and was also a politician to the philippines house of representatives",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "which professional fighter , who is also a politician",
            "and was also a politician to the philippines house of representatives"
        ],
        "subq2": []
    },
    {
        "ID": "3152",
        "question": "List the comic characters created by Joe Shuster",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/creators> <http://dbpedia.org/resource/Joe_Shuster>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "list the comic characters",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "created by joe shuster",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "list the comic characters [DES] created by joe shuster",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "list the comic characters",
            "created by joe shuster"
        ],
        "subq2": []
    },
    {
        "ID": "34",
        "question": "Which kind of conventions are held in Rosemont, Illinois",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Rosemont,_Illinois> . ?x <http://dbpedia.org/property/genre> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Convention>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which kind of conventions",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "are held in rosemont , illinois",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which kind of conventions [DES] are held in rosemont , illinois",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "which kind of conventions",
            "are held in rosemont , illinois"
        ],
        "subq2": []
    },
    {
        "ID": "4014",
        "question": "What city is located on the mouth of Duwamish River",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Duwamish_River> <http://dbpedia.org/ontology/riverMouth> ?x . ?x <http://dbpedia.org/property/cities> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "what city is located on [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the mouth of duwamish river",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "what city is located on [INQL] the mouth of duwamish river [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "what city is located on [ENT]"
        ],
        "subq2": [
            "the mouth of duwamish river"
        ]
    },
    {
        "ID": "775",
        "question": "Which governor of Winston Bryant is the president of Joseph Stiglitz",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Winston_Bryant> <http://dbpedia.org/property/governor> ?uri. <http://dbpedia.org/resource/Joseph_Stiglitz> <http://dbpedia.org/property/president> ?uri} ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which governor of joseph bryant",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "is the president of joseph stiglitz",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which governor of joseph bryant [DES] is the president of joseph stiglitz",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "which governor of joseph bryant",
            "is the president of joseph stiglitz"
        ],
        "subq2": []
    },
    {
        "ID": "2556",
        "question": "How many people have led agencies in German occupied Europe",
        "sparql": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/jurisdiction> <http://dbpedia.org/resource/German-occupied_Europe> . ?x <http://dbpedia.org/ontology/leader> ?uri  . }",
        "intent": "COUNT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "how many people",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "have in german occupied europe",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "how many people [DES] have in german occupied europe",
        "compositionality_type_golden": "composition",
        "intent_golden": "COUNT",
        "subq1": [
            "how many people",
            "have in german occupied europe"
        ],
        "subq2": []
    },
    {
        "ID": "1478",
        "question": "Where did the plays written by Robert Schenkkan take place",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Robert_Schenkkan> . ?x <http://dbpedia.org/property/place> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Play>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "where did [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the plays by robert schenkkan take place",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "where did [INQL] the plays by robert schenkkan take place [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "where did [ENT]"
        ],
        "subq2": [
            "the plays by robert schenkkan take place"
        ]
    },
    {
        "ID": "1363",
        "question": "Under which president did the predecessor of Simon Ferro work",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Simon_Ferro> . ?x <http://dbpedia.org/ontology/president> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "under which president did [ENT] work",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the predecessor of simon ferro",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "under which president did [INQL] the predecessor of simon ferro [INQR] work",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "under which president did [ENT] work"
        ],
        "subq2": [
            "the predecessor of simon ferro"
        ]
    },
    {
        "ID": "2612",
        "question": "Name some ww1 veterans",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/battles> <http://dbpedia.org/resource/World_War_I>  . }",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "name some ww1 veterans",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "name some ww1 veterans",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "name some ww1 veterans [DES] name some ww1 veterans",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "name some ww1 veterans",
            "name some ww1 veterans"
        ],
        "subq2": []
    },
    {
        "ID": "2824",
        "question": "Who appointed both John Drayton and William Clark to their respective offices",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/John_Drayton> <http://dbpedia.org/property/appointer> ?uri. <http://dbpedia.org/resource/William_Clark> <http://dbpedia.org/property/appointer> ?uri . }",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "who appointed john drayton and william clark to their offices",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                }
            ]
        },
        "pred": "who appointed john drayton and william clark to their offices",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "who appointed john drayton and william clark to their offices"
        ],
        "subq2": []
    },
    {
        "ID": "2041",
        "question": "Which operator of New Sanno Hotel is also the governing body of the Oahu Railway and Land Company",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/New_Sanno_Hotel> <http://dbpedia.org/property/operator> ?uri. <http://dbpedia.org/resource/Oahu_Railway_and_Land_Company> <http://dbpedia.org/property/governingBody> ?uri} ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which operator of new hotel sanno",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "is also the governing body of the oahu railway and land company",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which operator of new hotel sanno [DES] is also the governing body of the oahu railway and land company",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "which operator of new hotel sanno",
            "is also the governing body of the oahu railway and land company"
        ],
        "subq2": []
    },
    {
        "ID": "241",
        "question": "Which predecessor of Alexander Downer was deputy to Neil Brown",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/predecessor> <http://dbpedia.org/resource/Alexander_Downer> . ?uri <http://dbpedia.org/property/deputy> <http://dbpedia.org/resource/Neil_Brown_(Australian_politician)>  . }",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which predecessor of alexander downer",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "was alexander brown to neil brown",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which predecessor of alexander downer [DES] was alexander brown to neil brown",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "which predecessor of alexander downer",
            "was alexander brown to neil brown"
        ],
        "subq2": []
    },
    {
        "ID": "2061",
        "question": "Which are the predecessor of Chevrolet Caprice",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Chevrolet_Caprice> <http://dbpedia.org/ontology/predecessor> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which are the predecessor of chevrolet caprice",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "which predecessor of",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which are the predecessor of chevrolet caprice [DES] which predecessor of",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "which are the predecessor of chevrolet caprice",
            "which predecessor of"
        ],
        "subq2": []
    },
    {
        "ID": "2363",
        "question": "Who wrote the album coming right before Dead Man's Chest's OST",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/nextAlbum> <http://dbpedia.org/resource/Pirates_of_the_Caribbean:_Dead_Man's_Chest_(soundtrack)> . ?x <http://dbpedia.org/property/writer> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "who wrote [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the album right before dead 's chest",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "who wrote [INQL] the album right before dead 's chest [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "who wrote [ENT]"
        ],
        "subq2": [
            "the album right before dead 's chest"
        ]
    },
    {
        "ID": "600",
        "question": "What is the series of the book which is a subsequent work of Blade Runner 2: The Edge of Human",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Blade_Runner_2:_The_Edge_of_Human> <http://dbpedia.org/ontology/subsequentWork> ?x . ?x <http://dbpedia.org/ontology/series> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "what is the series of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the edge which is a subsequent work of blade runner",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "what is the series of [INQL] the edge which is a subsequent work of blade runner [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "what is the series of [ENT]"
        ],
        "subq2": [
            "the edge which is a subsequent work of blade runner"
        ]
    },
    {
        "ID": "2435",
        "question": "For how many cities' teams did David Bowens play",
        "sparql": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/David_Bowens> <http://dbpedia.org/ontology/formerTeam> ?x . ?x <http://dbpedia.org/ontology/locationCity> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>}",
        "intent": "COUNT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "for how many cities did [ENT] play",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "teams did david bowens play",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "for how many cities did [INQL] teams did david bowens play [INQR] play",
        "compositionality_type_golden": "composition",
        "intent_golden": "COUNT",
        "subq1": [
            "for how many cities did [ENT] play"
        ],
        "subq2": [
            "teams did david bowens play"
        ]
    },
    {
        "ID": "2888",
        "question": "Is Anne Hidalgo the mayor of Paris",
        "sparql": "ASK WHERE { <http://dbpedia.org/resource/Paris> <http://dbpedia.org/ontology/mayor> <http://dbpedia.org/resource/Anne_Hidalgo> }",
        "intent": "ASK",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "is anne hidalgo the mayor of paris",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "paris",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "is anne hidalgo the mayor of paris [DES] paris",
        "compositionality_type_golden": "simple",
        "intent_golden": "ASK",
        "subq1": [
            "is anne hidalgo the mayor of paris",
            "paris"
        ],
        "subq2": []
    },
    {
        "ID": "646",
        "question": "In which countries have models hanged themselves",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/deathCause> <http://dbpedia.org/resource/Suicide_by_hanging> . ?x <http://dbpedia.org/property/citizenship> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Model>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "in which countries [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "have hanged themselves",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "in which countries [INQL] have hanged themselves [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "in which countries [ENT]"
        ],
        "subq2": [
            "have hanged themselves"
        ]
    },
    {
        "ID": "3890",
        "question": "Is the Vadodara railway junction owned by Indian Railway Ministry",
        "sparql": "ASK WHERE { <http://dbpedia.org/resource/Vadodara_Junction_railway_station> <http://dbpedia.org/ontology/owningOrganisation> <http://dbpedia.org/resource/Ministry_of_Railways_(India)> }",
        "intent": "ASK",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "is the indian junction railway",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "owned by indian vadodara junction railway ministry",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "is the indian junction railway [DES] owned by indian vadodara junction railway ministry",
        "compositionality_type_golden": "simple",
        "intent_golden": "ASK",
        "subq1": [
            "is the indian junction railway",
            "owned by indian vadodara junction railway ministry"
        ],
        "subq2": []
    },
    {
        "ID": "3556",
        "question": "What city gave birth to Mishal Raheja and also houses New India Assurance",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Mishal_Raheja> <http://dbpedia.org/ontology/birthPlace> ?uri. <http://dbpedia.org/resource/New_India_Assurance> <http://dbpedia.org/property/location> ?uri . }",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what city",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "gave birth to mishal raheja and also new india assurance",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what city [DES] gave birth to mishal raheja and also new india assurance",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "what city",
            "gave birth to mishal raheja and also new india assurance"
        ],
        "subq2": []
    },
    {
        "ID": "3202",
        "question": "Which TV show whose theme is composed by someone signed up with ATO records",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/recordLabel> <http://dbpedia.org/resource/ATO_Records> . ?uri <http://dbpedia.org/property/themeMusicComposer> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "which tv show whose theme is composed by [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "someone signed up with ato records",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "which tv show whose theme is composed by [INQL] someone signed up with ato records [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "which tv show whose theme is composed by [ENT]"
        ],
        "subq2": [
            "someone signed up with ato records"
        ]
    },
    {
        "ID": "1528",
        "question": "Which models were featured in Playboy Playmates 1954",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/succeeded> <http://dbpedia.org/resource/List_of_Playboy_Playmates_of_1954>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PlayboyPlaymate>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which models",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "were featured in playboy playmates playboy 1954",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which models [DES] were featured in playboy playmates playboy 1954",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "which models",
            "were featured in playboy playmates playboy 1954"
        ],
        "subq2": []
    },
    {
        "ID": "1267",
        "question": "What currencies have been prevalent in the country whose national anthem is La Marseillaise",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/anthem> <http://dbpedia.org/resource/La_Marseillaise> . ?x <http://dbpedia.org/ontology/currency> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "what currencies have been prevalent in [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the country whose national anthem is la marseillaise",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "what currencies have been prevalent in [INQL] the country whose national anthem is la marseillaise [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "what currencies have been prevalent in [ENT]"
        ],
        "subq2": [
            "the country whose national anthem is la marseillaise"
        ]
    },
    {
        "ID": "1899",
        "question": "Who is the relative of Jim Farley (businessman)",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jim_Farley_(businessman)> <http://dbpedia.org/property/relatives> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "who is the relative of jim farley (businessman)",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                }
            ]
        },
        "pred": "who is the relative of jim farley (businessman)",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "who is the relative of jim farley (businessman)"
        ],
        "subq2": []
    },
    {
        "ID": "4658",
        "question": "Is Latin the official language of Sovereign Military Order of Malta",
        "sparql": "ASK WHERE { <http://dbpedia.org/resource/Sovereign_Military_Order_of_Malta> <http://dbpedia.org/ontology/officialLanguage> <http://dbpedia.org/resource/Latin> }",
        "intent": "ASK",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "is the official language of order of malta",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "sovereign language of malta",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "is the official language of order of malta [DES] sovereign language of malta",
        "compositionality_type_golden": "simple",
        "intent_golden": "ASK",
        "subq1": [
            "is the official language of order of malta",
            "sovereign language of malta"
        ],
        "subq2": []
    },
    {
        "ID": "3005",
        "question": "Where do the politicians, Blanche Bruce and John Franklin Miller work",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Blanche_Bruce> <http://dbpedia.org/property/office> ?uri. <http://dbpedia.org/resource/John_Franklin_Miller_(senator)> <http://dbpedia.org/property/office> ?uri . }",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "where do the politicians , blanche",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "and franklin work john miller",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "where do the politicians , blanche [DES] and franklin work john miller",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "where do the politicians , blanche",
            "and franklin work john miller"
        ],
        "subq2": []
    },
    {
        "ID": "2734",
        "question": "Name an American football player whose debuted in Chicago Bears and former team is 1998 Baltimore Ravens season",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/debutteam> <http://dbpedia.org/resource/Chicago_Bears> . ?uri <http://dbpedia.org/ontology/formerTeam> <http://dbpedia.org/resource/1998_Baltimore_Ravens_season>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AmericanFootballPlayer>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "name an american football player",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "debuted in chicago bears and former team is baltimore ravens",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "name an american football player [DES] debuted in chicago bears and former team is baltimore ravens",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "name an american football player",
            "debuted in chicago bears and former team is baltimore ravens"
        ],
        "subq2": []
    },
    {
        "ID": "189",
        "question": "Name a river with source country as Zambia and source location as Ikelenge District",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/sourceCountry> <http://dbpedia.org/resource/Zambia> . ?uri <http://dbpedia.org/property/sourceLocation> <http://dbpedia.org/resource/Ikelenge_District>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "name a river with source country as district",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "and source location as ikelenge district",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "name a river with source country as district [DES] and source location as ikelenge district",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "name a river with source country as district",
            "and source location as ikelenge district"
        ],
        "subq2": []
    },
    {
        "ID": "1806",
        "question": "Does Ford own the Ford Kansas Assembly plant",
        "sparql": "ASK WHERE { <http://dbpedia.org/resource/Ford_Kansas_City_Assembly_Plant> <http://dbpedia.org/ontology/owningOrganisation> <http://dbpedia.org/resource/Ford_Motor_Company> }",
        "intent": "ASK",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "does the ford own the kansas assembly",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                }
            ]
        },
        "pred": "does the ford own the kansas assembly",
        "compositionality_type_golden": "simple",
        "intent_golden": "ASK",
        "subq1": [
            "does the ford own the kansas assembly"
        ],
        "subq2": []
    },
    {
        "ID": "975",
        "question": "Which fields of the Paul Demiville is also the faith of Koay Teng Hai",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Paul_Demi\u00e9ville> <http://dbpedia.org/property/fields> ?uri. <http://dbpedia.org/resource/Koay_Teng_Hai> <http://dbpedia.org/ontology/religion> ?uri} ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which fields of the paul demiville",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "is also the faith of koay teng",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which fields of the paul demiville [DES] is also the faith of koay teng",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "which fields of the paul demiville",
            "is also the faith of koay teng"
        ],
        "subq2": []
    },
    {
        "ID": "2747",
        "question": "Name the institute of Alton Ochsner",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Alton_Ochsner> <http://dbpedia.org/ontology/institution> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "name the institute of alton ochsner",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "name the institute of alton ochsner",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "name the institute of alton ochsner [DES] name the institute of alton ochsner",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "name the institute of alton ochsner",
            "name the institute of alton ochsner"
        ],
        "subq2": []
    },
    {
        "ID": "2047",
        "question": "What movies have been written by authors of Monty Python",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/writer> <http://dbpedia.org/resource/Monty_Python>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what movies",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "have been written by authors of monty python",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what movies [DES] have been written by authors of monty python",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "what movies",
            "have been written by authors of monty python"
        ],
        "subq2": []
    },
    {
        "ID": "2558",
        "question": "Who was the cover artist of The Adventure of Tom Sawyer also wrote mark Twain Tonight",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer> <http://dbpedia.org/ontology/coverArtist> ?uri. <http://dbpedia.org/resource/Mark_Twain_Tonight> <http://dbpedia.org/property/writer> ?uri} ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "who was the cover artist of the adventure of tom sawyer",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "also wrote mark twain",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "who was the cover artist of the adventure of tom sawyer [DES] also wrote mark twain",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "who was the cover artist of the adventure of tom sawyer",
            "also wrote mark twain"
        ],
        "subq2": []
    },
    {
        "ID": "1082",
        "question": "Name the scientist whose academic advisor is Karl Ewald Hasse and supervisor is Georg Meissner",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/academicAdvisor> <http://dbpedia.org/resource/Karl_Ewald_Hasse> . ?uri <http://dbpedia.org/property/doctoralAdvisor> <http://dbpedia.org/resource/Georg_Meissner>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "name the scientist whose academic advisor is karl ewald hasse",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "and is karl georg meissner",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "name the scientist whose academic advisor is karl ewald hasse [DES] and is karl georg meissner",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "name the scientist whose academic advisor is karl ewald hasse",
            "and is karl georg meissner"
        ],
        "subq2": []
    },
    {
        "ID": "474",
        "question": "Where do current famous NatGeo photographers live",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/knownFor> <http://dbpedia.org/resource/National_Geographic_(magazine)> . ?x <http://dbpedia.org/ontology/residence> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Photographer>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "where do [ENT] live",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "current natgeo photographers live",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "where do [INQL] current natgeo photographers live [INQR] live",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "where do [ENT] live"
        ],
        "subq2": [
            "current natgeo photographers live"
        ]
    },
    {
        "ID": "2904",
        "question": "Georg Meissner was doctoral supervisor of which scientist",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/doctoralAdvisor> <http://dbpedia.org/resource/Georg_Meissner>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "georg meissner was doctoral supervisor of",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "which scientist",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "georg meissner was doctoral supervisor of [DES] which scientist",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "georg meissner was doctoral supervisor of",
            "which scientist"
        ],
        "subq2": []
    },
    {
        "ID": "4843",
        "question": "Did Stanlee write the Tales of Suspense",
        "sparql": "ASK WHERE { <http://dbpedia.org/resource/Tales_of_Suspense> <http://dbpedia.org/property/writers> <http://dbpedia.org/resource/Stan_Lee> }",
        "intent": "ASK",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "did [ENT] write",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the tales of suspense",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "did [INQL] the tales of suspense [INQR] write",
        "compositionality_type_golden": "simple",
        "intent_golden": "ASK",
        "subq1": [
            "did [ENT] write"
        ],
        "subq2": [
            "the tales of suspense"
        ]
    },
    {
        "ID": "4117",
        "question": "Name the common home port of the Trishna (yacht) and INS Viraat (R22)",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Trishna_(yacht)> <http://dbpedia.org/ontology/homeport> ?uri. <http://dbpedia.org/resource/INS_Viraat_(R22)> <http://dbpedia.org/ontology/homeport> ?uri . }",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "name the common home of the trishna (yacht) and ins viraat",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                }
            ]
        },
        "pred": "name the common home of the trishna (yacht) and ins viraat",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "name the common home of the trishna (yacht) and ins viraat"
        ],
        "subq2": []
    },
    {
        "ID": "3385",
        "question": "does the US navy have the structure of command of us department of defence",
        "sparql": "ASK WHERE { <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/property/commandStructure> <http://dbpedia.org/resource/United_States_Department_of_Defense> }",
        "intent": "ASK",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "does the us navy",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "have the structure of us department of defence",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "does the us navy [DES] have the structure of us department of defence",
        "compositionality_type_golden": "simple",
        "intent_golden": "ASK",
        "subq1": [
            "does the us navy",
            "have the structure of us department of defence"
        ],
        "subq2": []
    },
    {
        "ID": "4555",
        "question": "Name books with publisher as Francisco de Robles and writer as Miguel de Cervantes",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/publisher> <http://dbpedia.org/resource/Francisco_de_Robles> . ?uri <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Miguel_de_Cervantes>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "name books",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "with publisher as robles robles and writer as miguel de cervantes",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "name books [DES] with publisher as robles robles and writer as miguel de cervantes",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "name books",
            "with publisher as robles robles and writer as miguel de cervantes"
        ],
        "subq2": []
    },
    {
        "ID": "1184",
        "question": "Who owns the schools which have a penguin as its mascot",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/mascot> <http://dbpedia.org/resource/Penguin> . ?x <http://dbpedia.org/ontology/authority> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/School>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "who owns [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the schools which have a penguin as its mascot",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "who owns [INQL] the schools which have a penguin as its mascot [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "who owns [ENT]"
        ],
        "subq2": [
            "the schools which have a penguin as its mascot"
        ]
    },
    {
        "ID": "2433",
        "question": "River which flows into the eugene mahoney state park pass through which states",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/mouthLocation> <http://dbpedia.org/resource/Eugene_T._Mahoney_State_Park> . ?x <http://dbpedia.org/ontology/state> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which river flows into which eugene state park",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "flows through pass which river",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which river flows into which eugene state park [DES] flows through pass which river",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "which river flows into which eugene state park",
            "flows through pass which river"
        ],
        "subq2": []
    },
    {
        "ID": "2391",
        "question": "What nation is Hornito located in, where Jamie Bateman Cayn died too",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jaime_Bateman_Cay\u00f3n> <http://dbpedia.org/ontology/deathPlace> ?uri. <http://dbpedia.org/resource/Hornito,_Chiriqu\u00ed> <http://dbpedia.org/ontology/country> ?uri . }",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what nation is hornito located in <UNK>",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "where jamie bateman died in cayn",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what nation is hornito located in <UNK> [DES] where jamie bateman died in cayn",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "what nation is hornito located in <UNK>",
            "where jamie bateman died in cayn"
        ],
        "subq2": []
    },
    {
        "ID": "769",
        "question": "Which TV show had a judge named Harry Connick, Jr. and was presented by Ryan Seacrest",
        "sparql": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/judges> <http://dbpedia.org/resource/Harry_Connick,_Jr.> . ?uri <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Ryan_Seacrest>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which tv show had a judge named harry connick , jr.",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "and was presented by ryan seacrest",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which tv show had a judge named harry connick , jr. [DES] and was presented by ryan seacrest",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "which tv show had a judge named harry connick , jr.",
            "and was presented by ryan seacrest"
        ],
        "subq2": []
    },
    {
        "ID": "1685",
        "question": "Name the resting place of Fazlur Rahman Khan",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Fazlur_Rahman_Khan> <http://dbpedia.org/ontology/restingPlace> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "name the resting place of fazlur rahman",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "rahman rahman",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "name the resting place of fazlur rahman [DES] rahman rahman",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "name the resting place of fazlur rahman",
            "rahman rahman"
        ],
        "subq2": []
    },
    {
        "ID": "130",
        "question": "Which arena of WPC Dynamo Moscow is death location of Tigran Petrosian",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/WPC_Dynamo_Moscow> <http://dbpedia.org/property/arena> ?uri. <http://dbpedia.org/resource/Tigran_Petrosian> <http://dbpedia.org/ontology/deathPlace> ?uri} ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "which arena of wpc dynamo moscow",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "is death location of tigran petrosian",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "which arena of wpc dynamo moscow [DES] is death location of tigran petrosian",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "which arena of wpc dynamo moscow",
            "is death location of tigran petrosian"
        ],
        "subq2": []
    },
    {
        "ID": "2919",
        "question": "what cities are close by LoDaisKa",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/LoDaisKa_Site> <http://dbpedia.org/ontology/nearestCity> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "what cities",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "are close by lodaiska",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "what cities [DES] are close by lodaiska",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "what cities",
            "are close by lodaiska"
        ],
        "subq2": []
    },
    {
        "ID": "3171",
        "question": "Which wars were fought when the commanders involved served under PM Choi Tu Son",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/primeminister> <http://dbpedia.org/resource/Choi_Tu-son> . ?uri <http://dbpedia.org/ontology/commander> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>}",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "which wars were fought [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the pm when choi tu son",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "which wars were fought [INQL] the pm when choi tu son [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "which wars were fought [ENT]"
        ],
        "subq2": [
            "the pm when choi tu son"
        ]
    },
    {
        "ID": "3444",
        "question": "Who is the meaning of Isa",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Isa_(name)> <http://dbpedia.org/property/meaning> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "who is the meaning of isa",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "who is the meaning",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "who is the meaning of isa [DES] who is the meaning",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "who is the meaning of isa",
            "who is the meaning"
        ],
        "subq2": []
    },
    {
        "ID": "4426",
        "question": "Who is venerated in Judaism and Islam",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/veneratedIn> <http://dbpedia.org/resource/Judaism> . ?uri <http://dbpedia.org/ontology/veneratedIn> <http://dbpedia.org/resource/Islam> . }",
        "intent": "COUNT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "who is venerated in islam and judaism",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                }
            ]
        },
        "pred": "who is venerated in islam and judaism",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "who is venerated in islam and judaism"
        ],
        "subq2": []
    },
    {
        "ID": "466",
        "question": "Count the number teams which have former ice hockey players which also included American Hockey League",
        "sparql": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/formerTeam> <http://dbpedia.org/resource/American_Hockey_League> . ?x <http://dbpedia.org/ontology/formerTeam> ?uri }",
        "intent": "COUNT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "count the number which have included teams included [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "which have included american hockey players",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "count the number which have included teams included [INQL] which have included american hockey players [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "COUNT",
        "subq1": [
            "count the number which have included teams included [ENT]"
        ],
        "subq2": [
            "which have included american hockey players"
        ]
    },
    {
        "ID": "3092",
        "question": "Name the common editor of Easy Street (film) and Work (film)",
        "sparql": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Easy_Street_(film)> <http://dbpedia.org/ontology/editing> ?uri. <http://dbpedia.org/resource/Work_(film)> <http://dbpedia.org/ontology/editing> ?uri . }",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "name the common work of easy (film) and street (film)",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                }
            ]
        },
        "pred": "name the common work of easy (film) and street (film)",
        "compositionality_type_golden": "conjunction",
        "intent_golden": "SELECT",
        "subq1": [
            "name the common work of easy (film) and street (film)"
        ],
        "subq2": []
    },
    {
        "ID": "3772",
        "question": "List all the schools of the rugby player whose went to school named Pietermaritzburg",
        "sparql": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/school> <http://dbpedia.org/resource/Pietermaritzburg> . ?x <http://dbpedia.org/property/school> ?uri  . }",
        "intent": "SELECT",
        "compositionality_type": "composition",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Entity",
                    "entityID": 1,
                    "nodeID": 1
                },
                {
                    "nodeType": "Description",
                    "value": "list all the schools of [ENT]",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": true
                },
                {
                    "nodeType": "Description",
                    "value": "the rugby player whose went to school named pietermaritzburg",
                    "entityID": 1,
                    "nodeID": 3,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 2
                },
                {
                    "from": 2,
                    "to": 1
                },
                {
                    "from": 1,
                    "to": 3
                }
            ]
        },
        "pred": "list all the schools of [INQL] the rugby player whose went to school named pietermaritzburg [INQR]",
        "compositionality_type_golden": "composition",
        "intent_golden": "SELECT",
        "subq1": [
            "list all the schools of [ENT]"
        ],
        "subq2": [
            "the rugby player whose went to school named pietermaritzburg"
        ]
    },
    {
        "ID": "860",
        "question": "Name the office of Richard Coke",
        "sparql": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Richard_Coke> <http://dbpedia.org/property/office> ?uri } ",
        "intent": "SELECT",
        "compositionality_type": "conjunction",
        "edg": {
            "nodes": [
                {
                    "nodeType": "Entity",
                    "entityID": 0,
                    "nodeID": 0
                },
                {
                    "nodeType": "Description",
                    "value": "name the office of richard coke",
                    "entityID": 0,
                    "nodeID": 1,
                    "hasRefer": false
                },
                {
                    "nodeType": "Description",
                    "value": "name",
                    "entityID": 0,
                    "nodeID": 2,
                    "hasRefer": false
                }
            ],
            "edge": [
                {
                    "from": 0,
                    "to": 1
                },
                {
                    "from": 0,
                    "to": 2
                }
            ]
        },
        "pred": "name the office of richard coke [DES] name",
        "compositionality_type_golden": "simple",
        "intent_golden": "SELECT",
        "subq1": [
            "name the office of richard coke",
            "name"
        ],
        "subq2": []
    }
]